{
  "name": "SNCF API Server",
  "description": "FastMCP server providing French train information including journey planning, disruption checking, schedule lookup, and station details using an offline database.",
  "tools": [
    {
      "name": "plan_journey_by_city_names",
      "description": "Plan a train journey between two French cities.",
      "input_schema": {
        "type": "object",
        "properties": {
          "origin_city": {
            "type": "string",
            "description": "The departure city name (e.g., 'Paris', 'Lyon', 'Marseille')."
          },
          "destination_city": {
            "type": "string",
            "description": "The arrival city name (e.g., 'Bordeaux', 'Lille')."
          },
          "date": {
            "type": "string",
            "description": "The travel date in ISO format (YYYY-MM-DD). If not provided, returns all available journeys."
          }
        },
        "required": ["origin_city", "destination_city"]
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "journeys": {
            "type": "array",
            "description": "List of available journeys matching the search criteria."
          }
        }
      }
    },
    {
      "name": "check_disruptions",
      "description": "Check SNCF network disruptions with optional filtering.",
      "input_schema": {
        "type": "object",
        "properties": {
          "coverage": {
            "type": "string",
            "description": "Coverage area to filter by (e.g., 'regional', 'national')."
          },
          "station": {
            "type": "string",
            "description": "Specific station ID to filter disruptions."
          },
          "line": {
            "type": "string",
            "description": "Specific train line to filter disruptions."
          },
          "start_date": {
            "type": "string",
            "description": "Start date for disruption period in ISO format."
          },
          "end_date": {
            "type": "string",
            "description": "End date for disruption period in ISO format."
          }
        },
        "required": []
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "disruptions": {
            "type": "array",
            "description": "List of disruptions matching the filter criteria."
          }
        }
      }
    },
    {
      "name": "get_station_schedule",
      "description": "Get station departures and arrivals schedule.",
      "input_schema": {
        "type": "object",
        "properties": {
          "station_id": {
            "type": "string",
            "description": "The station ID to get schedule for."
          },
          "datetime_filter": {
            "type": "string",
            "description": "Date/time filter in ISO format to get specific schedule."
          },
          "data_freshness": {
            "type": "string",
            "description": "Data freshness mode - 'base_schedule' or 'realtime'. Defaults to 'base_schedule' for offline database."
          }
        },
        "required": ["station_id"]
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "station_id": {
            "type": "string",
            "description": "Station identifier"
          },
          "datetime": {
            "type": "string",
            "description": "Schedule timestamp in ISO format"
          },
          "departures": {
            "type": "array",
            "description": "List of departing trains"
          },
          "arrivals": {
            "type": "array",
            "description": "List of arriving trains"
          }
        }
      }
    },
    {
      "name": "get_station_details",
      "description": "Get comprehensive station information.",
      "input_schema": {
        "type": "object",
        "properties": {
          "station_id": {
            "type": "string",
            "description": "The station ID to get details for."
          }
        },
        "required": ["station_id"]
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Station identifier"
          },
          "name": {
            "type": "string",
            "description": "Station name"
          },
          "city": {
            "type": "string",
            "description": "City where station is located"
          },
          "coordinates": {
            "type": "object",
            "description": "Geographic coordinates"
          },
          "transport_types": {
            "type": "array",
            "description": "List of transport types available at station"
          },
          "nearby_places": {
            "type": "array",
            "description": "List of nearby places and amenities"
          },
          "error": {
            "type": "string",
            "description": "Error message if station not found (optional field)"
          }
        }
      }
    }
  ]
}