{
  "labels": {
    "analysis": "The MCP Server specializes in managing and interacting with development containers (devcontainers) using Docker and the devcontainers CLI. Its core functionality revolves around starting containerized development environments, running setup commands, and executing arbitrary shell commands within those environments. This is primarily targeted at developers who use containerized workflows for consistent development environments.",
    "reasoning": "The primary label \"Development Tools\" is chosen because the server's tools are directly related to development workflows, specifically managing devcontainers which are used for coding, testing, and other development activities. \"Operating System\" is a secondary label as some tools allow interaction with the containerized environment similar to a minimal OS. A custom label \"Container Management\" is added because while \"Development Tools\" covers the broad use case, this server has specific functionality around container lifecycle management that might warrant its own category for organization.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Operating System"
    ],
    "custom_label": "Container Management",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1480,
    "server_name": "Devcontainers Integration Server",
    "rank_by_usage": 1481,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@crunchloop_mcp-devcontainers.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@crunchloop/mcp-devcontainers/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "devcontainer_up",
          "description": "Start or initialize a devcontainer environment in the specified workspace folder.Use this to ensure the devcontainer is running and ready for development tasks.",
          "input_schema": {
            "type": "object",
            "properties": {
              "workspaceFolder": {
                "type": "string"
              },
              "outputFilePath": {
                "type": "string"
              }
            },
            "required": [
              "workspaceFolder"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "devcontainer_run_user_commands",
          "description": "Run the user-defined postCreateCommand and postStartCommand scripts in the devcontainerfor the specified workspace folder. Use this to execute setup or initialization commandsafter the devcontainer starts.",
          "input_schema": {
            "type": "object",
            "properties": {
              "workspaceFolder": {
                "type": "string"
              },
              "outputFilePath": {
                "type": "string"
              }
            },
            "required": [
              "workspaceFolder"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "devcontainer_exec",
          "description": "Execute an arbitrary shell command inside the devcontainer for the specified workspace folder.Use this to run custom commands or scripts within the devcontainer context.",
          "input_schema": {
            "type": "object",
            "properties": {
              "workspaceFolder": {
                "type": "string"
              },
              "command": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "outputFilePath": {
                "type": "string"
              }
            },
            "required": [
              "workspaceFolder",
              "command"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 3,
      "tool_names": [
        "devcontainer_up",
        "devcontainer_run_user_commands",
        "devcontainer_exec"
      ]
    },
    "server_info_crawled": {
      "id": 1480,
      "name": "Devcontainers Integration Server",
      "author": "@crunchloop/mcp-devcontainers",
      "overview": "Manage and interact with development containers seamlessly by starting environments, running user setup commands, and executing arbitrary shell commands inside devcontainers. Simplify your development workflow by controlling devcontainers directly through this server. Requires Docker and the devcontainers CLI for operation.",
      "repository_url": "https://github.com/crunchloop/mcp-devcontainers",
      "homepage": "https://smithery.ai/server/@crunchloop/mcp-devcontainers",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@crunchloop_mcp-devcontainers.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "devcontainer_up",
          "description": "Start or initialize a devcontainer environment in the specified workspace folder.Use this to ensure the devcontainer is running and ready for development tasks.",
          "input_schema": {
            "type": "object",
            "properties": {
              "workspaceFolder": {
                "type": "string"
              },
              "outputFilePath": {
                "type": "string"
              }
            },
            "required": [
              "workspaceFolder"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "devcontainer_run_user_commands",
          "description": "Run the user-defined postCreateCommand and postStartCommand scripts in the devcontainerfor the specified workspace folder. Use this to execute setup or initialization commandsafter the devcontainer starts.",
          "input_schema": {
            "type": "object",
            "properties": {
              "workspaceFolder": {
                "type": "string"
              },
              "outputFilePath": {
                "type": "string"
              }
            },
            "required": [
              "workspaceFolder"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "devcontainer_exec",
          "description": "Execute an arbitrary shell command inside the devcontainer for the specified workspace folder.Use this to run custom commands or scripts within the devcontainer context.",
          "input_schema": {
            "type": "object",
            "properties": {
              "workspaceFolder": {
                "type": "string"
              },
              "command": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "outputFilePath": {
                "type": "string"
              }
            },
            "required": [
              "workspaceFolder",
              "command"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@crunchloop/mcp-devcontainers/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@crunchloop/mcp-devcontainers/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1481.@crunchloop_mcp-devcontainers_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1369
  }
}