{
  "labels": {
    "analysis": "The NTOPNG Model Context Protocol Server primarily focuses on network monitoring and traffic analysis. Its tools allow AI agents to query network data from the NTOPNG database, which includes functionalities such as retrieving interface IDs, host locations, top talkers, alert statistics, flow data, and device statistics. This server is designed to provide insightful traffic analysis and reporting, making it highly useful for network administrators and security professionals.",
    "reasoning": "The primary label \"Network Monitoring\" was chosen because the server's core functionality revolves around analyzing and reporting network traffic. Secondary labels \"Data Analysis & Processing\" and \"Security & Authentication\" were selected because the server provides tools for detailed data querying and alert statistics, which are essential for security monitoring. No custom label is needed as the predefined labels adequately cover the server's functionality.",
    "primary_label": "Others",
    "secondary_labels": [
      "Data Analysis & Processing",
      "Security & Authentication"
    ],
    "custom_label": "Network Monitoring",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2385,
    "server_name": "NTOPNG Model Context Protocol Server",
    "rank_by_usage": 2386,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@marcoeg_mcp-server-ntopng.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@marcoeg/mcp-server-ntopng/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2385,
      "name": "NTOPNG Model Context Protocol Server",
      "author": "@marcoeg/mcp-server-ntopng",
      "overview": "Enable AI agents to query network monitoring data seamlessly. Leverage the power of the NTOPNG database for insightful traffic analysis and reporting. Integrate effortlessly with Claude Desktop and other MCP compliant clients.",
      "repository_url": "https://github.com/marcoeg/mcp-server-ntopng",
      "homepage": "https://smithery.ai/server/@marcoeg/mcp-server-ntopng",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@marcoeg_mcp-server-ntopng.json",
      "tools_count": 20,
      "tools": [
        {
          "name": "list_tables_ntopng_database",
          "description": "Deploy Server NTOPNG Model Context Protocol Server Claim Server @marcoeg/mcp-server-ntopng Try in Playground list_tables_ntopng_database",
          "parameters": [
            {
              "name": "list_tables_ntopng_database",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "query_ntopng_database",
          "description": "Query the ntopng Clickhouse database.",
          "parameters": [
            {
              "name": "query_ntopng_database",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "fetch_ntopng_all_ifids",
          "description": "Retrieve all available interface IDs from ntopng.",
          "parameters": [
            {
              "name": "fetch_ntopng_all_ifids",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_ntopng_hosts_location",
          "description": "Fetch geographical location and additional info for hosts.",
          "parameters": [
            {
              "name": "get_ntopng_hosts_location",
              "required": false,
              "type": "string"
            },
            {
              "name": "ifid",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "fetch_ntopng_top_local_talkers",
          "description": "Retrieve the top 10 local talkers for a specified interface.",
          "parameters": [
            {
              "name": "fetch_ntopng_top_local_talkers",
              "required": false,
              "type": "string"
            },
            {
              "name": "ifid",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "fetch_ntopng_top_remote_talkers",
          "description": "Retrieve the top 10 remote talkers for a specified interface.",
          "parameters": [
            {
              "name": "fetch_ntopng_top_remote_talkers",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_ntopng_all_alert_stats",
          "description": "Retrieve statistics for all alerts.",
          "parameters": [
            {
              "name": "ifid",
              "required": true,
              "type": "string"
            },
            {
              "name": "epoch_end",
              "required": true,
              "type": "string"
            },
            {
              "name": "epoch_begin",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_ntopng_flow_alert_stats",
          "description": "Retrieve statistics for flow alerts.",
          "parameters": [
            {
              "name": "get_ntopng_flow_alert_stats",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_ntopng_host_alert_stats",
          "description": "Retrieve statistics for host alerts.",
          "parameters": [
            {
              "name": "get_ntopng_host_alert_stats",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_ntopng_interface_alert_stats",
          "description": "Retrieve statistics for interface alerts.",
          "parameters": [
            {
              "name": "get_ntopng_interface_alert_stats",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_ntopng_mac_alert_stats",
          "description": "Retrieve statistics for MAC alerts.",
          "parameters": [
            {
              "name": "get_ntopng_mac_alert_stats",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_ntopng_network_alert_stats",
          "description": "Retrieve statistics for network alerts.",
          "parameters": [
            {
              "name": "get_ntopng_network_alert_stats",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_ntopng_snmp_device_alert_list",
          "description": "Retrieve a list of SNMP device alerts.",
          "parameters": [
            {
              "name": "get_ntopng_snmp_device_alert_list",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_ntopng_snmp_device_alert_stats",
          "description": "Retrieve statistics for SNMP device alerts.",
          "parameters": [
            {
              "name": "get_ntopng_snmp_device_alert_stats",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_ntopng_system_alert_stats",
          "description": "Retrieve statistics for system alerts.",
          "parameters": [
            {
              "name": "get_ntopng_system_alert_stats",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "query_ntopng_flows_data",
          "description": "Retrieve detailed flows data from the ntopng flows database.",
          "parameters": [
            {
              "name": "query_ntopng_flows_data",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_ntopng_top-k_flows",
          "description": "Retrieve top-k flows data from the ntopng flows database.",
          "parameters": []
        },
        {
          "name": "get_ntopng_user_alert_stats",
          "description": "Retrieve statistics for user alerts.",
          "parameters": [
            {
              "name": "get_ntopng_user_alert_stats",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_ntopng_flow_devices_stats",
          "description": "Retrieve statistics for all flow devices.",
          "parameters": [
            {
              "name": "get_ntopng_flow_devices_stats",
              "required": false,
              "type": "string"
            },
            {
              "name": "ifid",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_ntopng_sflow_devices_stats",
          "description": "Retrieve statistics for all sFlow devices.",
          "parameters": [
            {
              "name": "get_ntopng_sflow_devices_stats",
              "required": false,
              "type": "string"
            },
            {
              "name": "ifid",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@marcoeg/mcp-server-ntopng/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "apiKey",
          "required": true,
          "description": "API key for ntopng authentication"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@marcoeg/mcp-server-ntopng/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2386.@marcoeg_mcp-server-ntopng_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 2042
  }
}