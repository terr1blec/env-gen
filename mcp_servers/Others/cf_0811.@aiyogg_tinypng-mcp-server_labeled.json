{
  "labels": {
    "analysis": "The MCP Server specializes in image compression, leveraging the TinyPNG API to reduce image file sizes while maintaining quality. Its primary function is to optimize images for web use, which includes both local and remote image compression. The available tools indicate functionalities like compressing images from local files or URLs, as well as resizing images, which directly impacts file management and web optimization tasks.",
    "reasoning": "The \"Web Optimization\" label fits as the primary category because the server's core functionality revolves around optimizing images for web use, which aligns with web performance and reduction in loading times. The \"File Management\" label is included as a secondary category due to the server's capabilities in handling and modifying image files. Custom label \"Image Optimization\" is chosen to specifically highlight the unique functionality of compressing and resizing images for enhanced web performance.",
    "primary_label": "Others",
    "secondary_labels": [
      "File Management"
    ],
    "custom_label": "Image Optimization",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 810,
    "server_name": "TinyPNG MCP Server",
    "rank_by_usage": 811,
    "usage_count": "6",
    "original_file": "../crawler/smithery/@aiyogg_tinypng-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@aiyogg/tinypng-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 810,
      "name": "TinyPNG MCP Server",
      "author": "@aiyogg/tinypng-mcp-server",
      "overview": "Compress images effortlessly by utilizing the TinyPNG API. Optimize your images for web use, reducing file size without sacrificing quality. Enhance your projects with seamless image compression capabilities.",
      "repository_url": "https://github.com/aiyogg/tinypng-mcp-server",
      "homepage": "https://smithery.ai/server/@aiyogg/tinypng-mcp-server",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "6",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@aiyogg_tinypng-mcp-server.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "compress_local_image",
          "description": "Deploy Server TinyPNG MCP Server Claim Server @aiyogg/tinypng-mcp-server Try in Playground compress_local_image",
          "parameters": [
            {
              "name": "compress_local_image",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "compress_remote_image",
          "description": "Compress a remote image file by giving the URL of the image",
          "parameters": []
        },
        {
          "name": "resize_image",
          "description": "Description not available",
          "parameters": [
            {
              "name": "width",
              "required": true,
              "type": "string"
            },
            {
              "name": "height",
              "required": true,
              "type": "string"
            },
            {
              "name": "method",
              "required": false,
              "type": "string"
            },
            {
              "name": "imagePath",
              "required": true,
              "type": "string"
            },
            {
              "name": "outputPath",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@aiyogg/tinypng-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "tinyPngApiKey",
          "required": true,
          "description": "Your TinyPNG API key for image compression"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@aiyogg/tinypng-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0811.@aiyogg_tinypng-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 792
  }
}