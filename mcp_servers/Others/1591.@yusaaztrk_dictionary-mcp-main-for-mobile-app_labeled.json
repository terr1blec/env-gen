{
  "labels": {
    "analysis": "The MCP Server provides dictionary lookup capabilities, allowing applications to fetch word definitions efficiently through a standardized protocol. Its primary function is to offer linguistic data, enhancing language features in applications. The \"get_definitions\" tool suggests its focus is on retrieving word meanings, making it a specialized service for dictionary-related tasks.",
    "reasoning": "The primary label \"Language & Lexicon\" was chosen because the server's core functionality revolves around dictionary and word definition services, which fit well within this category. Though not predefined, it accurately describes the server's purpose.",
    "primary_label": "Others",
    "secondary_labels": [],
    "custom_label": "Dictionary API",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1590,
    "server_name": "Dictionary Service",
    "rank_by_usage": 1591,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@yusaaztrk_dictionary-mcp-main-for-mobile-app.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@yusaaztrk/dictionary-mcp-main-for-mobile-app/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_definitions",
          "description": "\n    Get definitions for a word.\n    ",
          "input_schema": {
            "properties": {
              "word": {
                "title": "Word",
                "type": "string"
              }
            },
            "required": [
              "word"
            ],
            "title": "get_definitionsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get_definitions"
      ]
    },
    "server_info_crawled": {
      "id": 1590,
      "name": "Dictionary Service",
      "author": "@yusaaztrk/dictionary-mcp-main-for-mobile-app",
      "overview": "Provide dictionary lookup capabilities to your applications. Enable fast and reliable word definitions and related linguistic data through a standardized protocol. Enhance your app's language features with seamless dictionary integration.",
      "repository_url": "https://github.com/yusaaztrk/dictionary-mcp-main-for-mobile-app",
      "homepage": "https://smithery.ai/server/@yusaaztrk/dictionary-mcp-main-for-mobile-app",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@yusaaztrk_dictionary-mcp-main-for-mobile-app.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_definitions",
          "description": "\n    Get definitions for a word.\n    ",
          "input_schema": {
            "properties": {
              "word": {
                "title": "Word",
                "type": "string"
              }
            },
            "required": [
              "word"
            ],
            "title": "get_definitionsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@yusaaztrk/dictionary-mcp-main-for-mobile-app/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@yusaaztrk/dictionary-mcp-main-for-mobile-app/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1591.@yusaaztrk_dictionary-mcp-main-for-mobile-app_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1451
  }
}