{
  "labels": {
    "analysis": "The MCP Server is designed to interact with Spotify's API, allowing users to control playback, search for content, manage queues, and manipulate playlists. Its core functionality revolves around music streaming and library management, enabling seamless integration with Spotify's features. The tools provided cover a wide range of Spotify operations, making it versatile for both personal and automated music management.",
    "reasoning": "The primary label \"Music Streaming & Playback\" was chosen because the server's main purpose is to control and interact with Spotify's playback and library. The secondary label \"Media Management\" was added because of the playlist and queue management tools, which go beyond basic playback control. No predefined categories perfectly match, so a custom label was created to better describe the server's unique focus on Spotify integration.",
    "primary_label": "Others",
    "secondary_labels": [
      "News & Media",
      "API Integration"
    ],
    "custom_label": "Spotify Integration",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 526,
    "server_name": "Spotify MCP",
    "rank_by_usage": 527,
    "usage_count": "28",
    "original_file": "../crawler/smithery/@SmartManoj_spotify-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@SmartManoj/spotify-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 526,
      "name": "Spotify MCP",
      "author": "@SmartManoj/spotify-mcp",
      "overview": "Control and interact with your Spotify playback and library through an MCP server. Manage playback, search tracks and playlists, and update your Spotify queue and playlists seamlessly. Enhance your agent's capabilities by integrating Spotify's features directly.",
      "repository_url": "https://github.com/SmartManoj/spotify-mcp",
      "homepage": "https://smithery.ai/server/@SmartManoj/spotify-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "28",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@SmartManoj_spotify-mcp.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "SpotifyPlayback",
          "description": "Deploy Server Spotify MCP @SmartManoj/spotify-mcp Try in Playground SpotifyPlayback",
          "parameters": []
        },
        {
          "name": "SpotifySearch",
          "description": "Search for tracks, albums, artists, or playlists on Spotify.",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "qtype",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "SpotifyQueue",
          "description": "Manage the playback queue - get the queue or add tracks.",
          "parameters": [
            {
              "name": "action",
              "required": true,
              "type": "string"
            },
            {
              "name": "track_id",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "SpotifyGetInfo",
          "description": "Get detailed information about a Spotify item (track, album, artist, or playlist).",
          "parameters": [
            {
              "name": "SpotifyGetInfo",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "SpotifyPlaylist",
          "description": "Manage Spotify playlists. - get: Get a list of user's playlists. - get_tracks: Get tracks in a specific playlist. - add_tracks: Add tracks to a specific playlist. - remove_tracks: Remove tracks from a specific playlist. - change_details: Change details of a specific playlist.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@SmartManoj/spotify-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "spotifyCachedToken",
          "required": true,
          "description": "Spotify cached token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@SmartManoj/spotify-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0527.@SmartManoj_spotify-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 516
  }
}