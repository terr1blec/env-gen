{
  "labels": {
    "analysis": "The Votars MCP Server is primarily focused on AI-powered transcription and processing of voice recordings. Its core functionality involves retrieving and managing transcripts from meetings or other voice sources. The available tools suggest that it enables users to fetch specific or recent transcripts, which indicates use cases in documentation, note-taking, and content analysis. The mention of \"intelligent AI processing\" suggests that there may be additional AI-driven analytics or summarization features, though these are not explicitly detailed in the provided tools.",
    "reasoning": "The primary label \"Voice Recognition & Transcription\" is chosen because the server's main functionality revolves around processing and retrieving voice transcripts. The secondary label \"Memory Management\" is included because retrieving transcripts is a form of data storage and retrieval. \"Content Creation\" could also apply if the transcripts are used for generating written content. The custom label \"Meeting Documentation\" is added to highlight a specific use case where this tool would be particularly valuable.",
    "primary_label": "Others",
    "secondary_labels": [
      "Memory Management",
      "Content Creation"
    ],
    "custom_label": "Meeting Documentation",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1527,
    "server_name": "Votars MCP",
    "rank_by_usage": 1528,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@scarletlabs-ai_votars-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@scarletlabs-ai/votars-mcp/mcp?config=eyJwb3J0IjogIjgwODAiLCAiYXBpS2V5IjogIiIsICJ0cmFuc3BvcnQiOiAic3RkaW8ifQ==&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "Votars fetch a specific transcript",
          "description": "Retrive the transcript from the workspace by its ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "description": "Transcript ID to retrieve",
                "type": "number"
              }
            },
            "required": [
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "Votars fetch recent transcripts",
          "description": "Retrive recent transcripts from workspace",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        }
      ],
      "tool_count": 2,
      "tool_names": [
        "Votars fetch a specific transcript",
        "Votars fetch recent transcripts"
      ]
    },
    "server_info_crawled": {
      "id": 1527,
      "name": "Votars MCP",
      "author": "@scarletlabs-ai/votars-mcp",
      "overview": "Integrate advanced AI functionalities into your applications with Votars. Process complex tasks efficiently using robust APIs designed for high performance and scalability. Experience seamless voice recording, transcription, and intelligent AI processing for your meetings.",
      "repository_url": "https://github.com/scarletlabs-ai/Votars-MCP",
      "homepage": "https://smithery.ai/server/@scarletlabs-ai/votars-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@scarletlabs-ai_votars-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "Votars fetch a specific transcript",
          "description": "Retrive the transcript from the workspace by its ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "description": "Transcript ID to retrieve",
                "type": "number"
              }
            },
            "required": [
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "Votars fetch recent transcripts",
          "description": "Retrive recent transcripts from workspace",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"port\": \"8080\",\n  \"apiKey\": \"\",\n  \"transport\": \"stdio\"\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@scarletlabs-ai/votars-mcp/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"port\": \"8080\",\n  \"apiKey\": \"\",\n  \"transport\": \"stdio\"\n}",
      "python_sdk_url": "https://server.smithery.ai/@scarletlabs-ai/votars-mcp/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "1528.@scarletlabs-ai_votars-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1404
  }
}