{
  "labels": {
    "analysis": "The MCP Server \"Meraki Magic\" is designed to interact with Cisco Meraki environments through the Meraki Dashboard API. It provides tools for creating, deleting, querying, and managing networks, devices, and clients within Meraki. The core functionality revolves around network management and device administration, making it particularly useful for IT administrators or network operators working with Meraki infrastructure.",
    "reasoning": "The primary label \"Network Management\" is chosen because the server's main purpose is to manage and monitor Cisco Meraki networks. The secondary labels \"API Integration\" and \"Operating System\" are selected because the tools heavily rely on API calls to perform operations and some actions (like claiming devices) involve system-level interactions. No custom label is necessary as the predefined labels adequately cover the server's functionality.",
    "primary_label": "Others",
    "secondary_labels": [
      "API Integration",
      "Operating System"
    ],
    "custom_label": "Network Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1571,
    "server_name": "Meraki Magic",
    "rank_by_usage": 1572,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@MKutka_meraki-magic-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@MKutka/meraki-magic-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1571,
      "name": "Meraki Magic",
      "author": "@MKutka/meraki-magic-mcp",
      "overview": "Provide tools to discover, monitor, and manage your Cisco Meraki environment through an easy-to-use MCP server. Query the Meraki Dashboard API to gain insights into networks, devices, and clients. Simplify Meraki management with a Python-based, extensible solution.",
      "repository_url": "https://github.com/MKutka/meraki-magic-mcp",
      "homepage": "https://smithery.ai/server/@MKutka/meraki-magic-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@MKutka_meraki-magic-mcp.json",
      "tools_count": 8,
      "tools": [
        {
          "name": "create_network",
          "description": "Deploy Server Meraki Magic Claim Server @MKutka/meraki-magic-mcp Try in Playground create_network",
          "parameters": [
            {
              "name": "create_network",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_network",
          "description": "Delete a network in Meraki",
          "parameters": [
            {
              "name": "delete_network",
              "required": false,
              "type": "string"
            },
            {
              "name": "network_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_networks",
          "description": "Get a list of networks from Meraki",
          "parameters": [
            {
              "name": "get_networks",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_devices",
          "description": "Get a list of devices from Meraki",
          "parameters": [
            {
              "name": "get_devices",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_clients",
          "description": "Get a list of clients from a specific Meraki network. Args: network_id (str): The ID of the Meraki network. Returns: str: JSON-formatted list of clients.",
          "parameters": []
        },
        {
          "name": "get_client_policy",
          "description": "Get the policy for a specific client in a specific Meraki network. Args: network_id (str): The ID of the Meraki network. client_id (str): The ID (MAC address or client ID) of the client. Returns: str: JSON-formatted client policy.",
          "parameters": []
        },
        {
          "name": "claim_devices",
          "description": "Claim one or more devices into a Meraki network",
          "parameters": [
            {
              "name": "serials",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "network_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_devices",
          "description": "Update a device in the Meraki organization. Pass a dictionary of fields to update (e.g., { 'address': '1234 Main St', 'name': 'Device1' }).",
          "parameters": [
            {
              "name": "update_devices",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@MKutka/meraki-magic-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "merakiApiKey",
          "required": true,
          "description": "Meraki API Key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@MKutka/meraki-magic-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1572.@MKutka_meraki-magic-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1437
  }
}