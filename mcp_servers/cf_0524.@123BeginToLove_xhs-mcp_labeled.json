{
  "labels": {
    "analysis": "The MCP Server for 小红书 (Xiaohongshu) provides a lightweight HTTP interface to interact with the Xiaohongshu platform without requiring heavy browser automation. Its core functionality includes searching notes (posts), retrieving note contents and comments, and posting comments. The tools are designed to simplify integration with Xiaohongshu for data retrieval and interaction, making it suitable for automation tasks, content analysis, and user engagement.",
    "reasoning": "The primary functionality revolves around accessing and interacting with social media content (notes and comments on Xiaohongshu), which aligns well with the \"Social Media\" category. Additionally, the server's ability to post comments and retrieve structured data suggests relevance to automation and content interaction, justifying the \"Browser Automation\" secondary label. The server does not fit neatly into predefined categories beyond these, so no custom label is needed.",
    "primary_label": "Social Media",
    "secondary_labels": [
      "Browser Automation"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 523,
    "server_name": "小红书 MCP 服务",
    "rank_by_usage": 524,
    "usage_count": "28",
    "original_file": "../crawler/smithery/@123BeginToLove_xhs-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@123BeginToLove/xhs-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 523,
      "name": "小红书 MCP 服务",
      "author": "@123BeginToLove/xhs-mcp",
      "overview": "Provide seamless access to 小红书 content by enabling search, retrieval of notes, comments, and posting comments through a lightweight HTTP interface without heavy browser automation. Simplify integration with 小红书's platform for enhanced data interaction and automation.",
      "repository_url": "https://github.com/123BeginToLove/xhs-mcp",
      "homepage": "https://smithery.ai/server/@123BeginToLove/xhs-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "28",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@123BeginToLove_xhs-mcp.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "check_cookie",
          "description": "Deploy Server @123BeginToLove/xhs-mcp Try in Playground check_cookie",
          "parameters": []
        },
        {
          "name": "search_notes",
          "description": "根据关键词搜索笔记\n\n        Args:\n            keywords: 搜索关键词",
          "parameters": [
            {
              "name": "keywords",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_note_content",
          "description": "获取笔记内容 Args: note_id: 笔记 note_id xsec_token: 笔记 xsec_token",
          "parameters": []
        },
        {
          "name": "get_note_comments",
          "description": "获取笔记评论 Args: note_id: 笔记 note_id xsec_token: 笔记 xsec_token",
          "parameters": []
        },
        {
          "name": "post_comment",
          "description": "发布评论到指定笔记\n\n    Args:\n        note_id: 笔记 note_id\n        comment: 要发布的评论内容",
          "parameters": [
            {
              "name": "comment",
              "required": true,
              "type": "string"
            },
            {
              "name": "note_id",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@123BeginToLove/xhs-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@123BeginToLove/xhs-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0524.@123BeginToLove_xhs-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 513
  }
}