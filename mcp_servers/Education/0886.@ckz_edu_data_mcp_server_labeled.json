{
  "labels": {
    "analysis": "The MCP Server is designed to facilitate education research by providing access to detailed and aggregated education data from the Urban Institute's Education Data API. It allows users to retrieve information about schools, districts, and universities, including enrollment figures, assessments, and financial data. The available tools enable flexible querying of this data, supporting comprehensive education research and analysis.",
    "reasoning": "The primary label \"Education\" has been chosen because the server's core functionality revolves around providing access to and querying education-related data, directly supporting educational research. The secondary labels \"Data Analysis & Processing\" and \"API Integration\" are appropriate because the server processes data for analysis purposes and integrates with an external API to fetch the data. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Education",
    "secondary_labels": [
      "Data Analysis & Processing",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 885,
    "server_name": "Education Data Server",
    "rank_by_usage": 886,
    "usage_count": "4",
    "original_file": "../crawler/smithery/@ckz_edu_data_mcp_server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ckz/edu_data_mcp_server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_education_data",
          "description": "Retrieve education data from the Urban Institute's Education Data API",
          "input_schema": {
            "type": "object",
            "properties": {
              "level": {
                "type": "string",
                "description": "API data level to query (e.g., 'schools', 'school-districts', 'college-university')"
              },
              "source": {
                "type": "string",
                "description": "API data source to query (e.g., 'ccd', 'ipeds', 'crdc')"
              },
              "topic": {
                "type": "string",
                "description": "API data topic to query (e.g., 'enrollment', 'directory')"
              },
              "subtopic": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Optional list of grouping parameters (e.g., ['race', 'sex'])"
              },
              "filters": {
                "type": "object",
                "description": "Optional query filters (e.g., {year: 2008, grade: [9,10,11,12]})"
              },
              "add_labels": {
                "type": "boolean",
                "description": "Add variable labels when applicable (default: false)"
              },
              "limit": {
                "type": "number",
                "description": "Limit the number of results (default: 100)"
              }
            },
            "required": [
              "level",
              "source",
              "topic"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_education_data_summary",
          "description": "Retrieve aggregated education data from the Urban Institute's Education Data API",
          "input_schema": {
            "type": "object",
            "properties": {
              "level": {
                "type": "string",
                "description": "API data level to query"
              },
              "source": {
                "type": "string",
                "description": "API data source to query"
              },
              "topic": {
                "type": "string",
                "description": "API data topic to query"
              },
              "subtopic": {
                "type": "string",
                "description": "Optional additional parameters (only applicable to certain endpoints)"
              },
              "stat": {
                "type": "string",
                "description": "Summary statistic to calculate (e.g., 'sum', 'avg', 'count', 'median')"
              },
              "var": {
                "type": "string",
                "description": "Variable to be summarized"
              },
              "by": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Variables to group results by"
              },
              "filters": {
                "type": "object",
                "description": "Optional query filters"
              }
            },
            "required": [
              "level",
              "source",
              "topic",
              "stat",
              "var",
              "by"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 2,
      "tool_names": [
        "get_education_data",
        "get_education_data_summary"
      ]
    },
    "server_info_crawled": {
      "id": 885,
      "name": "Education Data Server",
      "author": "@ckz/edu_data_mcp_server",
      "overview": "Provide easy access to detailed and aggregated education data from the Urban Institute's Education Data API. Retrieve school, district, and university data including enrollment, assessments, and financials. Browse available endpoints and query data flexibly to support education research and analysis.",
      "repository_url": "https://github.com/ckz/edu_data_mcp_server",
      "homepage": "https://smithery.ai/server/@ckz/edu_data_mcp_server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "4",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ckz_edu_data_mcp_server.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "get_education_data",
          "description": "Retrieve education data from the Urban Institute's Education Data API",
          "input_schema": {
            "type": "object",
            "properties": {
              "level": {
                "type": "string",
                "description": "API data level to query (e.g., 'schools', 'school-districts', 'college-university')"
              },
              "source": {
                "type": "string",
                "description": "API data source to query (e.g., 'ccd', 'ipeds', 'crdc')"
              },
              "topic": {
                "type": "string",
                "description": "API data topic to query (e.g., 'enrollment', 'directory')"
              },
              "subtopic": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Optional list of grouping parameters (e.g., ['race', 'sex'])"
              },
              "filters": {
                "type": "object",
                "description": "Optional query filters (e.g., {year: 2008, grade: [9,10,11,12]})"
              },
              "add_labels": {
                "type": "boolean",
                "description": "Add variable labels when applicable (default: false)"
              },
              "limit": {
                "type": "number",
                "description": "Limit the number of results (default: 100)"
              }
            },
            "required": [
              "level",
              "source",
              "topic"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_education_data_summary",
          "description": "Retrieve aggregated education data from the Urban Institute's Education Data API",
          "input_schema": {
            "type": "object",
            "properties": {
              "level": {
                "type": "string",
                "description": "API data level to query"
              },
              "source": {
                "type": "string",
                "description": "API data source to query"
              },
              "topic": {
                "type": "string",
                "description": "API data topic to query"
              },
              "subtopic": {
                "type": "string",
                "description": "Optional additional parameters (only applicable to certain endpoints)"
              },
              "stat": {
                "type": "string",
                "description": "Summary statistic to calculate (e.g., 'sum', 'avg', 'count', 'median')"
              },
              "var": {
                "type": "string",
                "description": "Variable to be summarized"
              },
              "by": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Variables to group results by"
              },
              "filters": {
                "type": "object",
                "description": "Optional query filters"
              }
            },
            "required": [
              "level",
              "source",
              "topic",
              "stat",
              "var",
              "by"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ckz/edu_data_mcp_server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ckz/edu_data_mcp_server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0886.@ckz_edu_data_mcp_server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 867
  }
}