{
  "labels": {
    "analysis": "The MCP Server is designed to integrate with Anki, a popular flashcard application. The core functionality revolves around managing Anki decks and notes through an API, allowing users to list, create, and manipulate notes and decks programmatically. The tools provided enable users to work with Anki's backend efficiently, making it particularly useful for educational purposes and organization of study materials.",
    "reasoning": "The server's primary function is to facilitate the management of Anki decks and notes, which fits well within the \"Education\" category. The tools provided are geared toward enhancing the study experience, which is a key aspect of educational tools. Additionally, the server handles data organization and manipulation, which aligns with the \"Data Analysis & Processing\" category as a secondary label. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Education",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 727,
    "server_name": "Anki Integration Server",
    "rank_by_usage": 728,
    "usage_count": "10",
    "original_file": "../crawler/smithery/@CamdenClark_anki-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@CamdenClark/anki-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "listDecks",
          "description": "Get the names of all decks from Anki",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "listModels",
          "description": "Get the names of all note models from Anki",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "getModel",
          "description": "Get a model, including field and template definitions, from Anki",
          "input_schema": {
            "type": "object",
            "properties": {
              "modelName": {
                "type": "string",
                "description": "Name of the model to get"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "addNote",
          "description": "Create a single note",
          "input_schema": {
            "type": "object",
            "properties": {
              "deckName": {
                "type": "string",
                "description": "Name of the deck to add note to"
              },
              "modelName": {
                "type": "string",
                "description": "Name of the note model/type to use"
              },
              "fields": {
                "type": "object",
                "description": "Map of fields to the value in the note model being used"
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Tags to apply to the note"
              }
            },
            "required": [
              "deckName",
              "modelName",
              "fields"
            ]
          },
          "annotations": null
        },
        {
          "name": "addNotes",
          "description": "Create many notes in a deck",
          "input_schema": {
            "type": "object",
            "properties": {
              "notes": {
                "type": "array",
                "description": "Notes to create",
                "items": {
                  "type": "object",
                  "properties": {
                    "deckName": {
                      "type": "string",
                      "description": "Name of the deck to add note to"
                    },
                    "modelName": {
                      "type": "string",
                      "description": "Name of the note model/type to use"
                    },
                    "fields": {
                      "type": "object",
                      "description": "Map of fields to the value in the note model being used"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tags to apply to the note"
                    }
                  },
                  "required": [
                    "deckName",
                    "modelName",
                    "fields"
                  ]
                }
              }
            }
          },
          "annotations": null
        }
      ],
      "tool_count": 5,
      "tool_names": [
        "listDecks",
        "listModels",
        "getModel",
        "addNote",
        "addNotes"
      ]
    },
    "server_info_crawled": {
      "id": 727,
      "name": "Anki Integration Server",
      "author": "@CamdenClark/anki-mcp-server",
      "overview": "Integrate seamlessly with Anki to manage your decks and notes. Create, list, and access Anki decks and note models effortlessly through a simple API. Enhance your Anki experience with powerful tools for note management and organization.",
      "repository_url": "https://github.com/CamdenClark/anki-mcp-server",
      "homepage": "https://smithery.ai/server/@CamdenClark/anki-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "10",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@CamdenClark_anki-mcp-server.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "listDecks",
          "description": "Get the names of all decks from Anki",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "listModels",
          "description": "Get the names of all note models from Anki",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "getModel",
          "description": "Get a model, including field and template definitions, from Anki",
          "input_schema": {
            "type": "object",
            "properties": {
              "modelName": {
                "type": "string",
                "description": "Name of the model to get"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "addNote",
          "description": "Create a single note",
          "input_schema": {
            "type": "object",
            "properties": {
              "deckName": {
                "type": "string",
                "description": "Name of the deck to add note to"
              },
              "modelName": {
                "type": "string",
                "description": "Name of the note model/type to use"
              },
              "fields": {
                "type": "object",
                "description": "Map of fields to the value in the note model being used"
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Tags to apply to the note"
              }
            },
            "required": [
              "deckName",
              "modelName",
              "fields"
            ]
          },
          "annotations": null
        },
        {
          "name": "addNotes",
          "description": "Create many notes in a deck",
          "input_schema": {
            "type": "object",
            "properties": {
              "notes": {
                "type": "array",
                "description": "Notes to create",
                "items": {
                  "type": "object",
                  "properties": {
                    "deckName": {
                      "type": "string",
                      "description": "Name of the deck to add note to"
                    },
                    "modelName": {
                      "type": "string",
                      "description": "Name of the note model/type to use"
                    },
                    "fields": {
                      "type": "object",
                      "description": "Map of fields to the value in the note model being used"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tags to apply to the note"
                    }
                  },
                  "required": [
                    "deckName",
                    "modelName",
                    "fields"
                  ]
                }
              }
            }
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@CamdenClark/anki-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@CamdenClark/anki-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0728.@CamdenClark_anki-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 711
  }
}