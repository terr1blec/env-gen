{
  "labels": {
    "analysis": "The CSS Tutor server is designed to provide personalized updates and learning resources related to CSS (Cascading Style Sheets) development. It offers tools to fetch the latest CSS news, manage user knowledge memory, and provide tailored guidance for staying updated on CSS features. The core functionality revolves around web development learning, news aggregation, and knowledge management.",
    "reasoning": "The primary label \"Education\" is chosen because the server's main purpose is to enhance learning and provide educational content about CSS. \"Web Search & Research\" is selected as a secondary label due to its web news-fetching capability. \"Memory Management\" is also included as a secondary label since the server has tools to manage user knowledge memory.",
    "primary_label": "Education",
    "secondary_labels": [
      "Web Search & Research",
      "Memory Management"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2356,
    "server_name": "CSS Tutor",
    "rank_by_usage": 2357,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@QuantumLeap-us_css-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@QuantumLeap-us/css-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2356,
      "name": "CSS Tutor",
      "author": "@QuantumLeap-us/css-mcp-server",
      "overview": "Provide personalized updates about new CSS features to enhance your learning experience. Connect with an AI client to fetch the latest CSS news and manage your knowledge effectively. Engage with tailored guidance to stay updated on CSS developments.",
      "repository_url": "https://github.com/QuantumLeap-us/css-mcp-server",
      "homepage": "https://smithery.ai/server/@QuantumLeap-us/css-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@QuantumLeap-us_css-mcp-server.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "read_from_memory",
          "description": "Deploy Server @QuantumLeap-us/css-mcp-server Try in Playground read_from_memory",
          "parameters": [
            {
              "name": "read_from_memory",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "write_to_memory",
          "description": "Updates the user's CSS knowledge memory for a specific concept.",
          "parameters": []
        },
        {
          "name": "get_latest_updates",
          "description": "Fetches recent news and updates about CSS features using Perplexity Sonar via OpenRouter.",
          "parameters": [
            {
              "name": "get_latest_updates",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@QuantumLeap-us/css-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "openrouterApiKey",
          "required": true,
          "description": "Your OpenRouter API key to fetch latest CSS updates via the get_latest_updates tool."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@QuantumLeap-us/css-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2357.@QuantumLeap-us_css-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 2025
  }
}