{
  "labels": {
    "analysis": "The MCP Server provides dictionary lookup capabilities, allowing agents to retrieve word definitions and related information. Its core functionality revolves around enhancing language understanding and vocabulary assistance by enabling quick access to dictionary data. The single available tool, \"get_definitions,\" supports this purpose by fetching definitions for words, making it a specialized tool for language-related tasks.",
    "reasoning": "The primary label \"Content Creation\" was chosen because the server aids in creating accurate and enriched language content by providing definitions. It supports vocabulary enhancement, which is a key aspect of writing and content generation. No secondary labels were selected as the primary functionality is highly focused on dictionary services. Since predefined categories adequately cover the server's use case, no custom label is needed.",
    "primary_label": "Content Creation",
    "secondary_labels": [],
    "custom_label": "No secondary labels",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 362,
    "server_name": "Dictionary MCP Server",
    "rank_by_usage": 363,
    "usage_count": "78",
    "original_file": "../crawler/smithery/@emro624_dictionary-mcp-main.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@emro624/dictionary-mcp-main/mcp?config=eyJhcGlfdGltZW91dCI6IDEwLCAiY2FjaGVfZW5hYmxlZCI6IHRydWV9&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_definitions",
          "description": "\n    Get definitions for a word.\n    ",
          "input_schema": {
            "properties": {
              "word": {
                "title": "Word",
                "type": "string"
              }
            },
            "required": [
              "word"
            ],
            "title": "get_definitionsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get_definitions"
      ]
    },
    "server_info_crawled": {
      "id": 362,
      "name": "Dictionary MCP Server",
      "author": "@emro624/dictionary-mcp-main",
      "overview": "Provide dictionary lookup capabilities to your agents by exposing word definitions and related information. Enhance language understanding and vocabulary assistance through seamless integration. Enable quick and reliable access to dictionary data within your applications.",
      "repository_url": "https://github.com/emro624/dictionary-mcp-main",
      "homepage": "https://smithery.ai/server/@emro624/dictionary-mcp-main",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "78",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@emro624_dictionary-mcp-main.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_definitions",
          "description": "\n    Get definitions for a word.\n    ",
          "input_schema": {
            "properties": {
              "word": {
                "title": "Word",
                "type": "string"
              }
            },
            "required": [
              "word"
            ],
            "title": "get_definitionsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"api_timeout\": 10,\n  \"cache_enabled\": true\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@emro624/dictionary-mcp-main/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"api_timeout\": 10,\n  \"cache_enabled\": true\n}",
      "python_sdk_url": "https://server.smithery.ai/@emro624/dictionary-mcp-main/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "0363.@emro624_dictionary-mcp-main_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 359
  }
}