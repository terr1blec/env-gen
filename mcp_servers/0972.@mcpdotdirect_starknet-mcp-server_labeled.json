{
  "labels": {
    "analysis": "The Starknet MCP Server is designed to provide AI agents with comprehensive tools for interacting with the Starknet blockchain. Its core functionality revolves around querying blockchain data, managing digital assets, and executing transactions. The tools cover various aspects of Starknet operations, including network information, balance checks, smart contract interactions, token management, and transaction execution. This server enables seamless integration and automation of blockchain-related tasks for AI agents.",
    "reasoning": "The primary label is chosen because the server's main functionality revolves around interacting with blockchain networks (Starknet specifically), managing wallets, and executing smart contract operations. The secondary labels reflect additional capabilities like financial operations (token transfers) and data analysis (balance checks, transaction tracking). No custom label is needed as the predefined categories amply cover the server's functionality.",
    "primary_label": "Cryptocurrency & Blockchain",
    "secondary_labels": [
      "Financial Services",
      "Database Operations"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 971,
    "server_name": "Starknet MCP Server",
    "rank_by_usage": 972,
    "usage_count": "3",
    "original_file": "../crawler/smithery/@mcpdotdirect_starknet-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@mcpdotdirect/starknet-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_starknet_chain_info",
          "description": "Get information about a Starknet network",
          "input_schema": {
            "type": "object",
            "properties": {
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_supported_starknet_networks",
          "description": "Get a list of supported Starknet networks",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_eth_balance",
          "description": "Get the ETH balance for a Starknet address or Starknet ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "Starknet address or Starknet ID (with or without .stark)"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_token_balance",
          "description": "Get the token balance for a Starknet address or Starknet ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "tokenAddress": {
                "type": "string",
                "description": "Token contract address or Starknet ID"
              },
              "ownerAddress": {
                "type": "string",
                "description": "Owner's Starknet address or Starknet ID"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "tokenAddress",
              "ownerAddress"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_strk_balance",
          "description": "Get the STRK token balance for a Starknet address or Starknet ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "Starknet address or Starknet ID (with or without .stark)"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_native_balances",
          "description": "Get all native token balances (ETH and STRK) for a Starknet address or Starknet ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "Starknet address or Starknet ID (with or without .stark)"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "resolve_starknet_name",
          "description": "Get the Starknet ID for an address",
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "Starknet address to lookup (must be a valid address, not a name)"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "resolve_starknet_address",
          "description": "Get the address for a Starknet ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Starknet ID to lookup (with or without .stark)"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "name"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_profile",
          "description": "Get the full Starknet ID profile for an address or Starknet ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "Starknet address or Starknet ID to lookup"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "validate_starknet_domain",
          "description": "Check if a string is a valid Starknet ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "domain": {
                "type": "string",
                "description": "Starknet ID to validate (with or without .stark)"
              }
            },
            "required": [
              "domain"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_block",
          "description": "Get information about a specific block",
          "input_schema": {
            "type": "object",
            "properties": {
              "blockIdentifier": {
                "type": "string",
                "description": "Block number, hash, or 'latest'/'pending'. Defaults to 'latest'."
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_block_transactions",
          "description": "Get transactions in a specific block",
          "input_schema": {
            "type": "object",
            "properties": {
              "blockIdentifier": {
                "type": "string",
                "description": "Block number, hash, or 'latest'/'pending'. Defaults to 'latest'."
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_transaction",
          "description": "Get details about a transaction",
          "input_schema": {
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string",
                "description": "Transaction hash"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "txHash"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_transaction_receipt",
          "description": "Get transaction receipt",
          "input_schema": {
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string",
                "description": "Transaction hash"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "txHash"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "call_starknet_contract",
          "description": "Call a read-only function on a contract",
          "input_schema": {
            "type": "object",
            "properties": {
              "contractAddress": {
                "type": "string",
                "description": "Contract address or Starknet ID"
              },
              "entrypoint": {
                "type": "string",
                "description": "Function name to call"
              },
              "calldata": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Call data array (optional)"
              },
              "resultTypes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "felt",
                    "uint256",
                    "address",
                    "string"
                  ]
                },
                "description": "Expected return types for each result value (e.g., ['felt', 'uint256', 'address'])"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "contractAddress",
              "entrypoint"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_contract_class",
          "description": "Get the class (ABI and other information) of a contract",
          "input_schema": {
            "type": "object",
            "properties": {
              "contractAddress": {
                "type": "string",
                "description": "Contract address or Starknet ID"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "contractAddress"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_token_info",
          "description": "Get information about a token",
          "input_schema": {
            "type": "object",
            "properties": {
              "tokenAddress": {
                "type": "string",
                "description": "Token contract address or Starknet ID"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "tokenAddress"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "check_starknet_nft_ownership",
          "description": "Check if an address owns a specific NFT",
          "input_schema": {
            "type": "object",
            "properties": {
              "tokenAddress": {
                "type": "string",
                "description": "NFT contract address or Starknet ID"
              },
              "tokenId": {
                "type": "string",
                "description": "Token ID to check"
              },
              "ownerAddress": {
                "type": "string",
                "description": "Owner's Starknet address or Starknet ID to check against"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "tokenAddress",
              "tokenId",
              "ownerAddress"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_nft_balance",
          "description": "Get the number of NFTs owned by an address for a specific collection",
          "input_schema": {
            "type": "object",
            "properties": {
              "tokenAddress": {
                "type": "string",
                "description": "NFT contract address or Starknet ID"
              },
              "ownerAddress": {
                "type": "string",
                "description": "Owner's Starknet address or Starknet ID"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "tokenAddress",
              "ownerAddress"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_token_supply",
          "description": "Get the total supply of a token",
          "input_schema": {
            "type": "object",
            "properties": {
              "tokenAddress": {
                "type": "string",
                "description": "Token contract address or Starknet ID"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "tokenAddress"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "check_starknet_transaction_status",
          "description": "Check if a transaction is confirmed (finalized)",
          "input_schema": {
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string",
                "description": "Transaction hash"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "txHash"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "transfer_starknet_eth",
          "description": "Transfer ETH from one account to another",
          "input_schema": {
            "type": "object",
            "properties": {
              "privateKey": {
                "type": "string",
                "description": "Private key of the sender account (not stored, only used to sign the transaction)"
              },
              "from": {
                "type": "string",
                "description": "Sender's Starknet address"
              },
              "to": {
                "type": "string",
                "description": "Recipient's Starknet address or Starknet ID"
              },
              "amount": {
                "type": "string",
                "description": "Amount to transfer in ETH (human readable format, not wei)"
              },
              "maxFee": {
                "type": "string",
                "description": "Maximum fee to pay (optional)"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "privateKey",
              "from",
              "to",
              "amount"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "transfer_starknet_strk",
          "description": "Transfer STRK from one account to another",
          "input_schema": {
            "type": "object",
            "properties": {
              "privateKey": {
                "type": "string",
                "description": "Private key of the sender account (not stored, only used to sign the transaction)"
              },
              "from": {
                "type": "string",
                "description": "Sender's Starknet address"
              },
              "to": {
                "type": "string",
                "description": "Recipient's Starknet address or Starknet ID"
              },
              "amount": {
                "type": "string",
                "description": "Amount to transfer in STRK (human readable format, not wei)"
              },
              "maxFee": {
                "type": "string",
                "description": "Maximum fee to pay (optional)"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "privateKey",
              "from",
              "to",
              "amount"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "transfer_starknet_token",
          "description": "Transfer ERC20 tokens from one account to another",
          "input_schema": {
            "type": "object",
            "properties": {
              "privateKey": {
                "type": "string",
                "description": "Private key of the sender account (not stored, only used to sign the transaction)"
              },
              "from": {
                "type": "string",
                "description": "Sender's Starknet address"
              },
              "to": {
                "type": "string",
                "description": "Recipient's Starknet address or Starknet ID"
              },
              "tokenAddress": {
                "type": "string",
                "description": "Token contract address or Starknet ID"
              },
              "amount": {
                "type": "string",
                "description": "Amount to transfer in token's standard units (human readable format, not in smallest unit)"
              },
              "maxFee": {
                "type": "string",
                "description": "Maximum fee to pay (optional)"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "privateKey",
              "from",
              "to",
              "tokenAddress",
              "amount"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "execute_starknet_contract",
          "description": "Execute a contract call (write operation)",
          "input_schema": {
            "type": "object",
            "properties": {
              "privateKey": {
                "type": "string",
                "description": "Private key of the sender account (not stored, only used to sign the transaction)"
              },
              "accountAddress": {
                "type": "string",
                "description": "Sender's Starknet address"
              },
              "contractAddress": {
                "type": "string",
                "description": "Contract address or Starknet ID"
              },
              "entrypoint": {
                "type": "string",
                "description": "Function name to call"
              },
              "calldata": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Call data array (optional)"
              },
              "maxFee": {
                "type": "string",
                "description": "Maximum fee to pay (optional)"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "privateKey",
              "accountAddress",
              "contractAddress",
              "entrypoint"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 25,
      "tool_names": [
        "get_starknet_chain_info",
        "get_supported_starknet_networks",
        "get_starknet_eth_balance",
        "get_starknet_token_balance",
        "get_starknet_strk_balance",
        "get_starknet_native_balances",
        "resolve_starknet_name",
        "resolve_starknet_address",
        "get_starknet_profile",
        "validate_starknet_domain",
        "get_starknet_block",
        "get_starknet_block_transactions",
        "get_starknet_transaction",
        "get_starknet_transaction_receipt",
        "call_starknet_contract",
        "get_starknet_contract_class",
        "get_starknet_token_info",
        "check_starknet_nft_ownership",
        "get_starknet_nft_balance",
        "get_starknet_token_supply",
        "check_starknet_transaction_status",
        "transfer_starknet_eth",
        "transfer_starknet_strk",
        "transfer_starknet_token",
        "execute_starknet_contract"
      ]
    },
    "server_info_crawled": {
      "id": 971,
      "name": "Starknet MCP Server",
      "author": "@mcpdotdirect/starknet-mcp-server",
      "overview": "A comprehensive Model Context Protocol (MCP) server for the Starknet blockchain. This server provides AI agents with the ability to interact with Starknet networks, query blockchain data, manage wallets, and interact with smart contracts.",
      "repository_url": "https://github.com/mcpdotdirect/starknet-mcp-server",
      "homepage": "https://smithery.ai/server/@mcpdotdirect/starknet-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "3",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@mcpdotdirect_starknet-mcp-server.json",
      "tools_count": 25,
      "tools": [
        {
          "name": "get_starknet_chain_info",
          "description": "Get information about a Starknet network",
          "input_schema": {
            "type": "object",
            "properties": {
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_supported_starknet_networks",
          "description": "Get a list of supported Starknet networks",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_eth_balance",
          "description": "Get the ETH balance for a Starknet address or Starknet ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "Starknet address or Starknet ID (with or without .stark)"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_token_balance",
          "description": "Get the token balance for a Starknet address or Starknet ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "tokenAddress": {
                "type": "string",
                "description": "Token contract address or Starknet ID"
              },
              "ownerAddress": {
                "type": "string",
                "description": "Owner's Starknet address or Starknet ID"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "tokenAddress",
              "ownerAddress"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_strk_balance",
          "description": "Get the STRK token balance for a Starknet address or Starknet ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "Starknet address or Starknet ID (with or without .stark)"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_native_balances",
          "description": "Get all native token balances (ETH and STRK) for a Starknet address or Starknet ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "Starknet address or Starknet ID (with or without .stark)"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "resolve_starknet_name",
          "description": "Get the Starknet ID for an address",
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "Starknet address to lookup (must be a valid address, not a name)"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "resolve_starknet_address",
          "description": "Get the address for a Starknet ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Starknet ID to lookup (with or without .stark)"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "name"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_profile",
          "description": "Get the full Starknet ID profile for an address or Starknet ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "Starknet address or Starknet ID to lookup"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "validate_starknet_domain",
          "description": "Check if a string is a valid Starknet ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "domain": {
                "type": "string",
                "description": "Starknet ID to validate (with or without .stark)"
              }
            },
            "required": [
              "domain"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_block",
          "description": "Get information about a specific block",
          "input_schema": {
            "type": "object",
            "properties": {
              "blockIdentifier": {
                "type": "string",
                "description": "Block number, hash, or 'latest'/'pending'. Defaults to 'latest'."
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_block_transactions",
          "description": "Get transactions in a specific block",
          "input_schema": {
            "type": "object",
            "properties": {
              "blockIdentifier": {
                "type": "string",
                "description": "Block number, hash, or 'latest'/'pending'. Defaults to 'latest'."
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_transaction",
          "description": "Get details about a transaction",
          "input_schema": {
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string",
                "description": "Transaction hash"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "txHash"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_transaction_receipt",
          "description": "Get transaction receipt",
          "input_schema": {
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string",
                "description": "Transaction hash"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "txHash"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "call_starknet_contract",
          "description": "Call a read-only function on a contract",
          "input_schema": {
            "type": "object",
            "properties": {
              "contractAddress": {
                "type": "string",
                "description": "Contract address or Starknet ID"
              },
              "entrypoint": {
                "type": "string",
                "description": "Function name to call"
              },
              "calldata": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Call data array (optional)"
              },
              "resultTypes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "felt",
                    "uint256",
                    "address",
                    "string"
                  ]
                },
                "description": "Expected return types for each result value (e.g., ['felt', 'uint256', 'address'])"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "contractAddress",
              "entrypoint"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_contract_class",
          "description": "Get the class (ABI and other information) of a contract",
          "input_schema": {
            "type": "object",
            "properties": {
              "contractAddress": {
                "type": "string",
                "description": "Contract address or Starknet ID"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "contractAddress"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_token_info",
          "description": "Get information about a token",
          "input_schema": {
            "type": "object",
            "properties": {
              "tokenAddress": {
                "type": "string",
                "description": "Token contract address or Starknet ID"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "tokenAddress"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "check_starknet_nft_ownership",
          "description": "Check if an address owns a specific NFT",
          "input_schema": {
            "type": "object",
            "properties": {
              "tokenAddress": {
                "type": "string",
                "description": "NFT contract address or Starknet ID"
              },
              "tokenId": {
                "type": "string",
                "description": "Token ID to check"
              },
              "ownerAddress": {
                "type": "string",
                "description": "Owner's Starknet address or Starknet ID to check against"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "tokenAddress",
              "tokenId",
              "ownerAddress"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_nft_balance",
          "description": "Get the number of NFTs owned by an address for a specific collection",
          "input_schema": {
            "type": "object",
            "properties": {
              "tokenAddress": {
                "type": "string",
                "description": "NFT contract address or Starknet ID"
              },
              "ownerAddress": {
                "type": "string",
                "description": "Owner's Starknet address or Starknet ID"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "tokenAddress",
              "ownerAddress"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_starknet_token_supply",
          "description": "Get the total supply of a token",
          "input_schema": {
            "type": "object",
            "properties": {
              "tokenAddress": {
                "type": "string",
                "description": "Token contract address or Starknet ID"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "tokenAddress"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "check_starknet_transaction_status",
          "description": "Check if a transaction is confirmed (finalized)",
          "input_schema": {
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string",
                "description": "Transaction hash"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "txHash"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "transfer_starknet_eth",
          "description": "Transfer ETH from one account to another",
          "input_schema": {
            "type": "object",
            "properties": {
              "privateKey": {
                "type": "string",
                "description": "Private key of the sender account (not stored, only used to sign the transaction)"
              },
              "from": {
                "type": "string",
                "description": "Sender's Starknet address"
              },
              "to": {
                "type": "string",
                "description": "Recipient's Starknet address or Starknet ID"
              },
              "amount": {
                "type": "string",
                "description": "Amount to transfer in ETH (human readable format, not wei)"
              },
              "maxFee": {
                "type": "string",
                "description": "Maximum fee to pay (optional)"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "privateKey",
              "from",
              "to",
              "amount"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "transfer_starknet_strk",
          "description": "Transfer STRK from one account to another",
          "input_schema": {
            "type": "object",
            "properties": {
              "privateKey": {
                "type": "string",
                "description": "Private key of the sender account (not stored, only used to sign the transaction)"
              },
              "from": {
                "type": "string",
                "description": "Sender's Starknet address"
              },
              "to": {
                "type": "string",
                "description": "Recipient's Starknet address or Starknet ID"
              },
              "amount": {
                "type": "string",
                "description": "Amount to transfer in STRK (human readable format, not wei)"
              },
              "maxFee": {
                "type": "string",
                "description": "Maximum fee to pay (optional)"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "privateKey",
              "from",
              "to",
              "amount"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "transfer_starknet_token",
          "description": "Transfer ERC20 tokens from one account to another",
          "input_schema": {
            "type": "object",
            "properties": {
              "privateKey": {
                "type": "string",
                "description": "Private key of the sender account (not stored, only used to sign the transaction)"
              },
              "from": {
                "type": "string",
                "description": "Sender's Starknet address"
              },
              "to": {
                "type": "string",
                "description": "Recipient's Starknet address or Starknet ID"
              },
              "tokenAddress": {
                "type": "string",
                "description": "Token contract address or Starknet ID"
              },
              "amount": {
                "type": "string",
                "description": "Amount to transfer in token's standard units (human readable format, not in smallest unit)"
              },
              "maxFee": {
                "type": "string",
                "description": "Maximum fee to pay (optional)"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "privateKey",
              "from",
              "to",
              "tokenAddress",
              "amount"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "execute_starknet_contract",
          "description": "Execute a contract call (write operation)",
          "input_schema": {
            "type": "object",
            "properties": {
              "privateKey": {
                "type": "string",
                "description": "Private key of the sender account (not stored, only used to sign the transaction)"
              },
              "accountAddress": {
                "type": "string",
                "description": "Sender's Starknet address"
              },
              "contractAddress": {
                "type": "string",
                "description": "Contract address or Starknet ID"
              },
              "entrypoint": {
                "type": "string",
                "description": "Function name to call"
              },
              "calldata": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Call data array (optional)"
              },
              "maxFee": {
                "type": "string",
                "description": "Maximum fee to pay (optional)"
              },
              "network": {
                "type": "string",
                "description": "Network name (e.g., 'mainnet', 'sepolia'). Defaults to Mainnet."
              }
            },
            "required": [
              "privateKey",
              "accountAddress",
              "contractAddress",
              "entrypoint"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@mcpdotdirect/starknet-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@mcpdotdirect/starknet-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0972.@mcpdotdirect_starknet-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 950
  }
}