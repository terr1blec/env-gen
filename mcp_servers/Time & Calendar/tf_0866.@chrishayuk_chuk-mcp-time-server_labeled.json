{
  "labels": {
    "analysis": "The MCP Server provides functionality related to time retrieval and conversion between different time zones. It solves problems related to accurate timekeeping and timezone management, which is essential for applications requiring real-time data synchronization across geographies.",
    "reasoning": "The primary label \"Time & Calendar\" is chosen because the server's core functionality revolves around time-related tasks, specifically retrieving current time and converting between time zones. This aligns closely with scheduling and time management. There are no additional categories that directly apply, nor is there a need for a custom label.",
    "primary_label": "Time & Calendar",
    "secondary_labels": [],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 865,
    "server_name": "Time Server",
    "rank_by_usage": 866,
    "usage_count": "5",
    "original_file": "../crawler/smithery/@chrishayuk_chuk-mcp-time-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@chrishayuk/chuk-mcp-time-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 865,
      "name": "Time Server",
      "author": "@chrishayuk/chuk-mcp-time-server",
      "overview": "Retrieve current times and convert between time zones effortlessly. Utilize advanced time-related utilities to enhance your applications with accurate and reliable time data across different global timezones.",
      "repository_url": "https://github.com/chrishayuk/chuk-mcp-time-server",
      "homepage": "https://smithery.ai/server/@chrishayuk/chuk-mcp-time-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "5",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@chrishayuk_chuk-mcp-time-server.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "get_current_time",
          "description": "Deploy Server Time Server Claim Server @chrishayuk/chuk-mcp-time-server Try in Playground get_current_time",
          "parameters": [
            {
              "name": "get_current_time",
              "required": false,
              "type": "string"
            },
            {
              "name": "timezone",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "convert_time",
          "description": "Convert time between timezones",
          "parameters": [
            {
              "name": "Convert",
              "required": false,
              "type": "string"
            },
            {
              "name": "time",
              "required": false,
              "type": "string"
            },
            {
              "name": "between",
              "required": false,
              "type": "string"
            },
            {
              "name": "timezones",
              "required": false,
              "type": "string"
            },
            {
              "name": "source_timezone",
              "required": true,
              "type": "string"
            },
            {
              "name": "target_timezone",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@chrishayuk/chuk-mcp-time-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@chrishayuk/chuk-mcp-time-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0866.@chrishayuk_chuk-mcp-time-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 847
  }
}