{
  "labels": {
    "analysis": "The Ldoce Server is designed to extract, structure, and return linguistic data from the Longman Dictionary in a standardized JSON format. It enables AI agents to retrieve detailed word information (e.g., dictionary entries, grammatical forms) with ease, facilitating applications that require rich linguistic resources. The primary functionality involves fetching and parsing dictionary data, which can be classified under research and language processing.",
    "reasoning": "The primary label \"Web Search & Research\" was chosen because the server's core function revolves around retrieving detailed lexical data, which aligns well with research and data gathering. A secondary label \"Data Analysis & Processing\" was added because the extracted data is structured in a usable format (JSON), making it relevant for further analysis. No additional custom labels are needed as the predefined labels sufficiently cover the functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2149,
    "server_name": "Ldoce Server",
    "rank_by_usage": 2150,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@edgardamasceno-dev_ldoce-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@edgardamasceno-dev/ldoce-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_dictionary_entry",
          "description": "Busca o HTML do Longman para uma palavra e retorna JSON parseado (dictionaryEntries, simpleForm, continuousForm)",
          "input_schema": {
            "type": "object",
            "properties": {
              "word": {
                "type": "string",
                "description": "A palavra a ser consultada (ex: rot)"
              }
            },
            "required": [
              "word"
            ]
          },
          "annotations": {}
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get_dictionary_entry"
      ]
    },
    "server_info_crawled": {
      "id": 2149,
      "name": "Ldoce Server",
      "author": "@edgardamasceno-dev/ldoce-mcp-server",
      "overview": "Extract and structure data from the Longman Dictionary for AI agents. Connect to the dictionary and retrieve detailed word information in a standardized JSON format. Enhance your applications with rich linguistic data effortlessly.",
      "repository_url": "https://github.com/edgardamasceno-dev/ldoce-mcp-server",
      "homepage": "https://smithery.ai/server/@edgardamasceno-dev/ldoce-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@edgardamasceno-dev_ldoce-mcp-server.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_dictionary_entry",
          "description": "Busca o HTML do Longman para uma palavra e retorna JSON parseado (dictionaryEntries, simpleForm, continuousForm)",
          "input_schema": {
            "type": "object",
            "properties": {
              "word": {
                "type": "string",
                "description": "A palavra a ser consultada (ex: rot)"
              }
            },
            "required": [
              "word"
            ]
          },
          "annotations": {}
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@edgardamasceno-dev/ldoce-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@edgardamasceno-dev/ldoce-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "2150.@edgardamasceno-dev_ldoce-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1859
  }
}