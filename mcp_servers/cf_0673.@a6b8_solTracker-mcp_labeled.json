{
  "labels": {
    "analysis": "The SolTracker Server is a specialized tool for accessing, analyzing, and visualizing real-time and historical data from the Solana blockchain. It focuses on providing comprehensive insights into tokens, wallets, and trading activities within the Solana ecosystem. The server offers a wide range of tools for querying token information, wallet balances, trading data, and DeFi metrics, along with advanced search, filtering, and charting capabilities. This positions it as a powerful resource for cryptocurrency analysis and blockchain research.",
    "reasoning": "The primary functionality of the server aligns most closely with \"Cryptocurrency & Blockchain\" due to its focus on Solana ecosystem data, including tokens, wallets, and trading activities. Secondary labels such as \"Data Analysis & Processing\" and \"Charting & Visualization\" are relevant due to the server's capabilities for analyzing and visualizing blockchain data. Given the specificity of its tools and data focus, a custom label is used to highlight its unique Solana-centric nature.",
    "primary_label": "Cryptocurrency & Blockchain",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": "Solana Blockchain Data & Analytics",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 672,
    "server_name": "SolTracker Server",
    "rank_by_usage": 673,
    "usage_count": "13",
    "original_file": "../crawler/smithery/@a6b8_solTracker-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@a6b8/solTracker-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 672,
      "name": "SolTracker Server",
      "author": "@a6b8/solTracker-mcp",
      "overview": "Provide unified access to real-time and historical token, wallet, and trading data from the Solana ecosystem. Enable LLM agents to query and analyze Solana blockchain data including token info, wallet balances, trades, and DeFi metrics. Facilitate rich search, filtering, and charting capabilities for enhanced blockchain insights.",
      "repository_url": "https://github.com/a6b8/solTracker-mcp",
      "homepage": "https://smithery.ai/server/@a6b8/solTracker-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "13",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@a6b8_solTracker-mcp.json",
      "tools_count": 31,
      "tools": [
        {
          "name": "tokenInformation",
          "description": "Deploy Server SolTracker Server Claim Server @a6b8/solTracker-mcp Try in Playground tokenInformation",
          "parameters": [
            {
              "name": "tokenInformation",
              "required": false,
              "type": "string"
            },
            {
              "name": "tokenAddress",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "tokenHolders",
          "description": "Get the top 100 holders for a specific token.",
          "parameters": [
            {
              "name": "tokenHolders",
              "required": false,
              "type": "string"
            },
            {
              "name": "tokenAddress",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "tokenAth",
          "description": "Retrieve the all time high price of a token (since data api started recording)",
          "parameters": [
            {
              "name": "tokenAth",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search",
          "description": "The /search endpoint provides a flexible search interface for pools and tokens with support for multiple filtering criteria and pagination.",
          "parameters": [
            {
              "name": "search",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "latestTokens",
          "description": "Retrieve the latest 100 tokens.",
          "parameters": [
            {
              "name": "latestTokens",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "trendingTokens",
          "description": "Get the top 100 trending tokens based on transaction volume in the past hour.",
          "parameters": [
            {
              "name": "trendingTokens",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "trendingTokensByTimeframe",
          "description": "Returns trending tokens for a specific time interval.",
          "parameters": [
            {
              "name": "trendingTokensByTimeframe",
              "required": false,
              "type": "string"
            },
            {
              "name": "timeframe",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "tokenVolume",
          "description": "Retrieve the top 100 tokens sorted by highest volume.",
          "parameters": [
            {
              "name": "tokenVolume",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "multiTokenInformation",
          "description": "Get an overview of latest, graduating, and graduated tokens (Pumpvision / Photon Memescope style).",
          "parameters": [
            {
              "name": "multiTokenInformation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "graduatedTokens",
          "description": "Overview of all graduated pumpfun/moonshot tokens (Pumpvision / Photon Memescope style).",
          "parameters": [
            {
              "name": "graduatedTokens",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "priceInformation",
          "description": "Get price information for a single token.",
          "parameters": [
            {
              "name": "token",
              "required": true,
              "type": "string"
            },
            {
              "name": "priceChanges",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "priceHistory",
          "description": "Get historic price information for a single token.",
          "parameters": [
            {
              "name": "priceHistory",
              "required": false,
              "type": "string"
            },
            {
              "name": "token",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "postPrice",
          "description": "Similar to GET /price, but accepts token address in the request body.",
          "parameters": [
            {
              "name": "postPrice",
              "required": false,
              "type": "string"
            },
            {
              "name": "token",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "multiPriceInformation",
          "description": "Get price information for multiple tokens (up to 100).",
          "parameters": [
            {
              "name": "multiPriceInformation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "postMultiPrice",
          "description": "Similar to GET /price/multi, but accepts an array of token addresses in the request body.",
          "parameters": [
            {
              "name": "postMultiPrice",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "walletInformation",
          "description": "Get all tokens in a wallet with current value in USD.",
          "parameters": [
            {
              "name": "walletInformation",
              "required": false,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "walletTrades",
          "description": "Get the latest trades of a wallet.",
          "parameters": [
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "cursor",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "tokenTrades",
          "description": "Get the latest trades for a token across all pools.",
          "parameters": [
            {
              "name": "tokenTrades",
              "required": false,
              "type": "string"
            },
            {
              "name": "tokenAddress",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "tokenTradesByPool",
          "description": "Get the latest trades for a specific token and pool pair.",
          "parameters": [
            {
              "name": "tokenTradesByPool",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "tokenTradesByPoolAndOwner",
          "description": "Get the latest trades for a specific token, pool, and wallet address.",
          "parameters": [
            {
              "name": "tokenTradesByPoolAndOwner",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "tradesByWallet",
          "description": "Get the latest trades for a specific token and wallet address.",
          "parameters": [
            {
              "name": "tradesByWallet",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "chartData",
          "description": "Description not available",
          "parameters": [
            {
              "name": "chartData",
              "required": false,
              "type": "string"
            },
            {
              "name": "token",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "chartDataByPool",
          "description": "Get OLCVH (Open, Low, Close, Volume, High) data for charts.",
          "parameters": [
            {
              "name": "chartDataByPool",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "profitAndLossData",
          "description": "Get Profit and Loss data for all positions of a wallet.",
          "parameters": [
            {
              "name": "profitAndLossData",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "firstBuyersOfToken",
          "description": "Retrieve the first 100 buyers of a token (since API started recording data) with Profit and Loss data for each wallet.",
          "parameters": [
            {
              "name": "firstBuyersOfToken",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pnlForSpecificToken",
          "description": "Get Profit and Loss data for a specific token in a wallet.",
          "parameters": [
            {
              "name": "token",
              "required": true,
              "type": "string"
            },
            {
              "name": "wallet",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "topTraders",
          "description": "Get the most profitable traders",
          "parameters": [
            {
              "name": "topTraders",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "paginatedTopTraders",
          "description": "Get the most profitable traders across all tokens, with optional pagination.",
          "parameters": [
            {
              "name": "paginatedTopTraders",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "topTradersForToken",
          "description": "Get top 100 traders by PnL for a token.",
          "parameters": [
            {
              "name": "topTradersForToken",
              "required": false,
              "type": "string"
            },
            {
              "name": "token",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "tokenStatsByPool",
          "description": "Get detailed stats for a token-pool pair over various time intervals.",
          "parameters": [
            {
              "name": "tokenStatsByPool",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "tokenStats",
          "description": "Get detailed stats for a token over various time intervals.",
          "parameters": [
            {
              "name": "tokenStatsByPool",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@a6b8/solTracker-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "soltrackerApiKey",
          "required": true,
          "description": "API key for Solana Tracker API"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@a6b8/solTracker-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0673.@a6b8_solTracker-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 657
  }
}