{
  "labels": {
    "analysis": "The MCP Development Framework is designed to enhance productivity by allowing users to create custom tools for interacting with large language models. Its primary functionality revolves around automating tasks, processing documents, and integrating web content within the Cursor IDE. The available tools indicate a focus on document processing, web content fetching, and server management via optional sign-in features.",
    "reasoning": "The primary label \"Development Tools\" was chosen because the MCP Server enhances the Cursor IDE with advanced features tailored for developers. Secondary labels like \"File Management\" and \"Browser Automation\" reflect its capability to fetch web content and process documents like PDFs and Word files.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "File Management",
      "Browser Automation"
    ],
    "custom_label": "LLM Tool Integration",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1733,
    "server_name": "MCP Development Framework",
    "rank_by_usage": 1734,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@aigo666_mcp-framework.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@aigo666/mcp-framework/mcp?config=eyJkZWJ1ZyI6IGZhbHNlLCAibWNwU2VydmVySG9zdCI6ICIwLjAuMC4wIiwgIm1jcFNlcnZlclBvcnQiOiA4MDAwfQ==&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "Connection timeout (20 seconds)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1733,
      "name": "MCP Development Framework",
      "author": "@aigo666/mcp-framework",
      "overview": "Create custom tools to interact with large language models effortlessly. Enhance your Cursor IDE with advanced features like web content fetching, PDF document processing, and Word document parsing. Streamline your workflow and automate tasks with ease.",
      "repository_url": "https://github.com/aigo666/mcp-framework",
      "homepage": "https://smithery.ai/server/@aigo666/mcp-framework",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@aigo666_mcp-framework.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "Optional Settings",
          "description": "Access and manage servers by signing in.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"debug\": false,\n  \"mcpServerHost\": \"0.0.0.0\",\n  \"mcpServerPort\": 8000\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@aigo666/mcp-framework/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"debug\": false,\n  \"mcpServerHost\": \"0.0.0.0\",\n  \"mcpServerPort\": 8000\n}",
      "python_sdk_url": "https://server.smithery.ai/@aigo666/mcp-framework/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "cf_1734.@aigo666_mcp-framework_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1559
  }
}