{
  "labels": {
    "analysis": "The MCP Server \"Uniswap Trader\" is primarily focused on automating decentralized token swaps on the Uniswap DEX across multiple blockchains. It provides real-time price quotes, executes swaps with optimal routing, and offers trading suggestions based on liquidity and fees. The server's tools are specifically designed for cryptocurrency and DeFi (Decentralized Finance) interactions, with a strong emphasis on blockchain-based trading and token swaps.",
    "reasoning": "The primary label \"Cryptocurrency & Blockchain\" was chosen because the server's core functionality revolves around executing and optimizing token swaps on a decentralized exchange (Uniswap), which is a significant aspect of cryptocurrency and DeFi operations. The secondary label \"Automated Trading\" was selected because the server automates trading processes, and \"API Integration\" was included due to the server's reliance on blockchains (via API) to fetch prices and execute swaps. Custom labels were not needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Cryptocurrency & Blockchain",
    "secondary_labels": [
      "API Integration",
      "Cryptocurrency & Blockchain"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 840,
    "server_name": "Uniswap Trader",
    "rank_by_usage": 841,
    "usage_count": "5",
    "original_file": "../crawler/smithery/@kukapay_uniswap-trader-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@kukapay/uniswap-trader-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 840,
      "name": "Uniswap Trader",
      "author": "@kukapay/uniswap-trader-mcp",
      "overview": "Automate token swaps on Uniswap DEX across multiple blockchains. Get real-time price quotes, execute swaps with configurable parameters, and receive trading suggestions based on liquidity and fees.",
      "repository_url": "https://github.com/kukapay/uniswap-trader-mcp",
      "homepage": "https://smithery.ai/server/@kukapay/uniswap-trader-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "5",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@kukapay_uniswap-trader-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "getPrice",
          "description": "Deploy Server Uniswap Trader Claim Server @kukapay/uniswap-trader-mcp Try in Playground",
          "parameters": []
        },
        {
          "name": "executeSwap",
          "description": "Execute a swap on Uniswap with optimal multi-hop routing",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@kukapay/uniswap-trader-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "infuraKey",
          "required": true,
          "description": "Infura API key for RPC endpoints"
        },
        {
          "name": "walletPrivateKey",
          "required": true,
          "description": "Private key of the wallet for executing swaps"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@kukapay/uniswap-trader-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0841.@kukapay_uniswap-trader-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 822
  }
}