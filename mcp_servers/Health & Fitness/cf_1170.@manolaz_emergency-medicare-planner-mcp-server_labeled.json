{
  "labels": {
    "analysis": "The MCP Server is primarily focused on emergency medical management, providing tools to locate nearby medical facilities, verify Medicare coverage, retrieve emergency contacts, arrange transportation, and perform detailed medical problem-solving. It addresses urgent healthcare needs by combining location-based services with clinical decision-making capabilities, making it essential for emergency medical planning and execution.",
    "reasoning": "The primary label \"Health & Fitness\" is chosen because the server's core functionality revolves around medical emergencies, healthcare services, and patient care. The secondary label \"Travel & Maps\" is included due to the facility locator and route calculation features, while \"AI/ML Tools\" is appropriate because of the sequential medical problem-solving tool that adapts dynamically to diagnose and plan treatments. No custom label is needed as predefined categories adequately cover the server's functionality.",
    "primary_label": "Health & Fitness",
    "secondary_labels": [
      "Travel & Maps",
      "AI/ML Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1169,
    "server_name": "Emergency Medicare Management",
    "rank_by_usage": 1170,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@manolaz_emergency-medicare-planner-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@manolaz/emergency-medicare-planner-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1169,
      "name": "Emergency Medicare Management",
      "author": "@manolaz/emergency-medicare-planner-mcp-server",
      "overview": "Find nearby hospitals and clinics that match specific patient needs. Access real-time information about medical facilities and calculate the fastest routes to them. Ensure timely medical assistance with this efficient planning tool.",
      "repository_url": "https://github.com/manolaz/emergency-medicare-planner-mcp-server",
      "homepage": "https://smithery.ai/server/@manolaz/emergency-medicare-planner-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@manolaz_emergency-medicare-planner-mcp-server.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "find_nearby_medical_facilities",
          "description": "Deploy Server Emergency Medicare Management @manolaz/emergency-medicare-planner-mcp-server Try in Playground find_nearby_medical_facilities",
          "parameters": [
            {
              "name": "find_nearby_medical_facilities",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "check_medicare_coverage",
          "description": "Checks what treatments and procedures are covered by Medicare",
          "parameters": [
            {
              "name": "check_medicare_coverage",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_emergency_contacts",
          "description": "Retrieves emergency contact information for a specific location",
          "parameters": [
            {
              "name": "get_emergency_contacts",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "schedule_emergency_transport",
          "description": "Arranges emergency medical transportation",
          "parameters": [
            {
              "name": "schedule_emergency_transport",
              "required": false,
              "type": "string"
            },
            {
              "name": "Arranges",
              "required": false,
              "type": "string"
            },
            {
              "name": "emergency",
              "required": false,
              "type": "string"
            },
            {
              "name": "medical",
              "required": false,
              "type": "string"
            },
            {
              "name": "transportation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "sequentialthinking",
          "description": "A detailed tool for dynamic and reflective medical problem-solving through thoughts. This tool helps analyze medical problems through a flexible thinking process that can adapt and evolve. Each thought can build on, question, or revise previous insights as understanding of the medical situation deepens. When to use this tool: - Breaking down complex medical problems into steps - Planning and designing treatment approaches with room for revision - Clinical analysis that might need course correction - Medical problems where the full scope might not be clear initially - Healthcare decisions that require a multi-step solution - Medical evaluations that need to maintain context over multiple steps - Situations where irrelevant medical information needs to be filtered out Key features: - You can adjust total_thoughts up or down as the diagnosis progresses - You can question or revise previous medical assessments - You can add more diagnostic thoughts as new information emerges - You can express clinical uncertainty and explore alternative approaches - Not every medical assessment needs to build linearly - you can branch or backtrack - Generates a clinical hypothesis - Verifies the hypothesis based on the Chain of Thought steps - Repeats the process until a satisfactory diagnosis or treatment plan is reached - Provides a correct medical assessment or recommendation",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@manolaz/emergency-medicare-planner-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "googleMapsApiKey",
          "required": true,
          "description": "The API key for accessing Google Maps services."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@manolaz/emergency-medicare-planner-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1170.@manolaz_emergency-medicare-planner-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1138
  }
}