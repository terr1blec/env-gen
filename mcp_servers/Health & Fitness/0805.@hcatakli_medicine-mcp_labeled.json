{
  "labels": {
    "analysis": "The Medicine MCP Server is designed to provide medical knowledge and context integration for healthcare-related AI applications. Its core functionality revolves around enabling seamless access to medical data and tools, aiming to enhance decision-making and information retrieval in the medical field. The available tool \"get_medicine_info\" suggests that the server can fetch detailed information about medicines, which is critical for medical professionals, researchers, and AI systems that need to interact with pharmaceutical data.",
    "reasoning": "The primary label \"Health & Fitness\" was chosen because the server's main purpose is to provide medical information and support healthcare decision-making. The \"Education\" label is included as a secondary label because the server can also be used for medical research and learning purposes. The server's focus on standardized medical data indicates strong relevance to health-related tools.",
    "primary_label": "Health & Fitness",
    "secondary_labels": [
      "Education"
    ],
    "custom_label": "Medical Knowledge Integration",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 804,
    "server_name": "Medicine MCP Server",
    "rank_by_usage": 805,
    "usage_count": "7",
    "original_file": "../crawler/smithery/@hcatakli_medicine-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@hcatakli/medicine-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_medicine_info",
          "description": "\n    Get information for a medicine.\n    ",
          "input_schema": {
            "properties": {
              "medicine_name": {
                "title": "Medicine Name",
                "type": "string"
              }
            },
            "required": [
              "medicine_name"
            ],
            "title": "get_medicine_infoArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get_medicine_info"
      ]
    },
    "server_info_crawled": {
      "id": 804,
      "name": "Medicine MCP Server",
      "author": "@hcatakli/medicine-mcp",
      "overview": "Provide medical knowledge and context integration to enhance healthcare-related AI applications. Enable seamless access to medical data and tools for improved decision-making and information retrieval. Facilitate dynamic interaction with medical resources through a standardized protocol.",
      "repository_url": "https://github.com/hcatakli/medicine-mcp",
      "homepage": "https://smithery.ai/server/@hcatakli/medicine-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "7",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@hcatakli_medicine-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_medicine_info",
          "description": "\n    Get information for a medicine.\n    ",
          "input_schema": {
            "properties": {
              "medicine_name": {
                "title": "Medicine Name",
                "type": "string"
              }
            },
            "required": [
              "medicine_name"
            ],
            "title": "get_medicine_infoArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@hcatakli/medicine-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@hcatakli/medicine-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0805.@hcatakli_medicine-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 786
  }
}