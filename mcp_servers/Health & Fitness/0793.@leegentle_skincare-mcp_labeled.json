{
  "labels": {
    "analysis": "The MCP Server is specialized for skincare, with tools that analyze selfie images to provide skincare-related insights. It integrates skincare knowledge into AI-driven environments, facilitating dynamic access to skincare data and tools. The core functionality involves image analysis to support skincare recommendations and enhanced user interactions.",
    "reasoning": "The primary label is \"Health & Fitness\" because the server focuses on skincare, which falls under personal health. The secondary label \"AI/ML Tools\" is included since it involves image analysis, a common AI/ML task. No custom label is needed as the predefined labels adequately cover the server's functionality.",
    "primary_label": "Health & Fitness",
    "secondary_labels": [
      "AI/ML Tools"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 792,
    "server_name": "Skincare",
    "rank_by_usage": 793,
    "usage_count": "7",
    "original_file": "../crawler/smithery/@leegentle_skincare-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@leegentle/skincare-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get-selfie-analysis",
          "description": "이미지URL을 받아 분석 결과를 반환합니다.",
          "input_schema": {
            "type": "object",
            "properties": {
              "imageUrl": {
                "type": "string",
                "description": "분석할 이미지의 URL"
              }
            },
            "required": [
              "imageUrl"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get-selfie-analysis"
      ]
    },
    "server_info_crawled": {
      "id": 792,
      "name": "Skincare",
      "author": "@leegentle/skincare-mcp",
      "overview": "Provide a specialized MCP server that integrates with skincare-related data and tools, enabling enhanced context and actions for LLM applications focused on skincare. Facilitate dynamic access to skincare resources and operations to improve user interactions and workflows. Simplify the integration of skincare knowledge into AI-driven environments.",
      "repository_url": "https://github.com/leegentle/skincare-mcp",
      "homepage": "https://smithery.ai/server/@leegentle/skincare-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "7",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@leegentle_skincare-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get-selfie-analysis",
          "description": "이미지URL을 받아 분석 결과를 반환합니다.",
          "input_schema": {
            "type": "object",
            "properties": {
              "imageUrl": {
                "type": "string",
                "description": "분석할 이미지의 URL"
              }
            },
            "required": [
              "imageUrl"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@leegentle/skincare-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@leegentle/skincare-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0793.@leegentle_skincare-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 775
  }
}