{
  "labels": {
    "analysis": "The MCP Server, Senechal Health, is designed to provide access to and analysis of health data. Its core functionality revolves around fetching health-related metrics, summaries, and profiles. The server primarily serves as a tool for LLM applications to enhance insights related to health data using reusable templates. The available tools allow users to retrieve specific health data over different time periods and formats, making it useful for monitoring, analysis, and reporting health trends.",
    "reasoning": "The primary label is \"Health & Fitness\" because the server is directly related to health data access and analysis. The secondary label \"Data Analysis & Processing\" is relevant due to the server's ability to fetch and summarize health data. The \"Health & Fitness\" label most accurately captures the server's primary use case, while the \"Data Analysis & Processing\" label highlights the additional analytical capabilities it offers.",
    "primary_label": "Health & Fitness",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": "Health Data Integration",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2214,
    "server_name": "Senechal Health",
    "rank_by_usage": 2215,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@mattjoyce_senechal-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@mattjoyce/senechal-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2214,
      "name": "Senechal Health",
      "author": "@mattjoyce/senechal-mcp",
      "overview": "Access and analyze health data seamlessly with our server. Fetch summaries, profiles, and trends to enhance your LLM applications. Empower your insights with reusable templates for health data analysis.",
      "repository_url": "https://github.com/mattjoyce/senechal-mcp",
      "homepage": "https://smithery.ai/server/@mattjoyce/senechal-mcp",
      "remote_or_local": "Remote",
      "license": "GPL-3.0",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@mattjoyce_senechal-mcp.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "fetch_available_metrics",
          "description": "Deploy Server Senechal Health Claim Server @mattjoyce/senechal-mcp Try in Playground fetch_available_metrics",
          "parameters": []
        },
        {
          "name": "fetch_health_summary",
          "description": "Fetch health summary for a specific period.\n    \n    Args:\n        period: The period type (day, week, month, year)\n        metrics: Comma-separated metrics/groups or 'all'\n        span: Number of periods to return (1-52)\n        offset: Number of periods to offset from now\n    \n    Returns:\n        A dictionary containing the health summary data",
          "parameters": []
        },
        {
          "name": "fetch_health_profile",
          "description": "Fetch the user's health profile in markdown format.\n    \n    Returns:\n        A markdown string containing the health profile data",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@mattjoyce/senechal-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "senechalApiKey",
          "required": true,
          "description": "Senechal API Key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@mattjoyce/senechal-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2215.@mattjoyce_senechal-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1910
  }
}