{
  "labels": {
    "analysis": "The MCP Server primarily focuses on accessing and analyzing health and fitness data from Fitbit devices. It provides a suite of tools to retrieve detailed metrics such as activities, sleep logs, heart rate, steps, and body measurements. The server enables seamless integration of Fitbit data into AI interactions, allowing for the enhancement of AI assistants with comprehensive health insights. The tools are designed to query various aspects of a user's fitness and health data, making this server a specialized platform for health and fitness data management.",
    "reasoning": "The primary functionality of the server is closely aligned with health and fitness data access and analysis, which justifies the \"Health & Fitness\" label. The server's tools for retrieving activity, sleep, and physiological data also align with \"Data Analysis & Processing\" as these tools are used to process and analyze health metrics. The integration with AI assistants suggests a \"AI/ML Tools\" label, as the server enables AI assistants to leverage health data for more personalized interactions. No custom label is necessary as the predefined categories sufficiently cover the server's functionality.",
    "primary_label": "Health & Fitness",
    "secondary_labels": [
      "Data Analysis & Processing",
      "AI/ML Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 997,
    "server_name": "Fitbit Health and Fitness Data Access",
    "rank_by_usage": 998,
    "usage_count": "2",
    "original_file": "../crawler/smithery/@NitayRabi_fitbit-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@NitayRabi/fitbit-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 997,
      "name": "Fitbit Health and Fitness Data Access",
      "author": "@NitayRabi/fitbit-mcp",
      "overview": "Enable AI assistants to access and analyze your Fitbit health and fitness data seamlessly. Retrieve detailed information such as activities, sleep logs, heart rate, steps, body measurements, and more with simple commands. Enhance your AI interactions by integrating comprehensive Fitbit data insights.",
      "repository_url": "https://github.com/NitayRabi/fitbit-mcp",
      "homepage": "https://smithery.ai/server/@NitayRabi/fitbit-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "2",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@NitayRabi_fitbit-mcp.json",
      "tools_count": 16,
      "tools": [
        {
          "name": "getUserProfile",
          "description": "Deploy Server Fitbit Health and Fitness Data Access @NitayRabi/fitbit-mcp Try in Playground getUserProfile",
          "parameters": [
            {
              "name": "getUserProfile",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getActivities",
          "description": "Description not available",
          "parameters": [
            {
              "name": "getActivities",
              "required": false,
              "type": "string"
            },
            {
              "name": "date",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getSleepLogs",
          "description": "Description not available",
          "parameters": [
            {
              "name": "getSleepLogs",
              "required": false,
              "type": "string"
            },
            {
              "name": "date",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getHeartRate",
          "description": "Description not available",
          "parameters": [
            {
              "name": "getHeartRate",
              "required": false,
              "type": "string"
            },
            {
              "name": "date",
              "required": false,
              "type": "string"
            },
            {
              "name": "period",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getSteps",
          "description": "Description not available",
          "parameters": [
            {
              "name": "getSteps",
              "required": false,
              "type": "string"
            },
            {
              "name": "date",
              "required": false,
              "type": "string"
            },
            {
              "name": "period",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getBodyMeasurements",
          "description": "Description not available",
          "parameters": [
            {
              "name": "getBodyMeasurements",
              "required": false,
              "type": "string"
            },
            {
              "name": "date",
              "required": false,
              "type": "string"
            },
            {
              "name": "period",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getFoodLogs",
          "description": "Description not available",
          "parameters": [
            {
              "name": "getFoodLogs",
              "required": false,
              "type": "string"
            },
            {
              "name": "date",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getWaterLogs",
          "description": "Description not available",
          "parameters": [
            {
              "name": "getWaterLogs",
              "required": false,
              "type": "string"
            },
            {
              "name": "date",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getLifetimeStats",
          "description": "Description not available",
          "parameters": [
            {
              "name": "getLifetimeStats",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getUserSettings",
          "description": "Description not available",
          "parameters": [
            {
              "name": "getUserSettings",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getFloorsClimbed",
          "description": "Description not available",
          "parameters": [
            {
              "name": "getFloorsClimbed",
              "required": false,
              "type": "string"
            },
            {
              "name": "date",
              "required": false,
              "type": "string"
            },
            {
              "name": "period",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getDistance",
          "description": "Description not available",
          "parameters": [
            {
              "name": "getDistance",
              "required": false,
              "type": "string"
            },
            {
              "name": "date",
              "required": false,
              "type": "string"
            },
            {
              "name": "period",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getCalories",
          "description": "Description not available",
          "parameters": [
            {
              "name": "getCalories",
              "required": false,
              "type": "string"
            },
            {
              "name": "date",
              "required": false,
              "type": "string"
            },
            {
              "name": "period",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getActiveZoneMinutes",
          "description": "Description not available",
          "parameters": [
            {
              "name": "getActiveZoneMinutes",
              "required": false,
              "type": "string"
            },
            {
              "name": "date",
              "required": false,
              "type": "string"
            },
            {
              "name": "period",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getDevices",
          "description": "Description not available",
          "parameters": [
            {
              "name": "getDevices",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getBadges",
          "description": "Description not available",
          "parameters": [
            {
              "name": "getBadges",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@NitayRabi/fitbit-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "fitbitToken",
          "required": true,
          "description": "Fitbit access token obtained from Fitbit Developer portal"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@NitayRabi/fitbit-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0998.@NitayRabi_fitbit-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 976
  }
}