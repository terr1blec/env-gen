{
  "labels": {
    "analysis": "The MCP Server provides tools specifically designed to interact with Data.gov, a popular US government portal for open data. Its core functionality revolves around searching, retrieving, and displaying metadata about government datasets and groups. The available tools focus on dataset discovery and organization, enabling users to explore available public data resources. This server is primarily a gateway to government-created datasets that can be used for analysis, visualization, or application development.",
    "reasoning": "The primary label \"Web Search & Research\" was chosen because the server's main function is to help users search for and retrieve datasets, which is akin to research/information retrieval activities. Secondary labels \"Data Analysis & Processing\" and \"API Integration\" were selected because the retrieved data can be used for analysis, and the tools implicitly interact with Data.gov's API. No custom labels are needed as the predefined categories cover the server's functionality well.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Data Analysis & Processing",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 716,
    "server_name": "Data.gov MCP Server",
    "rank_by_usage": 717,
    "usage_count": "10",
    "original_file": "../crawler/smithery/@melaodoidao_datagov-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@melaodoidao/datagov-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "package_search",
          "description": "Search for packages (datasets) on Data.gov",
          "input_schema": {
            "type": "object",
            "properties": {
              "q": {
                "type": "string",
                "description": "Search query"
              },
              "sort": {
                "type": "string",
                "description": "Sort order (e.g., \"score desc, name asc\")"
              },
              "rows": {
                "type": "number",
                "description": "Number of results per page"
              },
              "start": {
                "type": "number",
                "description": "Starting offset for results"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "package_show",
          "description": "Get details for a specific package (dataset)",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Package ID or name"
              }
            },
            "required": [
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "group_list",
          "description": "List groups on Data.gov",
          "input_schema": {
            "type": "object",
            "properties": {
              "order_by": {
                "type": "string",
                "description": "Field to order by"
              },
              "limit": {
                "type": "number",
                "description": "Maximum number of results"
              },
              "offset": {
                "type": "number",
                "description": "Offset for results"
              },
              "all_fields": {
                "type": "boolean",
                "description": "Return all fields"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "tag_list",
          "description": "List tags on Data.gov",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Search query for tags"
              },
              "all_fields": {
                "type": "boolean",
                "description": "Return all fields"
              }
            }
          },
          "annotations": null
        }
      ],
      "tool_count": 4,
      "tool_names": [
        "package_search",
        "package_show",
        "group_list",
        "tag_list"
      ]
    },
    "server_info_crawled": {
      "id": 716,
      "name": "Data.gov MCP Server",
      "author": "@melaodoidao/datagov-mcp-server",
      "overview": "Access government datasets effortlessly. Utilize tools to search, retrieve, and interact with a wealth of data from Data.gov. Enhance your applications with real-time access to public data resources.",
      "repository_url": "https://github.com/melaodoidao/datagov-mcp-server",
      "homepage": "https://smithery.ai/server/@melaodoidao/datagov-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "10",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@melaodoidao_datagov-mcp-server.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "package_search",
          "description": "Search for packages (datasets) on Data.gov",
          "input_schema": {
            "type": "object",
            "properties": {
              "q": {
                "type": "string",
                "description": "Search query"
              },
              "sort": {
                "type": "string",
                "description": "Sort order (e.g., \"score desc, name asc\")"
              },
              "rows": {
                "type": "number",
                "description": "Number of results per page"
              },
              "start": {
                "type": "number",
                "description": "Starting offset for results"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "package_show",
          "description": "Get details for a specific package (dataset)",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Package ID or name"
              }
            },
            "required": [
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "group_list",
          "description": "List groups on Data.gov",
          "input_schema": {
            "type": "object",
            "properties": {
              "order_by": {
                "type": "string",
                "description": "Field to order by"
              },
              "limit": {
                "type": "number",
                "description": "Maximum number of results"
              },
              "offset": {
                "type": "number",
                "description": "Offset for results"
              },
              "all_fields": {
                "type": "boolean",
                "description": "Return all fields"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "tag_list",
          "description": "List tags on Data.gov",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Search query for tags"
              },
              "all_fields": {
                "type": "boolean",
                "description": "Return all fields"
              }
            }
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@melaodoidao/datagov-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@melaodoidao/datagov-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0717.@melaodoidao_datagov-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 700
  }
}