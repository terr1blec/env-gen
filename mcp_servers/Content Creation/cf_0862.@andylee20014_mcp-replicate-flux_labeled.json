{
  "labels": {
    "analysis": "The MCP Server's primary functionality is centered around AI-powered image generation using Replicate FLUX models. It allows users to create custom image prompts, generate images, and store them securely in the cloud. The available tool specifically indicates it provides access to the FLUX Image Generator, suggesting a focus on AI-driven content creation with cloud storage capabilities.",
    "reasoning": "The primary label \"Content Creation\" was chosen because the server primarily enables users to create and manage AI-generated images, which falls under creative content generation. The secondary label \"Cloud Services\" was added because the server mentions secure cloud storage for the generated images. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "Cloud Services"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 861,
    "server_name": "Replicate FLUX Image Generator",
    "rank_by_usage": 862,
    "usage_count": "5",
    "original_file": "../crawler/smithery/@andylee20014_mcp-replicate-flux.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@andylee20014/mcp-replicate-flux/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 861,
      "name": "Replicate FLUX Image Generator",
      "author": "@andylee20014/mcp-replicate-flux",
      "overview": "Generate images using advanced AI models and store them securely in the cloud. Easily create custom prompts and retrieve accessible image URLs for your projects.",
      "repository_url": "https://github.com/andylee20014/mcp-replicate-flux",
      "homepage": "https://smithery.ai/server/@andylee20014/mcp-replicate-flux",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "5",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@andylee20014_mcp-replicate-flux.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "generate-image",
          "description": "Deploy Server Replicate FLUX Image Generator @andylee20014/mcp-replicate-flux Try in Playground generate-image",
          "parameters": [
            {
              "name": "prompt",
              "required": true,
              "type": "string"
            },
            {
              "name": "filename",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@andylee20014/mcp-replicate-flux/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "storageAccessKey",
          "required": true,
          "description": "Access key for S3 storage"
        },
        {
          "name": "storageSecretKey",
          "required": true,
          "description": "Secret key for S3 storage"
        },
        {
          "name": "replicateApiToken",
          "required": true,
          "description": "Token to authenticate with Replicate API"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@andylee20014/mcp-replicate-flux/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0862.@andylee20014_mcp-replicate-flux_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 843
  }
}