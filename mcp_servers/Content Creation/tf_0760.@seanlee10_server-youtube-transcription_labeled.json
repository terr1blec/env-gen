{
  "labels": {
    "analysis": "The MCP server specializes in transcribing YouTube videos, allowing users to convert video content into textual format. Its core functionality involves extracting and providing transcriptions from YouTube content, which is valuable for content analysis, research, accessibility, or integration into other applications.",
    "reasoning": "The primary label \"Content Creation\" was chosen because the server enables the conversion of video content into text, which is a fundamental part of content creation and repurposing. The secondary label \"Education\" was added since transcriptions are valuable for educational purposes, such as summarizing lectures or creating study materials. No custom label is needed as the functionality is well-covered by the predefined categories.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "Education"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 759,
    "server_name": "YouTube Transcription Server",
    "rank_by_usage": 760,
    "usage_count": "8",
    "original_file": "../crawler/smithery/@seanlee10_server-youtube-transcription.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@seanlee10/server-youtube-transcription/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "youtube_transcription",
          "description": "Extracts transcription from a Youtube video provided by the user",
          "input_schema": {
            "type": "object",
            "properties": {
              "link": {
                "type": "string",
                "description": "Youtube video link"
              }
            },
            "required": [
              "link"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "youtube_transcription"
      ]
    },
    "server_info_crawled": {
      "id": 759,
      "name": "YouTube Transcription Server",
      "author": "@seanlee10/server-youtube-transcription",
      "overview": "Transcribe YouTube videos effortlessly with this server. Leverage the power of MCP to integrate transcription capabilities into your applications. Enhance your projects by adding accurate and fast video transcriptions from YouTube content.",
      "repository_url": "https://github.com/seanlee10/server-youtube-transcription",
      "homepage": "https://smithery.ai/server/@seanlee10/server-youtube-transcription",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "8",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@seanlee10_server-youtube-transcription.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "youtube_transcription",
          "description": "Extracts transcription from a Youtube video provided by the user",
          "input_schema": {
            "type": "object",
            "properties": {
              "link": {
                "type": "string",
                "description": "Youtube video link"
              }
            },
            "required": [
              "link"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@seanlee10/server-youtube-transcription/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@seanlee10/server-youtube-transcription/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0760.@seanlee10_server-youtube-transcription_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 742
  }
}