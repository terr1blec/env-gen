{
  "labels": {
    "analysis": "The MCP Server is primarily focused on automating the creation and manipulation of PowerPoint presentations. It allows users to generate, edit, and style slides with various elements (text, images, charts) through API calls or natural language prompts. It integrates with AI models for complex tasks like natural language to PPT conversion, making it a powerful tool for presentation automation.",
    "reasoning": "The primary label of \"Content Creation\" was chosen because the server's core functionality revolves around generating and editing presentations, which is a form of content creation. The secondary label of \"Development Tools\" was added because it can be used via API calls, suggesting utility for developers. The predefined list does not have a category specifically for presentation automation, so no custom label was deemed necessary.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "Development Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2031,
    "server_name": "PowerPoint Presentation Automation Server",
    "rank_by_usage": 2032,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@1282saa_ppt.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@1282saa/ppt/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "Connection timeout (20 seconds)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2031,
      "name": "PowerPoint Presentation Automation Server",
      "author": "@1282saa/ppt",
      "overview": "Automate the creation and manipulation of PowerPoint presentations using a server that supports the Model Context Protocol. Generate, edit, and style slides with text, images, charts, and more through simple API calls or natural language prompts. Integrate seamlessly with AI models like Claude for natural language to PPT conversion and customize presentation styles to fit your needs.",
      "repository_url": "https://github.com/1282saa/ppt",
      "homepage": "https://smithery.ai/server/@1282saa/ppt",
      "remote_or_local": "Remote",
      "license": "Not specified",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@1282saa_ppt.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "Optional Settings",
          "description": "Access and manage servers by signing in.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@1282saa/ppt/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@1282saa/ppt/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2032.@1282saa_ppt_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1772
  }
}