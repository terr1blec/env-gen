{
  "labels": {
    "analysis": "The MCP Server is focused on enabling AI agents to generate music and audio content through the MiniMax Music API. Its primary functionality revolves around text-to-audio generation, allowing for high-quality musical output based on prompts. The server integrates with MCP hosts like Claude Desktop and provides features such as status checking, reference audio support, detailed error handling, and environment variable configuration for API keys. The key tools available include generating audio, indicating a specialized focus on music and audio creation.",
    "reasoning": "The primary label is \"Content Creation\" because the server's core function is generating music (audio content), which aligns with creating media. The secondary label \"AI/ML Tools\" is relevant as the server leverages AI for music generation, and \"API Integration\" is also appropriate because it provides seamless integration with external APIs. There is no unique functionality requiring a custom label.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "AI/ML Tools",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1752,
    "server_name": "MiniMax Music Server",
    "rank_by_usage": 1753,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@falahgs_mcp-minimax-music-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@falahgs/mcp-minimax-music-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1752,
      "name": "MiniMax Music Server",
      "author": "@falahgs/mcp-minimax-music-server",
      "overview": "Enable AI agents to generate music and audio content using the MiniMax Music API through a seamless integration with MCP hosts like Claude Desktop. Generate high-quality musical output based on text prompts with support for status checking and reference audio. Simplify AI-powered audio creation with detailed error handling and environment variable support for API keys.",
      "repository_url": "https://github.com/falahgs/mcp-minimax-music-server",
      "homepage": "https://smithery.ai/server/@falahgs/mcp-minimax-music-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@falahgs_mcp-minimax-music-server.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "generate_audio",
          "description": "Deploy Server MiniMax Music Server @falahgs/mcp-minimax-music-server Try in Playground generate_audio",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@falahgs/mcp-minimax-music-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "aimlApiKey",
          "required": true,
          "description": "Your AIML API key with Bearer prefix, e.g. 'Bearer xxx'"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@falahgs/mcp-minimax-music-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1753.@falahgs_mcp-minimax-music-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1570
  }
}