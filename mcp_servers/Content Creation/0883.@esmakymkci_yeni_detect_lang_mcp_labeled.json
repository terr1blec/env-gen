{
  "labels": {
    "analysis": "The MCP Server's core functionality is to detect the language of given text inputs. This is primarily used to enhance multilingual support, improve user experience, and facilitate downstream language-specific operations. The \"detect\" tool is the sole available tool, which directly performs language detection on input text. This functionality is crucial for applications requiring automatic language identification, such as content processing systems, translation services, or multilingual platforms.",
    "reasoning": "The primary label is \"Content Creation\" because language detection is often used in the preprocessing stages of text-based content creation, editing, and publishing, where understanding the language is essential. The secondary label is \"Web Search & Research\" because language detection can be used in information gathering and academic research tools to filter or categorize multilingual content. A custom label \"Language Processing\" is added to highlight the specific task of language identification, which is not adequately covered by existing categories.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "Web Search & Research"
    ],
    "custom_label": "Language Processing",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 882,
    "server_name": "Language Detection Server",
    "rank_by_usage": 883,
    "usage_count": "4",
    "original_file": "../crawler/smithery/@esmakymkci_yeni_detect_lang_mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@esmakymkci/yeni_detect_lang_mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "detect",
          "description": "\n    MCP Tool: Detect language of the input text.\n    ",
          "input_schema": {
            "properties": {
              "text": {
                "title": "Text",
                "type": "string"
              }
            },
            "required": [
              "text"
            ],
            "title": "detectArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "detect"
      ]
    },
    "server_info_crawled": {
      "id": 882,
      "name": "Language Detection Server",
      "author": "@esmakymkci/yeni_detect_lang_mcp",
      "overview": "Detect the language of given text inputs to enhance multilingual support and content processing. Provide accurate language identification to improve user experience and downstream language-specific operations. Integrate seamlessly with applications requiring automatic language detection capabilities.",
      "repository_url": "https://github.com/esmakymkci/yeni_Detect_lang_mcp",
      "homepage": "https://smithery.ai/server/@esmakymkci/yeni_detect_lang_mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "4",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@esmakymkci_yeni_detect_lang_mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "detect",
          "description": "\n    MCP Tool: Detect language of the input text.\n    ",
          "input_schema": {
            "properties": {
              "text": {
                "title": "Text",
                "type": "string"
              }
            },
            "required": [
              "text"
            ],
            "title": "detectArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@esmakymkci/yeni_detect_lang_mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@esmakymkci/yeni_detect_lang_mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0883.@esmakymkci_yeni_detect_lang_mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 864
  }
}