{
  "labels": {
    "analysis": "The MCP Server is specialized for managing Elementor content within WordPress. Its core functionality revolves around CRUD (Create, Read, Update, Delete) operations for Elementor-built pages, enabling programmatic control over page data including metadata. The server allows for seamless integration between a developer's workflow and WordPress sites using Elementor, facilitating tasks such as page retrieval, modification, and deletion.",
    "reasoning": "The primary label \"Content Management\" is chosen because the server's main purpose is to manage dynamic content within WordPress using Elementor. Since \"Content Management\" is not a predefined category, a custom label is created. \"API Integration\" is a secondary label as the server provides endpoints for interacting with WordPress. \"WordPress Tools\" is another secondary label as the server is specifically built for WordPress integration.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "API Integration",
      "News & Media"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 220,
    "server_name": "Elementor MCP Server",
    "rank_by_usage": 221,
    "usage_count": "202",
    "original_file": "../crawler/smithery/@aguaitech_Elementor-MCP.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@aguaitech/Elementor-MCP/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 220,
      "name": "Elementor MCP Server",
      "author": "@aguaitech/Elementor-MCP",
      "overview": "Perform CRUD operations on Elementor page data seamlessly. Integrate with your WordPress site to manage Elementor content programmatically. Simplify Elementor project workflows with this dedicated MCP server.",
      "repository_url": "https://github.com/aguaitech/Elementor-MCP",
      "homepage": "https://smithery.ai/server/@aguaitech/Elementor-MCP",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "202",
      "success_rate": "97.08%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@aguaitech_Elementor-MCP.json",
      "tools_count": 7,
      "tools": [
        {
          "name": "create_page",
          "description": "Deploy Server Elementor MCP Server Claim Server @aguaitech/Elementor-MCP Try in Playground create_page",
          "parameters": [
            {
              "name": "create_page",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_page",
          "description": "Retrieves a specific page from WordPress by its ID, including meta fields like _elementor_data.",
          "parameters": [
            {
              "name": "get_page",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "download_page_to_file",
          "description": "Downloads a specific page from WordPress by its ID, including meta fields like _elementor_data, and saves it to a file.",
          "parameters": [
            {
              "name": "pageId",
              "required": true,
              "type": "string"
            },
            {
              "name": "filePath",
              "required": true,
              "type": "string"
            },
            {
              "name": "onlyElementorData",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_page",
          "description": "Updates an existing page in WordPress with Elementor data, it will return a boolean value to indicate if the update was successful.",
          "parameters": [
            {
              "name": "update_page",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_page_from_file",
          "description": "Updates an existing page in WordPress with Elementor data from a file, it will return a boolean value to indicate if the update was successful.",
          "parameters": [
            {
              "name": "update_page_from_file",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_page",
          "description": "Deletes a specific page from WordPress, it will return a boolean value to indicate if the deletion was successful.",
          "parameters": [
            {
              "name": "delete_page",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_page_id_by_slug",
          "description": "Retrieves the ID of a specific WordPress page by its slug.",
          "parameters": [
            {
              "name": "get_page_id_by_slug",
              "required": false,
              "type": "string"
            },
            {
              "name": "slug",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@aguaitech/Elementor-MCP/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@aguaitech/Elementor-MCP/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0221.@aguaitech_Elementor-MCP_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 217
  }
}