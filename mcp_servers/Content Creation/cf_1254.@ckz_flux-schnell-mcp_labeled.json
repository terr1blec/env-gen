{
  "labels": {
    "analysis": "The MCP Server \"Flux Schnell\" is primarily focused on generating AI-powered images from text prompts using the Replicate API. It simplifies the process of creating visuals by allowing users to input detailed descriptions and automatically produce unique images. The core functionality revolves around AI-generated content creation, specifically in the realm of visual media.",
    "reasoning": "The primary label \"Content Creation\" is chosen because the server's main purpose is to generate images, which is a form of content creation. While it uses AI/ML technology, the \"Content Creation\" label better reflects the end-user functionality. There are no secondary labels needed as the server's functionality is narrowly focused on image generation. No custom label is necessary as the predefined categories adequately cover its purpose.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "AI/ML Tools",
      "Content Creation"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1253,
    "server_name": "Flux Schnell",
    "rank_by_usage": 1254,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@ckz_flux-schnell-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ckz/flux-schnell-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1253,
      "name": "Flux Schnell",
      "author": "@ckz/flux-schnell-mcp",
      "overview": "Generate stunning images from text prompts using the Replicate API. Leverage the power of AI to create unique visuals tailored to your specifications. Simply provide a detailed description and let the server handle the rest.",
      "repository_url": "https://github.com/ckz/flux-schnell-mcp",
      "homepage": "https://smithery.ai/server/@ckz/flux-schnell-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ckz_flux-schnell-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "generate_image",
          "description": "Deploy Server Flux Schnell Claim Server @ckz/flux-schnell-mcp Try in Playground generate_image",
          "parameters": [
            {
              "name": "generate_image",
              "required": false,
              "type": "string"
            },
            {
              "name": "prompt",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ckz/flux-schnell-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "replicateApiToken",
          "required": true,
          "description": "Your Replicate API token (e.g., r8_xxxx) to authenticate API requests"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ckz/flux-schnell-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1254.@ckz_flux-schnell-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1199
  }
}