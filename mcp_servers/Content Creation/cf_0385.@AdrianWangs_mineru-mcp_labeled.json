{
  "labels": {
    "analysis": "The MCP Server specializes in converting various document formats (PDFs, presentations, images) into Markdown files, with optional OCR support for text extraction from images. It supports batch processing and can operate either via a remote MinerU API or locally for privacy-sensitive or offline use cases. The primary use cases involve document extraction, format conversion, and text processing.",
    "reasoning": "The primary functionality revolves around document processing and conversion, which aligns with \"Content Creation\" due to its focus on transforming documents into editable Markdown format. The optional OCR support also suggests utility in \"Data Analysis & Processing\" for extracting text from unstructured sources. The batch processing capability further reinforces its use in \"File Management.\"",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "Data Analysis & Processing",
      "File Management"
    ],
    "custom_label": "Document Format Conversion",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 384,
    "server_name": "MinerU Document Conversion Server",
    "rank_by_usage": 385,
    "usage_count": "67",
    "original_file": "../crawler/smithery/@AdrianWangs_mineru-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@AdrianWangs/mineru-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 384,
      "name": "MinerU Document Conversion Server",
      "author": "@AdrianWangs/mineru-mcp",
      "overview": "Convert various document formats including PDFs, presentations, and images into Markdown files with optional OCR support. Process multiple documents in batch, leveraging either remote MinerU API or local parsing for privacy-sensitive or offline scenarios. Integrate seamlessly with MCP clients to automate document extraction and conversion workflows.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@AdrianWangs/mineru-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "67",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@AdrianWangs_mineru-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "parse_documents",
          "description": "Deploy Server MinerU Document Conversion Server @AdrianWangs/mineru-mcp Try in Playground parse_documents",
          "parameters": []
        },
        {
          "name": "get_ocr_languages",
          "description": "获取 OCR 支持的语言列表。\n\n    Returns:\n        Dict[str, Any]: 包含所有支持的OCR语言列表的字典",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@AdrianWangs/mineru-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "mineruApiKey",
          "required": true,
          "description": "Your MinerU API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@AdrianWangs/mineru-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0385.@AdrianWangs_mineru-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 379
  }
}