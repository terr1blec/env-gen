{
  "labels": {
    "analysis": "The MCP Server described is designed to integrate Disney app data and tools with language models to enhance user interactions and automate workflows. Its core functionality includes providing dynamic access to Disney-related resources and actions through a standardized protocol, facilitating interaction with Disney app services. The available tool, **get_character_info**, demonstrates its ability to retrieve specific information about Disney characters, indicating a focus on accessing entertainment-related data.",
    "reasoning": "The primary functionality of the server aligns closely with **Entertainment** and **Content Aggregation**, but since these are not predefined categories, the next best fit is **Content Creation** due to its role in accessing and delivering Disney-related content. Additionally, **Communication Tools** is selected as a secondary label because the server facilitates communication between LLM clients and Disney app services. **Custom Label** is added to emphasize its specificity to Disney content.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "Communication Tools",
      "Data Analysis & Processing"
    ],
    "custom_label": "Disney Content Integration",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 901,
    "server_name": "Disney App MCP Server",
    "rank_by_usage": 902,
    "usage_count": "4",
    "original_file": "../crawler/smithery/@hcatakli_disney-app.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@hcatakli/disney-app/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_character_info",
          "description": "\n    get information about a Disney character by name.\n    ",
          "input_schema": {
            "properties": {
              "medicine_name": {
                "title": "Medicine Name",
                "type": "string"
              }
            },
            "required": [
              "medicine_name"
            ],
            "title": "get_character_infoArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get_character_info"
      ]
    },
    "server_info_crawled": {
      "id": 901,
      "name": "Disney App MCP Server",
      "author": "@hcatakli/disney-app",
      "overview": "Provide seamless integration of Disney app data and tools with language models to enhance user interactions and automate workflows. Enable dynamic access to Disney-related resources and actions through a standardized protocol. Facilitate efficient and secure communication between LLM clients and Disney app services.",
      "repository_url": "https://github.com/hcatakli/disney-app",
      "homepage": "https://smithery.ai/server/@hcatakli/disney-app",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "4",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@hcatakli_disney-app.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_character_info",
          "description": "\n    get information about a Disney character by name.\n    ",
          "input_schema": {
            "properties": {
              "medicine_name": {
                "title": "Medicine Name",
                "type": "string"
              }
            },
            "required": [
              "medicine_name"
            ],
            "title": "get_character_infoArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@hcatakli/disney-app/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@hcatakli/disney-app/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0902.@hcatakli_disney-app_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 883
  }
}