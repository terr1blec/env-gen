{
  "labels": {
    "analysis": "The MCP Server is specifically designed for integrating and managing Spotify functionalities through programmatic interactions. Its core tools allow users to control playback, search for music, manage playlists, and retrieve detailed information about Spotify items. This server enhances the audio experience by enabling seamless Spotify interactions directly from applications, making it highly useful for music enthusiasts, developers, and integrators who want to incorporate Spotify features into their workflows.",
    "reasoning": "The primary functionality of this server revolves around interacting with Spotify's API and managing media playback, which falls under \"Media Management\" and \"Content Creation\". The server does not fit into broader categories like \"Entertainment\" or \"Music Streaming\" because those are too generic and not among the predefined labels. The custom label \"Music API Integration\" is more specific to its unique functionality.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "Browser Automation"
    ],
    "custom_label": "Music API Integration",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1976,
    "server_name": "Spotify Integration",
    "rank_by_usage": 1977,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@g2dgaming_spotify-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@g2dgaming/spotify-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1976,
      "name": "Spotify Integration",
      "author": "@g2dgaming/spotify-mcp",
      "overview": "Connect your Claude agents with Spotify to control playback, search for music, and manage your playlists seamlessly. Enhance your audio experience by utilizing powerful commands to interact with Spotify's features directly from your applications.",
      "repository_url": "https://github.com/g2dgaming/spotify-mcp",
      "homepage": "https://smithery.ai/server/@g2dgaming/spotify-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@g2dgaming_spotify-mcp.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "SpotifyPlayback",
          "description": "Deploy Server Spotify Integration @g2dgaming/spotify-mcp Try in Playground SpotifyPlayback",
          "parameters": []
        },
        {
          "name": "SpotifySearch",
          "description": "Search for tracks, albums, artists, or playlists on Spotify.",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "qtype",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "SpotifyQueue",
          "description": "Manage the playback queue - get the queue or add tracks.",
          "parameters": [
            {
              "name": "action",
              "required": true,
              "type": "string"
            },
            {
              "name": "track_id",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "SpotifyGetInfo",
          "description": "Get detailed information about a Spotify item (track, album, artist, or playlist).",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@g2dgaming/spotify-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "spotifyClientSecret",
          "required": true,
          "description": "Spotify API Client Secret"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@g2dgaming/spotify-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1977.@g2dgaming_spotify-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1729
  }
}