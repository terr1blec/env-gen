{
  "labels": {
    "analysis": "The HeyBeauty Virtual TryOn Server is designed to facilitate virtual try-on experiences for clothing and other wearables by integrating with the HeyBeauty API. It provides specialized tools to submit and query try-on tasks, allowing users to simulate how different items will look on virtual models or users. The core functionality revolves around enhancing applications with realistic virtual try-on capabilities, suggesting a focus on visualization, simulation, and fashion-based interactivity.",
    "reasoning": "The primary label \"Content Creation\" was chosen because the server enables realistic virtual try-on experiences that can be integrated into applications, effectively creating visual content or simulations. The secondary label \"AI/ML Tools\" is relevant due to the structured prompts and LLM interactions necessary for realistic simulations. The custom label \"Fashion & Beauty Simulation\" was added to capture the server's unique focus on virtual try-on experiences in the fashion and beauty domain.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "AI/ML Tools"
    ],
    "custom_label": "Fashion & Beauty Simulation",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2318,
    "server_name": "HeyBeauty Virtual TryOn Server",
    "rank_by_usage": 2319,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@chatmcp_heybeauty-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@chatmcp/heybeauty-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2318,
      "name": "HeyBeauty Virtual TryOn Server",
      "author": "@chatmcp/heybeauty-mcp",
      "overview": "Enable virtual try-on experiences by integrating with HeyBeauty API. Access a curated collection of clothes as resources, submit and query try-on tasks via tools, and utilize structured prompts for seamless LLM interactions. Enhance your applications with realistic virtual try-on capabilities using this MCP server.",
      "repository_url": "https://github.com/chatmcp/heybeauty-mcp",
      "homepage": "https://smithery.ai/server/@chatmcp/heybeauty-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@chatmcp_heybeauty-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "submit_tryon_task",
          "description": "Deploy Server HeyBeauty Virtual TryOn Server Claim Server @chatmcp/heybeauty-mcp Try in Playground submit_tryon_task",
          "parameters": []
        },
        {
          "name": "query_tryon_task",
          "description": "Query a tryon task with task id",
          "parameters": [
            {
              "name": "query_tryon_task",
              "required": false,
              "type": "string"
            },
            {
              "name": "task_id",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@chatmcp/heybeauty-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "heybeautyApiKey",
          "required": true,
          "description": "HeyBeauty API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@chatmcp/heybeauty-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2319.@chatmcp_heybeauty-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1994
  }
}