{
  "labels": {
    "analysis": "The MCP Dictionary Server is designed to provide word definitions and examples by interfacing with the Cambridge Dictionary. Its core functionality revolves around language and word lookup, enabling users to quickly retrieve semantic information. The available tool, \"lookup_word\", suggests a focus on fetching dictionary entries, which can be integrated into command-line environments or AI assistants to enhance language comprehension or processing tasks.",
    "reasoning": "The primary label \"Content Creation\" is chosen because the server aids in writing, editing, and media generation by providing precise word meanings and context. As a secondary label, \"Education\" is applicable as it supports learning and linguistic study. The predefined labels sufficiently cover the server's functionality, so no custom label is needed.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "Education"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1545,
    "server_name": "Dictionary Server",
    "rank_by_usage": 1546,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@meowrain_mcp-server-cambridge-dict.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@meowrain/mcp-server-cambridge-dict/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "lookup_word",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "word": {
                "type": "string",
                "minLength": 1,
                "description": "The word to look up"
              }
            },
            "required": [
              "word"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "lookup_word"
      ]
    },
    "server_info_crawled": {
      "id": 1545,
      "name": "Dictionary Server",
      "author": "@meowrain/mcp-server-cambridge-dict",
      "overview": "Retrieve word meanings seamlessly from the Cambridge Dictionary. Enhance your AI assistants with robust dictionary query tools through the MCP protocol. Integrate effortlessly into your command line for quick access to definitions and examples.",
      "repository_url": "https://github.com/meowrain/mcp-server-cambridge-dict",
      "homepage": "https://smithery.ai/server/@meowrain/mcp-server-cambridge-dict",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@meowrain_mcp-server-cambridge-dict.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "lookup_word",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "word": {
                "type": "string",
                "minLength": 1,
                "description": "The word to look up"
              }
            },
            "required": [
              "word"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@meowrain/mcp-server-cambridge-dict/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@meowrain/mcp-server-cambridge-dict/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1546.@meowrain_mcp-server-cambridge-dict_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1418
  }
}