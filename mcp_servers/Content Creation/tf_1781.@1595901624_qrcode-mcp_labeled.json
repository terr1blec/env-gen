{
  "labels": {
    "analysis": "The MCP Server QRCode_MCP is designed to generate simple QR codes with customizable styles. The primary tool available is \"qrcode,\" which allows users to create QR code images. This functionality is useful for encoding data into scannable formats, commonly used for URLs, contact information, Wi-Fi credentials, and more.",
    "reasoning": "The primary label is \"Content Creation\" because generating QR codes is primarily a task related to creating visual content that conveys information. Secondary labels like \"Web Search & Research\" and \"Daily Productivity\" could apply if the QR codes are used to link to research materials or help in organizing information. However, these are less central to the core functionality of QR code generation.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "Web Search & Research",
      "Daily Productivity"
    ],
    "custom_label": "QR Code Generation",
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1780,
    "server_name": "QRCode_MCP",
    "rank_by_usage": 1781,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@1595901624_qrcode-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@1595901624/qrcode-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "qrcode",
          "description": "Generate a QR code image",
          "input_schema": {
            "type": "object",
            "properties": {
              "text": {
                "type": "string",
                "description": "The input string to generate qrcode"
              },
              "size": {
                "type": "number",
                "description": "The size of qrcode, default is 256",
                "default": 256
              },
              "darkColor": {
                "type": "string",
                "description": "The dark color of qrcode, default is #000000",
                "default": "#000000"
              },
              "lightColor": {
                "type": "string",
                "description": "The light color of qrcode, default is #ffffff",
                "default": "#ffffff"
              },
              "errorCorrectionLevel": {
                "type": "string",
                "enum": [
                  "L",
                  "M",
                  "Q",
                  "H"
                ],
                "description": "The error correction level of qrcode, default is M",
                "default": "M"
              },
              "margin": {
                "type": "number",
                "description": "The margin of qrcode, default is 4",
                "default": 4
              }
            },
            "required": [
              "text"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "qrcode"
      ]
    },
    "server_info_crawled": {
      "id": 1780,
      "name": "QRCode_MCP",
      "author": "@1595901624/qrcode-mcp",
      "overview": "Generate simple QR codes with customizable styles.",
      "repository_url": "https://github.com/1595901624/qrcode-mcp",
      "homepage": "https://smithery.ai/server/@1595901624/qrcode-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@1595901624_qrcode-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "qrcode",
          "description": "Generate a QR code image",
          "input_schema": {
            "type": "object",
            "properties": {
              "text": {
                "type": "string",
                "description": "The input string to generate qrcode"
              },
              "size": {
                "type": "number",
                "description": "The size of qrcode, default is 256",
                "default": 256
              },
              "darkColor": {
                "type": "string",
                "description": "The dark color of qrcode, default is #000000",
                "default": "#000000"
              },
              "lightColor": {
                "type": "string",
                "description": "The light color of qrcode, default is #ffffff",
                "default": "#ffffff"
              },
              "errorCorrectionLevel": {
                "type": "string",
                "enum": [
                  "L",
                  "M",
                  "Q",
                  "H"
                ],
                "description": "The error correction level of qrcode, default is M",
                "default": "M"
              },
              "margin": {
                "type": "number",
                "description": "The margin of qrcode, default is 4",
                "default": 4
              }
            },
            "required": [
              "text"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@1595901624/qrcode-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@1595901624/qrcode-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1781.@1595901624_qrcode-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1589
  }
}