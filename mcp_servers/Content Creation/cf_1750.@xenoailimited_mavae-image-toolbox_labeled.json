{
  "labels": {
    "analysis": "The MCP Server \"Mavae Image Toolbox\" is primarily focused on image media tools, offering functionalities such as image generation, editing, and management. It allows users to generate images using various models and LoRAs, manage image collections, and perform basic image editing operations like compression, cropping, and resizing. Additionally, it includes features for tokenizing images into NFTs on the blockchain, indicating integration with Web3 technologies. The server aims to provide a comprehensive suite of tools for handling image-related operations, from creation to storage and Web3 tokenization.",
    "reasoning": "The primary label \"Content Creation\" is chosen because the server's core functionality revolves around generating and editing images, which are fundamental to content creation. \"Web3 & Blockchain\" is selected as a secondary label due to the presence of tools for tokenizing images into NFTs. Another relevant secondary label is \"File Management\" since the server handles image files, including operations like compression, cropping, and resizing. No custom label is needed as the predefined categories adequately cover the server's functionalities.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "Cryptocurrency & Blockchain",
      "File Management"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1749,
    "server_name": "Mavae Image Toolbox",
    "rank_by_usage": 1750,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@xenoailimited_mavae-image-toolbox.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@xenoailimited/mavae-image-toolbox/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1749,
      "name": "Mavae Image Toolbox",
      "author": "@xenoailimited/mavae-image-toolbox",
      "overview": "MAVAE IMAGE TOOLBOX is a Model Context Protocol (MCP) server for interacting with image media tools. ðŸš€ Image Generation | ðŸš€ Image Editing | ðŸš€ Collection Management | ðŸš€ Model & Lora Management",
      "repository_url": "https://github.com/xenoailimited/mcp-mavae",
      "homepage": "https://smithery.ai/server/@xenoailimited/mavae-image-toolbox",
      "remote_or_local": "Remote",
      "license": "@xenoailimited/mavae-image-toolbox",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@xenoailimited_mavae-image-toolbox.json",
      "tools_count": 19,
      "tools": [
        {
          "name": "image_raw_generate",
          "description": "Deploy Server Mavae Image Toolbox @xenoailimited/mavae-image-toolbox Try in Playground image_raw_generate",
          "parameters": [
            {
              "name": "image_raw_generate",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "image_collection_generate",
          "description": "Generate an image using a collection's AIGC configuration. You need to first check the collection details to understand its variables so you can call it correctly. Usually, check the generation status 10 seconds after starting the image generation to allow sufficient time for the process.",
          "parameters": [
            {
              "name": "image_collection_generate",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "image_retry_generate",
          "description": "Retry a failed image generation. Usually, check the generation status 10 seconds after starting the image generation to allow sufficient time for the process.",
          "parameters": [
            {
              "name": "image_retry_generate",
              "required": false,
              "type": "string"
            },
            {
              "name": "image_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "image_state",
          "description": "Get the details of an owned image.",
          "parameters": [
            {
              "name": "image_state",
              "required": false,
              "type": "string"
            },
            {
              "name": "image_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_images",
          "description": "Get the list of owned images.",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "page_size",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "generate_task_state",
          "description": "Get the generation state of an image by task id. Usually, check the generation status 10 seconds after starting the image generation to allow sufficient time for the process.",
          "parameters": [
            {
              "name": "generate_task_state",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_loras",
          "description": "Get the list of available loras.",
          "parameters": [
            {
              "name": "list_loras",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_models",
          "description": "Get the list of available models.",
          "parameters": [
            {
              "name": "list_models",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "collection_create",
          "description": "Create a new collection.",
          "parameters": [
            {
              "name": "collection_create",
              "required": false,
              "type": "string"
            },
            {
              "name": "Create",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "new",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "collection_delete",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "collection_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "collection_name",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "collection_toggle_public",
          "description": "Toggle the public status of a collection.",
          "parameters": [
            {
              "name": "collection_toggle_public",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "collection_list",
          "description": "Get the list of owned collections.",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "page_size",
              "required": false,
              "type": "string"
            },
            {
              "name": "collection_name",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "collection_state",
          "description": "Get the details of an owned collection.",
          "parameters": [
            {
              "name": "collection_state",
              "required": false,
              "type": "string"
            },
            {
              "name": "collection_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "token_state",
          "description": "Get the x-api-token state.",
          "parameters": [
            {
              "name": "token_state",
              "required": false,
              "type": "string"
            },
            {
              "name": "Get",
              "required": false,
              "type": "string"
            },
            {
              "name": "the",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "compress_image",
          "description": "Lossless compression of images (PNG, JPEG, WebP, GIF), support for local paths and URLs.",
          "parameters": [
            {
              "name": "compress_image",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "crop_image",
          "description": "Crop images (PNG, JPEG, WebP, GIF) with local path and URL support",
          "parameters": [
            {
              "name": "crop_image",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "web3_image_tokenization",
          "description": "Tokenize images to become NFT (Non-Fungible Token) on the blockchain.",
          "parameters": [
            {
              "name": "web3_image_tokenization",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "web3_job_state",
          "description": "Get the state of a job by job id.",
          "parameters": [
            {
              "name": "job_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "job_type",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "resize_image",
          "description": "Resize images with proportional or fixed dimensions, supports local paths and URLs.",
          "parameters": [
            {
              "name": "resize_image",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@xenoailimited/mavae-image-toolbox/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "MAVAE_API_KEY",
          "required": true,
          "description": "The API token for the MAVAE server."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@xenoailimited/mavae-image-toolbox/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1750.@xenoailimited_mavae-image-toolbox_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1568
  }
}