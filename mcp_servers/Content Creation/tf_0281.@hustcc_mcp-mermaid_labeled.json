{
  "labels": {
    "analysis": "The MCP Server specializes in generating Mermaid diagrams and charts through AI-assisted tools. Its core functionality revolves around creating visual representations, including diagrams and charts, from Mermaid syntax, with options to customize styles and export in various formats. The tool is designed to assist in documentation by generating accurate, Markdown-inspired visualizations dynamically. The primary problem it solves is simplifying the creation and modification of complex diagrams, especially in development and documentation workflows.",
    "reasoning": "The primary label \"Content Creation\" was chosen because the server's main purpose is to create and customize visual diagrams and charts, which aligns closely with content generation. The secondary label \"Development Tools\" was added because Mermaid diagrams are heavily used in software development and technical documentation, making it relevant for developers. The custom label \"Diagramming & Visualization\" was included because the server's functionality is specifically centered around generating diagrams, which is a more precise description than the broader predefined categories.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "Development Tools"
    ],
    "custom_label": "Diagramming & Visualization",
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 280,
    "server_name": "Mermaid Diagram Generator",
    "rank_by_usage": 281,
    "usage_count": "132",
    "original_file": "../crawler/smithery/@hustcc_mcp-mermaid.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@hustcc/mcp-mermaid/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "generate_mermaid_diagram",
          "description": "Generate mermaid diagram and chart with mermaid syntax dynamically. Mermaid is a JavaScript based diagramming and charting tool that uses Markdown-inspired text definitions and a renderer to create and modify complex diagrams. The main purpose of Mermaid is to help documentation catch up with development.",
          "input_schema": {
            "type": "object",
            "properties": {
              "mermaid": {
                "type": "string",
                "minLength": 1,
                "description": "The mermaid diagram syntax used to be generated, such as, graph TD;\nA-->B;\nA-->C;\nB-->D;\nC-->D;."
              },
              "theme": {
                "type": "string",
                "enum": [
                  "default",
                  "base",
                  "forest",
                  "dark",
                  "neutral"
                ],
                "description": "Theme for the diagram (optional). Default is 'default'.",
                "default": "default"
              },
              "backgroundColor": {
                "type": "string",
                "description": "Background color for the diagram (optional). Default is 'white'.",
                "default": "white"
              },
              "outputType": {
                "type": "string",
                "enum": [
                  "png",
                  "svg",
                  "mermaid"
                ],
                "description": "The output type of the diagram. Can be 'png', 'svg' or 'mermaid'. Default is 'png'.",
                "default": "png"
              }
            },
            "required": [
              "mermaid"
            ],
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "generate_mermaid_diagram"
      ]
    },
    "server_info_crawled": {
      "id": 280,
      "name": "Mermaid Diagram Generator",
      "author": "@hustcc/mcp-mermaid",
      "overview": "Generate dynamic Mermaid diagrams and charts with AI assistance. Customize styles and export diagrams in multiple formats including PNG, SVG, and Mermaid syntax. Ensure valid Mermaid syntax for multi-round AI interactions to produce accurate visualizations.",
      "repository_url": "https://github.com/hustcc/mcp-mermaid",
      "homepage": "https://smithery.ai/server/@hustcc/mcp-mermaid",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "132",
      "success_rate": "30.65%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@hustcc_mcp-mermaid.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "generate_mermaid_diagram",
          "description": "Generate mermaid diagram and chart with mermaid syntax dynamically. Mermaid is a JavaScript based diagramming and charting tool that uses Markdown-inspired text definitions and a renderer to create and modify complex diagrams. The main purpose of Mermaid is to help documentation catch up with development.",
          "input_schema": {
            "type": "object",
            "properties": {
              "mermaid": {
                "type": "string",
                "minLength": 1,
                "description": "The mermaid diagram syntax used to be generated, such as, graph TD;\nA-->B;\nA-->C;\nB-->D;\nC-->D;."
              },
              "theme": {
                "type": "string",
                "enum": [
                  "default",
                  "base",
                  "forest",
                  "dark",
                  "neutral"
                ],
                "description": "Theme for the diagram (optional). Default is 'default'.",
                "default": "default"
              },
              "backgroundColor": {
                "type": "string",
                "description": "Background color for the diagram (optional). Default is 'white'.",
                "default": "white"
              },
              "outputType": {
                "type": "string",
                "enum": [
                  "png",
                  "svg",
                  "mermaid"
                ],
                "description": "The output type of the diagram. Can be 'png', 'svg' or 'mermaid'. Default is 'png'.",
                "default": "png"
              }
            },
            "required": [
              "mermaid"
            ],
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@hustcc/mcp-mermaid/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@hustcc/mcp-mermaid/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0281.@hustcc_mcp-mermaid_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 277
  }
}