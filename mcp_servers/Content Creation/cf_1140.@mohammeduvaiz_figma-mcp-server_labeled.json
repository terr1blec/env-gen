{
  "labels": {
    "analysis": "The MCP Server is designed to facilitate AI-powered interactions with Figma design files, enabling users to extract and analyze design data. It provides tools for retrieving various elements from Figma (nodes, components, styles, comments, text) and allows searching within the design files. This serves design and development workflows by automating documentation, improving consistency, and streamlining handoff processes between designers and developers.",
    "reasoning": "The primary functionality revolves around extract, search, and analyze data from design files, which fits well under the \"Content Creation\" category due to its focus on managing and generating design documentation. The \"API Integration\" is a secondary label because it connects to Figma's API, and \"Design Tools\" (as a custom label) highlights its specialized functionality for design workflows.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": "Design Tools",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1139,
    "server_name": "Figma MCP Server",
    "rank_by_usage": 1140,
    "usage_count": "1",
    "original_file": "../crawler/smithery/@mohammeduvaiz_figma-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@mohammeduvaiz/figma-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1139,
      "name": "Figma MCP Server",
      "author": "@mohammeduvaiz/figma-mcp-server",
      "overview": "Connect your designs to AI tools and LLMs, enabling seamless extraction and analysis of design data from Figma. Enhance your design workflow by generating documentation and managing UI content efficiently. Leverage AI integration for improved design consistency and development handoff.",
      "repository_url": "https://github.com/mohammeduvaiz/figma-mcp-server",
      "homepage": "https://smithery.ai/server/@mohammeduvaiz/figma-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "1",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@mohammeduvaiz_figma-mcp-server.json",
      "tools_count": 7,
      "tools": [
        {
          "name": "get-file-info",
          "description": "Deploy Server Figma MCP Server Claim Server @mohammeduvaiz/figma-mcp-server Try in Playground get-file-info",
          "parameters": [
            {
              "name": "fileKey",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-nodes",
          "description": "Get specific nodes from a Figma file",
          "parameters": [
            {
              "name": "fileKey",
              "required": true,
              "type": "string"
            },
            {
              "name": "nodeIds",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-components",
          "description": "Get component information from a Figma file",
          "parameters": [
            {
              "name": "fileKey",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-styles",
          "description": "Get style information from a Figma file",
          "parameters": [
            {
              "name": "fileKey",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-comments",
          "description": "Get comments from a Figma file",
          "parameters": [
            {
              "name": "fileKey",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "search-file",
          "description": "Search for elements in a Figma file by type, name, etc.",
          "parameters": [
            {
              "name": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "fileKey",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "extract-text",
          "description": "Extract all text elements from a Figma file",
          "parameters": [
            {
              "name": "fileKey",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@mohammeduvaiz/figma-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "apiKey",
          "required": true,
          "description": "API key for authentication"
        },
        {
          "name": "figmaApiToken",
          "required": true,
          "description": "Figma Personal Access Token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@mohammeduvaiz/figma-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1140.@mohammeduvaiz_figma-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1117
  }
}