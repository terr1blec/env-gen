{
  "labels": {
    "analysis": "The Luma MCP Server is designed specifically for video generation and manipulation using Luma AI's capabilities. Its available tools focus on creating videos from images or prompts, extending existing videos, and interpolating between videos. These functions indicate that the server is primarily a platform for AI-powered video content creation and enhancement.",
    "reasoning": "The primary functionality of the Luma MCP Server aligns closely with \"Content Creation,\" especially media generation related to video. While it could be argued that it falls into \"AI/ML Tools\" due to its AI-based nature, the core use case is more focused on video-related operations. There are no other predefined categories that quite fit the niche video generation focus, though it could have broader implications in media-related workflows.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "AI/ML Tools",
      "News & Media"
    ],
    "custom_label": "Video Generation",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2215,
    "server_name": "Luma MCP Server",
    "rank_by_usage": 2216,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@sunwood-ai-labs_luma-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@sunwood-ai-labs/luma-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2215,
      "name": "Luma MCP Server",
      "author": "@sunwood-ai-labs/luma-mcp-server",
      "overview": "A Model Context Protocol server for Luma AI video generation",
      "repository_url": "https://github.com/Sunwood-ai-labs/luma-mcp-server",
      "homepage": "https://smithery.ai/server/@sunwood-ai-labs/luma-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@sunwood-ai-labs_luma-mcp-server.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "generate_video",
          "description": "Deploy Server Luma MCP Server Claim Server @sunwood-ai-labs/luma-mcp-server Try in Playground generate_video",
          "parameters": [
            {
              "name": "loop",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "prompt",
              "required": true,
              "type": "string"
            },
            {
              "name": "callback_url",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "generate_video_from_image",
          "description": "Generate a video from an image and text prompt",
          "parameters": []
        },
        {
          "name": "extend_video",
          "description": "Extend an existing video",
          "parameters": []
        },
        {
          "name": "interpolate_videos",
          "description": "Create a smooth transition between two videos",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@sunwood-ai-labs/luma-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "lumaApiKey",
          "required": true,
          "description": "API key for authenticating with Luma AI"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@sunwood-ai-labs/luma-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2216.@sunwood-ai-labs_luma-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1911
  }
}