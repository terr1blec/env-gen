{
  "labels": {
    "analysis": "The MCP Server, \"Scenext Video Generation Server,\" is specialized in generating educational explanation videos using AI-powered video generation. Its primary function is to automate the creation of instructional content, enhancing learning experiences. The available tools indicate that it handles video generation tasks and status queries, making it a content creation and automation tool focused on education.",
    "reasoning": "The primary label \"Content Creation\" is chosen because the server's core functionality revolves around generating educational videos, which is a form of content creation. The secondary label \"Education\" is selected due to its explicit focus on enhancing learning experiences. The secondary label \"AI/ML Tools\" is included because the server leverages AI-powered video generation. No custom label is needed as the functionality is well-covered by predefined categories.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "Education",
      "AI/ML Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1537,
    "server_name": "Scenext Video Generation Server",
    "rank_by_usage": 1538,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@typing233_scenext-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@typing233/scenext-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1537,
      "name": "Scenext Video Generation Server",
      "author": "@typing233/scenext-mcp",
      "overview": "Generate educational explanation videos based on topics using AI-powered video generation. Seamlessly integrate video creation capabilities into your applications to enhance learning experiences. Enable dynamic and automated production of instructional content with ease.",
      "repository_url": "https://github.com/typing233/scenext-mcp",
      "homepage": "https://smithery.ai/server/@typing233/scenext-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@typing233_scenext-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "gen_video",
          "description": "Deploy Server Scenext Video Generation Server @typing233/scenext-mcp Try in Playground",
          "parameters": []
        },
        {
          "name": "query_video_status",
          "description": "查询视频生成状态\n\nArgs:\n    task_id: 视频生成任务ID\n\nReturns:\n    包含任务状态信息与任务结果的字典，任务结果中的视频链接请用\"[链接文本](视频URL)\"形式展示给用户，图片链接请用\"![链接文本](图片URL)\"形式展示给用户",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@typing233/scenext-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "scenextApiKey",
          "required": true,
          "description": "API key for Scenext MCP Server"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@typing233/scenext-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1538.@typing233_scenext-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1413
  }
}