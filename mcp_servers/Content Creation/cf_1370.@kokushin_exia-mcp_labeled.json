{
  "labels": {
    "analysis": "The MCP Server \"Exia Scenario Generator\" is designed to create interactive scenario files for the Exia visual novel engine, specifically in the \"Kotonoha Sisters Explanation\" style. It simplifies the process of scenario creation and playback through natural language prompts. The available tools suggest a focus on generating, setting up, saving, and explaining scenarios, which implies a specialized role in interactive storytelling and engine-based content creation.",
    "reasoning": "The primary label \"Content Creation\" was chosen because the server facilitates the creation of narrative content (scenarios) for a visual novel engine. The secondary label \"AI/ML Tools\" was included due to the natural language prompt system, which likely involves AI-driven scenario generation. A custom label \"Interactive Storytelling Tools\" was added to capture the server's specialized functionality for visual novel scenarios.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "AI/ML Tools"
    ],
    "custom_label": "Interactive Storytelling Tools",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1369,
    "server_name": "Exia Scenario Generator",
    "rank_by_usage": 1370,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@kokushin_exia-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@kokushin/exia-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1369,
      "name": "Exia Scenario Generator",
      "author": "@kokushin/exia-mcp",
      "overview": "Generate interactive scenario files in the \"Kotonoha Sisters Explanation\" style for the Exia visual novel engine. Seamlessly create, save, and display scenarios using natural language prompts. Simplify scenario creation and playback with integrated setup and execution tools.",
      "repository_url": "https://github.com/kokushin/exia-mcp",
      "homepage": "https://smithery.ai/server/@kokushin/exia-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@kokushin_exia-mcp.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "generateScenario",
          "description": "Deploy Server Exia Scenario Generator Claim Server @kokushin/exia-mcp Try in Playground generateScenario",
          "parameters": [
            {
              "name": "generateScenario",
              "required": false,
              "type": "string"
            },
            {
              "name": "topic",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "setupExia",
          "description": "Description not available",
          "parameters": [
            {
              "name": "setupExia",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "saveScenario",
          "description": "Description not available",
          "parameters": [
            {
              "name": "saveScenario",
              "required": false,
              "type": "string"
            },
            {
              "name": "topic",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "exiaVoiceroidExplain",
          "description": "Description not available",
          "parameters": [
            {
              "name": "exiaVoiceroidExplain",
              "required": false,
              "type": "string"
            },
            {
              "name": "topic",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@kokushin/exia-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "openaiApiKey",
          "required": true,
          "description": "OpenAI API key for accessing the OpenAI API"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@kokushin/exia-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1370.@kokushin_exia-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1286
  }
}