{
  "labels": {
    "analysis": "The MCP Server is designed to analyze YouTube videos by leveraging the Gemini Vision API. Its core functionality includes generating summaries, answering questions about the video content, and extracting key moments with timestamps. The tools provided focus on extracting insights from video content, making it particularly useful for video analysis, educational purposes, and enhancing viewer interactions with YouTube videos.",
    "reasoning": "The primary functionality of the server revolves around video analysis and content extraction, making \"Content Creation\" the most appropriate primary label. As a secondary label, \"AI/ML Tools\" is relevant due to the use of the Gemini Vision API, and \"Education\" could be considered given the potential use cases for learning and research. A custom label is not needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "AI/ML Tools",
      "Education"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 466,
    "server_name": "YouTube Vision",
    "rank_by_usage": 467,
    "usage_count": "39",
    "original_file": "../crawler/smithery/@minbang930_youtube-vision-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@minbang930/youtube-vision-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 466,
      "name": "YouTube Vision",
      "author": "@minbang930/youtube-vision-mcp",
      "overview": "Analyze YouTube videos and extract insights using the Gemini Vision API. Get descriptions, summaries, and key moments effortlessly to enhance your video interactions.",
      "repository_url": "https://github.com/minbang930/Youtube-Vision-MCP",
      "homepage": "https://smithery.ai/server/@minbang930/youtube-vision-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "39",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@minbang930_youtube-vision-mcp.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "summarize_youtube_video",
          "description": "Deploy Server YouTube Vision @minbang930/youtube-vision-mcp Try in Playground summarize_youtube_video",
          "parameters": [
            {
              "name": "summarize_youtube_video",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "ask_about_youtube_video",
          "description": "Answers a question about the video or provides a general description if no question is asked.",
          "parameters": [
            {
              "name": "ask_about_youtube_video",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "extract_key_moments",
          "description": "Extracts key moments (timestamps and descriptions) from a given YouTube video.",
          "parameters": []
        },
        {
          "name": "list_supported_models",
          "description": "Lists available Gemini models that support the 'generateContent' method.",
          "parameters": [
            {
              "name": "list_supported_models",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@minbang930/youtube-vision-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "geminiApiKey",
          "required": true,
          "description": "Your Google Gemini API key."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@minbang930/youtube-vision-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0467.@minbang930_youtube-vision-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 458
  }
}