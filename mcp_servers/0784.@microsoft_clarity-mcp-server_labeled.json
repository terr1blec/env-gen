{
  "labels": {
    "analysis": "The MCP Server described is specifically designed to fetch and analyze Microsoft Clarity analytics data. It provides tools to retrieve user behavior metrics and insights via a simple interface, potentially integrating with other MCP-compatible systems like Claude for Desktop. The core functionality revolves around data extraction, filtering, and analysis from Microsoft Clarity, a web analytics tool.",
    "reasoning": "The primary label \"Data Analysis & Processing\" is chosen because the server's main purpose is to analyze web analytics data, which falls under data processing. The secondary label \"Web Search & Research\" is selected as the server could assist in understanding user behavior patterns through analytical insights. No custom label is needed as the predefined categories adequately cover the functionality.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "Web Search & Research"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 783,
    "server_name": "Microsoft Clarity Data Export Server",
    "rank_by_usage": 784,
    "usage_count": "8",
    "original_file": "../crawler/smithery/@microsoft_clarity-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@microsoft/clarity-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get-clarity-data",
          "description": "Fetch Microsoft Clarity analytics data",
          "input_schema": {
            "type": "object",
            "properties": {
              "numOfDays": {
                "type": "number",
                "minimum": 1,
                "maximum": 3,
                "description": "Number of days to retrieve data for (1-3)"
              },
              "dimensions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Up to 3 dimensions to filter by (Browser, Device, Country/Region, OS, Source, Medium, Campaign, Channel, URL)"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics to retrieve (Scroll Depth, Engagement Time, Traffic, Popular Pages, Browser, Device, OS, Country/Region, etc.)"
              },
              "token": {
                "type": "string",
                "description": "Your Clarity API token (optional if provided via environment or command line)"
              }
            },
            "required": [
              "numOfDays"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get-clarity-data"
      ]
    },
    "server_info_crawled": {
      "id": 783,
      "name": "Microsoft Clarity Data Export Server",
      "author": "@microsoft/clarity-mcp-server",
      "overview": "Fetch and analyze Microsoft Clarity analytics data through a simple and intuitive interface. Filter by multiple dimensions and retrieve key metrics to gain insights into user behavior. Seamlessly integrate with MCP-compatible clients like Claude for Desktop to enhance your data-driven decision making.",
      "repository_url": "https://github.com/microsoft/clarity-mcp-server",
      "homepage": "https://smithery.ai/server/@microsoft/clarity-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "8",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@microsoft_clarity-mcp-server.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get-clarity-data",
          "description": "Fetch Microsoft Clarity analytics data",
          "input_schema": {
            "type": "object",
            "properties": {
              "numOfDays": {
                "type": "number",
                "minimum": 1,
                "maximum": 3,
                "description": "Number of days to retrieve data for (1-3)"
              },
              "dimensions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Up to 3 dimensions to filter by (Browser, Device, Country/Region, OS, Source, Medium, Campaign, Channel, URL)"
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Metrics to retrieve (Scroll Depth, Engagement Time, Traffic, Popular Pages, Browser, Device, OS, Country/Region, etc.)"
              },
              "token": {
                "type": "string",
                "description": "Your Clarity API token (optional if provided via environment or command line)"
              }
            },
            "required": [
              "numOfDays"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@microsoft/clarity-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@microsoft/clarity-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0784.@microsoft_clarity-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 766
  }
}