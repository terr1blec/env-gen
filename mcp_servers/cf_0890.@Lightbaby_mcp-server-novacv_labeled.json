{
  "labels": {
    "analysis": "The MCP Server specializes in resume generation, analysis, and conversion to structured formats. Its tools enable users to create professional resumes in PDF format, select from various templates, convert raw text to standardized JSON Resume format, and receive detailed feedback on resume effectiveness. The primary focus is on career and professional document optimization.",
    "reasoning": "The primary label \"Content Creation\" was chosen because the server's core functionality revolves around generating and optimizing professional documents (resumes). Secondary labels \"Daily Productivity\" and \"Education\" reflect its use in career development and job application processes. No custom label is deemed necessary as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "Daily Productivity",
      "Education"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 889,
    "server_name": "NovaCV Resume Service",
    "rank_by_usage": 890,
    "usage_count": "4",
    "original_file": "../crawler/smithery/@Lightbaby_mcp-server-novacv.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Lightbaby/mcp-server-novacv/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 889,
      "name": "NovaCV Resume Service",
      "author": "@Lightbaby/mcp-server-novacv",
      "overview": "Generate professional resumes, analyze content, and convert text to structured formats effortlessly. Leverage the NovaCV API to create tailored resumes in PDF format and receive insightful feedback on your resume's effectiveness.",
      "repository_url": "https://github.com/Lightbaby/mcp-server-novacv",
      "homepage": "https://smithery.ai/server/@Lightbaby/mcp-server-novacv",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "4",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Lightbaby_mcp-server-novacv.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "generate_resume_from_text",
          "description": "Deploy Server NovaCV Resume Service Claim Server @Lightbaby/mcp-server-novacv Try in Playground generate_resume_from_text",
          "parameters": [
            {
              "name": "generate_resume_from_text",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_templates",
          "description": "获取所有可用的简历模板，返回模板列表及其详细信息，包括模板ID、名称、缩略图等。帮助用户选择最适合的简历风格。",
          "parameters": [
            {
              "name": "get_templates",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "convert_resume_text",
          "description": "将纯文本格式的简历内容转换为标准JSON Resume格式。系统会智能识别简历中的各个部分（如个人信息、工作经历、教育背景等），并按照国际通用的JSON Resume标准进行结构化处理，方便后续编辑和格式转换。",
          "parameters": [
            {
              "name": "convert_resume_text",
              "required": false,
              "type": "string"
            },
            {
              "name": "resumeText",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "analyze_resume_text",
          "description": "对简历文本进行深度分析，提供专业评估和改进建议。系统会分析简历的完整性、关键词使用、技能匹配度等方面，并给出针对性的优化建议，帮助求职者打造更具竞争力的简历。",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Lightbaby/mcp-server-novacv/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "apiKey",
          "required": true,
          "description": "NovaCV API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Lightbaby/mcp-server-novacv/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0890.@Lightbaby_mcp-server-novacv_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 871
  }
}