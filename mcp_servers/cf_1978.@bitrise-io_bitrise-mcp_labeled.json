{
  "labels": {
    "analysis": "The Bitrise API Server provides comprehensive tools for managing continuous integration and delivery (CI/CD) workflows within the Bitrise platform. Its core functionality revolves around managing applications, builds, artifacts, and release processes using secure API-based interactions. This includes app registration, build triggering, artifact management, release distribution, and user/group permissions. The server enables deep integration with Bitrise's ecosystem, making it particularly useful for development teams looking to automate and streamline their deployment pipelines.",
    "reasoning": "The primary label \"Development Tools\" was chosen because the server primarily serves developers and CI/CD workflows by providing programmatic control over Bitrise's core functionalities. The secondary labels \"CI/CD\" and \"Deployment Management\" were added to better capture the server's specialized purpose within the development ecosystem. These labels collectively emphasize the server's role in automating and managing software delivery processes.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Development Tools",
      "Development Tools"
    ],
    "custom_label": "Bitrise CI/CD Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1977,
    "server_name": "Bitrise API Server",
    "rank_by_usage": 1978,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@bitrise-io_bitrise-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@bitrise-io/bitrise-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1977,
      "name": "Bitrise API Server",
      "author": "@bitrise-io/bitrise-mcp",
      "overview": "Enable seamless management of Bitrise apps, builds, artifacts, and more through a secure API token-based interface. Access comprehensive Bitrise API functionalities including app registration, build triggering, artifact handling, and release management. Optimize your CI/CD workflows by integrating Bitrise operations directly into your MCP-compatible client.",
      "repository_url": "https://github.com/bitrise-io/bitrise-mcp",
      "homepage": "https://smithery.ai/server/@bitrise-io/bitrise-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@bitrise-io_bitrise-mcp.json",
      "tools_count": 55,
      "tools": [
        {
          "name": "list_apps",
          "description": "Deploy Server Bitrise API Server Claim Server @bitrise-io/bitrise-mcp Try in Playground",
          "parameters": [
            {
              "name": "next",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "sort_by",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "register_app",
          "description": "Add a new app to Bitrise. After this app should be finished on order to be registered completely on Bitrise (via the finish_bitrise_app tool). Before doing this step, try understanding the repository details from the repository URL. This is a two-step process. First, you register the app with the Bitrise API, and then you finish the setup. The first step creates a new app in Bitrise, and the second step configures it with the necessary settings. If the user has multiple workspaces, always prompt the user to choose which one you should use. Don't prompt the user for finishing the app, just do it automatically.",
          "parameters": [
            {
              "name": "register_app",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "finish_bitrise_app",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "get_app",
          "description": "Get the details of a specific app.",
          "parameters": [
            {
              "name": "get_app",
              "required": false,
              "type": "string"
            },
            {
              "name": "app_slug",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_app",
          "description": "Delete an app from Bitrise. When deleting apps belonging to multiple workspaces always confirm that which workspaces' apps the user wants to delete.",
          "parameters": [
            {
              "name": "delete_app",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_app",
          "description": "Description not available",
          "parameters": [
            {
              "name": "repo_url",
              "required": true,
              "type": "string"
            },
            {
              "name": "is_public",
              "required": true,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "project_type",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_bitrise_yml",
          "description": "Get the current Bitrise YML config file of a specified Bitrise app.",
          "parameters": [
            {
              "name": "get_bitrise_yml",
              "required": false,
              "type": "string"
            },
            {
              "name": "app_slug",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_bitrise_yml",
          "description": "Update the Bitrise YML config file of a specified Bitrise app.",
          "parameters": [
            {
              "name": "update_bitrise_yml",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_branches",
          "description": "List the branches with existing builds of an app's repository.",
          "parameters": [
            {
              "name": "list_branches",
              "required": false,
              "type": "string"
            },
            {
              "name": "app_slug",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "register_ssh_key",
          "description": "Add an SSH-key to a specific app.",
          "parameters": [
            {
              "name": "register_ssh_key",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "register_webhook",
          "description": "Register an incoming webhook for a specific application.",
          "parameters": [
            {
              "name": "register_webhook",
              "required": false,
              "type": "string"
            },
            {
              "name": "app_slug",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_builds",
          "description": "List all the builds of a specified Bitrise app or all accessible builds.",
          "parameters": [
            {
              "name": "list_builds",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "trigger_bitrise_build",
          "description": "Trigger a new build/pipeline for a specified Bitrise app.",
          "parameters": []
        },
        {
          "name": "get_build",
          "description": "Get a specific build of a given app.",
          "parameters": [
            {
              "name": "app_slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "build_slug",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "abort_build",
          "description": "Abort a specific build.",
          "parameters": [
            {
              "name": "Abort",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "specific",
              "required": false,
              "type": "string"
            },
            {
              "name": "reason",
              "required": false,
              "type": "string"
            },
            {
              "name": "app_slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "build_slug",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_build_log",
          "description": "Get the build log of a specified build of a Bitrise app.",
          "parameters": [
            {
              "name": "app_slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "build_slug",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_build_bitrise_yml",
          "description": "Get the bitrise.yml of a build.",
          "parameters": [
            {
              "name": "app_slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "build_slug",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_build_workflows",
          "description": "List the workflows of an app.",
          "parameters": [
            {
              "name": "list_build_workflows",
              "required": false,
              "type": "string"
            },
            {
              "name": "app_slug",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_artifacts",
          "description": "Get a list of all build artifacts.",
          "parameters": [
            {
              "name": "next",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "app_slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "build_slug",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_artifact",
          "description": "Get a specific build artifact.",
          "parameters": [
            {
              "name": "app_slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "build_slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "artifact_slug",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_outgoing_webhooks",
          "description": "List the outgoing webhooks of an app.",
          "parameters": [
            {
              "name": "list_outgoing_webhooks",
              "required": false,
              "type": "string"
            },
            {
              "name": "app_slug",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_cache_items",
          "description": "List the key-value cache items belonging to an app.",
          "parameters": [
            {
              "name": "list_cache_items",
              "required": false,
              "type": "string"
            },
            {
              "name": "app_slug",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_all_cache_items",
          "description": "Delete all key-value cache items belonging to an app.",
          "parameters": [
            {
              "name": "delete_all_cache_items",
              "required": false,
              "type": "string"
            },
            {
              "name": "app_slug",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_cache_item",
          "description": "Delete a key-value cache item.",
          "parameters": [
            {
              "name": "app_slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "cache_item_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_cache_item_download_url",
          "description": "Description not available",
          "parameters": [
            {
              "name": "get_cache_item_download_url",
              "required": false,
              "type": "string"
            },
            {
              "name": "app_slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "cache_item_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_pipelines",
          "description": "List all pipelines and standalone builds of an app.",
          "parameters": [
            {
              "name": "list_pipelines",
              "required": false,
              "type": "string"
            },
            {
              "name": "app_slug",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_pipeline",
          "description": "Get a pipeline of a given app.",
          "parameters": [
            {
              "name": "app_slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "pipeline_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "abort_pipeline",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Abort",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "reason",
              "required": false,
              "type": "string"
            },
            {
              "name": "app_slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "pipeline_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "rebuild_pipeline",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Rebuild",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "app_slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "pipeline_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_group_roles",
          "description": "List group roles for an app",
          "parameters": [
            {
              "name": "app_slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "role_name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "replace_group_roles",
          "description": "Replace group roles for an app.",
          "parameters": [
            {
              "name": "app_slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "role_name",
              "required": true,
              "type": "string"
            },
            {
              "name": "group_slugs",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_workspaces",
          "description": "List the workspaces the user has access to",
          "parameters": [
            {
              "name": "list_workspaces",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_workspace",
          "description": "Get details for one workspace",
          "parameters": [
            {
              "name": "get_workspace",
              "required": false,
              "type": "string"
            },
            {
              "name": "workspace_slug",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_workspace_groups",
          "description": "Get the groups in a workspace",
          "parameters": [
            {
              "name": "get_workspace_groups",
              "required": false,
              "type": "string"
            },
            {
              "name": "workspace_slug",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_workspace_group",
          "description": "Create a new group in a workspace.",
          "parameters": [
            {
              "name": "group_name",
              "required": true,
              "type": "string"
            },
            {
              "name": "workspace_slug",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_workspace_members",
          "description": "Get the members of a workspace",
          "parameters": [
            {
              "name": "get_workspace_members",
              "required": false,
              "type": "string"
            },
            {
              "name": "workspace_slug",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "invite_member_to_workspace",
          "description": "Invite new Bitrise users to a workspace.",
          "parameters": [
            {
              "name": "email",
              "required": true,
              "type": "string"
            },
            {
              "name": "workspace_slug",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_member_to_group",
          "description": "Add a member to a group.",
          "parameters": [
            {
              "name": "user_slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "group_slug",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_connected_app",
          "description": "Add a new Release Management connected app to Bitrise.",
          "parameters": [
            {
              "name": "create_connected_app",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_connected_apps",
          "description": "List Release Management connected apps available for the authenticated account within a workspace.",
          "parameters": [
            {
              "name": "list_connected_apps",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_connected_app",
          "description": "Gives back a Release Management connected app for the authenticated account.",
          "parameters": [
            {
              "name": "get_connected_app",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_connected_app",
          "description": "Updates a connected app.",
          "parameters": [
            {
              "name": "update_connected_app",
              "required": false,
              "type": "string"
            },
            {
              "name": "Updates",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "connected",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_installable_artifacts",
          "description": "List Release Management installable artifacts of a connected app available for the authenticated account.",
          "parameters": [
            {
              "name": "list_installable_artifacts",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "generate_installable_artifact_upload_url",
          "description": "Generates a signed upload url valid for 1 hour for an installable artifact to be uploaded to Bitrise Release Management. The response will contain an url that can be used to upload an artifact to Bitrise Release Management using a simple curl request with the file data that should be uploaded. The necessary headers and http method will also be in the response. This artifact will need to be processed after upload to be usable. The status of processing can be checked by making another requestto a different url giving back the processed status of an installable artifact.",
          "parameters": [
            {
              "name": "generate_installable_artifact_upload_url",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_installable_artifact_upload_and_processing_status",
          "description": "Gets the processing and upload status of an installable artifact. An artifact will need to be processed after upload to be usable. This endpoint helps understanding when an uploaded installable artifacts becomes usable for later purposes.",
          "parameters": [
            {
              "name": "get_installable_artifact_upload_and_processing_status",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "set_installable_artifact_public_install_page",
          "description": "Changes whether public install page should be available for the installable artifact or not.",
          "parameters": [
            {
              "name": "set_installable_artifact_public_install_page",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_build_distribution_versions",
          "description": "Lists Build Distribution versions. Release Management offers a convenient, secure solution to distribute the builds of your mobile apps to testers without having to engage with either TestFlight or Google Play. Once you have installable artifacts, Bitrise can generate both private and public install links that testers or other stakeholders can use to install the app on real devices via over-the-air installation. Build distribution allows you to define tester groups that can receive notifications about installable artifacts. The email takes the notified testers to the test build page, from where they can install the app on their own device. Build distribution versions are the app versions available for testers.",
          "parameters": [
            {
              "name": "list_build_distribution_versions",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_build_distribution_version_test_builds",
          "description": "Gives back a list of test builds for the given build distribution version.",
          "parameters": [
            {
              "name": "list_build_distribution_version_test_builds",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_tester_group",
          "description": "Creates a tester group for a Release Management connected app. Tester groups can be used to distribute installable artifacts to testers automatically. When a new installable artifact is available, the tester groups can either automatically or manually be notified via email. The notification email will contain a link to the installable artifact page for the artifact within Bitrise Release Management. A Release Management connected app can have multiple tester groups. Project team members of the connected app can be selected to be testers and added to the tester group. This endpoint has an elevated access level requirement. Only the owner of the related Bitrise Workspace, a workspace manager or the related project's admin can manage tester groups.",
          "parameters": [
            {
              "name": "create_tester_group",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "notify_tester_group",
          "description": "Notifies a tester group about a new test build.",
          "parameters": [
            {
              "name": "notify_tester_group",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_testers_to_tester_group",
          "description": "Adds testers to a tester group of a connected app.",
          "parameters": [
            {
              "name": "add_testers_to_tester_group",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_tester_group",
          "description": "Updates the given tester group. The name and the auto notification setting can be updated optionally.",
          "parameters": [
            {
              "name": "update_tester_group",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_tester_groups",
          "description": "Gives back a list of tester groups related to a specific Release Management connected app.",
          "parameters": [
            {
              "name": "list_tester_groups",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_tester_group",
          "description": "Gives back the details of the selected tester group.",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "connected_app_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_potential_testers",
          "description": "Gets a list of potential testers whom can be added as testers to a specific tester group. The list consists of Bitrise users having access to the related Release Management connected app.",
          "parameters": [
            {
              "name": "get_potential_testers",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@bitrise-io/bitrise-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "bitriseToken",
          "required": true,
          "description": "Bitrise API token used for authentication"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@bitrise-io/bitrise-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1978.@bitrise-io_bitrise-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1730
  }
}