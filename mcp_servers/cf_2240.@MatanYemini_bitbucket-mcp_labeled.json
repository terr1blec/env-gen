{
  "labels": {
    "analysis": "The Bitbucket MCP Server is designed to enable AI assistants to interact with Bitbucket repositories, pull requests, and repository content through a standardized protocol. It provides a suite of tools for managing Bitbucket data, including operations related to repositories, pull requests, branching models, and security analysis. The focus is on structured interaction with Bitbucket APIs, primarily handling read operations (except for limited write operations like pull request approval/decline and branching model updates). The server also emphasizes security through CodeQL analysis of pull requests.",
    "reasoning": "The primary label \"Development Tools\" was chosen because the server's core functionality revolves around repository management, pull request workflows, and branching model configuration — all critical aspects of the software development lifecycle. The secondary label \"API Integration\" was selected because the server acts as a bridge between AI assistants and Bitbucket's APIs, providing a standardized interface. The secondary label \"Database Operations\" is also appropriate because many tools involve querying repository data. The custom label \"Code Quality Management\" was added to highlight the server's specialized role in pull request security analysis via CodeQL.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "API Integration",
      "Database Operations"
    ],
    "custom_label": "Code Quality Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2239,
    "server_name": "Bitbucket MCP",
    "rank_by_usage": 2240,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@MatanYemini_bitbucket-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@MatanYemini/bitbucket-mcp/mcp?config=eyJCSVRCVUNLRVRfVVJMIjogImh0dHBzOi8vYXBpLmJpdGJ1Y2tldC5vcmcvMi4wIn0=&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "Connection timeout (20 seconds)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2239,
      "name": "Bitbucket MCP",
      "author": "@MatanYemini/bitbucket-mcp",
      "overview": "Enable AI assistants to interact seamlessly with Bitbucket repositories, pull requests, and repository content. Manage and retrieve Bitbucket data efficiently through a standardized protocol interface. Simplify integration with Bitbucket Cloud and Server APIs for enhanced AI-driven workflows. his is a safe and responsible package — no DELETE operations are used, so there’s no risk of data loss. Every pull request is analyzed with CodeQL to ensure the code remains secure.",
      "repository_url": "https://github.com/MatanYemini/bitbucket-mcp",
      "homepage": "https://smithery.ai/server/@MatanYemini/bitbucket-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@MatanYemini_bitbucket-mcp.json",
      "tools_count": 21,
      "tools": [
        {
          "name": "listRepositories",
          "description": "Deploy Server Bitbucket MCP @MatanYemini/bitbucket-mcp Try in Playground listRepositories",
          "parameters": [
            {
              "name": "List",
              "required": false,
              "type": "string"
            },
            {
              "name": "Bitbucket",
              "required": false,
              "type": "string"
            },
            {
              "name": "repositories",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "workspace",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getRepository",
          "description": "Get repository details",
          "parameters": [
            {
              "name": "Get",
              "required": false,
              "type": "string"
            },
            {
              "name": "repository",
              "required": false,
              "type": "string"
            },
            {
              "name": "details",
              "required": false,
              "type": "string"
            },
            {
              "name": "repo_slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "workspace",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getPullRequests",
          "description": "Get pull requests for a repository",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "state",
              "required": false,
              "type": "string"
            },
            {
              "name": "repo_slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "workspace",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "createPullRequest",
          "description": "Create a new pull request",
          "parameters": [
            {
              "name": "createPullRequest",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getPullRequest",
          "description": "Get details for a specific pull request",
          "parameters": [
            {
              "name": "getPullRequests",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "updatePullRequest",
          "description": "Update a pull request",
          "parameters": [
            {
              "name": "updatePullRequest",
              "required": false,
              "type": "string"
            },
            {
              "name": "Update",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "pull",
              "required": false,
              "type": "string"
            },
            {
              "name": "request",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getPullRequestActivity",
          "description": "Get activity log for a pull request",
          "parameters": [
            {
              "name": "getPullRequestActivity",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "approvePullRequest",
          "description": "Approve a pull request",
          "parameters": [
            {
              "name": "Approve",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "pull",
              "required": false,
              "type": "string"
            },
            {
              "name": "request",
              "required": false,
              "type": "string"
            },
            {
              "name": "repo_slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "workspace",
              "required": true,
              "type": "string"
            },
            {
              "name": "pull_request_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "unapprovePullRequest",
          "description": "Remove approval from a pull request",
          "parameters": [
            {
              "name": "unapprovePullRequest",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "declinePullRequest",
          "description": "Decline a pull request",
          "parameters": [
            {
              "name": "message",
              "required": false,
              "type": "string"
            },
            {
              "name": "repo_slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "workspace",
              "required": true,
              "type": "string"
            },
            {
              "name": "pull_request_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "mergePullRequest",
          "description": "Description not available",
          "parameters": [
            {
              "name": "message",
              "required": false,
              "type": "string"
            },
            {
              "name": "strategy",
              "required": false,
              "type": "string"
            },
            {
              "name": "repo_slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "workspace",
              "required": true,
              "type": "string"
            },
            {
              "name": "pull_request_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getPullRequestComments",
          "description": "List comments on a pull request",
          "parameters": [
            {
              "name": "repo_slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "workspace",
              "required": true,
              "type": "string"
            },
            {
              "name": "pull_request_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getPullRequestDiff",
          "description": "Get diff for a pull request",
          "parameters": [
            {
              "name": "repo_slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "workspace",
              "required": true,
              "type": "string"
            },
            {
              "name": "pull_request_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getPullRequestCommits",
          "description": "Get commits on a pull request",
          "parameters": [
            {
              "name": "repo_slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "workspace",
              "required": true,
              "type": "string"
            },
            {
              "name": "pull_request_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getRepositoryBranchingModel",
          "description": "Get the branching model for a repository",
          "parameters": [
            {
              "name": "repo_slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "workspace",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getRepositoryBranchingModelSettings",
          "description": "Get the branching model config for a repository",
          "parameters": [
            {
              "name": "getRepositoryBranchingModelSettings",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "updateRepositoryBranchingModelSettings",
          "description": "Update the branching model config for a repository",
          "parameters": [
            {
              "name": "updateRepositoryBranchingModelSettings",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getEffectiveRepositoryBranchingModel",
          "description": "Get the effective branching model for a repository",
          "parameters": [
            {
              "name": "getEffectiveRepositoryBranchingModel",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getProjectBranchingModel",
          "description": "Get the branching model for a project",
          "parameters": [
            {
              "name": "workspace",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_key",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getProjectBranchingModelSettings",
          "description": "Get the branching model config for a project",
          "parameters": [
            {
              "name": "getProjectBranchingModelSettings",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "updateProjectBranchingModelSettings",
          "description": "Update the branching model config for a project",
          "parameters": [
            {
              "name": "updateProjectBranchingModelSettings",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"BITBUCKET_URL\": \"https://api.bitbucket.org/2.0\"\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@MatanYemini/bitbucket-mcp/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"BITBUCKET_URL\": \"https://api.bitbucket.org/2.0\"\n}",
      "python_sdk_url": "https://server.smithery.ai/@MatanYemini/bitbucket-mcp/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "cf_2240.@MatanYemini_bitbucket-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1930
  }
}