{
  "labels": {
    "analysis": "The MCP Server described is focused on providing multimedia generation capabilities through MiniMax's AI services. Its core functionality includes text-to-audio conversion, voice cloning, image generation, and video generation from text or images. The server acts as a middleware that allows MCP-compatible clients to interact with these powerful AI tools, supporting dynamic configuration and multiple transport modes. The primary use cases are generation of multimedia content, voice-related operations, and querying status of generation tasks.",
    "reasoning": "The primary label \"AI/ML Tools\" is chosen because the server's core functionality revolves around AI-powered multimedia generation. The secondary label \"Multimedia Generation\" is a custom label that better describes the specific type of AI functionality provided. \"Voice Processing\" is another appropriate secondary label given the voice cloning and text-to-audio capabilities. The server doesn't fit neatly into other predefined categories as its primary purpose is multimedia creation through AI.",
    "primary_label": "AI/ML Tools",
    "secondary_labels": [
      "Content Creation",
      "Operating System"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 789,
    "server_name": "MiniMax MCP JS",
    "rank_by_usage": 790,
    "usage_count": "7",
    "original_file": "../crawler/smithery/@MiniMax-AI_MiniMax-MCP-JS.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@MiniMax-AI/MiniMax-MCP-JS/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 789,
      "name": "MiniMax MCP JS",
      "author": "@MiniMax-AI/MiniMax-MCP-JS",
      "overview": "Provide seamless integration with MiniMax's AI capabilities including image generation, video generation, text-to-speech, and voice cloning. Enable MCP-compatible clients to interact with powerful multimedia generation tools through a flexible and configurable JavaScript/TypeScript server. Support multiple transport modes and dynamic configuration for versatile deployment scenarios.",
      "repository_url": "https://github.com/MiniMax-AI/MiniMax-MCP-JS",
      "homepage": "https://smithery.ai/server/@MiniMax-AI/MiniMax-MCP-JS",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "7",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@MiniMax-AI_MiniMax-MCP-JS.json",
      "tools_count": 8,
      "tools": [
        {
          "name": "text_to_audio",
          "description": "Deploy Server MiniMax MCP JS Claim Server @MiniMax-AI/MiniMax-MCP-JS Try in Playground text_to_audio",
          "parameters": [
            {
              "name": "text_to_audio",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_voices",
          "description": "List all available voices. Only supported when api_host is https://api.minimax.chat.",
          "parameters": [
            {
              "name": "list_voices",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "play_audio",
          "description": "Play an audio file. Supports WAV and MP3 formats. Does not support video.",
          "parameters": [
            {
              "name": "play_audio",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "voice_clone",
          "description": "Clone a voice using the provided audio file. New voices will incur costs when first used. Note: This tool calls MiniMax API and may incur costs. Use only when explicitly requested by the user.",
          "parameters": []
        },
        {
          "name": "text_to_image",
          "description": "Generate images based on text prompts. Note: This tool calls MiniMax API and may incur costs. Use only when explicitly requested by the user.",
          "parameters": [
            {
              "name": "aspectRatio",
              "required": false,
              "type": "string"
            },
            {
              "name": "outputDirectory",
              "required": false,
              "type": "string"
            },
            {
              "name": "promptOptimizer",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "generate_video",
          "description": "Generate a video based on text prompts. Note: This tool calls MiniMax API and may incur costs. Use only when explicitly requested by the user.",
          "parameters": []
        },
        {
          "name": "image_to_video",
          "description": "Generate a video based on an image. Note: This tool calls MiniMax API and may incur costs. Use only when explicitly requested by the user.",
          "parameters": []
        },
        {
          "name": "query_video_generation",
          "description": "Query the status of a video generation task.",
          "parameters": [
            {
              "name": "taskId",
              "required": true,
              "type": "string"
            },
            {
              "name": "outputDirectory",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@MiniMax-AI/MiniMax-MCP-JS/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "apiKey",
          "required": true,
          "description": "MiniMax API Key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@MiniMax-AI/MiniMax-MCP-JS/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0790.@MiniMax-AI_MiniMax-MCP-JS_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 772
  }
}