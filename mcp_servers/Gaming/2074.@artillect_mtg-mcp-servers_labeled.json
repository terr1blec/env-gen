{
  "labels": {
    "analysis": "The MCP Server is specifically designed for managing Magic: The Gathering (MTG) decks and gameplay. Its core functionality revolves around deck management, card interactions, and leveraging the Scryfall API for card information. The tools provided allow users to simulate various aspects of an MTG game, including drawing cards, playing cards, handling mulligans, and sideboarding. This makes it a specialized tool for MTG enthusiasts and players looking to digitize and simplify their gaming experience.",
    "reasoning": "The primary label \"Gaming\" was chosen because the server's primary functionality is tied to game management and simulation for MTG, a popular trading card game. The secondary label \"Content Creation\" is relevant because users can manage and create deck lists, which is a form of content creation within the MTG community. The custom label \"MTG Deck Simulation\" was added to highlight the server's unique focus on Magic: The Gathering gameplay simulation, which isn't fully captured by the predefined categories.",
    "primary_label": "Gaming",
    "secondary_labels": [
      "Content Creation"
    ],
    "custom_label": "MTG Deck Simulation",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2073,
    "server_name": "MTG Deck Manager and Scryfall Integration",
    "rank_by_usage": 2074,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@artillect_mtg-mcp-servers.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@artillect/mtg-mcp-servers/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "upload_deck",
          "description": "Upload a Magic: The Gathering deck list.\n    \n    Args:\n        deck_list: Text format deck list with \"Deck\" and \"Sideboard\" sections\n    ",
          "input_schema": {
            "properties": {
              "deck_list": {
                "title": "Deck List",
                "type": "string"
              }
            },
            "required": [
              "deck_list"
            ],
            "title": "upload_deckArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "draw_card",
          "description": "Draw cards from your deck to your hand.\n    \n    Args:\n        count: Number of cards to draw (default: 1)\n    ",
          "input_schema": {
            "properties": {
              "count": {
                "default": 1,
                "title": "Count",
                "type": "integer"
              }
            },
            "title": "draw_cardArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "play_card",
          "description": "Play a card from your hand to the battlefield/stack.\n    \n    Args:\n        card_name: Name of the card to play\n    ",
          "input_schema": {
            "properties": {
              "card_name": {
                "title": "Card Name",
                "type": "string"
              }
            },
            "required": [
              "card_name"
            ],
            "title": "play_cardArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "view_hand",
          "description": "View the cards in your hand.",
          "input_schema": {
            "properties": {},
            "title": "view_handArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "view_deck_stats",
          "description": "View statistics about your current deck.",
          "input_schema": {
            "properties": {},
            "title": "view_deck_statsArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "mulligan",
          "description": "Perform a mulligan, shuffling your hand into your deck and drawing a new hand.\n    \n    Args:\n        new_hand_size: Number of cards to draw for new hand (default: same as current hand)\n    ",
          "input_schema": {
            "properties": {
              "new_hand_size": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "New Hand Size"
              }
            },
            "title": "mulliganArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "sideboard_swap",
          "description": "Swap a card from your deck with a card from your sideboard.\n    \n    Args:\n        remove_card: Name of card to remove from deck\n        add_card: Name of card to add from sideboard\n    ",
          "input_schema": {
            "properties": {
              "remove_card": {
                "title": "Remove Card",
                "type": "string"
              },
              "add_card": {
                "title": "Add Card",
                "type": "string"
              }
            },
            "required": [
              "remove_card",
              "add_card"
            ],
            "title": "sideboard_swapArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "reset_game",
          "description": "Reset the game state completely.",
          "input_schema": {
            "properties": {},
            "title": "reset_gameArguments",
            "type": "object"
          },
          "annotations": {}
        }
      ],
      "tool_count": 8,
      "tool_names": [
        "upload_deck",
        "draw_card",
        "play_card",
        "view_hand",
        "view_deck_stats",
        "mulligan",
        "sideboard_swap",
        "reset_game"
      ]
    },
    "server_info_crawled": {
      "id": 2073,
      "name": "MTG Deck Manager and Scryfall Integration",
      "author": "@artillect/mtg-mcp-servers",
      "overview": "Manage Magic: The Gathering decks by uploading, drawing cards, handling mulligans, and sideboarding directly through your assistant. Search and retrieve card information using integrated Scryfall API capabilities. Enhance your gameplay experience with seamless deck and card management tools.",
      "repository_url": "https://github.com/artillect/mtg-mcp-servers",
      "homepage": "https://smithery.ai/server/@artillect/mtg-mcp-servers",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@artillect_mtg-mcp-servers.json",
      "tools_count": 8,
      "tools": [
        {
          "name": "upload_deck",
          "description": "Upload a Magic: The Gathering deck list.\n    \n    Args:\n        deck_list: Text format deck list with \"Deck\" and \"Sideboard\" sections\n    ",
          "input_schema": {
            "properties": {
              "deck_list": {
                "title": "Deck List",
                "type": "string"
              }
            },
            "required": [
              "deck_list"
            ],
            "title": "upload_deckArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "draw_card",
          "description": "Draw cards from your deck to your hand.\n    \n    Args:\n        count: Number of cards to draw (default: 1)\n    ",
          "input_schema": {
            "properties": {
              "count": {
                "default": 1,
                "title": "Count",
                "type": "integer"
              }
            },
            "title": "draw_cardArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "play_card",
          "description": "Play a card from your hand to the battlefield/stack.\n    \n    Args:\n        card_name: Name of the card to play\n    ",
          "input_schema": {
            "properties": {
              "card_name": {
                "title": "Card Name",
                "type": "string"
              }
            },
            "required": [
              "card_name"
            ],
            "title": "play_cardArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "view_hand",
          "description": "View the cards in your hand.",
          "input_schema": {
            "properties": {},
            "title": "view_handArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "view_deck_stats",
          "description": "View statistics about your current deck.",
          "input_schema": {
            "properties": {},
            "title": "view_deck_statsArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "mulligan",
          "description": "Perform a mulligan, shuffling your hand into your deck and drawing a new hand.\n    \n    Args:\n        new_hand_size: Number of cards to draw for new hand (default: same as current hand)\n    ",
          "input_schema": {
            "properties": {
              "new_hand_size": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "New Hand Size"
              }
            },
            "title": "mulliganArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "sideboard_swap",
          "description": "Swap a card from your deck with a card from your sideboard.\n    \n    Args:\n        remove_card: Name of card to remove from deck\n        add_card: Name of card to add from sideboard\n    ",
          "input_schema": {
            "properties": {
              "remove_card": {
                "title": "Remove Card",
                "type": "string"
              },
              "add_card": {
                "title": "Add Card",
                "type": "string"
              }
            },
            "required": [
              "remove_card",
              "add_card"
            ],
            "title": "sideboard_swapArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "reset_game",
          "description": "Reset the game state completely.",
          "input_schema": {
            "properties": {},
            "title": "reset_gameArguments",
            "type": "object"
          },
          "annotations": {}
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@artillect/mtg-mcp-servers/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@artillect/mtg-mcp-servers/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "2074.@artillect_mtg-mcp-servers_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1807
  }
}