{
  "labels": {
    "analysis": "The MCP Server acts as a bridge between language models and external data sources, enabling dynamic access to real-time data and tools. Its primary functionality includes integrating LLMs with APIs and custom operations, exemplified by the available tool for retrieving live temperature data. This suggests real-time data fetching capabilities, making it valuable for applications requiring up-to-date information retrieval.",
    "reasoning": "The primary label is chosen because the server's core purpose is to facilitate real-time data access, which aligns with weather-related data services. Secondary labels are included to highlight broader capabilities and use cases, such as API integration for fetching external data and representing the server's role as a protocol for tool interactions.",
    "primary_label": "Weather",
    "secondary_labels": [
      "API Integration",
      "Data Analysis & Processing"
    ],
    "custom_label": "LLM Integration Protocol",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1790,
    "server_name": "Model Context Protocol Server",
    "rank_by_usage": 1791,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@berkanttozbay_mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@berkanttozbay/mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_live_temp",
          "description": "\n    Get live temperature for a given latitude and longitude.\n    ",
          "input_schema": {
            "properties": {
              "latitude": {
                "title": "Latitude",
                "type": "number"
              },
              "longitude": {
                "title": "Longitude",
                "type": "number"
              }
            },
            "required": [
              "latitude",
              "longitude"
            ],
            "title": "get_live_tempArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get_live_temp"
      ]
    },
    "server_info_crawled": {
      "id": 1790,
      "name": "Model Context Protocol Server",
      "author": "@berkanttozbay/mcp",
      "overview": "Enable seamless integration of large language models with external data sources and tools. Facilitate dynamic access to files, APIs, and custom operations through a standardized protocol. Enhance LLM applications by providing real-time context and actionable capabilities.",
      "repository_url": "https://github.com/berkanttozbay/mcp",
      "homepage": "https://smithery.ai/server/@berkanttozbay/mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@berkanttozbay_mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_live_temp",
          "description": "\n    Get live temperature for a given latitude and longitude.\n    ",
          "input_schema": {
            "properties": {
              "latitude": {
                "title": "Latitude",
                "type": "number"
              },
              "longitude": {
                "title": "Longitude",
                "type": "number"
              }
            },
            "required": [
              "latitude",
              "longitude"
            ],
            "title": "get_live_tempArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@berkanttozbay/mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@berkanttozbay/mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1791.@berkanttozbay_mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1597
  }
}