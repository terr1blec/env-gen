{
  "labels": {
    "analysis": "The MCP Server is designed to provide comprehensive access to Etherscan's API, enabling users to interact with blockchain data across multiple networks. It offers a wide range of tools for querying account information, transaction histories, contract data, blockchain statistics, and more. The server supports debugging through CLI tools and a web UI, making it particularly useful for developers and researchers working with Ethereum and other blockchain networks.",
    "reasoning": "The primary label \"Cryptocurrency & Blockchain\" was chosen because the server's core functionality revolves around interacting with blockchain data via Etherscan's API. Secondary labels \"API Integration\" and \"Development Tools\" were selected because the server provides standardized API access and tools that are particularly useful for developers debugging and interacting with blockchain data. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Cryptocurrency & Blockchain",
    "secondary_labels": [
      "API Integration",
      "Development Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1148,
    "server_name": "Etherscan API Integration Server",
    "rank_by_usage": 1149,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@xiaok_etherscan-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@xiaok/etherscan-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1148,
      "name": "Etherscan API Integration Server",
      "author": "@xiaok/etherscan-mcp",
      "overview": "Enable dynamic interaction with Etherscan's API and blockchain data through a standardized MCP interface. Quickly test and debug your server with built-in CLI tools and inspect it via a web UI. Support multiple blockchain networks with up-to-date chain lists and API endpoints.",
      "repository_url": "https://github.com/xiaok/etherscan-mcp",
      "homepage": "https://smithery.ai/server/@xiaok/etherscan-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@xiaok_etherscan-mcp.json",
      "tools_count": 55,
      "tools": [
        {
          "name": "account__balance",
          "description": "Deploy Server Etherscan API Integration Server Claim Server @xiaok/etherscan-mcp Try in Playground account__balance",
          "parameters": [
            {
              "name": "address",
              "required": true,
              "type": "string"
            },
            {
              "name": "chainid",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "account__balancemulti",
          "description": "Get Ether Balance for Multiple Addresses in a Single Call",
          "parameters": [
            {
              "name": "account__balancemulti",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "account__txlist",
          "description": "Returns the list of 'Normal' Transactions By Address",
          "parameters": [
            {
              "name": "account__txlist",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "account__txlistinternal",
          "description": "Returns the list of 'Internal' Transactions by Address",
          "parameters": [
            {
              "name": "account__txlistinternal",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "account__txlistinternal_byhash",
          "description": "Returns the list of 'Internal' Transactions by Transaction Hash",
          "parameters": [
            {
              "name": "txhash",
              "required": true,
              "type": "string"
            },
            {
              "name": "chainid",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "account__txlistinternal_byblock",
          "description": "Returns the list of 'Internal' Transactions by Block Range",
          "parameters": [
            {
              "name": "account__txlistinternal_byblock",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "account__tokentx",
          "description": "Returns the list of ERC20 Token Transfer Events by Address",
          "parameters": [
            {
              "name": "address",
              "required": true,
              "type": "string"
            },
            {
              "name": "chainid",
              "required": false,
              "type": "string"
            },
            {
              "name": "endblock",
              "required": false,
              "type": "string"
            },
            {
              "name": "startblock",
              "required": false,
              "type": "string"
            },
            {
              "name": "contractaddress",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "account__tokennfttx",
          "description": "Returns the list of ERC721 Token Transfer Events by Address",
          "parameters": [
            {
              "name": "account__tokennfttx",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "account__token1155tx",
          "description": "Returns the list of ERC1155 Token Transfer Events by Address",
          "parameters": [
            {
              "name": "account__token1155tx",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "account__fundedby",
          "description": "Returns the address that funded an address, and its relative age.",
          "parameters": [
            {
              "name": "account__fundedby",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "account__getminedblocks",
          "description": "Returns the list of blocks validated by an address.",
          "parameters": [
            {
              "name": "account__getminedblocks",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "account__txsBeaconWithdrawal",
          "description": "Returns the beacon chain withdrawals made to an address.",
          "parameters": [
            {
              "name": "account__txsBeaconWithdrawal",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "contract__getabi",
          "description": "Returns the Contract Application Binary Interface ( ABI ) of a verified smart contract.",
          "parameters": [
            {
              "name": "contract__getabi",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "contract__getsourcecode",
          "description": "Returns the Contract Source Code for Verified Contract Source Codes.",
          "parameters": [
            {
              "name": "contract__getsourcecode",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "contract__getcontractcreation",
          "description": "Returns the Contract Creator and Creation Tx Hash.",
          "parameters": [
            {
              "name": "contract__getcontractcreation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "contract__checkverifystatus",
          "description": "Returns the success or error status of a contract verification request.",
          "parameters": [
            {
              "name": "contract__checkverifystatus",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "transaction__getstatus",
          "description": "Returns the status code of a contract execution.",
          "parameters": [
            {
              "name": "txhash",
              "required": true,
              "type": "string"
            },
            {
              "name": "chainid",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "transaction__gettxreceiptstatus",
          "description": "Returns the status code of a transaction execution.",
          "parameters": [
            {
              "name": "transaction__gettxreceiptstatus",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "block__getblockreward",
          "description": "Returns the block reward and 'Uncle' block rewards.",
          "parameters": [
            {
              "name": "blockno",
              "required": true,
              "type": "string"
            },
            {
              "name": "chainid",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "block__getblockcountdown",
          "description": "Returns the estimated time remaining, in seconds, until a certain block is mined.",
          "parameters": [
            {
              "name": "block__getblockcountdown",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "block__getblocknobytime",
          "description": "Returns the block number that was mined at a certain timestamp.",
          "parameters": [
            {
              "name": "block__getblocknobytime",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "block__getblocktxnscount",
          "description": "Returns the number of transactions in a specified block.",
          "parameters": [
            {
              "name": "block__getblocktxnscount",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "logs__getLogsByAddress",
          "description": "Returns the event logs from an address, with optional filtering by block range.",
          "parameters": [
            {
              "name": "logs__getLogsByAddress",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "logs__getLogsByTopics",
          "description": "Returns the events log in a block range, filtered by topics.",
          "parameters": [
            {
              "name": "logs__getLogsByTopics",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "logs__getLogsByAddressAndTopics",
          "description": "Returns the event logs from an address, filtered by topics and block range.",
          "parameters": [
            {
              "name": "logs__getLogsByAddressAndTopics",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "proxy__eth_blockNumber",
          "description": "Returns the number of most recent block.",
          "parameters": [
            {
              "name": "proxy__eth_blockNumber",
              "required": false,
              "type": "string"
            },
            {
              "name": "chainid",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "proxy__eth_getBlockByNumber",
          "description": "Returns information about a block by block number.",
          "parameters": [
            {
              "name": "proxy__eth_getBlockByNumber",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "proxy__eth_getUncleByBlockNumberAndIndex",
          "description": "Returns information about a uncle by block number.",
          "parameters": [
            {
              "name": "proxy__eth_getUncleByBlockNumberAndIndex",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "proxy__eth_getBlockTransactionCountByNumber",
          "description": "Returns the number of transactions in a block.",
          "parameters": [
            {
              "name": "proxy__eth_getBlockTransactionCountByNumber",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "proxy__eth_getTransactionByHash",
          "description": "Returns information about a transaction requested by transaction hash.",
          "parameters": [
            {
              "name": "proxy__eth_getTransactionByHash",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "proxy__eth_getTransactionByBlockNumberAndIndex",
          "description": "Returns information about a transaction requested by block number and transaction index position.",
          "parameters": [
            {
              "name": "proxy__eth_getTransactionByBlockNumberAndIndex",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "proxy__eth_getTransactionCount",
          "description": "Returns the number of transactions performed by an address.",
          "parameters": [
            {
              "name": "proxy__eth_getTransactionCount",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "proxy__eth_getTransactionReceipt",
          "description": "Returns the receipt of a transaction that has been validated.",
          "parameters": [
            {
              "name": "proxy__eth_getTransactionReceipt",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "proxy__eth_call",
          "description": "Executes a new message call immediately without creating a transaction on the block chain.",
          "parameters": [
            {
              "name": "proxy__eth_call",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "proxy__eth_getCode",
          "description": "Returns code at a given address.",
          "parameters": [
            {
              "name": "tag",
              "required": true,
              "type": "string"
            },
            {
              "name": "address",
              "required": true,
              "type": "string"
            },
            {
              "name": "chainid",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "proxy__eth_getStorageAt",
          "description": "Returns the value from a storage position at a given address.",
          "parameters": [
            {
              "name": "proxy__eth_getStorageAt",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "proxy__eth_gasPrice",
          "description": "Returns the current price per gas in wei.",
          "parameters": [
            {
              "name": "proxy__eth_gasPrice",
              "required": false,
              "type": "string"
            },
            {
              "name": "chainid",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "proxy__eth_estimateGas",
          "description": "Makes a call or transaction, which won't be added to the blockchain and returns the used gas.",
          "parameters": [
            {
              "name": "proxy__eth_estimateGas",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "stats__tokensupply",
          "description": "Returns the current amount of an ERC-20 token in circulation.",
          "parameters": [
            {
              "name": "stats__tokensupply",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "account__tokenbalance",
          "description": "Returns the current balance of an ERC-20 token of an address.",
          "parameters": [
            {
              "name": "account__tokenbalance",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "gas__gasestimate",
          "description": "Returns the estimated time, in seconds, for a transaction to be confirmed on the blockchain.",
          "parameters": [
            {
              "name": "gas__gasestimate",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "gas__gasoracle",
          "description": "Returns the current Safe, Proposed and Fast gas prices.",
          "parameters": [
            {
              "name": "gas__gasoracle",
              "required": false,
              "type": "string"
            },
            {
              "name": "chainid",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "stats__dailyavggaslimit",
          "description": "Returns the historical daily average gas limit of the Ethereum network.",
          "parameters": [
            {
              "name": "stats__dailyavggaslimit",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "stats__ethsupply",
          "description": "Returns the current amount of Ether in circulation excluding ETH2 Staking rewards and EIP1559 burnt fees.",
          "parameters": [
            {
              "name": "stats__ethsupply",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "stats__ethsupply2",
          "description": "Returns the current amount of Ether in circulation, ETH2 Staking rewards, EIP1559 burnt fees, and total withdrawn ETH from the beacon chain.",
          "parameters": [
            {
              "name": "stats__ethsupply2",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "stats__ethprice",
          "description": "Returns the latest price of 1 ETH.",
          "parameters": [
            {
              "name": "stats__ethprice",
              "required": false,
              "type": "string"
            },
            {
              "name": "chainid",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "stats__chainsize",
          "description": "Returns the size of the Ethereum blockchain, in bytes, over a date range.",
          "parameters": [
            {
              "name": "stats__chainsize",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "stats__nodecount",
          "description": "Returns the total number of discoverable Ethereum nodes.",
          "parameters": [
            {
              "name": "stats__nodecount",
              "required": false,
              "type": "string"
            },
            {
              "name": "chainid",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "stats__dailytxnfee",
          "description": "Returns the amount of transaction fees paid to miners per day.",
          "parameters": [
            {
              "name": "stats__dailytxnfee",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "stats__dailynewaddress",
          "description": "Returns the number of new Ethereum addresses created per day.",
          "parameters": [
            {
              "name": "stats__dailynewaddress",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "stats__dailynetutilization",
          "description": "Returns the daily average gas used over gas limit, in percentage.",
          "parameters": [
            {
              "name": "stats__dailynetutilization",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "stats__dailyavghashrate",
          "description": "Returns the historical measure of processing power of the Ethereum network.",
          "parameters": [
            {
              "name": "stats__dailyavghashrate",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "stats__dailytx",
          "description": "Returns the number of transactions performed on the Ethereum blockchain per day.",
          "parameters": [
            {
              "name": "stats__dailytxnfee",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "stats__dailyavgnetdifficulty",
          "description": "Returns the historical mining difficulty of the Ethereum network.",
          "parameters": [
            {
              "name": "stats__dailyavgnetdifficulty",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "stats__ethdailyprice",
          "description": "Returns the historical price of 1 ETH.",
          "parameters": [
            {
              "name": "sort",
              "required": true,
              "type": "string"
            },
            {
              "name": "chainid",
              "required": false,
              "type": "string"
            },
            {
              "name": "enddate",
              "required": true,
              "type": "string"
            },
            {
              "name": "startdate",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@xiaok/etherscan-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "etherscanApiKey",
          "required": true,
          "description": "Etherscan API key for accessing the Etherscan API"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@xiaok/etherscan-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1149.@xiaok_etherscan-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1125
  }
}