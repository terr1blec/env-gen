{
  "labels": {
    "analysis": "The MCP Server specializes in web browsing automation and data extraction. It provides tools to interact with web pages by navigating, clicking elements, filling forms, extracting text content, and capturing screenshots. These capabilities are useful for tasks like automated web scraping, form automation, and gathering real-time data from websites. The server is designed to enhance AI applications by integrating browser automation into larger workflows.",
    "reasoning": "The primary functionality is browser automation, which aligns with the \"Browser Automation\" category. Secondary labels like \"Web Search & Research\" and \"Data Analysis & Processing\" are relevant because the tools enable data extraction for research or analysis purposes. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Browser Automation",
    "secondary_labels": [
      "Web Search & Research",
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1693,
    "server_name": "Browserbase MCP Server",
    "rank_by_usage": 1694,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@canbetry_mcp-server-browserbase.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@canbetry/mcp-server-browserbase/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1693,
      "name": "Browserbase MCP Server",
      "author": "@canbetry/mcp-server-browserbase",
      "overview": "Automate web browsing and data extraction with ease. Interact with web pages, capture screenshots, and execute JavaScript in a cloud environment to enhance your AI applications. Streamline your workflows by integrating powerful browser automation capabilities into your LLM solutions.",
      "repository_url": "https://github.com/canbetry/mcp-server-browserbase",
      "homepage": "https://smithery.ai/server/@canbetry/mcp-server-browserbase",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@canbetry_mcp-server-browserbase.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "browserbase_create_session",
          "description": "Deploy Server Browserbase MCP Server @canbetry/mcp-server-browserbase Try in Playground browserbase_create_session",
          "parameters": [
            {
              "name": "browserbase_create_session",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "browserbase_navigate",
          "description": "Description not available",
          "parameters": [
            {
              "name": "browserbase_navigate",
              "required": false,
              "type": "string"
            },
            {
              "name": "Navigate",
              "required": false,
              "type": "string"
            },
            {
              "name": "to",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "URL",
              "required": false,
              "type": "string"
            },
            {
              "name": "url",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "browserbase_screenshot",
          "description": "Takes a screenshot of the current page. Use this tool to learn where you are on the page when controlling the browser with Stagehand. Only use this tool when the other tools are not sufficient to get the information you need.",
          "parameters": [
            {
              "name": "browserbase_screenshot",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "browserbase_click",
          "description": "Click an element on the page",
          "parameters": [
            {
              "name": "browserbase_click",
              "required": false,
              "type": "string"
            },
            {
              "name": "selector",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "browserbase_fill",
          "description": "Fill out an input field",
          "parameters": [
            {
              "name": "value",
              "required": true,
              "type": "string"
            },
            {
              "name": "selector",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "browserbase_get_text",
          "description": "Extract all text content from the current page",
          "parameters": [
            {
              "name": "browserbase_get_text",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@canbetry/mcp-server-browserbase/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "browserbaseApiKey",
          "required": true,
          "description": "API Key for Browserbase"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@canbetry/mcp-server-browserbase/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1694.@canbetry_mcp-server-browserbase_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1527
  }
}