{
  "labels": {
    "analysis": "The MCP Server is designed to fetch and manage Linear todo tickets, allowing users to retrieve task information by user ID or email. It integrates Linear productivity data into AI workflows, streamlining task management by providing access to user-specific to-do lists. This functionality is primarily geared toward task retrieval and integration within productivity workflows, emphasizing automation and standardization through the MCP framework.",
    "reasoning": "The primary label \"Daily Productivity\" was chosen because the server's core functionality revolves around managing and retrieving to-do tickets from Linear, which directly supports task organization and workflow efficiency. The secondary label \"API Integration\" is relevant because the server integrates Linear's task data into broader workflows via the MCP standard. No custom label is needed as the predefined labels adequately cover the server's functionality.",
    "primary_label": "Daily Productivity",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1329,
    "server_name": "Linear Task Fetcher",
    "rank_by_usage": 1330,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@argia-andreas_linear-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@argia-andreas/linear-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1329,
      "name": "Linear Task Fetcher",
      "author": "@argia-andreas/linear-mcp-server",
      "overview": "Fetch and manage your Linear todo tickets seamlessly through AI assistants. Retrieve user-specific todo tickets by user ID or email to streamline your task management. Integrate Linear data directly into your workflows using the MCP standard.",
      "repository_url": "https://github.com/argia-andreas/linear-mcp-server",
      "homepage": "https://smithery.ai/server/@argia-andreas/linear-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@argia-andreas_linear-mcp-server.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get-user-todo-tickets",
          "description": "Deploy Server Linear Task Fetcher Claim Server @argia-andreas/linear-mcp-server Try in Playground get-user-todo-tickets",
          "parameters": [
            {
              "name": "email",
              "required": false,
              "type": "string"
            },
            {
              "name": "userId",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@argia-andreas/linear-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "linearApiKey",
          "required": true,
          "description": "Linear API key for authenticating with the Linear API"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@argia-andreas/linear-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1330.@argia-andreas_linear-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1258
  }
}