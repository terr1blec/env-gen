{
  "labels": {
    "analysis": "The MCP Server specializes in providing secure, read-only access to BigQuery datasets. Its primary functionality revolves around enabling natural language querying of BigQuery data, which implies a focus on data querying and analysis within a specified processing limit. The optional settings for server access management suggest a layer of authentication but are not core to its primary purpose.",
    "reasoning": "The primary label should reflect the server's core functionality, which is data querying and management within BigQuery. Secondary labels could include database operations due to the interaction with BigQuery datasets. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 239,
    "server_name": "BigQuery",
    "rank_by_usage": 240,
    "usage_count": "173",
    "original_file": "../crawler/smithery/@ergut_mcp-bigquery-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ergut/mcp-bigquery-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 239,
      "name": "BigQuery",
      "author": "@ergut/mcp-bigquery-server",
      "overview": "Provides secure, read-only access to BigQuery datasets. Enables natural language querying of BigQuery data with a 1GB processing limit.",
      "repository_url": "https://github.com/ergut/mcp-bigquery-server",
      "homepage": "https://smithery.ai/server/@ergut/mcp-bigquery-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "173",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ergut_mcp-bigquery-server.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "Optional Settings",
          "description": "Access and manage servers by signing in.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ergut/mcp-bigquery-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ergut/mcp-bigquery-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0240.@ergut_mcp-bigquery-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 236
  }
}