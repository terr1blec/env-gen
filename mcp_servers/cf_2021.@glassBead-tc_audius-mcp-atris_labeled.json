{
  "labels": {
    "analysis": "The MCP Server \"Atris\" primarily enables users to interact with the Audius music platform using natural language queries. It allows for discovering music tracks, managing playlists, and engaging with artists through language-based commands powered by LLMs (Large Language Models). The server also enhances the music experience with tools for content creation and monetization, suggesting functionality beyond basic music streaming. The available \"Optional Settings\" tool indicates some form of user management or account integration.",
    "reasoning": "The primary label \"Content Creation\" is chosen because the server's description emphasizes tools for content creation tied to music production and artist engagement. The secondary label \"Social Media\" links to the platform's community engagement aspect, while \"AI/ML Tools\" reflects the LLM-based natural language interaction. The server does not fit well into other predefined categories, so no custom label is needed.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "Social Media",
      "AI/ML Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2020,
    "server_name": "Atris",
    "rank_by_usage": 2021,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@glassBead-tc_audius-mcp-atris.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@glassBead-tc/audius-mcp-atris/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2020,
      "name": "Atris",
      "author": "@glassBead-tc/audius-mcp-atris",
      "overview": "Access the Audius music platform through natural language queries. Discover tracks, manage playlists, and engage with artists seamlessly using LLMs. Enhance your music experience with powerful tools for content creation and monetization.",
      "repository_url": "https://github.com/glassBead-tc/audius-mcp-atris",
      "homepage": "https://smithery.ai/server/@glassBead-tc/audius-mcp-atris",
      "remote_or_local": "Remote",
      "license": "Not specified",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@glassBead-tc_audius-mcp-atris.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "Optional Settings",
          "description": "Access and manage servers by signing in.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@glassBead-tc/audius-mcp-atris/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "audiusApiKey",
          "required": true,
          "description": "Audius API Key for authenticating to the Audius API."
        },
        {
          "name": "audiusApiSecret",
          "required": true,
          "description": "Audius API Secret for authenticating to the Audius API."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@glassBead-tc/audius-mcp-atris/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2021.@glassBead-tc_audius-mcp-atris_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1764
  }
}