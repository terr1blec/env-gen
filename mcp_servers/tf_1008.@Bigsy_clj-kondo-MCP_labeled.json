{
  "labels": {
    "analysis": "The MCP Server \"Clojure Linter\" focuses on static code analysis for Clojure, ClojureScript, and EDN files using the clj-kondo tool. Its primary functionality is to enforce code quality, identify errors, and ensure adherence to best practices during development. It integrates linting directly into the development workflow, making it a specialized tool for developers working with the Clojure ecosystem.",
    "reasoning": "The primary label \"Development Tools\" was chosen because the server's primary function is to aid in code development by analyzing and improving code quality. The secondary label \"Code Analysis\" (a custom label) is included to emphasize its specialized linting capabilities. While \"Code Analysis\" could be considered a subcategory of \"Development Tools,\" it is included as a secondary label for specificity.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1007,
    "server_name": "Clojure Linter",
    "rank_by_usage": 1008,
    "usage_count": "2",
    "original_file": "../crawler/smithery/@Bigsy_clj-kondo-MCP.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Bigsy/clj-kondo-MCP/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "lint_clojure",
          "description": "Lint Clojure/ClojureScript/EDN content using clj-kondo",
          "input_schema": {
            "type": "object",
            "properties": {
              "file": {
                "type": "string",
                "description": "Can be: 1) Absolute path to a file, 2) Directory path (will lint all .clj/.cljs/.cljc files recursively), or 3) Classpath string (obtained via `lein classpath` or `clojure -Spath`)"
              },
              "configDir": {
                "type": "string",
                "description": "Optional absolute path to .clj-kondo config directory (e.g. /Users/name/project/.clj-kondo). If not provided, clj-kondo will look for .clj-kondo directory in the current and parent directories."
              },
              "level": {
                "type": "string",
                "enum": [
                  "warning"
                ],
                "description": "Optional linting level. By default all lints are errors. Set to \"warning\" to use warning level instead."
              }
            },
            "required": [
              "file"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "lint_clojure"
      ]
    },
    "server_info_crawled": {
      "id": 1007,
      "name": "Clojure Linter",
      "author": "@Bigsy/clj-kondo-MCP",
      "overview": "Lint your Clojure, ClojureScript, and EDN files effortlessly. Enhance your coding experience by integrating linting capabilities directly into your development environment. Ensure code quality and adherence to best practices with ease.",
      "repository_url": "https://github.com/Bigsy/clj-kondo-MCP",
      "homepage": "https://smithery.ai/server/@Bigsy/clj-kondo-MCP",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "2",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Bigsy_clj-kondo-MCP.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "lint_clojure",
          "description": "Lint Clojure/ClojureScript/EDN content using clj-kondo",
          "input_schema": {
            "type": "object",
            "properties": {
              "file": {
                "type": "string",
                "description": "Can be: 1) Absolute path to a file, 2) Directory path (will lint all .clj/.cljs/.cljc files recursively), or 3) Classpath string (obtained via `lein classpath` or `clojure -Spath`)"
              },
              "configDir": {
                "type": "string",
                "description": "Optional absolute path to .clj-kondo config directory (e.g. /Users/name/project/.clj-kondo). If not provided, clj-kondo will look for .clj-kondo directory in the current and parent directories."
              },
              "level": {
                "type": "string",
                "enum": [
                  "warning"
                ],
                "description": "Optional linting level. By default all lints are errors. Set to \"warning\" to use warning level instead."
              }
            },
            "required": [
              "file"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Bigsy/clj-kondo-MCP/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Bigsy/clj-kondo-MCP/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1008.@Bigsy_clj-kondo-MCP_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 986
  }
}