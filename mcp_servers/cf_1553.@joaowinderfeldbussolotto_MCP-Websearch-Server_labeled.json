{
  "labels": {
    "analysis": "The MCP Server specializes in retrieving relevant documentation snippets from specific frameworks like Langchain, Llama Index, and OpenAI. It enhances search capabilities by integrating with MCP-compatible applications to provide targeted documentation access based on user queries. The focus is on simplifying and streamlining documentation retrieval for developers or users interacting with these tools.",
    "reasoning": "The primary functionality revolves around documentation retrieval and integration, which aligns closely with Web Search & Research as it enhances information discovery. The integration aspect also relates to API Integration, as it connects with external documentation sources. No custom label is necessary as the predefined categories adequately cover the server's purpose.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1552,
    "server_name": "Documentation Retrieval Server",
    "rank_by_usage": 1553,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@joaowinderfeldbussolotto_MCP-Websearch-Server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@joaowinderfeldbussolotto/MCP-Websearch-Server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1552,
      "name": "Documentation Retrieval Server",
      "author": "@joaowinderfeldbussolotto/MCP-Websearch-Server",
      "overview": "Fetch relevant documentation snippets from Langchain, Llama Index, and OpenAI. Integrate seamlessly with MCP-compatible applications to enhance your search capabilities. Simplify your documentation access with a straightforward tool that retrieves information based on your queries.",
      "repository_url": "https://github.com/joaowinderfeldbussolotto/MCP-Websearch-Server",
      "homepage": "https://smithery.ai/server/@joaowinderfeldbussolotto/MCP-Websearch-Server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@joaowinderfeldbussolotto_MCP-Websearch-Server.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_docs",
          "description": "Deploy Server Documentation Retrieval Server Claim Server @joaowinderfeldbussolotto/MCP-Websearch-Server Try in Playground",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@joaowinderfeldbussolotto/MCP-Websearch-Server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "serperApiKey",
          "required": true,
          "description": "Serper API key for web search"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@joaowinderfeldbussolotto/MCP-Websearch-Server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1553.@joaowinderfeldbussolotto_MCP-Websearch-Server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1422
  }
}