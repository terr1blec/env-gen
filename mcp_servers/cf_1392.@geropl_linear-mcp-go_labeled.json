{
  "labels": {
    "analysis": "The Linear MCP Server is designed to interact with the Linear API, a project management tool, allowing users to manage issues, comments, and team information. Its core functionality revolves around automating workflows related to issue tracking, retrieving team and user-specific data, and conducting searches within the Linear platform. The available tools focus on retrieving issue details, comments, teams, and performing searches, indicating that the server is primarily used for project management and team collaboration.",
    "reasoning": "The primary label \"Project Management\" is chosen because the server's tools and description clearly align with managing tasks, issues, and team workflows within Linear, a project management platform. The secondary labels \"API Integration\" and \"Daily Productivity\" are selected because the server heavily relies on interacting with the Linear API to streamline workflows and enhance productivity. No custom label is needed as the predefined labels adequately cover the server's functionality.",
    "primary_label": "Project Management",
    "secondary_labels": [
      "API Integration",
      "Daily Productivity"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false
  },
  "metadata": {
    "server_id": 1391,
    "server_name": "Linear MCP Server",
    "rank_by_usage": 1392,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@geropl_linear-mcp-go.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@geropl/linear-mcp-go/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1391,
      "name": "Linear MCP Server",
      "author": "@geropl/linear-mcp-go",
      "overview": "Interact seamlessly with the Linear API to manage issues, comments, and team information. Automate your workflow by creating, updating, and searching for issues directly through the MCP protocol. Enhance your productivity with a streamlined interface for AI assistants.",
      "repository_url": "https://github.com/geropl/linear-mcp-go",
      "homepage": "https://smithery.ai/server/@geropl/linear-mcp-go",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@geropl_linear-mcp-go.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "linear_get_issue",
          "description": "Deploy Server Linear MCP Server Claim Server @geropl/linear-mcp-go Try in Playground linear_get_issue",
          "parameters": [
            {
              "name": "linear_get_issue",
              "required": false,
              "type": "string"
            },
            {
              "name": "issue",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_get_issue_comments",
          "description": "Retrieves paginated comments for a Linear issue. Supports navigating through comment threads and pagination.",
          "parameters": [
            {
              "name": "linear_get_issue_comments",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_get_teams",
          "description": "Retrieves Linear teams.",
          "parameters": [
            {
              "name": "linear_get_teams",
              "required": false,
              "type": "string"
            },
            {
              "name": "Retrieves",
              "required": false,
              "type": "string"
            },
            {
              "name": "Linear",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_get_user_issues",
          "description": "Retrieves issues assigned to a user.",
          "parameters": []
        },
        {
          "name": "linear_search_issues",
          "description": "Searches Linear issues.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@geropl/linear-mcp-go/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "linearApiKey",
          "required": true,
          "description": "Your Linear API key."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@geropl/linear-mcp-go/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1392.@geropl_linear-mcp-go_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1304
  }
}