{
  "labels": {
    "analysis": "The MCP Server is designed to enable natural language-based interaction for managing resources in APISIX, a cloud-native API gateway. Its core functionality revolves around API management, allowing users to perform a wide range of operations through AI clients. The available tools cover all major aspects of APISIX configuration, including route and service management, consumer authentication, plugin configuration, and SSL management. The server effectively streamlines API management tasks by enabling seamless interaction via large language models.",
    "reasoning": "The primary label \"API Management\" is chosen because the server's core functionality is centered around managing API configurations and resources within APISIX. Secondary labels \"DevOps\" and \"Networking\" are selected because the server facilitates operational tasks and interacts with network services (APIs). No custom label is needed as the predefined categories adequately capture the server's functionality.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Development Tools"
    ],
    "custom_label": "Networking",
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2158,
    "server_name": "APISIX Model Context Protocol Server",
    "rank_by_usage": 2159,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@api7_apisix-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@api7/apisix-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_resource",
          "description": "Get resource details by ID or list all resources",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "resource id"
              },
              "type": {
                "type": "string",
                "enum": [
                  "routes",
                  "services",
                  "upstreams",
                  "consumers",
                  "ssls",
                  "consumer_groups",
                  "plugin_configs",
                  "global_rules",
                  "stream_routes",
                  "protos",
                  "plugin_configs"
                ],
                "description": "resource type"
              },
              "page": {
                "type": "number",
                "description": "page number",
                "default": 1
              },
              "page_size": {
                "type": "number",
                "minimum": 10,
                "maximum": 500,
                "description": "page size",
                "default": 50
              },
              "name": {
                "type": "string",
                "description": "filter name"
              },
              "labels": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "filter labels"
              },
              "uri": {
                "type": "string",
                "description": "filter uri"
              }
            },
            "required": [
              "type"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "delete_resource",
          "description": "Delete a resource by ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "resource id"
              },
              "type": {
                "type": "string",
                "enum": [
                  "routes",
                  "services",
                  "upstreams",
                  "consumers",
                  "ssls",
                  "consumer_groups",
                  "plugin_configs",
                  "global_rules",
                  "stream_routes",
                  "protos",
                  "plugin_configs"
                ],
                "description": "resource type"
              }
            },
            "required": [
              "id",
              "type"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "send_request_to_gateway",
          "description": "Send a request or multiple requests to the APISIX gateway",
          "input_schema": {
            "type": "object",
            "properties": {
              "requests": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "description": "request path"
                    },
                    "method": {
                      "type": "string",
                      "description": "request method"
                    },
                    "data": {
                      "description": "request data"
                    },
                    "headers": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "request headers"
                    },
                    "repeatCount": {
                      "type": "number",
                      "description": "number of requests to send in parallel",
                      "default": 1
                    }
                  },
                  "required": [
                    "path",
                    "method"
                  ],
                  "additionalProperties": false
                },
                "description": "array of requests to send in parallel"
              }
            },
            "required": [
              "requests"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_route",
          "description": "Create a route",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "route id"
              },
              "route": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "route name"
                  },
                  "desc": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "route description"
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "route labels"
                  },
                  "uri": {
                    "type": "string",
                    "description": "route path"
                  },
                  "uris": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "multiple route paths"
                  },
                  "host": {
                    "type": "string",
                    "description": "route host"
                  },
                  "hosts": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "allowed hosts"
                  },
                  "remote_addr": {
                    "type": "string",
                    "description": "allowed remote address"
                  },
                  "remote_addrs": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "allowed remote addresses"
                  },
                  "methods": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE",
                        "PATCH",
                        "HEAD",
                        "OPTIONS",
                        "TRACE",
                        "CONNECT",
                        "PURGE"
                      ]
                    },
                    "description": "allowed HTTP methods"
                  },
                  "priority": {
                    "type": "number",
                    "description": "route priority",
                    "default": 0
                  },
                  "vars": {
                    "type": "array",
                    "items": {
                      "type": "array"
                    },
                    "description": "route match variables"
                  },
                  "filter_func": {
                    "type": "string",
                    "description": "route filter function"
                  },
                  "script": {
                    "type": "object",
                    "additionalProperties": {},
                    "description": "route script configuration"
                  },
                  "service_id": {
                    "type": "string",
                    "description": "service id"
                  },
                  "upstream_id": {
                    "type": "string",
                    "description": "upstream id"
                  },
                  "upstream": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "upstream name"
                      },
                      "desc": {
                        "type": "string",
                        "maxLength": 256,
                        "description": "upstream description"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "roundrobin",
                          "chash",
                          "ewma",
                          "least_conn"
                        ],
                        "default": "roundrobin",
                        "description": "load balancing algorithm"
                      },
                      "nodes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "host": {
                              "type": "string",
                              "description": "upstream host"
                            },
                            "port": {
                              "type": "number",
                              "description": "upstream port"
                            },
                            "weight": {
                              "type": "number",
                              "minimum": 0,
                              "description": "upstream weight"
                            },
                            "priority": {
                              "type": "number",
                              "minimum": 0,
                              "description": "upstream priority"
                            }
                          },
                          "required": [
                            "host",
                            "port"
                          ],
                          "additionalProperties": false
                        },
                        "description": "upstream nodes with weights"
                      },
                      "hash_on": {
                        "type": "string",
                        "enum": [
                          "vars",
                          "header",
                          "cookie",
                          "consumer",
                          "vars_combinations"
                        ],
                        "description": "hash on type for chash algorithm"
                      },
                      "key": {
                        "type": "string",
                        "description": "hash key for chash algorithm"
                      },
                      "timeout": {
                        "type": "object",
                        "properties": {
                          "connect": {
                            "type": "number",
                            "description": "connection timeout in seconds"
                          },
                          "send": {
                            "type": "number",
                            "description": "send timeout in seconds"
                          },
                          "read": {
                            "type": "number",
                            "description": "read timeout in seconds"
                          }
                        },
                        "additionalProperties": false,
                        "description": "timeout configuration"
                      },
                      "retries": {
                        "type": "number",
                        "minimum": 0,
                        "description": "retry count"
                      },
                      "retry_timeout": {
                        "type": "number",
                        "minimum": 0,
                        "description": "retry timeout"
                      },
                      "pass_host": {
                        "type": "string",
                        "enum": [
                          "pass",
                          "node",
                          "rewrite"
                        ],
                        "default": "pass",
                        "description": "host passing mode"
                      },
                      "upstream_host": {
                        "type": "string",
                        "description": "upstream host for rewrite mode"
                      },
                      "scheme": {
                        "type": "string",
                        "enum": [
                          "http",
                          "https",
                          "grpc",
                          "grpcs",
                          "tcp",
                          "tls",
                          "udp",
                          "kafka"
                        ],
                        "default": "http",
                        "description": "upstream scheme"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "upstream labels"
                      },
                      "checks": {
                        "type": "object",
                        "properties": {
                          "active": {
                            "type": "object",
                            "properties": {
                              "healthy": {
                                "type": "object",
                                "properties": {
                                  "interval": {
                                    "type": "number",
                                    "description": "check interval for healthy status"
                                  },
                                  "successes": {
                                    "type": "number",
                                    "description": "success count threshold"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "unhealthy": {
                                "type": "object",
                                "properties": {
                                  "interval": {
                                    "type": "number",
                                    "description": "check interval for unhealthy status"
                                  },
                                  "http_failures": {
                                    "type": "number",
                                    "description": "HTTP failure count threshold"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "http_path": {
                                "type": "string",
                                "description": "HTTP path for health check"
                              },
                              "host": {
                                "type": "string",
                                "description": "host for health check"
                              },
                              "port": {
                                "type": "number",
                                "description": "port for health check"
                              },
                              "https_verify_certificate": {
                                "type": "boolean",
                                "description": "verify HTTPS certificate"
                              },
                              "timeout": {
                                "type": "number",
                                "description": "timeout for health check"
                              }
                            },
                            "additionalProperties": false,
                            "description": "active health check configuration"
                          },
                          "passive": {
                            "type": "object",
                            "properties": {
                              "healthy": {
                                "type": "object",
                                "properties": {
                                  "http_statuses": {
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    },
                                    "description": "HTTP status codes for healthy state"
                                  },
                                  "successes": {
                                    "type": "number",
                                    "description": "success count threshold"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "unhealthy": {
                                "type": "object",
                                "properties": {
                                  "http_statuses": {
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    },
                                    "description": "HTTP status codes for unhealthy state"
                                  },
                                  "http_failures": {
                                    "type": "number",
                                    "description": "HTTP failure count threshold"
                                  },
                                  "timeout": {
                                    "type": "number",
                                    "description": "timeout threshold"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "description": "passive health check configuration"
                          }
                        },
                        "additionalProperties": false,
                        "description": "health check configuration"
                      },
                      "tls": {
                        "type": "object",
                        "properties": {
                          "client_cert": {
                            "type": "string",
                            "description": "TLS certificate"
                          },
                          "client_key": {
                            "type": "string",
                            "description": "TLS key"
                          },
                          "verify": {
                            "type": "boolean",
                            "description": "TLS verification"
                          },
                          "client_cert_id": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "TLS certificate id"
                          }
                        },
                        "additionalProperties": false,
                        "description": "TLS configuration"
                      },
                      "keepalive_pool": {
                        "type": "object",
                        "properties": {
                          "idle_timeout": {
                            "type": "number",
                            "description": "idle timeout",
                            "default": 60
                          },
                          "requests": {
                            "type": "number",
                            "description": "requests",
                            "default": 1000
                          },
                          "size": {
                            "type": "number",
                            "description": "size",
                            "default": 320
                          }
                        },
                        "additionalProperties": false,
                        "description": "keepalive pool configuration"
                      }
                    },
                    "additionalProperties": true,
                    "description": "upstream configuration"
                  },
                  "enable_websocket": {
                    "type": "boolean",
                    "description": "enable websocket"
                  },
                  "status": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "route status"
                  },
                  "plugins": {
                    "type": "object",
                    "properties": {
                      "_meta": {
                        "type": "object",
                        "properties": {
                          "disable": {
                            "type": "boolean",
                            "default": false,
                            "description": "control whether the plugin is enabled"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": true,
                    "description": "plugins"
                  },
                  "service_protocol": {
                    "type": "string",
                    "description": "service protocol"
                  }
                },
                "required": [
                  "uri"
                ],
                "additionalProperties": true,
                "description": "route configuration"
              }
            },
            "required": [
              "route"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "update_route",
          "description": "Update specific attributes of an existing route",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "route id"
              },
              "route": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "route name"
                      },
                      "desc": {
                        "type": "string",
                        "maxLength": 256,
                        "description": "route description"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "route labels"
                      },
                      "uri": {
                        "type": "string",
                        "description": "route path"
                      },
                      "uris": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "multiple route paths"
                      },
                      "host": {
                        "type": "string",
                        "description": "route host"
                      },
                      "hosts": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "allowed hosts"
                      },
                      "remote_addr": {
                        "type": "string",
                        "description": "allowed remote address"
                      },
                      "remote_addrs": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "allowed remote addresses"
                      },
                      "methods": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "GET",
                            "POST",
                            "PUT",
                            "DELETE",
                            "PATCH",
                            "HEAD",
                            "OPTIONS",
                            "TRACE",
                            "CONNECT",
                            "PURGE"
                          ]
                        },
                        "description": "allowed HTTP methods"
                      },
                      "priority": {
                        "type": "number",
                        "description": "route priority",
                        "default": 0
                      },
                      "vars": {
                        "type": "array",
                        "items": {
                          "type": "array"
                        },
                        "description": "route match variables"
                      },
                      "filter_func": {
                        "type": "string",
                        "description": "route filter function"
                      },
                      "script": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "route script configuration"
                      },
                      "service_id": {
                        "type": "string",
                        "description": "service id"
                      },
                      "upstream_id": {
                        "type": "string",
                        "description": "upstream id"
                      },
                      "upstream": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "upstream name"
                          },
                          "desc": {
                            "type": "string",
                            "maxLength": 256,
                            "description": "upstream description"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "roundrobin",
                              "chash",
                              "ewma",
                              "least_conn"
                            ],
                            "default": "roundrobin",
                            "description": "load balancing algorithm"
                          },
                          "nodes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "host": {
                                  "type": "string",
                                  "description": "upstream host"
                                },
                                "port": {
                                  "type": "number",
                                  "description": "upstream port"
                                },
                                "weight": {
                                  "type": "number",
                                  "minimum": 0,
                                  "description": "upstream weight"
                                },
                                "priority": {
                                  "type": "number",
                                  "minimum": 0,
                                  "description": "upstream priority"
                                }
                              },
                              "required": [
                                "host",
                                "port"
                              ],
                              "additionalProperties": false
                            },
                            "description": "upstream nodes with weights"
                          },
                          "hash_on": {
                            "type": "string",
                            "enum": [
                              "vars",
                              "header",
                              "cookie",
                              "consumer",
                              "vars_combinations"
                            ],
                            "description": "hash on type for chash algorithm"
                          },
                          "key": {
                            "type": "string",
                            "description": "hash key for chash algorithm"
                          },
                          "timeout": {
                            "type": "object",
                            "properties": {
                              "connect": {
                                "type": "number",
                                "description": "connection timeout in seconds"
                              },
                              "send": {
                                "type": "number",
                                "description": "send timeout in seconds"
                              },
                              "read": {
                                "type": "number",
                                "description": "read timeout in seconds"
                              }
                            },
                            "additionalProperties": false,
                            "description": "timeout configuration"
                          },
                          "retries": {
                            "type": "number",
                            "minimum": 0,
                            "description": "retry count"
                          },
                          "retry_timeout": {
                            "type": "number",
                            "minimum": 0,
                            "description": "retry timeout"
                          },
                          "pass_host": {
                            "type": "string",
                            "enum": [
                              "pass",
                              "node",
                              "rewrite"
                            ],
                            "default": "pass",
                            "description": "host passing mode"
                          },
                          "upstream_host": {
                            "type": "string",
                            "description": "upstream host for rewrite mode"
                          },
                          "scheme": {
                            "type": "string",
                            "enum": [
                              "http",
                              "https",
                              "grpc",
                              "grpcs",
                              "tcp",
                              "tls",
                              "udp",
                              "kafka"
                            ],
                            "default": "http",
                            "description": "upstream scheme"
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "upstream labels"
                          },
                          "checks": {
                            "type": "object",
                            "properties": {
                              "active": {
                                "type": "object",
                                "properties": {
                                  "healthy": {
                                    "type": "object",
                                    "properties": {
                                      "interval": {
                                        "type": "number",
                                        "description": "check interval for healthy status"
                                      },
                                      "successes": {
                                        "type": "number",
                                        "description": "success count threshold"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "unhealthy": {
                                    "type": "object",
                                    "properties": {
                                      "interval": {
                                        "type": "number",
                                        "description": "check interval for unhealthy status"
                                      },
                                      "http_failures": {
                                        "type": "number",
                                        "description": "HTTP failure count threshold"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "http_path": {
                                    "type": "string",
                                    "description": "HTTP path for health check"
                                  },
                                  "host": {
                                    "type": "string",
                                    "description": "host for health check"
                                  },
                                  "port": {
                                    "type": "number",
                                    "description": "port for health check"
                                  },
                                  "https_verify_certificate": {
                                    "type": "boolean",
                                    "description": "verify HTTPS certificate"
                                  },
                                  "timeout": {
                                    "type": "number",
                                    "description": "timeout for health check"
                                  }
                                },
                                "additionalProperties": false,
                                "description": "active health check configuration"
                              },
                              "passive": {
                                "type": "object",
                                "properties": {
                                  "healthy": {
                                    "type": "object",
                                    "properties": {
                                      "http_statuses": {
                                        "type": "array",
                                        "items": {
                                          "type": "number"
                                        },
                                        "description": "HTTP status codes for healthy state"
                                      },
                                      "successes": {
                                        "type": "number",
                                        "description": "success count threshold"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "unhealthy": {
                                    "type": "object",
                                    "properties": {
                                      "http_statuses": {
                                        "type": "array",
                                        "items": {
                                          "type": "number"
                                        },
                                        "description": "HTTP status codes for unhealthy state"
                                      },
                                      "http_failures": {
                                        "type": "number",
                                        "description": "HTTP failure count threshold"
                                      },
                                      "timeout": {
                                        "type": "number",
                                        "description": "timeout threshold"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false,
                                "description": "passive health check configuration"
                              }
                            },
                            "additionalProperties": false,
                            "description": "health check configuration"
                          },
                          "tls": {
                            "type": "object",
                            "properties": {
                              "client_cert": {
                                "type": "string",
                                "description": "TLS certificate"
                              },
                              "client_key": {
                                "type": "string",
                                "description": "TLS key"
                              },
                              "verify": {
                                "type": "boolean",
                                "description": "TLS verification"
                              },
                              "client_cert_id": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "TLS certificate id"
                              }
                            },
                            "additionalProperties": false,
                            "description": "TLS configuration"
                          },
                          "keepalive_pool": {
                            "type": "object",
                            "properties": {
                              "idle_timeout": {
                                "type": "number",
                                "description": "idle timeout",
                                "default": 60
                              },
                              "requests": {
                                "type": "number",
                                "description": "requests",
                                "default": 1000
                              },
                              "size": {
                                "type": "number",
                                "description": "size",
                                "default": 320
                              }
                            },
                            "additionalProperties": false,
                            "description": "keepalive pool configuration"
                          }
                        },
                        "additionalProperties": true,
                        "description": "upstream configuration"
                      },
                      "enable_websocket": {
                        "type": "boolean",
                        "description": "enable websocket"
                      },
                      "status": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "description": "route status"
                      },
                      "plugins": {
                        "type": "object",
                        "properties": {
                          "_meta": {
                            "type": "object",
                            "properties": {
                              "disable": {
                                "type": "boolean",
                                "default": false,
                                "description": "control whether the plugin is enabled"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": true,
                        "description": "plugins"
                      },
                      "service_protocol": {
                        "type": "string",
                        "description": "service protocol"
                      }
                    },
                    "additionalProperties": true,
                    "description": "route configuration"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "route configuration"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_service",
          "description": "Create a service",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "service id"
              },
              "service": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100,
                    "description": "service name"
                  },
                  "desc": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "service description"
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "service labels"
                  },
                  "upstream_id": {
                    "type": "string",
                    "description": "upstream id"
                  },
                  "upstream": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "upstream name"
                      },
                      "desc": {
                        "type": "string",
                        "maxLength": 256,
                        "description": "upstream description"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "roundrobin",
                          "chash",
                          "ewma",
                          "least_conn"
                        ],
                        "default": "roundrobin",
                        "description": "load balancing algorithm"
                      },
                      "nodes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "host": {
                              "type": "string",
                              "description": "upstream host"
                            },
                            "port": {
                              "type": "number",
                              "description": "upstream port"
                            },
                            "weight": {
                              "type": "number",
                              "minimum": 0,
                              "description": "upstream weight"
                            },
                            "priority": {
                              "type": "number",
                              "minimum": 0,
                              "description": "upstream priority"
                            }
                          },
                          "required": [
                            "host",
                            "port"
                          ],
                          "additionalProperties": false
                        },
                        "description": "upstream nodes with weights"
                      },
                      "hash_on": {
                        "type": "string",
                        "enum": [
                          "vars",
                          "header",
                          "cookie",
                          "consumer",
                          "vars_combinations"
                        ],
                        "description": "hash on type for chash algorithm"
                      },
                      "key": {
                        "type": "string",
                        "description": "hash key for chash algorithm"
                      },
                      "timeout": {
                        "type": "object",
                        "properties": {
                          "connect": {
                            "type": "number",
                            "description": "connection timeout in seconds"
                          },
                          "send": {
                            "type": "number",
                            "description": "send timeout in seconds"
                          },
                          "read": {
                            "type": "number",
                            "description": "read timeout in seconds"
                          }
                        },
                        "additionalProperties": false,
                        "description": "timeout configuration"
                      },
                      "retries": {
                        "type": "number",
                        "minimum": 0,
                        "description": "retry count"
                      },
                      "retry_timeout": {
                        "type": "number",
                        "minimum": 0,
                        "description": "retry timeout"
                      },
                      "pass_host": {
                        "type": "string",
                        "enum": [
                          "pass",
                          "node",
                          "rewrite"
                        ],
                        "default": "pass",
                        "description": "host passing mode"
                      },
                      "upstream_host": {
                        "type": "string",
                        "description": "upstream host for rewrite mode"
                      },
                      "scheme": {
                        "type": "string",
                        "enum": [
                          "http",
                          "https",
                          "grpc",
                          "grpcs",
                          "tcp",
                          "tls",
                          "udp",
                          "kafka"
                        ],
                        "default": "http",
                        "description": "upstream scheme"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "upstream labels"
                      },
                      "checks": {
                        "type": "object",
                        "properties": {
                          "active": {
                            "type": "object",
                            "properties": {
                              "healthy": {
                                "type": "object",
                                "properties": {
                                  "interval": {
                                    "type": "number",
                                    "description": "check interval for healthy status"
                                  },
                                  "successes": {
                                    "type": "number",
                                    "description": "success count threshold"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "unhealthy": {
                                "type": "object",
                                "properties": {
                                  "interval": {
                                    "type": "number",
                                    "description": "check interval for unhealthy status"
                                  },
                                  "http_failures": {
                                    "type": "number",
                                    "description": "HTTP failure count threshold"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "http_path": {
                                "type": "string",
                                "description": "HTTP path for health check"
                              },
                              "host": {
                                "type": "string",
                                "description": "host for health check"
                              },
                              "port": {
                                "type": "number",
                                "description": "port for health check"
                              },
                              "https_verify_certificate": {
                                "type": "boolean",
                                "description": "verify HTTPS certificate"
                              },
                              "timeout": {
                                "type": "number",
                                "description": "timeout for health check"
                              }
                            },
                            "additionalProperties": false,
                            "description": "active health check configuration"
                          },
                          "passive": {
                            "type": "object",
                            "properties": {
                              "healthy": {
                                "type": "object",
                                "properties": {
                                  "http_statuses": {
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    },
                                    "description": "HTTP status codes for healthy state"
                                  },
                                  "successes": {
                                    "type": "number",
                                    "description": "success count threshold"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "unhealthy": {
                                "type": "object",
                                "properties": {
                                  "http_statuses": {
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    },
                                    "description": "HTTP status codes for unhealthy state"
                                  },
                                  "http_failures": {
                                    "type": "number",
                                    "description": "HTTP failure count threshold"
                                  },
                                  "timeout": {
                                    "type": "number",
                                    "description": "timeout threshold"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "description": "passive health check configuration"
                          }
                        },
                        "additionalProperties": false,
                        "description": "health check configuration"
                      },
                      "tls": {
                        "type": "object",
                        "properties": {
                          "client_cert": {
                            "type": "string",
                            "description": "TLS certificate"
                          },
                          "client_key": {
                            "type": "string",
                            "description": "TLS key"
                          },
                          "verify": {
                            "type": "boolean",
                            "description": "TLS verification"
                          },
                          "client_cert_id": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "TLS certificate id"
                          }
                        },
                        "additionalProperties": false,
                        "description": "TLS configuration"
                      },
                      "keepalive_pool": {
                        "type": "object",
                        "properties": {
                          "idle_timeout": {
                            "type": "number",
                            "description": "idle timeout",
                            "default": 60
                          },
                          "requests": {
                            "type": "number",
                            "description": "requests",
                            "default": 1000
                          },
                          "size": {
                            "type": "number",
                            "description": "size",
                            "default": 320
                          }
                        },
                        "additionalProperties": false,
                        "description": "keepalive pool configuration"
                      }
                    },
                    "additionalProperties": true,
                    "description": "upstream service configuration object"
                  },
                  "enable_websocket": {
                    "type": "boolean",
                    "description": "enable websocket"
                  },
                  "plugins": {
                    "type": "object",
                    "properties": {
                      "_meta": {
                        "type": "object",
                        "properties": {
                          "disable": {
                            "type": "boolean",
                            "default": false,
                            "description": "control whether the plugin is enabled"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": true,
                    "description": "plugins"
                  },
                  "script": {
                    "type": "object",
                    "additionalProperties": {},
                    "description": "service script configuration"
                  },
                  "hosts": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "allowed hosts"
                  },
                  "vars": {
                    "type": "array",
                    "items": {
                      "type": "array"
                    },
                    "description": "service match variables"
                  }
                },
                "additionalProperties": true,
                "description": "service configuration object"
              }
            },
            "required": [
              "service"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "update_service",
          "description": "Update specific attributes of an existing service",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "service id"
              },
              "service": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100,
                        "description": "service name"
                      },
                      "desc": {
                        "type": "string",
                        "maxLength": 256,
                        "description": "service description"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "service labels"
                      },
                      "upstream_id": {
                        "type": "string",
                        "description": "upstream id"
                      },
                      "upstream": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "upstream name"
                          },
                          "desc": {
                            "type": "string",
                            "maxLength": 256,
                            "description": "upstream description"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "roundrobin",
                              "chash",
                              "ewma",
                              "least_conn"
                            ],
                            "default": "roundrobin",
                            "description": "load balancing algorithm"
                          },
                          "nodes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "host": {
                                  "type": "string",
                                  "description": "upstream host"
                                },
                                "port": {
                                  "type": "number",
                                  "description": "upstream port"
                                },
                                "weight": {
                                  "type": "number",
                                  "minimum": 0,
                                  "description": "upstream weight"
                                },
                                "priority": {
                                  "type": "number",
                                  "minimum": 0,
                                  "description": "upstream priority"
                                }
                              },
                              "required": [
                                "host",
                                "port"
                              ],
                              "additionalProperties": false
                            },
                            "description": "upstream nodes with weights"
                          },
                          "hash_on": {
                            "type": "string",
                            "enum": [
                              "vars",
                              "header",
                              "cookie",
                              "consumer",
                              "vars_combinations"
                            ],
                            "description": "hash on type for chash algorithm"
                          },
                          "key": {
                            "type": "string",
                            "description": "hash key for chash algorithm"
                          },
                          "timeout": {
                            "type": "object",
                            "properties": {
                              "connect": {
                                "type": "number",
                                "description": "connection timeout in seconds"
                              },
                              "send": {
                                "type": "number",
                                "description": "send timeout in seconds"
                              },
                              "read": {
                                "type": "number",
                                "description": "read timeout in seconds"
                              }
                            },
                            "additionalProperties": false,
                            "description": "timeout configuration"
                          },
                          "retries": {
                            "type": "number",
                            "minimum": 0,
                            "description": "retry count"
                          },
                          "retry_timeout": {
                            "type": "number",
                            "minimum": 0,
                            "description": "retry timeout"
                          },
                          "pass_host": {
                            "type": "string",
                            "enum": [
                              "pass",
                              "node",
                              "rewrite"
                            ],
                            "default": "pass",
                            "description": "host passing mode"
                          },
                          "upstream_host": {
                            "type": "string",
                            "description": "upstream host for rewrite mode"
                          },
                          "scheme": {
                            "type": "string",
                            "enum": [
                              "http",
                              "https",
                              "grpc",
                              "grpcs",
                              "tcp",
                              "tls",
                              "udp",
                              "kafka"
                            ],
                            "default": "http",
                            "description": "upstream scheme"
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "upstream labels"
                          },
                          "checks": {
                            "type": "object",
                            "properties": {
                              "active": {
                                "type": "object",
                                "properties": {
                                  "healthy": {
                                    "type": "object",
                                    "properties": {
                                      "interval": {
                                        "type": "number",
                                        "description": "check interval for healthy status"
                                      },
                                      "successes": {
                                        "type": "number",
                                        "description": "success count threshold"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "unhealthy": {
                                    "type": "object",
                                    "properties": {
                                      "interval": {
                                        "type": "number",
                                        "description": "check interval for unhealthy status"
                                      },
                                      "http_failures": {
                                        "type": "number",
                                        "description": "HTTP failure count threshold"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "http_path": {
                                    "type": "string",
                                    "description": "HTTP path for health check"
                                  },
                                  "host": {
                                    "type": "string",
                                    "description": "host for health check"
                                  },
                                  "port": {
                                    "type": "number",
                                    "description": "port for health check"
                                  },
                                  "https_verify_certificate": {
                                    "type": "boolean",
                                    "description": "verify HTTPS certificate"
                                  },
                                  "timeout": {
                                    "type": "number",
                                    "description": "timeout for health check"
                                  }
                                },
                                "additionalProperties": false,
                                "description": "active health check configuration"
                              },
                              "passive": {
                                "type": "object",
                                "properties": {
                                  "healthy": {
                                    "type": "object",
                                    "properties": {
                                      "http_statuses": {
                                        "type": "array",
                                        "items": {
                                          "type": "number"
                                        },
                                        "description": "HTTP status codes for healthy state"
                                      },
                                      "successes": {
                                        "type": "number",
                                        "description": "success count threshold"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "unhealthy": {
                                    "type": "object",
                                    "properties": {
                                      "http_statuses": {
                                        "type": "array",
                                        "items": {
                                          "type": "number"
                                        },
                                        "description": "HTTP status codes for unhealthy state"
                                      },
                                      "http_failures": {
                                        "type": "number",
                                        "description": "HTTP failure count threshold"
                                      },
                                      "timeout": {
                                        "type": "number",
                                        "description": "timeout threshold"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false,
                                "description": "passive health check configuration"
                              }
                            },
                            "additionalProperties": false,
                            "description": "health check configuration"
                          },
                          "tls": {
                            "type": "object",
                            "properties": {
                              "client_cert": {
                                "type": "string",
                                "description": "TLS certificate"
                              },
                              "client_key": {
                                "type": "string",
                                "description": "TLS key"
                              },
                              "verify": {
                                "type": "boolean",
                                "description": "TLS verification"
                              },
                              "client_cert_id": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "TLS certificate id"
                              }
                            },
                            "additionalProperties": false,
                            "description": "TLS configuration"
                          },
                          "keepalive_pool": {
                            "type": "object",
                            "properties": {
                              "idle_timeout": {
                                "type": "number",
                                "description": "idle timeout",
                                "default": 60
                              },
                              "requests": {
                                "type": "number",
                                "description": "requests",
                                "default": 1000
                              },
                              "size": {
                                "type": "number",
                                "description": "size",
                                "default": 320
                              }
                            },
                            "additionalProperties": false,
                            "description": "keepalive pool configuration"
                          }
                        },
                        "additionalProperties": true,
                        "description": "upstream service configuration object"
                      },
                      "enable_websocket": {
                        "type": "boolean",
                        "description": "enable websocket"
                      },
                      "plugins": {
                        "type": "object",
                        "properties": {
                          "_meta": {
                            "type": "object",
                            "properties": {
                              "disable": {
                                "type": "boolean",
                                "default": false,
                                "description": "control whether the plugin is enabled"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": true,
                        "description": "plugins"
                      },
                      "script": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "service script configuration"
                      },
                      "hosts": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "allowed hosts"
                      },
                      "vars": {
                        "type": "array",
                        "items": {
                          "type": "array"
                        },
                        "description": "service match variables"
                      }
                    },
                    "additionalProperties": true,
                    "description": "service configuration object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "service configuration object"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_upstream",
          "description": "Create an upstream service with load balancing settings",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "upstream id"
              },
              "upstream": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "upstream name"
                  },
                  "desc": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "upstream description"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "roundrobin",
                      "chash",
                      "ewma",
                      "least_conn"
                    ],
                    "default": "roundrobin",
                    "description": "load balancing algorithm"
                  },
                  "nodes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "host": {
                          "type": "string",
                          "description": "upstream host"
                        },
                        "port": {
                          "type": "number",
                          "description": "upstream port"
                        },
                        "weight": {
                          "type": "number",
                          "minimum": 0,
                          "description": "upstream weight"
                        },
                        "priority": {
                          "type": "number",
                          "minimum": 0,
                          "description": "upstream priority"
                        }
                      },
                      "required": [
                        "host",
                        "port"
                      ],
                      "additionalProperties": false
                    },
                    "description": "upstream nodes with weights"
                  },
                  "hash_on": {
                    "type": "string",
                    "enum": [
                      "vars",
                      "header",
                      "cookie",
                      "consumer",
                      "vars_combinations"
                    ],
                    "description": "hash on type for chash algorithm"
                  },
                  "key": {
                    "type": "string",
                    "description": "hash key for chash algorithm"
                  },
                  "timeout": {
                    "type": "object",
                    "properties": {
                      "connect": {
                        "type": "number",
                        "description": "connection timeout in seconds"
                      },
                      "send": {
                        "type": "number",
                        "description": "send timeout in seconds"
                      },
                      "read": {
                        "type": "number",
                        "description": "read timeout in seconds"
                      }
                    },
                    "additionalProperties": false,
                    "description": "timeout configuration"
                  },
                  "retries": {
                    "type": "number",
                    "minimum": 0,
                    "description": "retry count"
                  },
                  "retry_timeout": {
                    "type": "number",
                    "minimum": 0,
                    "description": "retry timeout"
                  },
                  "pass_host": {
                    "type": "string",
                    "enum": [
                      "pass",
                      "node",
                      "rewrite"
                    ],
                    "default": "pass",
                    "description": "host passing mode"
                  },
                  "upstream_host": {
                    "type": "string",
                    "description": "upstream host for rewrite mode"
                  },
                  "scheme": {
                    "type": "string",
                    "enum": [
                      "http",
                      "https",
                      "grpc",
                      "grpcs",
                      "tcp",
                      "tls",
                      "udp",
                      "kafka"
                    ],
                    "default": "http",
                    "description": "upstream scheme"
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "upstream labels"
                  },
                  "checks": {
                    "type": "object",
                    "properties": {
                      "active": {
                        "type": "object",
                        "properties": {
                          "healthy": {
                            "type": "object",
                            "properties": {
                              "interval": {
                                "type": "number",
                                "description": "check interval for healthy status"
                              },
                              "successes": {
                                "type": "number",
                                "description": "success count threshold"
                              }
                            },
                            "additionalProperties": false
                          },
                          "unhealthy": {
                            "type": "object",
                            "properties": {
                              "interval": {
                                "type": "number",
                                "description": "check interval for unhealthy status"
                              },
                              "http_failures": {
                                "type": "number",
                                "description": "HTTP failure count threshold"
                              }
                            },
                            "additionalProperties": false
                          },
                          "http_path": {
                            "type": "string",
                            "description": "HTTP path for health check"
                          },
                          "host": {
                            "type": "string",
                            "description": "host for health check"
                          },
                          "port": {
                            "type": "number",
                            "description": "port for health check"
                          },
                          "https_verify_certificate": {
                            "type": "boolean",
                            "description": "verify HTTPS certificate"
                          },
                          "timeout": {
                            "type": "number",
                            "description": "timeout for health check"
                          }
                        },
                        "additionalProperties": false,
                        "description": "active health check configuration"
                      },
                      "passive": {
                        "type": "object",
                        "properties": {
                          "healthy": {
                            "type": "object",
                            "properties": {
                              "http_statuses": {
                                "type": "array",
                                "items": {
                                  "type": "number"
                                },
                                "description": "HTTP status codes for healthy state"
                              },
                              "successes": {
                                "type": "number",
                                "description": "success count threshold"
                              }
                            },
                            "additionalProperties": false
                          },
                          "unhealthy": {
                            "type": "object",
                            "properties": {
                              "http_statuses": {
                                "type": "array",
                                "items": {
                                  "type": "number"
                                },
                                "description": "HTTP status codes for unhealthy state"
                              },
                              "http_failures": {
                                "type": "number",
                                "description": "HTTP failure count threshold"
                              },
                              "timeout": {
                                "type": "number",
                                "description": "timeout threshold"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "description": "passive health check configuration"
                      }
                    },
                    "additionalProperties": false,
                    "description": "health check configuration"
                  },
                  "tls": {
                    "type": "object",
                    "properties": {
                      "client_cert": {
                        "type": "string",
                        "description": "TLS certificate"
                      },
                      "client_key": {
                        "type": "string",
                        "description": "TLS key"
                      },
                      "verify": {
                        "type": "boolean",
                        "description": "TLS verification"
                      },
                      "client_cert_id": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "TLS certificate id"
                      }
                    },
                    "additionalProperties": false,
                    "description": "TLS configuration"
                  },
                  "keepalive_pool": {
                    "type": "object",
                    "properties": {
                      "idle_timeout": {
                        "type": "number",
                        "description": "idle timeout",
                        "default": 60
                      },
                      "requests": {
                        "type": "number",
                        "description": "requests",
                        "default": 1000
                      },
                      "size": {
                        "type": "number",
                        "description": "size",
                        "default": 320
                      }
                    },
                    "additionalProperties": false,
                    "description": "keepalive pool configuration"
                  }
                },
                "required": [
                  "nodes"
                ],
                "additionalProperties": true,
                "description": "upstream service configuration object"
              }
            },
            "required": [
              "upstream"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "update_upstream",
          "description": "Update specific attributes of an existing upstream",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "upstream id"
              },
              "upstream": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "upstream name"
                      },
                      "desc": {
                        "type": "string",
                        "maxLength": 256,
                        "description": "upstream description"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "roundrobin",
                          "chash",
                          "ewma",
                          "least_conn"
                        ],
                        "default": "roundrobin",
                        "description": "load balancing algorithm"
                      },
                      "nodes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "host": {
                              "type": "string",
                              "description": "upstream host"
                            },
                            "port": {
                              "type": "number",
                              "description": "upstream port"
                            },
                            "weight": {
                              "type": "number",
                              "minimum": 0,
                              "description": "upstream weight"
                            },
                            "priority": {
                              "type": "number",
                              "minimum": 0,
                              "description": "upstream priority"
                            }
                          },
                          "required": [
                            "host",
                            "port"
                          ],
                          "additionalProperties": false
                        },
                        "description": "upstream nodes with weights"
                      },
                      "hash_on": {
                        "type": "string",
                        "enum": [
                          "vars",
                          "header",
                          "cookie",
                          "consumer",
                          "vars_combinations"
                        ],
                        "description": "hash on type for chash algorithm"
                      },
                      "key": {
                        "type": "string",
                        "description": "hash key for chash algorithm"
                      },
                      "timeout": {
                        "type": "object",
                        "properties": {
                          "connect": {
                            "type": "number",
                            "description": "connection timeout in seconds"
                          },
                          "send": {
                            "type": "number",
                            "description": "send timeout in seconds"
                          },
                          "read": {
                            "type": "number",
                            "description": "read timeout in seconds"
                          }
                        },
                        "additionalProperties": false,
                        "description": "timeout configuration"
                      },
                      "retries": {
                        "type": "number",
                        "minimum": 0,
                        "description": "retry count"
                      },
                      "retry_timeout": {
                        "type": "number",
                        "minimum": 0,
                        "description": "retry timeout"
                      },
                      "pass_host": {
                        "type": "string",
                        "enum": [
                          "pass",
                          "node",
                          "rewrite"
                        ],
                        "default": "pass",
                        "description": "host passing mode"
                      },
                      "upstream_host": {
                        "type": "string",
                        "description": "upstream host for rewrite mode"
                      },
                      "scheme": {
                        "type": "string",
                        "enum": [
                          "http",
                          "https",
                          "grpc",
                          "grpcs",
                          "tcp",
                          "tls",
                          "udp",
                          "kafka"
                        ],
                        "default": "http",
                        "description": "upstream scheme"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "upstream labels"
                      },
                      "checks": {
                        "type": "object",
                        "properties": {
                          "active": {
                            "type": "object",
                            "properties": {
                              "healthy": {
                                "type": "object",
                                "properties": {
                                  "interval": {
                                    "type": "number",
                                    "description": "check interval for healthy status"
                                  },
                                  "successes": {
                                    "type": "number",
                                    "description": "success count threshold"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "unhealthy": {
                                "type": "object",
                                "properties": {
                                  "interval": {
                                    "type": "number",
                                    "description": "check interval for unhealthy status"
                                  },
                                  "http_failures": {
                                    "type": "number",
                                    "description": "HTTP failure count threshold"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "http_path": {
                                "type": "string",
                                "description": "HTTP path for health check"
                              },
                              "host": {
                                "type": "string",
                                "description": "host for health check"
                              },
                              "port": {
                                "type": "number",
                                "description": "port for health check"
                              },
                              "https_verify_certificate": {
                                "type": "boolean",
                                "description": "verify HTTPS certificate"
                              },
                              "timeout": {
                                "type": "number",
                                "description": "timeout for health check"
                              }
                            },
                            "additionalProperties": false,
                            "description": "active health check configuration"
                          },
                          "passive": {
                            "type": "object",
                            "properties": {
                              "healthy": {
                                "type": "object",
                                "properties": {
                                  "http_statuses": {
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    },
                                    "description": "HTTP status codes for healthy state"
                                  },
                                  "successes": {
                                    "type": "number",
                                    "description": "success count threshold"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "unhealthy": {
                                "type": "object",
                                "properties": {
                                  "http_statuses": {
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    },
                                    "description": "HTTP status codes for unhealthy state"
                                  },
                                  "http_failures": {
                                    "type": "number",
                                    "description": "HTTP failure count threshold"
                                  },
                                  "timeout": {
                                    "type": "number",
                                    "description": "timeout threshold"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "description": "passive health check configuration"
                          }
                        },
                        "additionalProperties": false,
                        "description": "health check configuration"
                      },
                      "tls": {
                        "type": "object",
                        "properties": {
                          "client_cert": {
                            "type": "string",
                            "description": "TLS certificate"
                          },
                          "client_key": {
                            "type": "string",
                            "description": "TLS key"
                          },
                          "verify": {
                            "type": "boolean",
                            "description": "TLS verification"
                          },
                          "client_cert_id": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "TLS certificate id"
                          }
                        },
                        "additionalProperties": false,
                        "description": "TLS configuration"
                      },
                      "keepalive_pool": {
                        "type": "object",
                        "properties": {
                          "idle_timeout": {
                            "type": "number",
                            "description": "idle timeout",
                            "default": 60
                          },
                          "requests": {
                            "type": "number",
                            "description": "requests",
                            "default": 1000
                          },
                          "size": {
                            "type": "number",
                            "description": "size",
                            "default": 320
                          }
                        },
                        "additionalProperties": false,
                        "description": "keepalive pool configuration"
                      }
                    },
                    "additionalProperties": true,
                    "description": "upstream service configuration object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "upstream service configuration object"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_or_update_consumer",
          "description": "Create a consumer, if the consumer already exists, it will be updated",
          "input_schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "consumer username"
              },
              "desc": {
                "type": "string",
                "description": "consumer description"
              },
              "labels": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "consumer labels"
              },
              "plugins": {
                "type": "object",
                "properties": {
                  "_meta": {
                    "type": "object",
                    "properties": {
                      "disable": {
                        "type": "boolean",
                        "default": false,
                        "description": "control whether the plugin is enabled"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": true,
                "description": "consumer plugins"
              },
              "group_id": {
                "type": "string",
                "description": "consumer group id"
              }
            },
            "required": [
              "username"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_credential",
          "description": "Get all credentials or a specific credential for a consumer",
          "input_schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "consumer username"
              },
              "id": {
                "type": "string",
                "description": "credential id"
              }
            },
            "required": [
              "username"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_or_update_credential",
          "description": "Create or update a credential for a consumer",
          "input_schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "consumer username"
              },
              "id": {
                "type": "string",
                "description": "credential id"
              },
              "credential": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "credential name"
                  },
                  "plugins": {
                    "type": "object",
                    "properties": {
                      "_meta": {
                        "type": "object",
                        "properties": {
                          "disable": {
                            "type": "boolean",
                            "default": false,
                            "description": "control whether the plugin is enabled"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": true,
                    "description": "credential plugins"
                  },
                  "desc": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "credential description"
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "credential labels"
                  }
                },
                "required": [
                  "name"
                ],
                "additionalProperties": true,
                "description": "credential configuration object"
              }
            },
            "required": [
              "username",
              "id",
              "credential"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "delete_credential",
          "description": "Delete a credential for a consumer",
          "input_schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "consumer username"
              },
              "id": {
                "type": "string",
                "description": "credential id"
              }
            },
            "required": [
              "username",
              "id"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_ssl",
          "description": "Create an SSL certificate",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "SSL certificate ID"
              },
              "ssl": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string",
                    "description": "SSL label"
                  },
                  "cert": {
                    "type": "string",
                    "description": "SSL certificate in PEM format"
                  },
                  "certs": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "SSL certificates in PEM format"
                  },
                  "key": {
                    "type": "string",
                    "description": "SSL private key in PEM format"
                  },
                  "keys": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "SSL private keys in PEM format"
                  },
                  "sni": {
                    "type": "string",
                    "description": "Server Name Indication"
                  },
                  "snis": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Server Name Indications"
                  },
                  "client": {
                    "type": "object",
                    "properties": {
                      "ca": {
                        "type": "string",
                        "description": "SSL client CA certificate in PEM format"
                      },
                      "depth": {
                        "type": "number",
                        "default": 1,
                        "description": "SSL client verification depth"
                      },
                      "skip_mtls_uri_regex": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "URIs to skip mTLS verification"
                      }
                    },
                    "required": [
                      "ca"
                    ],
                    "additionalProperties": false,
                    "description": "SSL client configuration"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "server",
                      "client"
                    ],
                    "default": "server",
                    "description": "SSL type"
                  },
                  "status": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "SSL certificate status"
                  },
                  "validity_start": {
                    "type": "number",
                    "description": "SSL certificate validity start timestamp"
                  },
                  "validity_end": {
                    "type": "number",
                    "description": "SSL certificate validity end timestamp"
                  }
                },
                "required": [
                  "cert",
                  "key"
                ],
                "additionalProperties": true,
                "description": "SSL certificate configuration object"
              }
            },
            "required": [
              "ssl"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "update_ssl",
          "description": "Update specific attributes of an existing SSL certificate",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "SSL certificate ID"
              },
              "ssl": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "SSL label"
                      },
                      "cert": {
                        "type": "string",
                        "description": "SSL certificate in PEM format"
                      },
                      "certs": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "SSL certificates in PEM format"
                      },
                      "key": {
                        "type": "string",
                        "description": "SSL private key in PEM format"
                      },
                      "keys": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "SSL private keys in PEM format"
                      },
                      "sni": {
                        "type": "string",
                        "description": "Server Name Indication"
                      },
                      "snis": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Server Name Indications"
                      },
                      "client": {
                        "type": "object",
                        "properties": {
                          "ca": {
                            "type": "string",
                            "description": "SSL client CA certificate in PEM format"
                          },
                          "depth": {
                            "type": "number",
                            "default": 1,
                            "description": "SSL client verification depth"
                          },
                          "skip_mtls_uri_regex": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "URIs to skip mTLS verification"
                          }
                        },
                        "required": [
                          "ca"
                        ],
                        "additionalProperties": false,
                        "description": "SSL client configuration"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "server",
                          "client"
                        ],
                        "default": "server",
                        "description": "SSL type"
                      },
                      "status": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "description": "SSL certificate status"
                      },
                      "validity_start": {
                        "type": "number",
                        "description": "SSL certificate validity start timestamp"
                      },
                      "validity_end": {
                        "type": "number",
                        "description": "SSL certificate validity end timestamp"
                      }
                    },
                    "additionalProperties": true,
                    "description": "SSL certificate configuration object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "SSL certificate configuration object"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_global_rule",
          "description": "Create a global rule",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "global rule ID"
              },
              "plugins": {
                "type": "object",
                "properties": {
                  "_meta": {
                    "type": "object",
                    "properties": {
                      "disable": {
                        "type": "boolean",
                        "default": false,
                        "description": "control whether the plugin is enabled"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": true,
                "description": "plugins configuration"
              }
            },
            "required": [
              "id",
              "plugins"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "update_global_rule",
          "description": "Update specific attributes of an existing global rule",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "global rule ID"
              },
              "plugins": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "_meta": {
                        "type": "object",
                        "properties": {
                          "disable": {
                            "type": "boolean",
                            "default": false,
                            "description": "control whether the plugin is enabled"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": true,
                    "description": "plugins configuration"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "plugins configuration"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_consumer_group",
          "description": "Create a consumer group",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "consumer group ID"
              },
              "consumerGroup": {
                "type": "object",
                "properties": {
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "consumer group labels"
                  },
                  "plugins": {
                    "type": "object",
                    "properties": {
                      "_meta": {
                        "type": "object",
                        "properties": {
                          "disable": {
                            "type": "boolean",
                            "default": false,
                            "description": "control whether the plugin is enabled"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": true,
                    "description": "consumer group plugins"
                  },
                  "desc": {
                    "type": "string",
                    "description": "consumer group description"
                  }
                },
                "additionalProperties": true,
                "description": "consumer group configuration object"
              }
            },
            "required": [
              "consumerGroup"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "update_consumer_group",
          "description": "Update specific attributes of an existing consumer group",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "consumer group ID"
              },
              "consumerGroup": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "consumer group labels"
                      },
                      "plugins": {
                        "type": "object",
                        "properties": {
                          "_meta": {
                            "type": "object",
                            "properties": {
                              "disable": {
                                "type": "boolean",
                                "default": false,
                                "description": "control whether the plugin is enabled"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": true,
                        "description": "consumer group plugins"
                      },
                      "desc": {
                        "type": "string",
                        "description": "consumer group description"
                      }
                    },
                    "additionalProperties": true,
                    "description": "consumer group configuration object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "consumer group configuration object"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_all_plugin_names",
          "description": "Get all plugin names",
          "input_schema": {
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_plugin_schema",
          "description": "Get all plugins schema or a specific plugin schema by name",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "plugins name"
              },
              "type": {
                "type": "string",
                "enum": [
                  "http",
                  "stream"
                ],
                "description": "plugins type"
              }
            },
            "required": [
              "name"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_plugin_metadata",
          "description": "Get metadata for a specific plugin",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "plugins name"
              }
            },
            "required": [
              "name"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_plugin_config",
          "description": "Create a new plugin config",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "plugin config ID"
              },
              "plugins": {
                "type": "object",
                "properties": {
                  "desc": {
                    "type": "string",
                    "description": "plugin config description"
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "plugin config labels"
                  },
                  "plugins": {
                    "type": "object",
                    "properties": {
                      "_meta": {
                        "type": "object",
                        "properties": {
                          "disable": {
                            "type": "boolean",
                            "default": false,
                            "description": "control whether the plugin is enabled"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": true,
                    "description": "plugins configuration"
                  }
                },
                "required": [
                  "desc",
                  "labels",
                  "plugins"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "id",
              "plugins"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "update_plugin_config",
          "description": "Update a plugin config",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "plugin config ID"
              },
              "plugins": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "desc": {
                        "type": "string",
                        "description": "plugin config description"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "plugin config labels"
                      },
                      "plugins": {
                        "type": "object",
                        "properties": {
                          "_meta": {
                            "type": "object",
                            "properties": {
                              "disable": {
                                "type": "boolean",
                                "default": false,
                                "description": "control whether the plugin is enabled"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": true,
                        "description": "plugins configuration"
                      }
                    },
                    "required": [
                      "desc",
                      "labels",
                      "plugins"
                    ],
                    "additionalProperties": false
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_or_update_plugin_metadata",
          "description": "Create or update plugin metadata",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "plugins name"
              },
              "metadata": {
                "type": "object",
                "properties": {
                  "_meta": {
                    "type": "object",
                    "properties": {
                      "disable": {
                        "type": "boolean",
                        "default": false,
                        "description": "control whether the plugin is enabled"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": true,
                "description": "plugins configuration"
              }
            },
            "required": [
              "name",
              "metadata"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "delete_plugin_metadata",
          "description": "Delete plugin metadata",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "plugins name"
              }
            },
            "required": [
              "name"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_or_update_stream_route",
          "description": "Create a stream route, if the stream route already exists, it will be updated",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "stream route id"
              },
              "route": {
                "type": "object",
                "properties": {
                  "desc": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "stream route description"
                  },
                  "upstream": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "upstream name"
                      },
                      "desc": {
                        "type": "string",
                        "maxLength": 256,
                        "description": "upstream description"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "roundrobin",
                          "chash",
                          "ewma",
                          "least_conn"
                        ],
                        "default": "roundrobin",
                        "description": "load balancing algorithm"
                      },
                      "nodes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "host": {
                              "type": "string",
                              "description": "upstream host"
                            },
                            "port": {
                              "type": "number",
                              "description": "upstream port"
                            },
                            "weight": {
                              "type": "number",
                              "minimum": 0,
                              "description": "upstream weight"
                            },
                            "priority": {
                              "type": "number",
                              "minimum": 0,
                              "description": "upstream priority"
                            }
                          },
                          "required": [
                            "host",
                            "port"
                          ],
                          "additionalProperties": false
                        },
                        "description": "upstream nodes with weights"
                      },
                      "hash_on": {
                        "type": "string",
                        "enum": [
                          "vars",
                          "header",
                          "cookie",
                          "consumer",
                          "vars_combinations"
                        ],
                        "description": "hash on type for chash algorithm"
                      },
                      "key": {
                        "type": "string",
                        "description": "hash key for chash algorithm"
                      },
                      "timeout": {
                        "type": "object",
                        "properties": {
                          "connect": {
                            "type": "number",
                            "description": "connection timeout in seconds"
                          },
                          "send": {
                            "type": "number",
                            "description": "send timeout in seconds"
                          },
                          "read": {
                            "type": "number",
                            "description": "read timeout in seconds"
                          }
                        },
                        "additionalProperties": false,
                        "description": "timeout configuration"
                      },
                      "retries": {
                        "type": "number",
                        "minimum": 0,
                        "description": "retry count"
                      },
                      "retry_timeout": {
                        "type": "number",
                        "minimum": 0,
                        "description": "retry timeout"
                      },
                      "pass_host": {
                        "type": "string",
                        "enum": [
                          "pass",
                          "node",
                          "rewrite"
                        ],
                        "default": "pass",
                        "description": "host passing mode"
                      },
                      "upstream_host": {
                        "type": "string",
                        "description": "upstream host for rewrite mode"
                      },
                      "scheme": {
                        "type": "string",
                        "enum": [
                          "http",
                          "https",
                          "grpc",
                          "grpcs",
                          "tcp",
                          "tls",
                          "udp",
                          "kafka"
                        ],
                        "default": "http",
                        "description": "upstream scheme"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "upstream labels"
                      },
                      "checks": {
                        "type": "object",
                        "properties": {
                          "active": {
                            "type": "object",
                            "properties": {
                              "healthy": {
                                "type": "object",
                                "properties": {
                                  "interval": {
                                    "type": "number",
                                    "description": "check interval for healthy status"
                                  },
                                  "successes": {
                                    "type": "number",
                                    "description": "success count threshold"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "unhealthy": {
                                "type": "object",
                                "properties": {
                                  "interval": {
                                    "type": "number",
                                    "description": "check interval for unhealthy status"
                                  },
                                  "http_failures": {
                                    "type": "number",
                                    "description": "HTTP failure count threshold"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "http_path": {
                                "type": "string",
                                "description": "HTTP path for health check"
                              },
                              "host": {
                                "type": "string",
                                "description": "host for health check"
                              },
                              "port": {
                                "type": "number",
                                "description": "port for health check"
                              },
                              "https_verify_certificate": {
                                "type": "boolean",
                                "description": "verify HTTPS certificate"
                              },
                              "timeout": {
                                "type": "number",
                                "description": "timeout for health check"
                              }
                            },
                            "additionalProperties": false,
                            "description": "active health check configuration"
                          },
                          "passive": {
                            "type": "object",
                            "properties": {
                              "healthy": {
                                "type": "object",
                                "properties": {
                                  "http_statuses": {
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    },
                                    "description": "HTTP status codes for healthy state"
                                  },
                                  "successes": {
                                    "type": "number",
                                    "description": "success count threshold"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "unhealthy": {
                                "type": "object",
                                "properties": {
                                  "http_statuses": {
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    },
                                    "description": "HTTP status codes for unhealthy state"
                                  },
                                  "http_failures": {
                                    "type": "number",
                                    "description": "HTTP failure count threshold"
                                  },
                                  "timeout": {
                                    "type": "number",
                                    "description": "timeout threshold"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "description": "passive health check configuration"
                          }
                        },
                        "additionalProperties": false,
                        "description": "health check configuration"
                      },
                      "tls": {
                        "type": "object",
                        "properties": {
                          "client_cert": {
                            "type": "string",
                            "description": "TLS certificate"
                          },
                          "client_key": {
                            "type": "string",
                            "description": "TLS key"
                          },
                          "verify": {
                            "type": "boolean",
                            "description": "TLS verification"
                          },
                          "client_cert_id": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "TLS certificate id"
                          }
                        },
                        "additionalProperties": false,
                        "description": "TLS configuration"
                      },
                      "keepalive_pool": {
                        "type": "object",
                        "properties": {
                          "idle_timeout": {
                            "type": "number",
                            "description": "idle timeout",
                            "default": 60
                          },
                          "requests": {
                            "type": "number",
                            "description": "requests",
                            "default": 1000
                          },
                          "size": {
                            "type": "number",
                            "description": "size",
                            "default": 320
                          }
                        },
                        "additionalProperties": false,
                        "description": "keepalive pool configuration"
                      }
                    },
                    "additionalProperties": true,
                    "description": "upstream service configuration object"
                  },
                  "upstream_id": {
                    "type": "string",
                    "description": "upstream id"
                  },
                  "service_id": {
                    "type": "string",
                    "description": "service id"
                  },
                  "server_addr": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "ipv4",
                        "description": "IPv4"
                      },
                      {
                        "type": "string",
                        "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\/([12]?[0-9]|3[0-2])$",
                        "description": "IPv4/CIDR"
                      },
                      {
                        "type": "string",
                        "format": "ipv6",
                        "description": "IPv6"
                      },
                      {
                        "type": "string",
                        "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?\\/[0-9]{1,3}$",
                        "description": "IPv6/CIDR"
                      }
                    ],
                    "description": "server IP"
                  },
                  "server_port": {
                    "type": "number",
                    "description": "server port"
                  },
                  "remote_addr": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/route/properties/server_addr/anyOf/0"
                      },
                      {
                        "$ref": "#/properties/route/properties/server_addr/anyOf/1"
                      },
                      {
                        "$ref": "#/properties/route/properties/server_addr/anyOf/2"
                      },
                      {
                        "$ref": "#/properties/route/properties/server_addr/anyOf/3"
                      }
                    ],
                    "description": "client IP"
                  },
                  "sni": {
                    "type": "string",
                    "description": "SNI"
                  },
                  "protocol": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "conf": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "protocol-specific configuration"
                      },
                      "superior_id": {
                        "type": "string"
                      },
                      "logger": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "conf": {
                              "type": "object",
                              "additionalProperties": {},
                              "description": "logger plugin configuration"
                            },
                            "filter": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "logger filter rules"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "additionalProperties": false
                        }
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "additionalProperties": false
                  },
                  "plugins": {
                    "type": "object",
                    "properties": {
                      "_meta": {
                        "type": "object",
                        "properties": {
                          "disable": {
                            "type": "boolean",
                            "default": false,
                            "description": "control whether the plugin is enabled"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": true,
                    "description": "plugins"
                  }
                },
                "required": [
                  "server_addr",
                  "server_port"
                ],
                "additionalProperties": true,
                "description": "stream route configuration"
              }
            },
            "required": [
              "route"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_secret_by_id",
          "description": "Get a secret by ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "secret id"
              },
              "manager": {
                "type": "string",
                "enum": [
                  "vault",
                  "aws",
                  "gcp"
                ],
                "description": "secret manager type"
              },
              "page": {
                "type": "number",
                "description": "page number",
                "default": 1
              },
              "page_size": {
                "type": "number",
                "minimum": 10,
                "maximum": 500,
                "description": "page size",
                "default": 50
              }
            },
            "required": [
              "manager"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_secret",
          "description": "Create a secret",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "secret id"
              },
              "manager": {
                "type": "string",
                "enum": [
                  "vault",
                  "aws",
                  "gcp"
                ],
                "description": "secret manager type"
              },
              "secret": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "const": "vault"
                      },
                      "uri": {
                        "type": "string",
                        "description": "address of the Vault server"
                      },
                      "prefix": {
                        "type": "string",
                        "description": "path prefix of the secret engine"
                      },
                      "token": {
                        "type": "string",
                        "description": "token for Vault authentication"
                      },
                      "namespace": {
                        "type": "string",
                        "description": "Vault namespace"
                      }
                    },
                    "required": [
                      "type",
                      "uri",
                      "prefix",
                      "token"
                    ],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "const": "aws"
                      },
                      "region": {
                        "type": "string",
                        "description": "AWS region"
                      },
                      "access_key_id": {
                        "type": "string",
                        "description": "AWS access key"
                      },
                      "secret_access_key": {
                        "type": "string",
                        "description": "AWS secret key"
                      },
                      "session_token": {
                        "type": "string",
                        "description": "AWS session token"
                      },
                      "endpoint_url": {
                        "type": "string",
                        "description": "AWS secret manager endpoint url"
                      }
                    },
                    "required": [
                      "type",
                      "region",
                      "access_key_id",
                      "secret_access_key"
                    ],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "const": "gcp"
                      },
                      "project_id": {
                        "type": "string",
                        "description": "GCP project ID"
                      },
                      "auth_config": {
                        "type": "object",
                        "properties": {
                          "client_email": {
                            "type": "string",
                            "description": "Email address of the Google Cloud service account"
                          },
                          "private_key": {
                            "type": "string",
                            "description": "Private key of the Google Cloud service account"
                          },
                          "project_id": {
                            "type": "string",
                            "description": "Project ID in the Google Cloud service account"
                          },
                          "token_uri": {
                            "type": "string",
                            "default": "https://oauth2.googleapis.com/token",
                            "description": "Token URI of the Google Cloud service account"
                          },
                          "entries_uri": {
                            "type": "string",
                            "default": "https://secretmanager.googleapis.com/v1",
                            "description": "The API access endpoint for the Google Secrets Manager"
                          },
                          "scope": {
                            "type": "string",
                            "default": "https://www.googleapis.com/auth/cloud-platform",
                            "description": "Access scopes of the Google Cloud service account"
                          }
                        },
                        "required": [
                          "client_email",
                          "private_key",
                          "project_id"
                        ],
                        "additionalProperties": false
                      },
                      "auth_file": {
                        "type": "string",
                        "description": "Path to the Google Cloud service account authentication JSON file"
                      },
                      "ssl_verify": {
                        "type": "boolean",
                        "default": true,
                        "description": "Enable SSL verification"
                      }
                    },
                    "required": [
                      "type",
                      "project_id"
                    ],
                    "additionalProperties": false
                  }
                ]
              }
            },
            "required": [
              "manager",
              "secret"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "update_secret",
          "description": "Update specific attributes of an existing secret",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "secret id"
              },
              "manager": {
                "anyOf": [
                  {
                    "type": "string",
                    "enum": [
                      "vault",
                      "aws",
                      "gcp"
                    ],
                    "description": "secret manager type"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "secret manager type"
              },
              "secret": {
                "anyOf": [
                  {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "vault"
                          },
                          "uri": {
                            "type": "string",
                            "description": "address of the Vault server"
                          },
                          "prefix": {
                            "type": "string",
                            "description": "path prefix of the secret engine"
                          },
                          "token": {
                            "type": "string",
                            "description": "token for Vault authentication"
                          },
                          "namespace": {
                            "type": "string",
                            "description": "Vault namespace"
                          }
                        },
                        "required": [
                          "type",
                          "uri",
                          "prefix",
                          "token"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "aws"
                          },
                          "region": {
                            "type": "string",
                            "description": "AWS region"
                          },
                          "access_key_id": {
                            "type": "string",
                            "description": "AWS access key"
                          },
                          "secret_access_key": {
                            "type": "string",
                            "description": "AWS secret key"
                          },
                          "session_token": {
                            "type": "string",
                            "description": "AWS session token"
                          },
                          "endpoint_url": {
                            "type": "string",
                            "description": "AWS secret manager endpoint url"
                          }
                        },
                        "required": [
                          "type",
                          "region",
                          "access_key_id",
                          "secret_access_key"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "gcp"
                          },
                          "project_id": {
                            "type": "string",
                            "description": "GCP project ID"
                          },
                          "auth_config": {
                            "type": "object",
                            "properties": {
                              "client_email": {
                                "type": "string",
                                "description": "Email address of the Google Cloud service account"
                              },
                              "private_key": {
                                "type": "string",
                                "description": "Private key of the Google Cloud service account"
                              },
                              "project_id": {
                                "type": "string",
                                "description": "Project ID in the Google Cloud service account"
                              },
                              "token_uri": {
                                "type": "string",
                                "default": "https://oauth2.googleapis.com/token",
                                "description": "Token URI of the Google Cloud service account"
                              },
                              "entries_uri": {
                                "type": "string",
                                "default": "https://secretmanager.googleapis.com/v1",
                                "description": "The API access endpoint for the Google Secrets Manager"
                              },
                              "scope": {
                                "type": "string",
                                "default": "https://www.googleapis.com/auth/cloud-platform",
                                "description": "Access scopes of the Google Cloud service account"
                              }
                            },
                            "required": [
                              "client_email",
                              "private_key",
                              "project_id"
                            ],
                            "additionalProperties": false
                          },
                          "auth_file": {
                            "type": "string",
                            "description": "Path to the Google Cloud service account authentication JSON file"
                          },
                          "ssl_verify": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enable SSL verification"
                          }
                        },
                        "required": [
                          "type",
                          "project_id"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "delete_secret",
          "description": "Delete a secret by ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "secret id"
              },
              "manager": {
                "type": "string",
                "enum": [
                  "vault",
                  "aws",
                  "gcp"
                ],
                "description": "secret manager type"
              }
            },
            "required": [
              "id",
              "manager"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_or_update_proto",
          "description": "Create a proto, if the proto already exists, it will be updated",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "proto id"
              },
              "proto": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "proto content"
                  }
                },
                "required": [
                  "content"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "proto"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 32,
      "tool_names": [
        "get_resource",
        "delete_resource",
        "send_request_to_gateway",
        "create_route",
        "update_route",
        "create_service",
        "update_service",
        "create_upstream",
        "update_upstream",
        "create_or_update_consumer",
        "get_credential",
        "create_or_update_credential",
        "delete_credential",
        "create_ssl",
        "update_ssl",
        "create_global_rule",
        "update_global_rule",
        "create_consumer_group",
        "update_consumer_group",
        "get_all_plugin_names",
        "get_plugin_schema",
        "get_plugin_metadata",
        "create_plugin_config",
        "update_plugin_config",
        "create_or_update_plugin_metadata",
        "delete_plugin_metadata",
        "create_or_update_stream_route",
        "get_secret_by_id",
        "create_secret",
        "update_secret",
        "delete_secret",
        "create_or_update_proto"
      ]
    },
    "server_info_crawled": {
      "id": 2158,
      "name": "APISIX Model Context Protocol Server",
      "author": "@api7/apisix-mcp",
      "overview": "Enable natural language-based interaction for managing resources in APISIX through AI clients. Streamline your API management tasks by leveraging the power of large language models to interact with your APISIX setup effortlessly.",
      "repository_url": "https://github.com/api7/apisix-mcp",
      "homepage": "https://smithery.ai/server/@api7/apisix-mcp",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@api7_apisix-mcp.json",
      "tools_count": 32,
      "tools": [
        {
          "name": "get_resource",
          "description": "Get resource details by ID or list all resources",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "resource id"
              },
              "type": {
                "type": "string",
                "enum": [
                  "routes",
                  "services",
                  "upstreams",
                  "consumers",
                  "ssls",
                  "consumer_groups",
                  "plugin_configs",
                  "global_rules",
                  "stream_routes",
                  "protos",
                  "plugin_configs"
                ],
                "description": "resource type"
              },
              "page": {
                "type": "number",
                "description": "page number",
                "default": 1
              },
              "page_size": {
                "type": "number",
                "minimum": 10,
                "maximum": 500,
                "description": "page size",
                "default": 50
              },
              "name": {
                "type": "string",
                "description": "filter name"
              },
              "labels": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "filter labels"
              },
              "uri": {
                "type": "string",
                "description": "filter uri"
              }
            },
            "required": [
              "type"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "delete_resource",
          "description": "Delete a resource by ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "resource id"
              },
              "type": {
                "type": "string",
                "enum": [
                  "routes",
                  "services",
                  "upstreams",
                  "consumers",
                  "ssls",
                  "consumer_groups",
                  "plugin_configs",
                  "global_rules",
                  "stream_routes",
                  "protos",
                  "plugin_configs"
                ],
                "description": "resource type"
              }
            },
            "required": [
              "id",
              "type"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "send_request_to_gateway",
          "description": "Send a request or multiple requests to the APISIX gateway",
          "input_schema": {
            "type": "object",
            "properties": {
              "requests": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "description": "request path"
                    },
                    "method": {
                      "type": "string",
                      "description": "request method"
                    },
                    "data": {
                      "description": "request data"
                    },
                    "headers": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "request headers"
                    },
                    "repeatCount": {
                      "type": "number",
                      "description": "number of requests to send in parallel",
                      "default": 1
                    }
                  },
                  "required": [
                    "path",
                    "method"
                  ],
                  "additionalProperties": false
                },
                "description": "array of requests to send in parallel"
              }
            },
            "required": [
              "requests"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_route",
          "description": "Create a route",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "route id"
              },
              "route": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "route name"
                  },
                  "desc": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "route description"
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "route labels"
                  },
                  "uri": {
                    "type": "string",
                    "description": "route path"
                  },
                  "uris": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "multiple route paths"
                  },
                  "host": {
                    "type": "string",
                    "description": "route host"
                  },
                  "hosts": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "allowed hosts"
                  },
                  "remote_addr": {
                    "type": "string",
                    "description": "allowed remote address"
                  },
                  "remote_addrs": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "allowed remote addresses"
                  },
                  "methods": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE",
                        "PATCH",
                        "HEAD",
                        "OPTIONS",
                        "TRACE",
                        "CONNECT",
                        "PURGE"
                      ]
                    },
                    "description": "allowed HTTP methods"
                  },
                  "priority": {
                    "type": "number",
                    "description": "route priority",
                    "default": 0
                  },
                  "vars": {
                    "type": "array",
                    "items": {
                      "type": "array"
                    },
                    "description": "route match variables"
                  },
                  "filter_func": {
                    "type": "string",
                    "description": "route filter function"
                  },
                  "script": {
                    "type": "object",
                    "additionalProperties": {},
                    "description": "route script configuration"
                  },
                  "service_id": {
                    "type": "string",
                    "description": "service id"
                  },
                  "upstream_id": {
                    "type": "string",
                    "description": "upstream id"
                  },
                  "upstream": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "upstream name"
                      },
                      "desc": {
                        "type": "string",
                        "maxLength": 256,
                        "description": "upstream description"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "roundrobin",
                          "chash",
                          "ewma",
                          "least_conn"
                        ],
                        "default": "roundrobin",
                        "description": "load balancing algorithm"
                      },
                      "nodes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "host": {
                              "type": "string",
                              "description": "upstream host"
                            },
                            "port": {
                              "type": "number",
                              "description": "upstream port"
                            },
                            "weight": {
                              "type": "number",
                              "minimum": 0,
                              "description": "upstream weight"
                            },
                            "priority": {
                              "type": "number",
                              "minimum": 0,
                              "description": "upstream priority"
                            }
                          },
                          "required": [
                            "host",
                            "port"
                          ],
                          "additionalProperties": false
                        },
                        "description": "upstream nodes with weights"
                      },
                      "hash_on": {
                        "type": "string",
                        "enum": [
                          "vars",
                          "header",
                          "cookie",
                          "consumer",
                          "vars_combinations"
                        ],
                        "description": "hash on type for chash algorithm"
                      },
                      "key": {
                        "type": "string",
                        "description": "hash key for chash algorithm"
                      },
                      "timeout": {
                        "type": "object",
                        "properties": {
                          "connect": {
                            "type": "number",
                            "description": "connection timeout in seconds"
                          },
                          "send": {
                            "type": "number",
                            "description": "send timeout in seconds"
                          },
                          "read": {
                            "type": "number",
                            "description": "read timeout in seconds"
                          }
                        },
                        "additionalProperties": false,
                        "description": "timeout configuration"
                      },
                      "retries": {
                        "type": "number",
                        "minimum": 0,
                        "description": "retry count"
                      },
                      "retry_timeout": {
                        "type": "number",
                        "minimum": 0,
                        "description": "retry timeout"
                      },
                      "pass_host": {
                        "type": "string",
                        "enum": [
                          "pass",
                          "node",
                          "rewrite"
                        ],
                        "default": "pass",
                        "description": "host passing mode"
                      },
                      "upstream_host": {
                        "type": "string",
                        "description": "upstream host for rewrite mode"
                      },
                      "scheme": {
                        "type": "string",
                        "enum": [
                          "http",
                          "https",
                          "grpc",
                          "grpcs",
                          "tcp",
                          "tls",
                          "udp",
                          "kafka"
                        ],
                        "default": "http",
                        "description": "upstream scheme"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "upstream labels"
                      },
                      "checks": {
                        "type": "object",
                        "properties": {
                          "active": {
                            "type": "object",
                            "properties": {
                              "healthy": {
                                "type": "object",
                                "properties": {
                                  "interval": {
                                    "type": "number",
                                    "description": "check interval for healthy status"
                                  },
                                  "successes": {
                                    "type": "number",
                                    "description": "success count threshold"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "unhealthy": {
                                "type": "object",
                                "properties": {
                                  "interval": {
                                    "type": "number",
                                    "description": "check interval for unhealthy status"
                                  },
                                  "http_failures": {
                                    "type": "number",
                                    "description": "HTTP failure count threshold"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "http_path": {
                                "type": "string",
                                "description": "HTTP path for health check"
                              },
                              "host": {
                                "type": "string",
                                "description": "host for health check"
                              },
                              "port": {
                                "type": "number",
                                "description": "port for health check"
                              },
                              "https_verify_certificate": {
                                "type": "boolean",
                                "description": "verify HTTPS certificate"
                              },
                              "timeout": {
                                "type": "number",
                                "description": "timeout for health check"
                              }
                            },
                            "additionalProperties": false,
                            "description": "active health check configuration"
                          },
                          "passive": {
                            "type": "object",
                            "properties": {
                              "healthy": {
                                "type": "object",
                                "properties": {
                                  "http_statuses": {
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    },
                                    "description": "HTTP status codes for healthy state"
                                  },
                                  "successes": {
                                    "type": "number",
                                    "description": "success count threshold"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "unhealthy": {
                                "type": "object",
                                "properties": {
                                  "http_statuses": {
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    },
                                    "description": "HTTP status codes for unhealthy state"
                                  },
                                  "http_failures": {
                                    "type": "number",
                                    "description": "HTTP failure count threshold"
                                  },
                                  "timeout": {
                                    "type": "number",
                                    "description": "timeout threshold"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "description": "passive health check configuration"
                          }
                        },
                        "additionalProperties": false,
                        "description": "health check configuration"
                      },
                      "tls": {
                        "type": "object",
                        "properties": {
                          "client_cert": {
                            "type": "string",
                            "description": "TLS certificate"
                          },
                          "client_key": {
                            "type": "string",
                            "description": "TLS key"
                          },
                          "verify": {
                            "type": "boolean",
                            "description": "TLS verification"
                          },
                          "client_cert_id": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "TLS certificate id"
                          }
                        },
                        "additionalProperties": false,
                        "description": "TLS configuration"
                      },
                      "keepalive_pool": {
                        "type": "object",
                        "properties": {
                          "idle_timeout": {
                            "type": "number",
                            "description": "idle timeout",
                            "default": 60
                          },
                          "requests": {
                            "type": "number",
                            "description": "requests",
                            "default": 1000
                          },
                          "size": {
                            "type": "number",
                            "description": "size",
                            "default": 320
                          }
                        },
                        "additionalProperties": false,
                        "description": "keepalive pool configuration"
                      }
                    },
                    "additionalProperties": true,
                    "description": "upstream configuration"
                  },
                  "enable_websocket": {
                    "type": "boolean",
                    "description": "enable websocket"
                  },
                  "status": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "route status"
                  },
                  "plugins": {
                    "type": "object",
                    "properties": {
                      "_meta": {
                        "type": "object",
                        "properties": {
                          "disable": {
                            "type": "boolean",
                            "default": false,
                            "description": "control whether the plugin is enabled"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": true,
                    "description": "plugins"
                  },
                  "service_protocol": {
                    "type": "string",
                    "description": "service protocol"
                  }
                },
                "required": [
                  "uri"
                ],
                "additionalProperties": true,
                "description": "route configuration"
              }
            },
            "required": [
              "route"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "update_route",
          "description": "Update specific attributes of an existing route",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "route id"
              },
              "route": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "route name"
                      },
                      "desc": {
                        "type": "string",
                        "maxLength": 256,
                        "description": "route description"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "route labels"
                      },
                      "uri": {
                        "type": "string",
                        "description": "route path"
                      },
                      "uris": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "multiple route paths"
                      },
                      "host": {
                        "type": "string",
                        "description": "route host"
                      },
                      "hosts": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "allowed hosts"
                      },
                      "remote_addr": {
                        "type": "string",
                        "description": "allowed remote address"
                      },
                      "remote_addrs": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "allowed remote addresses"
                      },
                      "methods": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "GET",
                            "POST",
                            "PUT",
                            "DELETE",
                            "PATCH",
                            "HEAD",
                            "OPTIONS",
                            "TRACE",
                            "CONNECT",
                            "PURGE"
                          ]
                        },
                        "description": "allowed HTTP methods"
                      },
                      "priority": {
                        "type": "number",
                        "description": "route priority",
                        "default": 0
                      },
                      "vars": {
                        "type": "array",
                        "items": {
                          "type": "array"
                        },
                        "description": "route match variables"
                      },
                      "filter_func": {
                        "type": "string",
                        "description": "route filter function"
                      },
                      "script": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "route script configuration"
                      },
                      "service_id": {
                        "type": "string",
                        "description": "service id"
                      },
                      "upstream_id": {
                        "type": "string",
                        "description": "upstream id"
                      },
                      "upstream": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "upstream name"
                          },
                          "desc": {
                            "type": "string",
                            "maxLength": 256,
                            "description": "upstream description"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "roundrobin",
                              "chash",
                              "ewma",
                              "least_conn"
                            ],
                            "default": "roundrobin",
                            "description": "load balancing algorithm"
                          },
                          "nodes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "host": {
                                  "type": "string",
                                  "description": "upstream host"
                                },
                                "port": {
                                  "type": "number",
                                  "description": "upstream port"
                                },
                                "weight": {
                                  "type": "number",
                                  "minimum": 0,
                                  "description": "upstream weight"
                                },
                                "priority": {
                                  "type": "number",
                                  "minimum": 0,
                                  "description": "upstream priority"
                                }
                              },
                              "required": [
                                "host",
                                "port"
                              ],
                              "additionalProperties": false
                            },
                            "description": "upstream nodes with weights"
                          },
                          "hash_on": {
                            "type": "string",
                            "enum": [
                              "vars",
                              "header",
                              "cookie",
                              "consumer",
                              "vars_combinations"
                            ],
                            "description": "hash on type for chash algorithm"
                          },
                          "key": {
                            "type": "string",
                            "description": "hash key for chash algorithm"
                          },
                          "timeout": {
                            "type": "object",
                            "properties": {
                              "connect": {
                                "type": "number",
                                "description": "connection timeout in seconds"
                              },
                              "send": {
                                "type": "number",
                                "description": "send timeout in seconds"
                              },
                              "read": {
                                "type": "number",
                                "description": "read timeout in seconds"
                              }
                            },
                            "additionalProperties": false,
                            "description": "timeout configuration"
                          },
                          "retries": {
                            "type": "number",
                            "minimum": 0,
                            "description": "retry count"
                          },
                          "retry_timeout": {
                            "type": "number",
                            "minimum": 0,
                            "description": "retry timeout"
                          },
                          "pass_host": {
                            "type": "string",
                            "enum": [
                              "pass",
                              "node",
                              "rewrite"
                            ],
                            "default": "pass",
                            "description": "host passing mode"
                          },
                          "upstream_host": {
                            "type": "string",
                            "description": "upstream host for rewrite mode"
                          },
                          "scheme": {
                            "type": "string",
                            "enum": [
                              "http",
                              "https",
                              "grpc",
                              "grpcs",
                              "tcp",
                              "tls",
                              "udp",
                              "kafka"
                            ],
                            "default": "http",
                            "description": "upstream scheme"
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "upstream labels"
                          },
                          "checks": {
                            "type": "object",
                            "properties": {
                              "active": {
                                "type": "object",
                                "properties": {
                                  "healthy": {
                                    "type": "object",
                                    "properties": {
                                      "interval": {
                                        "type": "number",
                                        "description": "check interval for healthy status"
                                      },
                                      "successes": {
                                        "type": "number",
                                        "description": "success count threshold"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "unhealthy": {
                                    "type": "object",
                                    "properties": {
                                      "interval": {
                                        "type": "number",
                                        "description": "check interval for unhealthy status"
                                      },
                                      "http_failures": {
                                        "type": "number",
                                        "description": "HTTP failure count threshold"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "http_path": {
                                    "type": "string",
                                    "description": "HTTP path for health check"
                                  },
                                  "host": {
                                    "type": "string",
                                    "description": "host for health check"
                                  },
                                  "port": {
                                    "type": "number",
                                    "description": "port for health check"
                                  },
                                  "https_verify_certificate": {
                                    "type": "boolean",
                                    "description": "verify HTTPS certificate"
                                  },
                                  "timeout": {
                                    "type": "number",
                                    "description": "timeout for health check"
                                  }
                                },
                                "additionalProperties": false,
                                "description": "active health check configuration"
                              },
                              "passive": {
                                "type": "object",
                                "properties": {
                                  "healthy": {
                                    "type": "object",
                                    "properties": {
                                      "http_statuses": {
                                        "type": "array",
                                        "items": {
                                          "type": "number"
                                        },
                                        "description": "HTTP status codes for healthy state"
                                      },
                                      "successes": {
                                        "type": "number",
                                        "description": "success count threshold"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "unhealthy": {
                                    "type": "object",
                                    "properties": {
                                      "http_statuses": {
                                        "type": "array",
                                        "items": {
                                          "type": "number"
                                        },
                                        "description": "HTTP status codes for unhealthy state"
                                      },
                                      "http_failures": {
                                        "type": "number",
                                        "description": "HTTP failure count threshold"
                                      },
                                      "timeout": {
                                        "type": "number",
                                        "description": "timeout threshold"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false,
                                "description": "passive health check configuration"
                              }
                            },
                            "additionalProperties": false,
                            "description": "health check configuration"
                          },
                          "tls": {
                            "type": "object",
                            "properties": {
                              "client_cert": {
                                "type": "string",
                                "description": "TLS certificate"
                              },
                              "client_key": {
                                "type": "string",
                                "description": "TLS key"
                              },
                              "verify": {
                                "type": "boolean",
                                "description": "TLS verification"
                              },
                              "client_cert_id": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "TLS certificate id"
                              }
                            },
                            "additionalProperties": false,
                            "description": "TLS configuration"
                          },
                          "keepalive_pool": {
                            "type": "object",
                            "properties": {
                              "idle_timeout": {
                                "type": "number",
                                "description": "idle timeout",
                                "default": 60
                              },
                              "requests": {
                                "type": "number",
                                "description": "requests",
                                "default": 1000
                              },
                              "size": {
                                "type": "number",
                                "description": "size",
                                "default": 320
                              }
                            },
                            "additionalProperties": false,
                            "description": "keepalive pool configuration"
                          }
                        },
                        "additionalProperties": true,
                        "description": "upstream configuration"
                      },
                      "enable_websocket": {
                        "type": "boolean",
                        "description": "enable websocket"
                      },
                      "status": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "description": "route status"
                      },
                      "plugins": {
                        "type": "object",
                        "properties": {
                          "_meta": {
                            "type": "object",
                            "properties": {
                              "disable": {
                                "type": "boolean",
                                "default": false,
                                "description": "control whether the plugin is enabled"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": true,
                        "description": "plugins"
                      },
                      "service_protocol": {
                        "type": "string",
                        "description": "service protocol"
                      }
                    },
                    "additionalProperties": true,
                    "description": "route configuration"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "route configuration"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_service",
          "description": "Create a service",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "service id"
              },
              "service": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100,
                    "description": "service name"
                  },
                  "desc": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "service description"
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "service labels"
                  },
                  "upstream_id": {
                    "type": "string",
                    "description": "upstream id"
                  },
                  "upstream": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "upstream name"
                      },
                      "desc": {
                        "type": "string",
                        "maxLength": 256,
                        "description": "upstream description"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "roundrobin",
                          "chash",
                          "ewma",
                          "least_conn"
                        ],
                        "default": "roundrobin",
                        "description": "load balancing algorithm"
                      },
                      "nodes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "host": {
                              "type": "string",
                              "description": "upstream host"
                            },
                            "port": {
                              "type": "number",
                              "description": "upstream port"
                            },
                            "weight": {
                              "type": "number",
                              "minimum": 0,
                              "description": "upstream weight"
                            },
                            "priority": {
                              "type": "number",
                              "minimum": 0,
                              "description": "upstream priority"
                            }
                          },
                          "required": [
                            "host",
                            "port"
                          ],
                          "additionalProperties": false
                        },
                        "description": "upstream nodes with weights"
                      },
                      "hash_on": {
                        "type": "string",
                        "enum": [
                          "vars",
                          "header",
                          "cookie",
                          "consumer",
                          "vars_combinations"
                        ],
                        "description": "hash on type for chash algorithm"
                      },
                      "key": {
                        "type": "string",
                        "description": "hash key for chash algorithm"
                      },
                      "timeout": {
                        "type": "object",
                        "properties": {
                          "connect": {
                            "type": "number",
                            "description": "connection timeout in seconds"
                          },
                          "send": {
                            "type": "number",
                            "description": "send timeout in seconds"
                          },
                          "read": {
                            "type": "number",
                            "description": "read timeout in seconds"
                          }
                        },
                        "additionalProperties": false,
                        "description": "timeout configuration"
                      },
                      "retries": {
                        "type": "number",
                        "minimum": 0,
                        "description": "retry count"
                      },
                      "retry_timeout": {
                        "type": "number",
                        "minimum": 0,
                        "description": "retry timeout"
                      },
                      "pass_host": {
                        "type": "string",
                        "enum": [
                          "pass",
                          "node",
                          "rewrite"
                        ],
                        "default": "pass",
                        "description": "host passing mode"
                      },
                      "upstream_host": {
                        "type": "string",
                        "description": "upstream host for rewrite mode"
                      },
                      "scheme": {
                        "type": "string",
                        "enum": [
                          "http",
                          "https",
                          "grpc",
                          "grpcs",
                          "tcp",
                          "tls",
                          "udp",
                          "kafka"
                        ],
                        "default": "http",
                        "description": "upstream scheme"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "upstream labels"
                      },
                      "checks": {
                        "type": "object",
                        "properties": {
                          "active": {
                            "type": "object",
                            "properties": {
                              "healthy": {
                                "type": "object",
                                "properties": {
                                  "interval": {
                                    "type": "number",
                                    "description": "check interval for healthy status"
                                  },
                                  "successes": {
                                    "type": "number",
                                    "description": "success count threshold"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "unhealthy": {
                                "type": "object",
                                "properties": {
                                  "interval": {
                                    "type": "number",
                                    "description": "check interval for unhealthy status"
                                  },
                                  "http_failures": {
                                    "type": "number",
                                    "description": "HTTP failure count threshold"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "http_path": {
                                "type": "string",
                                "description": "HTTP path for health check"
                              },
                              "host": {
                                "type": "string",
                                "description": "host for health check"
                              },
                              "port": {
                                "type": "number",
                                "description": "port for health check"
                              },
                              "https_verify_certificate": {
                                "type": "boolean",
                                "description": "verify HTTPS certificate"
                              },
                              "timeout": {
                                "type": "number",
                                "description": "timeout for health check"
                              }
                            },
                            "additionalProperties": false,
                            "description": "active health check configuration"
                          },
                          "passive": {
                            "type": "object",
                            "properties": {
                              "healthy": {
                                "type": "object",
                                "properties": {
                                  "http_statuses": {
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    },
                                    "description": "HTTP status codes for healthy state"
                                  },
                                  "successes": {
                                    "type": "number",
                                    "description": "success count threshold"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "unhealthy": {
                                "type": "object",
                                "properties": {
                                  "http_statuses": {
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    },
                                    "description": "HTTP status codes for unhealthy state"
                                  },
                                  "http_failures": {
                                    "type": "number",
                                    "description": "HTTP failure count threshold"
                                  },
                                  "timeout": {
                                    "type": "number",
                                    "description": "timeout threshold"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "description": "passive health check configuration"
                          }
                        },
                        "additionalProperties": false,
                        "description": "health check configuration"
                      },
                      "tls": {
                        "type": "object",
                        "properties": {
                          "client_cert": {
                            "type": "string",
                            "description": "TLS certificate"
                          },
                          "client_key": {
                            "type": "string",
                            "description": "TLS key"
                          },
                          "verify": {
                            "type": "boolean",
                            "description": "TLS verification"
                          },
                          "client_cert_id": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "TLS certificate id"
                          }
                        },
                        "additionalProperties": false,
                        "description": "TLS configuration"
                      },
                      "keepalive_pool": {
                        "type": "object",
                        "properties": {
                          "idle_timeout": {
                            "type": "number",
                            "description": "idle timeout",
                            "default": 60
                          },
                          "requests": {
                            "type": "number",
                            "description": "requests",
                            "default": 1000
                          },
                          "size": {
                            "type": "number",
                            "description": "size",
                            "default": 320
                          }
                        },
                        "additionalProperties": false,
                        "description": "keepalive pool configuration"
                      }
                    },
                    "additionalProperties": true,
                    "description": "upstream service configuration object"
                  },
                  "enable_websocket": {
                    "type": "boolean",
                    "description": "enable websocket"
                  },
                  "plugins": {
                    "type": "object",
                    "properties": {
                      "_meta": {
                        "type": "object",
                        "properties": {
                          "disable": {
                            "type": "boolean",
                            "default": false,
                            "description": "control whether the plugin is enabled"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": true,
                    "description": "plugins"
                  },
                  "script": {
                    "type": "object",
                    "additionalProperties": {},
                    "description": "service script configuration"
                  },
                  "hosts": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "allowed hosts"
                  },
                  "vars": {
                    "type": "array",
                    "items": {
                      "type": "array"
                    },
                    "description": "service match variables"
                  }
                },
                "additionalProperties": true,
                "description": "service configuration object"
              }
            },
            "required": [
              "service"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "update_service",
          "description": "Update specific attributes of an existing service",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "service id"
              },
              "service": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100,
                        "description": "service name"
                      },
                      "desc": {
                        "type": "string",
                        "maxLength": 256,
                        "description": "service description"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "service labels"
                      },
                      "upstream_id": {
                        "type": "string",
                        "description": "upstream id"
                      },
                      "upstream": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "upstream name"
                          },
                          "desc": {
                            "type": "string",
                            "maxLength": 256,
                            "description": "upstream description"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "roundrobin",
                              "chash",
                              "ewma",
                              "least_conn"
                            ],
                            "default": "roundrobin",
                            "description": "load balancing algorithm"
                          },
                          "nodes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "host": {
                                  "type": "string",
                                  "description": "upstream host"
                                },
                                "port": {
                                  "type": "number",
                                  "description": "upstream port"
                                },
                                "weight": {
                                  "type": "number",
                                  "minimum": 0,
                                  "description": "upstream weight"
                                },
                                "priority": {
                                  "type": "number",
                                  "minimum": 0,
                                  "description": "upstream priority"
                                }
                              },
                              "required": [
                                "host",
                                "port"
                              ],
                              "additionalProperties": false
                            },
                            "description": "upstream nodes with weights"
                          },
                          "hash_on": {
                            "type": "string",
                            "enum": [
                              "vars",
                              "header",
                              "cookie",
                              "consumer",
                              "vars_combinations"
                            ],
                            "description": "hash on type for chash algorithm"
                          },
                          "key": {
                            "type": "string",
                            "description": "hash key for chash algorithm"
                          },
                          "timeout": {
                            "type": "object",
                            "properties": {
                              "connect": {
                                "type": "number",
                                "description": "connection timeout in seconds"
                              },
                              "send": {
                                "type": "number",
                                "description": "send timeout in seconds"
                              },
                              "read": {
                                "type": "number",
                                "description": "read timeout in seconds"
                              }
                            },
                            "additionalProperties": false,
                            "description": "timeout configuration"
                          },
                          "retries": {
                            "type": "number",
                            "minimum": 0,
                            "description": "retry count"
                          },
                          "retry_timeout": {
                            "type": "number",
                            "minimum": 0,
                            "description": "retry timeout"
                          },
                          "pass_host": {
                            "type": "string",
                            "enum": [
                              "pass",
                              "node",
                              "rewrite"
                            ],
                            "default": "pass",
                            "description": "host passing mode"
                          },
                          "upstream_host": {
                            "type": "string",
                            "description": "upstream host for rewrite mode"
                          },
                          "scheme": {
                            "type": "string",
                            "enum": [
                              "http",
                              "https",
                              "grpc",
                              "grpcs",
                              "tcp",
                              "tls",
                              "udp",
                              "kafka"
                            ],
                            "default": "http",
                            "description": "upstream scheme"
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "upstream labels"
                          },
                          "checks": {
                            "type": "object",
                            "properties": {
                              "active": {
                                "type": "object",
                                "properties": {
                                  "healthy": {
                                    "type": "object",
                                    "properties": {
                                      "interval": {
                                        "type": "number",
                                        "description": "check interval for healthy status"
                                      },
                                      "successes": {
                                        "type": "number",
                                        "description": "success count threshold"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "unhealthy": {
                                    "type": "object",
                                    "properties": {
                                      "interval": {
                                        "type": "number",
                                        "description": "check interval for unhealthy status"
                                      },
                                      "http_failures": {
                                        "type": "number",
                                        "description": "HTTP failure count threshold"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "http_path": {
                                    "type": "string",
                                    "description": "HTTP path for health check"
                                  },
                                  "host": {
                                    "type": "string",
                                    "description": "host for health check"
                                  },
                                  "port": {
                                    "type": "number",
                                    "description": "port for health check"
                                  },
                                  "https_verify_certificate": {
                                    "type": "boolean",
                                    "description": "verify HTTPS certificate"
                                  },
                                  "timeout": {
                                    "type": "number",
                                    "description": "timeout for health check"
                                  }
                                },
                                "additionalProperties": false,
                                "description": "active health check configuration"
                              },
                              "passive": {
                                "type": "object",
                                "properties": {
                                  "healthy": {
                                    "type": "object",
                                    "properties": {
                                      "http_statuses": {
                                        "type": "array",
                                        "items": {
                                          "type": "number"
                                        },
                                        "description": "HTTP status codes for healthy state"
                                      },
                                      "successes": {
                                        "type": "number",
                                        "description": "success count threshold"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "unhealthy": {
                                    "type": "object",
                                    "properties": {
                                      "http_statuses": {
                                        "type": "array",
                                        "items": {
                                          "type": "number"
                                        },
                                        "description": "HTTP status codes for unhealthy state"
                                      },
                                      "http_failures": {
                                        "type": "number",
                                        "description": "HTTP failure count threshold"
                                      },
                                      "timeout": {
                                        "type": "number",
                                        "description": "timeout threshold"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false,
                                "description": "passive health check configuration"
                              }
                            },
                            "additionalProperties": false,
                            "description": "health check configuration"
                          },
                          "tls": {
                            "type": "object",
                            "properties": {
                              "client_cert": {
                                "type": "string",
                                "description": "TLS certificate"
                              },
                              "client_key": {
                                "type": "string",
                                "description": "TLS key"
                              },
                              "verify": {
                                "type": "boolean",
                                "description": "TLS verification"
                              },
                              "client_cert_id": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "TLS certificate id"
                              }
                            },
                            "additionalProperties": false,
                            "description": "TLS configuration"
                          },
                          "keepalive_pool": {
                            "type": "object",
                            "properties": {
                              "idle_timeout": {
                                "type": "number",
                                "description": "idle timeout",
                                "default": 60
                              },
                              "requests": {
                                "type": "number",
                                "description": "requests",
                                "default": 1000
                              },
                              "size": {
                                "type": "number",
                                "description": "size",
                                "default": 320
                              }
                            },
                            "additionalProperties": false,
                            "description": "keepalive pool configuration"
                          }
                        },
                        "additionalProperties": true,
                        "description": "upstream service configuration object"
                      },
                      "enable_websocket": {
                        "type": "boolean",
                        "description": "enable websocket"
                      },
                      "plugins": {
                        "type": "object",
                        "properties": {
                          "_meta": {
                            "type": "object",
                            "properties": {
                              "disable": {
                                "type": "boolean",
                                "default": false,
                                "description": "control whether the plugin is enabled"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": true,
                        "description": "plugins"
                      },
                      "script": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "service script configuration"
                      },
                      "hosts": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "allowed hosts"
                      },
                      "vars": {
                        "type": "array",
                        "items": {
                          "type": "array"
                        },
                        "description": "service match variables"
                      }
                    },
                    "additionalProperties": true,
                    "description": "service configuration object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "service configuration object"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_upstream",
          "description": "Create an upstream service with load balancing settings",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "upstream id"
              },
              "upstream": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "upstream name"
                  },
                  "desc": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "upstream description"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "roundrobin",
                      "chash",
                      "ewma",
                      "least_conn"
                    ],
                    "default": "roundrobin",
                    "description": "load balancing algorithm"
                  },
                  "nodes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "host": {
                          "type": "string",
                          "description": "upstream host"
                        },
                        "port": {
                          "type": "number",
                          "description": "upstream port"
                        },
                        "weight": {
                          "type": "number",
                          "minimum": 0,
                          "description": "upstream weight"
                        },
                        "priority": {
                          "type": "number",
                          "minimum": 0,
                          "description": "upstream priority"
                        }
                      },
                      "required": [
                        "host",
                        "port"
                      ],
                      "additionalProperties": false
                    },
                    "description": "upstream nodes with weights"
                  },
                  "hash_on": {
                    "type": "string",
                    "enum": [
                      "vars",
                      "header",
                      "cookie",
                      "consumer",
                      "vars_combinations"
                    ],
                    "description": "hash on type for chash algorithm"
                  },
                  "key": {
                    "type": "string",
                    "description": "hash key for chash algorithm"
                  },
                  "timeout": {
                    "type": "object",
                    "properties": {
                      "connect": {
                        "type": "number",
                        "description": "connection timeout in seconds"
                      },
                      "send": {
                        "type": "number",
                        "description": "send timeout in seconds"
                      },
                      "read": {
                        "type": "number",
                        "description": "read timeout in seconds"
                      }
                    },
                    "additionalProperties": false,
                    "description": "timeout configuration"
                  },
                  "retries": {
                    "type": "number",
                    "minimum": 0,
                    "description": "retry count"
                  },
                  "retry_timeout": {
                    "type": "number",
                    "minimum": 0,
                    "description": "retry timeout"
                  },
                  "pass_host": {
                    "type": "string",
                    "enum": [
                      "pass",
                      "node",
                      "rewrite"
                    ],
                    "default": "pass",
                    "description": "host passing mode"
                  },
                  "upstream_host": {
                    "type": "string",
                    "description": "upstream host for rewrite mode"
                  },
                  "scheme": {
                    "type": "string",
                    "enum": [
                      "http",
                      "https",
                      "grpc",
                      "grpcs",
                      "tcp",
                      "tls",
                      "udp",
                      "kafka"
                    ],
                    "default": "http",
                    "description": "upstream scheme"
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "upstream labels"
                  },
                  "checks": {
                    "type": "object",
                    "properties": {
                      "active": {
                        "type": "object",
                        "properties": {
                          "healthy": {
                            "type": "object",
                            "properties": {
                              "interval": {
                                "type": "number",
                                "description": "check interval for healthy status"
                              },
                              "successes": {
                                "type": "number",
                                "description": "success count threshold"
                              }
                            },
                            "additionalProperties": false
                          },
                          "unhealthy": {
                            "type": "object",
                            "properties": {
                              "interval": {
                                "type": "number",
                                "description": "check interval for unhealthy status"
                              },
                              "http_failures": {
                                "type": "number",
                                "description": "HTTP failure count threshold"
                              }
                            },
                            "additionalProperties": false
                          },
                          "http_path": {
                            "type": "string",
                            "description": "HTTP path for health check"
                          },
                          "host": {
                            "type": "string",
                            "description": "host for health check"
                          },
                          "port": {
                            "type": "number",
                            "description": "port for health check"
                          },
                          "https_verify_certificate": {
                            "type": "boolean",
                            "description": "verify HTTPS certificate"
                          },
                          "timeout": {
                            "type": "number",
                            "description": "timeout for health check"
                          }
                        },
                        "additionalProperties": false,
                        "description": "active health check configuration"
                      },
                      "passive": {
                        "type": "object",
                        "properties": {
                          "healthy": {
                            "type": "object",
                            "properties": {
                              "http_statuses": {
                                "type": "array",
                                "items": {
                                  "type": "number"
                                },
                                "description": "HTTP status codes for healthy state"
                              },
                              "successes": {
                                "type": "number",
                                "description": "success count threshold"
                              }
                            },
                            "additionalProperties": false
                          },
                          "unhealthy": {
                            "type": "object",
                            "properties": {
                              "http_statuses": {
                                "type": "array",
                                "items": {
                                  "type": "number"
                                },
                                "description": "HTTP status codes for unhealthy state"
                              },
                              "http_failures": {
                                "type": "number",
                                "description": "HTTP failure count threshold"
                              },
                              "timeout": {
                                "type": "number",
                                "description": "timeout threshold"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "description": "passive health check configuration"
                      }
                    },
                    "additionalProperties": false,
                    "description": "health check configuration"
                  },
                  "tls": {
                    "type": "object",
                    "properties": {
                      "client_cert": {
                        "type": "string",
                        "description": "TLS certificate"
                      },
                      "client_key": {
                        "type": "string",
                        "description": "TLS key"
                      },
                      "verify": {
                        "type": "boolean",
                        "description": "TLS verification"
                      },
                      "client_cert_id": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "TLS certificate id"
                      }
                    },
                    "additionalProperties": false,
                    "description": "TLS configuration"
                  },
                  "keepalive_pool": {
                    "type": "object",
                    "properties": {
                      "idle_timeout": {
                        "type": "number",
                        "description": "idle timeout",
                        "default": 60
                      },
                      "requests": {
                        "type": "number",
                        "description": "requests",
                        "default": 1000
                      },
                      "size": {
                        "type": "number",
                        "description": "size",
                        "default": 320
                      }
                    },
                    "additionalProperties": false,
                    "description": "keepalive pool configuration"
                  }
                },
                "required": [
                  "nodes"
                ],
                "additionalProperties": true,
                "description": "upstream service configuration object"
              }
            },
            "required": [
              "upstream"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "update_upstream",
          "description": "Update specific attributes of an existing upstream",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "upstream id"
              },
              "upstream": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "upstream name"
                      },
                      "desc": {
                        "type": "string",
                        "maxLength": 256,
                        "description": "upstream description"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "roundrobin",
                          "chash",
                          "ewma",
                          "least_conn"
                        ],
                        "default": "roundrobin",
                        "description": "load balancing algorithm"
                      },
                      "nodes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "host": {
                              "type": "string",
                              "description": "upstream host"
                            },
                            "port": {
                              "type": "number",
                              "description": "upstream port"
                            },
                            "weight": {
                              "type": "number",
                              "minimum": 0,
                              "description": "upstream weight"
                            },
                            "priority": {
                              "type": "number",
                              "minimum": 0,
                              "description": "upstream priority"
                            }
                          },
                          "required": [
                            "host",
                            "port"
                          ],
                          "additionalProperties": false
                        },
                        "description": "upstream nodes with weights"
                      },
                      "hash_on": {
                        "type": "string",
                        "enum": [
                          "vars",
                          "header",
                          "cookie",
                          "consumer",
                          "vars_combinations"
                        ],
                        "description": "hash on type for chash algorithm"
                      },
                      "key": {
                        "type": "string",
                        "description": "hash key for chash algorithm"
                      },
                      "timeout": {
                        "type": "object",
                        "properties": {
                          "connect": {
                            "type": "number",
                            "description": "connection timeout in seconds"
                          },
                          "send": {
                            "type": "number",
                            "description": "send timeout in seconds"
                          },
                          "read": {
                            "type": "number",
                            "description": "read timeout in seconds"
                          }
                        },
                        "additionalProperties": false,
                        "description": "timeout configuration"
                      },
                      "retries": {
                        "type": "number",
                        "minimum": 0,
                        "description": "retry count"
                      },
                      "retry_timeout": {
                        "type": "number",
                        "minimum": 0,
                        "description": "retry timeout"
                      },
                      "pass_host": {
                        "type": "string",
                        "enum": [
                          "pass",
                          "node",
                          "rewrite"
                        ],
                        "default": "pass",
                        "description": "host passing mode"
                      },
                      "upstream_host": {
                        "type": "string",
                        "description": "upstream host for rewrite mode"
                      },
                      "scheme": {
                        "type": "string",
                        "enum": [
                          "http",
                          "https",
                          "grpc",
                          "grpcs",
                          "tcp",
                          "tls",
                          "udp",
                          "kafka"
                        ],
                        "default": "http",
                        "description": "upstream scheme"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "upstream labels"
                      },
                      "checks": {
                        "type": "object",
                        "properties": {
                          "active": {
                            "type": "object",
                            "properties": {
                              "healthy": {
                                "type": "object",
                                "properties": {
                                  "interval": {
                                    "type": "number",
                                    "description": "check interval for healthy status"
                                  },
                                  "successes": {
                                    "type": "number",
                                    "description": "success count threshold"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "unhealthy": {
                                "type": "object",
                                "properties": {
                                  "interval": {
                                    "type": "number",
                                    "description": "check interval for unhealthy status"
                                  },
                                  "http_failures": {
                                    "type": "number",
                                    "description": "HTTP failure count threshold"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "http_path": {
                                "type": "string",
                                "description": "HTTP path for health check"
                              },
                              "host": {
                                "type": "string",
                                "description": "host for health check"
                              },
                              "port": {
                                "type": "number",
                                "description": "port for health check"
                              },
                              "https_verify_certificate": {
                                "type": "boolean",
                                "description": "verify HTTPS certificate"
                              },
                              "timeout": {
                                "type": "number",
                                "description": "timeout for health check"
                              }
                            },
                            "additionalProperties": false,
                            "description": "active health check configuration"
                          },
                          "passive": {
                            "type": "object",
                            "properties": {
                              "healthy": {
                                "type": "object",
                                "properties": {
                                  "http_statuses": {
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    },
                                    "description": "HTTP status codes for healthy state"
                                  },
                                  "successes": {
                                    "type": "number",
                                    "description": "success count threshold"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "unhealthy": {
                                "type": "object",
                                "properties": {
                                  "http_statuses": {
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    },
                                    "description": "HTTP status codes for unhealthy state"
                                  },
                                  "http_failures": {
                                    "type": "number",
                                    "description": "HTTP failure count threshold"
                                  },
                                  "timeout": {
                                    "type": "number",
                                    "description": "timeout threshold"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "description": "passive health check configuration"
                          }
                        },
                        "additionalProperties": false,
                        "description": "health check configuration"
                      },
                      "tls": {
                        "type": "object",
                        "properties": {
                          "client_cert": {
                            "type": "string",
                            "description": "TLS certificate"
                          },
                          "client_key": {
                            "type": "string",
                            "description": "TLS key"
                          },
                          "verify": {
                            "type": "boolean",
                            "description": "TLS verification"
                          },
                          "client_cert_id": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "TLS certificate id"
                          }
                        },
                        "additionalProperties": false,
                        "description": "TLS configuration"
                      },
                      "keepalive_pool": {
                        "type": "object",
                        "properties": {
                          "idle_timeout": {
                            "type": "number",
                            "description": "idle timeout",
                            "default": 60
                          },
                          "requests": {
                            "type": "number",
                            "description": "requests",
                            "default": 1000
                          },
                          "size": {
                            "type": "number",
                            "description": "size",
                            "default": 320
                          }
                        },
                        "additionalProperties": false,
                        "description": "keepalive pool configuration"
                      }
                    },
                    "additionalProperties": true,
                    "description": "upstream service configuration object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "upstream service configuration object"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_or_update_consumer",
          "description": "Create a consumer, if the consumer already exists, it will be updated",
          "input_schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "consumer username"
              },
              "desc": {
                "type": "string",
                "description": "consumer description"
              },
              "labels": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "consumer labels"
              },
              "plugins": {
                "type": "object",
                "properties": {
                  "_meta": {
                    "type": "object",
                    "properties": {
                      "disable": {
                        "type": "boolean",
                        "default": false,
                        "description": "control whether the plugin is enabled"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": true,
                "description": "consumer plugins"
              },
              "group_id": {
                "type": "string",
                "description": "consumer group id"
              }
            },
            "required": [
              "username"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_credential",
          "description": "Get all credentials or a specific credential for a consumer",
          "input_schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "consumer username"
              },
              "id": {
                "type": "string",
                "description": "credential id"
              }
            },
            "required": [
              "username"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_or_update_credential",
          "description": "Create or update a credential for a consumer",
          "input_schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "consumer username"
              },
              "id": {
                "type": "string",
                "description": "credential id"
              },
              "credential": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "credential name"
                  },
                  "plugins": {
                    "type": "object",
                    "properties": {
                      "_meta": {
                        "type": "object",
                        "properties": {
                          "disable": {
                            "type": "boolean",
                            "default": false,
                            "description": "control whether the plugin is enabled"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": true,
                    "description": "credential plugins"
                  },
                  "desc": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "credential description"
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "credential labels"
                  }
                },
                "required": [
                  "name"
                ],
                "additionalProperties": true,
                "description": "credential configuration object"
              }
            },
            "required": [
              "username",
              "id",
              "credential"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "delete_credential",
          "description": "Delete a credential for a consumer",
          "input_schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "consumer username"
              },
              "id": {
                "type": "string",
                "description": "credential id"
              }
            },
            "required": [
              "username",
              "id"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_ssl",
          "description": "Create an SSL certificate",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "SSL certificate ID"
              },
              "ssl": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string",
                    "description": "SSL label"
                  },
                  "cert": {
                    "type": "string",
                    "description": "SSL certificate in PEM format"
                  },
                  "certs": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "SSL certificates in PEM format"
                  },
                  "key": {
                    "type": "string",
                    "description": "SSL private key in PEM format"
                  },
                  "keys": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "SSL private keys in PEM format"
                  },
                  "sni": {
                    "type": "string",
                    "description": "Server Name Indication"
                  },
                  "snis": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Server Name Indications"
                  },
                  "client": {
                    "type": "object",
                    "properties": {
                      "ca": {
                        "type": "string",
                        "description": "SSL client CA certificate in PEM format"
                      },
                      "depth": {
                        "type": "number",
                        "default": 1,
                        "description": "SSL client verification depth"
                      },
                      "skip_mtls_uri_regex": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "URIs to skip mTLS verification"
                      }
                    },
                    "required": [
                      "ca"
                    ],
                    "additionalProperties": false,
                    "description": "SSL client configuration"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "server",
                      "client"
                    ],
                    "default": "server",
                    "description": "SSL type"
                  },
                  "status": {
                    "type": "number",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "SSL certificate status"
                  },
                  "validity_start": {
                    "type": "number",
                    "description": "SSL certificate validity start timestamp"
                  },
                  "validity_end": {
                    "type": "number",
                    "description": "SSL certificate validity end timestamp"
                  }
                },
                "required": [
                  "cert",
                  "key"
                ],
                "additionalProperties": true,
                "description": "SSL certificate configuration object"
              }
            },
            "required": [
              "ssl"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "update_ssl",
          "description": "Update specific attributes of an existing SSL certificate",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "SSL certificate ID"
              },
              "ssl": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "SSL label"
                      },
                      "cert": {
                        "type": "string",
                        "description": "SSL certificate in PEM format"
                      },
                      "certs": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "SSL certificates in PEM format"
                      },
                      "key": {
                        "type": "string",
                        "description": "SSL private key in PEM format"
                      },
                      "keys": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "SSL private keys in PEM format"
                      },
                      "sni": {
                        "type": "string",
                        "description": "Server Name Indication"
                      },
                      "snis": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Server Name Indications"
                      },
                      "client": {
                        "type": "object",
                        "properties": {
                          "ca": {
                            "type": "string",
                            "description": "SSL client CA certificate in PEM format"
                          },
                          "depth": {
                            "type": "number",
                            "default": 1,
                            "description": "SSL client verification depth"
                          },
                          "skip_mtls_uri_regex": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "URIs to skip mTLS verification"
                          }
                        },
                        "required": [
                          "ca"
                        ],
                        "additionalProperties": false,
                        "description": "SSL client configuration"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "server",
                          "client"
                        ],
                        "default": "server",
                        "description": "SSL type"
                      },
                      "status": {
                        "type": "number",
                        "enum": [
                          0,
                          1
                        ],
                        "description": "SSL certificate status"
                      },
                      "validity_start": {
                        "type": "number",
                        "description": "SSL certificate validity start timestamp"
                      },
                      "validity_end": {
                        "type": "number",
                        "description": "SSL certificate validity end timestamp"
                      }
                    },
                    "additionalProperties": true,
                    "description": "SSL certificate configuration object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "SSL certificate configuration object"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_global_rule",
          "description": "Create a global rule",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "global rule ID"
              },
              "plugins": {
                "type": "object",
                "properties": {
                  "_meta": {
                    "type": "object",
                    "properties": {
                      "disable": {
                        "type": "boolean",
                        "default": false,
                        "description": "control whether the plugin is enabled"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": true,
                "description": "plugins configuration"
              }
            },
            "required": [
              "id",
              "plugins"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "update_global_rule",
          "description": "Update specific attributes of an existing global rule",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "global rule ID"
              },
              "plugins": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "_meta": {
                        "type": "object",
                        "properties": {
                          "disable": {
                            "type": "boolean",
                            "default": false,
                            "description": "control whether the plugin is enabled"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": true,
                    "description": "plugins configuration"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "plugins configuration"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_consumer_group",
          "description": "Create a consumer group",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "consumer group ID"
              },
              "consumerGroup": {
                "type": "object",
                "properties": {
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "consumer group labels"
                  },
                  "plugins": {
                    "type": "object",
                    "properties": {
                      "_meta": {
                        "type": "object",
                        "properties": {
                          "disable": {
                            "type": "boolean",
                            "default": false,
                            "description": "control whether the plugin is enabled"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": true,
                    "description": "consumer group plugins"
                  },
                  "desc": {
                    "type": "string",
                    "description": "consumer group description"
                  }
                },
                "additionalProperties": true,
                "description": "consumer group configuration object"
              }
            },
            "required": [
              "consumerGroup"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "update_consumer_group",
          "description": "Update specific attributes of an existing consumer group",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "consumer group ID"
              },
              "consumerGroup": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "consumer group labels"
                      },
                      "plugins": {
                        "type": "object",
                        "properties": {
                          "_meta": {
                            "type": "object",
                            "properties": {
                              "disable": {
                                "type": "boolean",
                                "default": false,
                                "description": "control whether the plugin is enabled"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": true,
                        "description": "consumer group plugins"
                      },
                      "desc": {
                        "type": "string",
                        "description": "consumer group description"
                      }
                    },
                    "additionalProperties": true,
                    "description": "consumer group configuration object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "consumer group configuration object"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_all_plugin_names",
          "description": "Get all plugin names",
          "input_schema": {
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_plugin_schema",
          "description": "Get all plugins schema or a specific plugin schema by name",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "plugins name"
              },
              "type": {
                "type": "string",
                "enum": [
                  "http",
                  "stream"
                ],
                "description": "plugins type"
              }
            },
            "required": [
              "name"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_plugin_metadata",
          "description": "Get metadata for a specific plugin",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "plugins name"
              }
            },
            "required": [
              "name"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_plugin_config",
          "description": "Create a new plugin config",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "plugin config ID"
              },
              "plugins": {
                "type": "object",
                "properties": {
                  "desc": {
                    "type": "string",
                    "description": "plugin config description"
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "plugin config labels"
                  },
                  "plugins": {
                    "type": "object",
                    "properties": {
                      "_meta": {
                        "type": "object",
                        "properties": {
                          "disable": {
                            "type": "boolean",
                            "default": false,
                            "description": "control whether the plugin is enabled"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": true,
                    "description": "plugins configuration"
                  }
                },
                "required": [
                  "desc",
                  "labels",
                  "plugins"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "id",
              "plugins"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "update_plugin_config",
          "description": "Update a plugin config",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "plugin config ID"
              },
              "plugins": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "desc": {
                        "type": "string",
                        "description": "plugin config description"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "plugin config labels"
                      },
                      "plugins": {
                        "type": "object",
                        "properties": {
                          "_meta": {
                            "type": "object",
                            "properties": {
                              "disable": {
                                "type": "boolean",
                                "default": false,
                                "description": "control whether the plugin is enabled"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": true,
                        "description": "plugins configuration"
                      }
                    },
                    "required": [
                      "desc",
                      "labels",
                      "plugins"
                    ],
                    "additionalProperties": false
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_or_update_plugin_metadata",
          "description": "Create or update plugin metadata",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "plugins name"
              },
              "metadata": {
                "type": "object",
                "properties": {
                  "_meta": {
                    "type": "object",
                    "properties": {
                      "disable": {
                        "type": "boolean",
                        "default": false,
                        "description": "control whether the plugin is enabled"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": true,
                "description": "plugins configuration"
              }
            },
            "required": [
              "name",
              "metadata"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "delete_plugin_metadata",
          "description": "Delete plugin metadata",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "plugins name"
              }
            },
            "required": [
              "name"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_or_update_stream_route",
          "description": "Create a stream route, if the stream route already exists, it will be updated",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "stream route id"
              },
              "route": {
                "type": "object",
                "properties": {
                  "desc": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "stream route description"
                  },
                  "upstream": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "upstream name"
                      },
                      "desc": {
                        "type": "string",
                        "maxLength": 256,
                        "description": "upstream description"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "roundrobin",
                          "chash",
                          "ewma",
                          "least_conn"
                        ],
                        "default": "roundrobin",
                        "description": "load balancing algorithm"
                      },
                      "nodes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "host": {
                              "type": "string",
                              "description": "upstream host"
                            },
                            "port": {
                              "type": "number",
                              "description": "upstream port"
                            },
                            "weight": {
                              "type": "number",
                              "minimum": 0,
                              "description": "upstream weight"
                            },
                            "priority": {
                              "type": "number",
                              "minimum": 0,
                              "description": "upstream priority"
                            }
                          },
                          "required": [
                            "host",
                            "port"
                          ],
                          "additionalProperties": false
                        },
                        "description": "upstream nodes with weights"
                      },
                      "hash_on": {
                        "type": "string",
                        "enum": [
                          "vars",
                          "header",
                          "cookie",
                          "consumer",
                          "vars_combinations"
                        ],
                        "description": "hash on type for chash algorithm"
                      },
                      "key": {
                        "type": "string",
                        "description": "hash key for chash algorithm"
                      },
                      "timeout": {
                        "type": "object",
                        "properties": {
                          "connect": {
                            "type": "number",
                            "description": "connection timeout in seconds"
                          },
                          "send": {
                            "type": "number",
                            "description": "send timeout in seconds"
                          },
                          "read": {
                            "type": "number",
                            "description": "read timeout in seconds"
                          }
                        },
                        "additionalProperties": false,
                        "description": "timeout configuration"
                      },
                      "retries": {
                        "type": "number",
                        "minimum": 0,
                        "description": "retry count"
                      },
                      "retry_timeout": {
                        "type": "number",
                        "minimum": 0,
                        "description": "retry timeout"
                      },
                      "pass_host": {
                        "type": "string",
                        "enum": [
                          "pass",
                          "node",
                          "rewrite"
                        ],
                        "default": "pass",
                        "description": "host passing mode"
                      },
                      "upstream_host": {
                        "type": "string",
                        "description": "upstream host for rewrite mode"
                      },
                      "scheme": {
                        "type": "string",
                        "enum": [
                          "http",
                          "https",
                          "grpc",
                          "grpcs",
                          "tcp",
                          "tls",
                          "udp",
                          "kafka"
                        ],
                        "default": "http",
                        "description": "upstream scheme"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "upstream labels"
                      },
                      "checks": {
                        "type": "object",
                        "properties": {
                          "active": {
                            "type": "object",
                            "properties": {
                              "healthy": {
                                "type": "object",
                                "properties": {
                                  "interval": {
                                    "type": "number",
                                    "description": "check interval for healthy status"
                                  },
                                  "successes": {
                                    "type": "number",
                                    "description": "success count threshold"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "unhealthy": {
                                "type": "object",
                                "properties": {
                                  "interval": {
                                    "type": "number",
                                    "description": "check interval for unhealthy status"
                                  },
                                  "http_failures": {
                                    "type": "number",
                                    "description": "HTTP failure count threshold"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "http_path": {
                                "type": "string",
                                "description": "HTTP path for health check"
                              },
                              "host": {
                                "type": "string",
                                "description": "host for health check"
                              },
                              "port": {
                                "type": "number",
                                "description": "port for health check"
                              },
                              "https_verify_certificate": {
                                "type": "boolean",
                                "description": "verify HTTPS certificate"
                              },
                              "timeout": {
                                "type": "number",
                                "description": "timeout for health check"
                              }
                            },
                            "additionalProperties": false,
                            "description": "active health check configuration"
                          },
                          "passive": {
                            "type": "object",
                            "properties": {
                              "healthy": {
                                "type": "object",
                                "properties": {
                                  "http_statuses": {
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    },
                                    "description": "HTTP status codes for healthy state"
                                  },
                                  "successes": {
                                    "type": "number",
                                    "description": "success count threshold"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "unhealthy": {
                                "type": "object",
                                "properties": {
                                  "http_statuses": {
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    },
                                    "description": "HTTP status codes for unhealthy state"
                                  },
                                  "http_failures": {
                                    "type": "number",
                                    "description": "HTTP failure count threshold"
                                  },
                                  "timeout": {
                                    "type": "number",
                                    "description": "timeout threshold"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "description": "passive health check configuration"
                          }
                        },
                        "additionalProperties": false,
                        "description": "health check configuration"
                      },
                      "tls": {
                        "type": "object",
                        "properties": {
                          "client_cert": {
                            "type": "string",
                            "description": "TLS certificate"
                          },
                          "client_key": {
                            "type": "string",
                            "description": "TLS key"
                          },
                          "verify": {
                            "type": "boolean",
                            "description": "TLS verification"
                          },
                          "client_cert_id": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "TLS certificate id"
                          }
                        },
                        "additionalProperties": false,
                        "description": "TLS configuration"
                      },
                      "keepalive_pool": {
                        "type": "object",
                        "properties": {
                          "idle_timeout": {
                            "type": "number",
                            "description": "idle timeout",
                            "default": 60
                          },
                          "requests": {
                            "type": "number",
                            "description": "requests",
                            "default": 1000
                          },
                          "size": {
                            "type": "number",
                            "description": "size",
                            "default": 320
                          }
                        },
                        "additionalProperties": false,
                        "description": "keepalive pool configuration"
                      }
                    },
                    "additionalProperties": true,
                    "description": "upstream service configuration object"
                  },
                  "upstream_id": {
                    "type": "string",
                    "description": "upstream id"
                  },
                  "service_id": {
                    "type": "string",
                    "description": "service id"
                  },
                  "server_addr": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "ipv4",
                        "description": "IPv4"
                      },
                      {
                        "type": "string",
                        "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\/([12]?[0-9]|3[0-2])$",
                        "description": "IPv4/CIDR"
                      },
                      {
                        "type": "string",
                        "format": "ipv6",
                        "description": "IPv6"
                      },
                      {
                        "type": "string",
                        "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?\\/[0-9]{1,3}$",
                        "description": "IPv6/CIDR"
                      }
                    ],
                    "description": "server IP"
                  },
                  "server_port": {
                    "type": "number",
                    "description": "server port"
                  },
                  "remote_addr": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/route/properties/server_addr/anyOf/0"
                      },
                      {
                        "$ref": "#/properties/route/properties/server_addr/anyOf/1"
                      },
                      {
                        "$ref": "#/properties/route/properties/server_addr/anyOf/2"
                      },
                      {
                        "$ref": "#/properties/route/properties/server_addr/anyOf/3"
                      }
                    ],
                    "description": "client IP"
                  },
                  "sni": {
                    "type": "string",
                    "description": "SNI"
                  },
                  "protocol": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "conf": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "protocol-specific configuration"
                      },
                      "superior_id": {
                        "type": "string"
                      },
                      "logger": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "conf": {
                              "type": "object",
                              "additionalProperties": {},
                              "description": "logger plugin configuration"
                            },
                            "filter": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "logger filter rules"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "additionalProperties": false
                        }
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "additionalProperties": false
                  },
                  "plugins": {
                    "type": "object",
                    "properties": {
                      "_meta": {
                        "type": "object",
                        "properties": {
                          "disable": {
                            "type": "boolean",
                            "default": false,
                            "description": "control whether the plugin is enabled"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": true,
                    "description": "plugins"
                  }
                },
                "required": [
                  "server_addr",
                  "server_port"
                ],
                "additionalProperties": true,
                "description": "stream route configuration"
              }
            },
            "required": [
              "route"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_secret_by_id",
          "description": "Get a secret by ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "secret id"
              },
              "manager": {
                "type": "string",
                "enum": [
                  "vault",
                  "aws",
                  "gcp"
                ],
                "description": "secret manager type"
              },
              "page": {
                "type": "number",
                "description": "page number",
                "default": 1
              },
              "page_size": {
                "type": "number",
                "minimum": 10,
                "maximum": 500,
                "description": "page size",
                "default": 50
              }
            },
            "required": [
              "manager"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_secret",
          "description": "Create a secret",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "secret id"
              },
              "manager": {
                "type": "string",
                "enum": [
                  "vault",
                  "aws",
                  "gcp"
                ],
                "description": "secret manager type"
              },
              "secret": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "const": "vault"
                      },
                      "uri": {
                        "type": "string",
                        "description": "address of the Vault server"
                      },
                      "prefix": {
                        "type": "string",
                        "description": "path prefix of the secret engine"
                      },
                      "token": {
                        "type": "string",
                        "description": "token for Vault authentication"
                      },
                      "namespace": {
                        "type": "string",
                        "description": "Vault namespace"
                      }
                    },
                    "required": [
                      "type",
                      "uri",
                      "prefix",
                      "token"
                    ],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "const": "aws"
                      },
                      "region": {
                        "type": "string",
                        "description": "AWS region"
                      },
                      "access_key_id": {
                        "type": "string",
                        "description": "AWS access key"
                      },
                      "secret_access_key": {
                        "type": "string",
                        "description": "AWS secret key"
                      },
                      "session_token": {
                        "type": "string",
                        "description": "AWS session token"
                      },
                      "endpoint_url": {
                        "type": "string",
                        "description": "AWS secret manager endpoint url"
                      }
                    },
                    "required": [
                      "type",
                      "region",
                      "access_key_id",
                      "secret_access_key"
                    ],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "const": "gcp"
                      },
                      "project_id": {
                        "type": "string",
                        "description": "GCP project ID"
                      },
                      "auth_config": {
                        "type": "object",
                        "properties": {
                          "client_email": {
                            "type": "string",
                            "description": "Email address of the Google Cloud service account"
                          },
                          "private_key": {
                            "type": "string",
                            "description": "Private key of the Google Cloud service account"
                          },
                          "project_id": {
                            "type": "string",
                            "description": "Project ID in the Google Cloud service account"
                          },
                          "token_uri": {
                            "type": "string",
                            "default": "https://oauth2.googleapis.com/token",
                            "description": "Token URI of the Google Cloud service account"
                          },
                          "entries_uri": {
                            "type": "string",
                            "default": "https://secretmanager.googleapis.com/v1",
                            "description": "The API access endpoint for the Google Secrets Manager"
                          },
                          "scope": {
                            "type": "string",
                            "default": "https://www.googleapis.com/auth/cloud-platform",
                            "description": "Access scopes of the Google Cloud service account"
                          }
                        },
                        "required": [
                          "client_email",
                          "private_key",
                          "project_id"
                        ],
                        "additionalProperties": false
                      },
                      "auth_file": {
                        "type": "string",
                        "description": "Path to the Google Cloud service account authentication JSON file"
                      },
                      "ssl_verify": {
                        "type": "boolean",
                        "default": true,
                        "description": "Enable SSL verification"
                      }
                    },
                    "required": [
                      "type",
                      "project_id"
                    ],
                    "additionalProperties": false
                  }
                ]
              }
            },
            "required": [
              "manager",
              "secret"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "update_secret",
          "description": "Update specific attributes of an existing secret",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "secret id"
              },
              "manager": {
                "anyOf": [
                  {
                    "type": "string",
                    "enum": [
                      "vault",
                      "aws",
                      "gcp"
                    ],
                    "description": "secret manager type"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "secret manager type"
              },
              "secret": {
                "anyOf": [
                  {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "vault"
                          },
                          "uri": {
                            "type": "string",
                            "description": "address of the Vault server"
                          },
                          "prefix": {
                            "type": "string",
                            "description": "path prefix of the secret engine"
                          },
                          "token": {
                            "type": "string",
                            "description": "token for Vault authentication"
                          },
                          "namespace": {
                            "type": "string",
                            "description": "Vault namespace"
                          }
                        },
                        "required": [
                          "type",
                          "uri",
                          "prefix",
                          "token"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "aws"
                          },
                          "region": {
                            "type": "string",
                            "description": "AWS region"
                          },
                          "access_key_id": {
                            "type": "string",
                            "description": "AWS access key"
                          },
                          "secret_access_key": {
                            "type": "string",
                            "description": "AWS secret key"
                          },
                          "session_token": {
                            "type": "string",
                            "description": "AWS session token"
                          },
                          "endpoint_url": {
                            "type": "string",
                            "description": "AWS secret manager endpoint url"
                          }
                        },
                        "required": [
                          "type",
                          "region",
                          "access_key_id",
                          "secret_access_key"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "gcp"
                          },
                          "project_id": {
                            "type": "string",
                            "description": "GCP project ID"
                          },
                          "auth_config": {
                            "type": "object",
                            "properties": {
                              "client_email": {
                                "type": "string",
                                "description": "Email address of the Google Cloud service account"
                              },
                              "private_key": {
                                "type": "string",
                                "description": "Private key of the Google Cloud service account"
                              },
                              "project_id": {
                                "type": "string",
                                "description": "Project ID in the Google Cloud service account"
                              },
                              "token_uri": {
                                "type": "string",
                                "default": "https://oauth2.googleapis.com/token",
                                "description": "Token URI of the Google Cloud service account"
                              },
                              "entries_uri": {
                                "type": "string",
                                "default": "https://secretmanager.googleapis.com/v1",
                                "description": "The API access endpoint for the Google Secrets Manager"
                              },
                              "scope": {
                                "type": "string",
                                "default": "https://www.googleapis.com/auth/cloud-platform",
                                "description": "Access scopes of the Google Cloud service account"
                              }
                            },
                            "required": [
                              "client_email",
                              "private_key",
                              "project_id"
                            ],
                            "additionalProperties": false
                          },
                          "auth_file": {
                            "type": "string",
                            "description": "Path to the Google Cloud service account authentication JSON file"
                          },
                          "ssl_verify": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enable SSL verification"
                          }
                        },
                        "required": [
                          "type",
                          "project_id"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "delete_secret",
          "description": "Delete a secret by ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "secret id"
              },
              "manager": {
                "type": "string",
                "enum": [
                  "vault",
                  "aws",
                  "gcp"
                ],
                "description": "secret manager type"
              }
            },
            "required": [
              "id",
              "manager"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_or_update_proto",
          "description": "Create a proto, if the proto already exists, it will be updated",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "proto id"
              },
              "proto": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "proto content"
                  }
                },
                "required": [
                  "content"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "proto"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@api7/apisix-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@api7/apisix-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "2159.@api7_apisix-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1867
  }
}