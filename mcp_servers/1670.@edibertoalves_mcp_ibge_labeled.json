{
  "labels": {
    "analysis": "The MCP Server provides tools to access and retrieve geographic data related to Brazilian municipalities, states, districts, and countries as per the IBGE's catalog. It enables efficient querying of location-based information, which can be integrated into applications requiring detailed municipal data. The core functionality revolves around accessing structured geographic data for research, analytics, or geographic information systems (GIS).",
    "reasoning": "The primary label \"Database Operations\" was chosen because the server enables querying and retrieving structured geographic data from the IBGE's database. The secondary label \"Data Analysis & Processing\" is relevant as the retrieved data can be used for analytical purposes, and \"Travel & Maps\" is included due to the geographic nature of the data. No custom label is needed as the predefined labels sufficiently cover the server's functionality.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Data Analysis & Processing",
      "Travel & Maps"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1669,
    "server_name": "IBGE Municipality Listing Server",
    "rank_by_usage": 1670,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@edibertoalves_mcp_ibge.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@edibertoalves/mcp_ibge/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "GetUfPorIdentificdor",
          "description": "Obtêm os dados básicos da UF",
          "input_schema": {
            "title": "GetUfPorIdentificdor",
            "description": "Obtêm os dados básicos da UF",
            "type": "object",
            "properties": {
              "identificador": {
                "description": "Digite a sigla da UF, exemplo: SP é 35",
                "type": "integer"
              }
            },
            "required": [
              "identificador"
            ]
          },
          "annotations": {}
        },
        {
          "name": "GetMunicipiosPorUF",
          "description": "Obtêm a lista de municípios brasileiros, passando o UF",
          "input_schema": {
            "title": "GetMunicipiosPorUF",
            "description": "Obtêm a lista de municípios brasileiros, passando o UF",
            "type": "object",
            "properties": {
              "uf": {
                "description": "Digita a sigla da UF: Exemplo: SP",
                "type": "string"
              }
            },
            "required": [
              "uf"
            ]
          },
          "annotations": {}
        },
        {
          "name": "GetDistritosPorMunicipio",
          "description": "Obtêm a lista de distritos, passando o código do município do IBGE",
          "input_schema": {
            "title": "GetDistritosPorMunicipio",
            "description": "Obtêm a lista de distritos, passando o código do município do IBGE",
            "type": "object",
            "properties": {
              "codigoMunicipio": {
                "description": "Digite o código do município do IBGE",
                "type": "integer"
              }
            },
            "required": [
              "codigoMunicipio"
            ]
          },
          "annotations": {}
        },
        {
          "name": "GetPaisPorIdentificador",
          "description": "Obtêm os dados básicos do país, conforme catalogados no IBGE ",
          "input_schema": {
            "title": "GetPaisPorIdentificador",
            "description": "Obtêm os dados básicos do país, conforme catalogados no IBGE ",
            "type": "object",
            "properties": {
              "identificador": {
                "description": "Digite o identificador do país, exemplo: BR é 76",
                "type": "integer"
              }
            },
            "required": [
              "identificador"
            ]
          },
          "annotations": {}
        },
        {
          "name": "GetMunicipioPorIdentificador",
          "description": "Obtém o conjunto de municípios do Brasil a partir dos respectivos identificadores",
          "input_schema": {
            "title": "GetMunicipioPorIdentificador",
            "description": "Obtém o conjunto de municípios do Brasil a partir dos respectivos identificadores",
            "type": "object",
            "properties": {
              "identificador": {
                "description": "Digite o código do município, exemplo: SP é 3550308",
                "type": "integer"
              }
            },
            "required": [
              "identificador"
            ]
          },
          "annotations": {}
        }
      ],
      "tool_count": 5,
      "tool_names": [
        "GetUfPorIdentificdor",
        "GetMunicipiosPorUF",
        "GetDistritosPorMunicipio",
        "GetPaisPorIdentificador",
        "GetMunicipioPorIdentificador"
      ]
    },
    "server_info_crawled": {
      "id": 1669,
      "name": "IBGE Municipality Listing Server",
      "author": "@edibertoalves/mcp_ibge",
      "overview": "Provide access to a comprehensive list of municipalities from the Brazilian Institute of Geography and Statistics (IBGE). Enable LLMs to query and retrieve municipality data efficiently. Facilitate geographic data integration for applications requiring Brazilian municipal information.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@edibertoalves/mcp_ibge",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@edibertoalves_mcp_ibge.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "GetUfPorIdentificdor",
          "description": "Obtêm os dados básicos da UF",
          "input_schema": {
            "title": "GetUfPorIdentificdor",
            "description": "Obtêm os dados básicos da UF",
            "type": "object",
            "properties": {
              "identificador": {
                "description": "Digite a sigla da UF, exemplo: SP é 35",
                "type": "integer"
              }
            },
            "required": [
              "identificador"
            ]
          },
          "annotations": {}
        },
        {
          "name": "GetMunicipiosPorUF",
          "description": "Obtêm a lista de municípios brasileiros, passando o UF",
          "input_schema": {
            "title": "GetMunicipiosPorUF",
            "description": "Obtêm a lista de municípios brasileiros, passando o UF",
            "type": "object",
            "properties": {
              "uf": {
                "description": "Digita a sigla da UF: Exemplo: SP",
                "type": "string"
              }
            },
            "required": [
              "uf"
            ]
          },
          "annotations": {}
        },
        {
          "name": "GetDistritosPorMunicipio",
          "description": "Obtêm a lista de distritos, passando o código do município do IBGE",
          "input_schema": {
            "title": "GetDistritosPorMunicipio",
            "description": "Obtêm a lista de distritos, passando o código do município do IBGE",
            "type": "object",
            "properties": {
              "codigoMunicipio": {
                "description": "Digite o código do município do IBGE",
                "type": "integer"
              }
            },
            "required": [
              "codigoMunicipio"
            ]
          },
          "annotations": {}
        },
        {
          "name": "GetPaisPorIdentificador",
          "description": "Obtêm os dados básicos do país, conforme catalogados no IBGE ",
          "input_schema": {
            "title": "GetPaisPorIdentificador",
            "description": "Obtêm os dados básicos do país, conforme catalogados no IBGE ",
            "type": "object",
            "properties": {
              "identificador": {
                "description": "Digite o identificador do país, exemplo: BR é 76",
                "type": "integer"
              }
            },
            "required": [
              "identificador"
            ]
          },
          "annotations": {}
        },
        {
          "name": "GetMunicipioPorIdentificador",
          "description": "Obtém o conjunto de municípios do Brasil a partir dos respectivos identificadores",
          "input_schema": {
            "title": "GetMunicipioPorIdentificador",
            "description": "Obtém o conjunto de municípios do Brasil a partir dos respectivos identificadores",
            "type": "object",
            "properties": {
              "identificador": {
                "description": "Digite o código do município, exemplo: SP é 3550308",
                "type": "integer"
              }
            },
            "required": [
              "identificador"
            ]
          },
          "annotations": {}
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@edibertoalves/mcp_ibge/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@edibertoalves/mcp_ibge/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1670.@edibertoalves_mcp_ibge_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1511
  }
}