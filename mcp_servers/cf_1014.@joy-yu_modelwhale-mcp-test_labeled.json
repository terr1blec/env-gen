{
  "labels": {
    "analysis": "The ModelWhale MCP Server is a specialized server that provides access to ModelWhale API data using the Model Context Protocol (MCP). Its core functionality revolves around facilitating interaction with various ModelWhale resources such as labs, notebooks, jobs, model services, and user tokens. The available tools suggest functionality for retrieving lists of resources (e.g., notebooks, labs, jobs), accessing detailed information (e.g., notebook content, logs), and possibly token management. The server supports multiple transport modes (stdio, SSE, StreamableHTTP) for flexible integration and debugging, making it suitable for developers and researchers who need to programmatically interact with ModelWhale's ecosystem.",
    "reasoning": "The primary label \"Database Operations\" was chosen because the server's main function is to retrieve and manage data from ModelWhale's resources, which aligns with database querying and management. The secondary label \"Development Tools\" was added because the server's API access and integration capabilities are useful for developers. The secondary label \"AI/ML Tools\" was also chosen because ModelWhale appears to be related to machine learning or artificial intelligence resources (e.g., model services, notebooks). No custom label is needed as the predefined labels cover the server's functionality well.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Development Tools",
      "AI/ML Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1013,
    "server_name": "ModelWhale MCP Server",
    "rank_by_usage": 1014,
    "usage_count": "2",
    "original_file": "../crawler/smithery/@joy-yu_modelwhale-mcp-test.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@joy-yu/modelwhale-mcp-test/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1013,
      "name": "ModelWhale MCP Server",
      "author": "@joy-yu/modelwhale-mcp-test",
      "overview": "Provide seamless access to ModelWhale API data through a Model Context Protocol server. Support multiple transport modes including stdio, SSE, and StreamableHTTP for flexible integration and easy debugging. Enable efficient retrieval and interaction with ModelWhale information using user tokens.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@joy-yu/modelwhale-mcp-test",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "2",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@joy-yu_modelwhale-mcp-test.json",
      "tools_count": 8,
      "tools": [
        {
          "name": "get-lab-list",
          "description": "Deploy Server ModelWhale MCP Server @joy-yu/modelwhale-mcp-test Try in Playground get-lab-list",
          "parameters": []
        },
        {
          "name": "get-notebooks-from-lab",
          "description": "获取指定项目 ID 下的 Notebook 列表",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-notebook-ipynb",
          "description": "根据指定 Notebook ID 获取 Notebook ipynb 文件内容",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-mpijob-list",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "get-mpijob-log",
          "description": "Description not available",
          "parameters": [
            {
              "name": "ID",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-model-service-list",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "get-model-service-log",
          "description": "Description not available",
          "parameters": [
            {
              "name": "ID",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-token-coin",
          "description": "Description not available",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@joy-yu/modelwhale-mcp-test/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "modelWhaleToken",
          "required": true,
          "description": "ModelWhale API token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@joy-yu/modelwhale-mcp-test/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1014.@joy-yu_modelwhale-mcp-test_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 992
  }
}