{
  "labels": {
    "analysis": "The MCP Server specializes in managing JSON document databases with capabilities to create, delete, save, query, and synchronize these databases. It supports cloud syncing for collaboration and provides tools to interact with structured data, making it ideal for data storage, retrieval, and integration with AI systems. The focus is on structured data management and seamless access to document collections.",
    "reasoning": "The primary functionality of the server revolves around creating and managing JSON document databases, which aligns most closely with the Database Operations category. Secondary labels include Web Search & Research (for querying structured data) and Cloud Services (due to cloud sync capabilities). The custom label \"Model Context Protocol Integration\" highlights its specific use case in enhancing AI systems with structured data.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Web Search & Research",
      "Cloud Services"
    ],
    "custom_label": "Model Context Protocol Integration",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 553,
    "server_name": "JSON Document Collection Server",
    "rank_by_usage": 554,
    "usage_count": "22",
    "original_file": "../crawler/smithery/@jimpick_mcp-json-db-collection-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@jimpick/mcp-json-db-collection-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "create_json_doc_database",
          "description": "Create a JSON document database",
          "input_schema": {
            "type": "object",
            "properties": {
              "databaseName": {
                "type": "string"
              }
            },
            "required": [
              "databaseName"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "delete_json_doc_database",
          "description": "Delete a JSON document database",
          "input_schema": {
            "type": "object",
            "properties": {
              "databaseName": {
                "type": "string"
              }
            },
            "required": [
              "databaseName"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "connect_json_doc_database_to_cloud",
          "description": "Connect a JSON document database to cloud sync service. Show the dashboard URL after connecting.",
          "input_schema": {
            "type": "object",
            "properties": {
              "databaseName": {
                "type": "string"
              }
            },
            "required": [
              "databaseName"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "list_json_doc_databases",
          "description": "Returns the list of JSON document databases. Use this to understand which databases are available before trying to access JSON documents.",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "save_json_doc_to_db",
          "description": "Save a JSON document to a document database",
          "input_schema": {
            "type": "object",
            "properties": {
              "doc": {
                "type": "object",
                "description": "JSON document to save"
              },
              "databaseName": {
                "type": "string",
                "description": "document database to save to"
              }
            },
            "required": [
              "doc",
              "databaseName"
            ]
          },
          "annotations": null
        },
        {
          "name": "query_json_docs_from_db",
          "description": "Query JSON documents sorted by a field from a document database. If no sortField is provided, use the _id field.",
          "input_schema": {
            "type": "object",
            "properties": {
              "databaseName": {
                "type": "string"
              },
              "sortField": {
                "type": "string"
              }
            },
            "required": [
              "databaseName",
              "sortField"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "load_json_doc_from_db",
          "description": "Load a JSON document by ID from a document database",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of document to load"
              },
              "databaseName": {
                "type": "string",
                "description": "name of document database to load from"
              }
            },
            "required": [
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "delete_json_doc_from_db",
          "description": "Delete a JSON document by ID from a document database",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of document to delete"
              },
              "databaseName": {
                "type": "string",
                "description": "name of document database to delete from"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "connect_json_doc_database_to_cloud",
          "description": "Connect a JSON document database to cloud sync service",
          "input_schema": {
            "type": "object",
            "properties": {
              "databaseName": {
                "type": "string",
                "description": "name of document database to connect to cloud"
              }
            }
          },
          "annotations": null
        }
      ],
      "tool_count": 9,
      "tool_names": [
        "create_json_doc_database",
        "delete_json_doc_database",
        "connect_json_doc_database_to_cloud",
        "list_json_doc_databases",
        "save_json_doc_to_db",
        "query_json_docs_from_db",
        "load_json_doc_from_db",
        "delete_json_doc_from_db",
        "connect_json_doc_database_to_cloud"
      ]
    },
    "server_info_crawled": {
      "id": 553,
      "name": "JSON Document Collection Server",
      "author": "@jimpick/mcp-json-db-collection-server",
      "overview": "Create and manage multiple JSON document databases effortlessly. Sync your databases to the cloud for easy access and collaboration. Enhance your AI systems with structured data using the Model Context Protocol.",
      "repository_url": "https://github.com/jimpick/mcp-json-db-collection-server",
      "homepage": "https://smithery.ai/server/@jimpick/mcp-json-db-collection-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "22",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@jimpick_mcp-json-db-collection-server.json",
      "tools_count": 9,
      "tools": [
        {
          "name": "create_json_doc_database",
          "description": "Create a JSON document database",
          "input_schema": {
            "type": "object",
            "properties": {
              "databaseName": {
                "type": "string"
              }
            },
            "required": [
              "databaseName"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "delete_json_doc_database",
          "description": "Delete a JSON document database",
          "input_schema": {
            "type": "object",
            "properties": {
              "databaseName": {
                "type": "string"
              }
            },
            "required": [
              "databaseName"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "connect_json_doc_database_to_cloud",
          "description": "Connect a JSON document database to cloud sync service. Show the dashboard URL after connecting.",
          "input_schema": {
            "type": "object",
            "properties": {
              "databaseName": {
                "type": "string"
              }
            },
            "required": [
              "databaseName"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "list_json_doc_databases",
          "description": "Returns the list of JSON document databases. Use this to understand which databases are available before trying to access JSON documents.",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "save_json_doc_to_db",
          "description": "Save a JSON document to a document database",
          "input_schema": {
            "type": "object",
            "properties": {
              "doc": {
                "type": "object",
                "description": "JSON document to save"
              },
              "databaseName": {
                "type": "string",
                "description": "document database to save to"
              }
            },
            "required": [
              "doc",
              "databaseName"
            ]
          },
          "annotations": null
        },
        {
          "name": "query_json_docs_from_db",
          "description": "Query JSON documents sorted by a field from a document database. If no sortField is provided, use the _id field.",
          "input_schema": {
            "type": "object",
            "properties": {
              "databaseName": {
                "type": "string"
              },
              "sortField": {
                "type": "string"
              }
            },
            "required": [
              "databaseName",
              "sortField"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "load_json_doc_from_db",
          "description": "Load a JSON document by ID from a document database",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of document to load"
              },
              "databaseName": {
                "type": "string",
                "description": "name of document database to load from"
              }
            },
            "required": [
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "delete_json_doc_from_db",
          "description": "Delete a JSON document by ID from a document database",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of document to delete"
              },
              "databaseName": {
                "type": "string",
                "description": "name of document database to delete from"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "connect_json_doc_database_to_cloud",
          "description": "Connect a JSON document database to cloud sync service",
          "input_schema": {
            "type": "object",
            "properties": {
              "databaseName": {
                "type": "string",
                "description": "name of document database to connect to cloud"
              }
            }
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@jimpick/mcp-json-db-collection-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@jimpick/mcp-json-db-collection-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0554.@jimpick_mcp-json-db-collection-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 542
  }
}