{
  "labels": {
    "analysis": "The MCP Server functions as a Notion Todo and Content Manager, primarily focused on task and content management within Notion. It integrates with Notion's API to perform various operations such as creating, updating, and managing pages, todos, and databases. The tools support features like nested subtasks, Markdown, and custom database views, enhancing productivity and workspace organization. The server facilitates real-time interaction and provides advanced structuring capabilities for efficient content and task management.",
    "reasoning": "The primary functionality revolves around task management and content organization within Notion, fitting best under <b>Daily Productivity</b>. The server's tools are heavily centered around Notion database operations, making <b>Database Operations</b> a relevant secondary label. The custom label <b>Notion Integration</b> is added to highlight the server's specialized integration with Notion's ecosystem.",
    "primary_label": "Daily Productivity",
    "secondary_labels": [
      "Database Operations",
      "File Management"
    ],
    "custom_label": "Notion Integration",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2235,
    "server_name": "Notion Todo and Content Manager",
    "rank_by_usage": 2236,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@liaoweiqiang-dao42_notion-api-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@liaoweiqiang-dao42/notion-api-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2235,
      "name": "Notion Todo and Content Manager",
      "author": "@liaoweiqiang-dao42/notion-api-mcp",
      "overview": "Manage and organize your tasks and content seamlessly by integrating AI models with Notion's API. Create, update, and track todos, manage databases, and structure content with real-time interaction to enhance productivity. Leverage advanced features like nested subtasks, Markdown support, and custom database views for efficient workspace management.",
      "repository_url": "https://github.com/liaoweiqiang-dao42/notion-api-mcp",
      "homepage": "https://smithery.ai/server/@liaoweiqiang-dao42/notion-api-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@liaoweiqiang-dao42_notion-api-mcp.json",
      "tools_count": 17,
      "tools": [
        {
          "name": "create_page",
          "description": "Deploy Server Notion Todo and Content Manager @liaoweiqiang-dao42/notion-api-mcp Try in Playground create_page",
          "parameters": [
            {
              "name": "parent_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "properties",
              "required": true,
              "type": "string"
            },
            {
              "name": "is_database",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_page",
          "description": "Retrieve a Notion page by its ID",
          "parameters": [
            {
              "name": "get_page",
              "required": false,
              "type": "string"
            },
            {
              "name": "page_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_page",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Update",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "Notion",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "page_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "archived",
              "required": false,
              "type": "string"
            },
            {
              "name": "properties",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "archive_page",
          "description": "Archive a Notion page",
          "parameters": [
            {
              "name": "archive_page",
              "required": false,
              "type": "string"
            },
            {
              "name": "Archive",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "Notion",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "page_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "restore_page",
          "description": "Restore an archived Notion page",
          "parameters": [
            {
              "name": "restore_page",
              "required": false,
              "type": "string"
            },
            {
              "name": "page_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_page_property",
          "description": "Get a page property item",
          "parameters": [
            {
              "name": "page_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "page_size",
              "required": false,
              "type": "string"
            },
            {
              "name": "property_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_todo",
          "description": "Add a new todo with rich features",
          "parameters": [
            {
              "name": "tags",
              "required": false,
              "type": "string"
            },
            {
              "name": "task",
              "required": true,
              "type": "string"
            },
            {
              "name": "due_date",
              "required": false,
              "type": "string"
            },
            {
              "name": "priority",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_todos",
          "description": "Search todos with advanced filtering",
          "parameters": [
            {
              "name": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "sort_by",
              "required": false,
              "type": "string"
            },
            {
              "name": "property_name",
              "required": false,
              "type": "string"
            },
            {
              "name": "sort_direction",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_database",
          "description": "Create a new database with custom schema in a parent page",
          "parameters": [
            {
              "name": "create_database",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "query_database",
          "description": "Query database with filters and sorting",
          "parameters": [
            {
              "name": "sorts",
              "required": false,
              "type": "string"
            },
            {
              "name": "database_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "filter_conditions",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "verify_connection",
          "description": "Verify authentication with Notion API",
          "parameters": [
            {
              "name": "verify_connection",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_database_info",
          "description": "Get information about the configured database",
          "parameters": [
            {
              "name": "get_database_info",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_content_blocks",
          "description": "Add content blocks with positioning support",
          "parameters": [
            {
              "name": "add_content_blocks",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_block_content",
          "description": "Get content of a specific block by its ID",
          "parameters": [
            {
              "name": "get_block_content",
              "required": false,
              "type": "string"
            },
            {
              "name": "block_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_block_children",
          "description": "List all children of a block",
          "parameters": [
            {
              "name": "block_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "page_size",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_block_content",
          "description": "Update a block's content by its ID",
          "parameters": [
            {
              "name": "content",
              "required": true,
              "type": "string"
            },
            {
              "name": "block_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_block",
          "description": "Description not available",
          "parameters": [
            {
              "name": "delete_block",
              "required": false,
              "type": "string"
            },
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "blocks",
              "required": false,
              "type": "string"
            },
            {
              "name": "block_id",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@liaoweiqiang-dao42/notion-api-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "notionApiKey",
          "required": true,
          "description": "Notion Integration Token (starts with 'ntn_')"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@liaoweiqiang-dao42/notion-api-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2236.@liaoweiqiang-dao42_notion-api-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1927
  }
}