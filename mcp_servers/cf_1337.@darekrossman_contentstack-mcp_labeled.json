{
  "labels": {
    "analysis": "The MCP Server is designed to facilitate AI-driven interactions with Contentstack CMS, a headless content management system. Its core functionality revolves around enabling programmatic access to CMS operations such as creating, updating, deleting, and retrieving content types, entries, and global fields. The server standardizes CRUD operations through AI commands, allowing for seamless content management automation. This enhances editorial workflows by enabling real-time content manipulation and publishing.",
    "reasoning": "The primary label \"Content Management\" was selected because the server's main purpose is to provide an interface for managing content within a CMS. The secondary label \"Data Analysis & Processing\" was chosen due to the querying and filtering capabilities available for content retrieval. The custom label \"CMS Integration\" was added to specifically highlight the server's role as a bridge between AI systems and Contentstack CMS, as this unique functionality isn't covered by the predefined categories.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": "CMS Integration",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1336,
    "server_name": "Contentstack CMS Integration Server",
    "rank_by_usage": 1337,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@darekrossman_contentstack-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@darekrossman/contentstack-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1336,
      "name": "Contentstack CMS Integration Server",
      "author": "@darekrossman/contentstack-mcp",
      "overview": "Enable AI assistants to interact seamlessly with your Contentstack CMS by accessing and managing content types, entries, assets, and global fields through a standardized protocol. Perform CRUD operations and content publishing directly via AI-driven commands to streamline content management workflows. Enhance your content operations with AI-powered automation and real-time content manipulation capabilities.",
      "repository_url": "https://github.com/darekrossman/contentstack-mcp",
      "homepage": "https://smithery.ai/server/@darekrossman/contentstack-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@darekrossman_contentstack-mcp.json",
      "tools_count": 15,
      "tools": [
        {
          "name": "create_content_type",
          "description": "Deploy Server Contentstack CMS Integration Server @darekrossman/contentstack-mcp Try in Playground create_content_type",
          "parameters": [
            {
              "name": "create_content_type",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_content_type",
          "description": "Updates an existing content type identified by its UID. Allows modification of title, schema, options, and field rules.",
          "parameters": [
            {
              "name": "update_content_type",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_content_type",
          "description": "Deletes a content type identified by its UID.",
          "parameters": [
            {
              "name": "delete_content_type",
              "required": false,
              "type": "string"
            },
            {
              "name": "uid",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_entry",
          "description": "Creates a new entry for a specified content type.",
          "parameters": [
            {
              "name": "entry",
              "required": true,
              "type": "string"
            },
            {
              "name": "content_type_uid",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_entry",
          "description": "Updates an existing entry identified by its UID and content type UID.",
          "parameters": [
            {
              "name": "entry",
              "required": true,
              "type": "string"
            },
            {
              "name": "entry_uid",
              "required": true,
              "type": "string"
            },
            {
              "name": "content_type_uid",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_entry",
          "description": "Deletes an entry identified by its UID and content type UID.",
          "parameters": [
            {
              "name": "delete_entry",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_content_type",
          "description": "Retrieves a specific content type by its UID, optionally including the global field schema.",
          "parameters": [
            {
              "name": "get_content_type",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_all_content_types",
          "description": "Retrieves a list of all content types, with options for pagination and including additional details like global field schema and counts.",
          "parameters": [
            {
              "name": "get_all_content_types",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_entry",
          "description": "Retrieves a specific entry by its content type UID and entry UID, with options for locale and including references.",
          "parameters": [
            {
              "name": "get_entry",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_entries",
          "description": "Retrieves entries for a specified content type, with extensive options for filtering, sorting, pagination, and including related data.",
          "parameters": [
            {
              "name": "get_entries",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "publish_entry",
          "description": "Publishes an entry to a specified environment and locale.",
          "parameters": [
            {
              "name": "publish_entry",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "unpublish_entry",
          "description": "Unpublishes an entry from a specified environment and locale.",
          "parameters": [
            {
              "name": "unpublish_entry",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_global_field",
          "description": "Creates a new global field with the specified title, UID, and schema.",
          "parameters": [
            {
              "name": "create_global_field",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_global_field",
          "description": "Updates an existing global field identified by its UID. Allows modification of title and schema.",
          "parameters": [
            {
              "name": "update_global_field",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_all_global_fields",
          "description": "Retrieves a list of all global fields, with options for pagination and including branch information.",
          "parameters": [
            {
              "name": "get_all_global_fields",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@darekrossman/contentstack-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "contentstackApiKey",
          "required": true,
          "description": "Contentstack API Key"
        },
        {
          "name": "contentstackManagementToken",
          "required": true,
          "description": "Contentstack Management Token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@darekrossman/contentstack-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1337.@darekrossman_contentstack-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1263
  }
}