{
  "labels": {
    "analysis": "The Tavus MCP Server is designed for AI-driven video generation, replica management, and conversational AI interactions. Its core functionality revolves around creating, managing, and interacting with AI-powered video content, including features like lipsync, speech synthesis, and up to replica management. The server provides a comprehensive suite of tools to generate videos, conduct conversational sessions, and manage these assets seamlessly through MCP-compatible applications. The primary use cases include content creation, video production, and conversational AI interactions.",
    "reasoning": "The primary label \"Content Creation\" was chosen because the server's primary functionality revolves around generating and managing AI-driven video content. \"AI/ML Tools\" is included as a secondary label due to the extensive use of machine learning and artificial intelligence in the video generation and conversational processes. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "AI/ML Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1025,
    "server_name": "Tavus MCP Server",
    "rank_by_usage": 1026,
    "usage_count": "2",
    "original_file": "../crawler/smithery/@rakeshdavid_tavus-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@rakeshdavid/tavus-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1025,
      "name": "Tavus MCP Server",
      "author": "@rakeshdavid/tavus-mcp",
      "overview": "Enable AI video generation, replica management, conversational AI, lipsync, and speech synthesis through a comprehensive MCP server for the Tavus API. Manage AI replicas, generate videos, create interactive conversations, synchronize audio, and generate speech seamlessly within MCP-compatible applications. Access full Tavus API v2 capabilities with robust error handling and easy integration.",
      "repository_url": "https://github.com/rakeshdavid/Tavus-MCP",
      "homepage": "https://smithery.ai/server/@rakeshdavid/tavus-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "2",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@rakeshdavid_tavus-mcp.json",
      "tools_count": 29,
      "tools": [
        {
          "name": "create_replica",
          "description": "Deploy Server Tavus MCP Server @rakeshdavid/tavus-mcp Try in Playground create_replica",
          "parameters": [
            {
              "name": "create_replica",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_replica",
          "description": "Get details of a specific replica",
          "parameters": [
            {
              "name": "verbose",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "replica_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_replicas",
          "description": "List all replicas in your account",
          "parameters": [
            {
              "name": "list_replicas",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_replica",
          "description": "Delete a replica permanently",
          "parameters": [
            {
              "name": "delete_replica",
              "required": false,
              "type": "string"
            },
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "replica",
              "required": false,
              "type": "string"
            },
            {
              "name": "permanently",
              "required": false,
              "type": "string"
            },
            {
              "name": "replica_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "rename_replica",
          "description": "Rename an existing replica",
          "parameters": [
            {
              "name": "Rename",
              "required": false,
              "type": "string"
            },
            {
              "name": "an",
              "required": false,
              "type": "string"
            },
            {
              "name": "existing",
              "required": false,
              "type": "string"
            },
            {
              "name": "replica",
              "required": false,
              "type": "string"
            },
            {
              "name": "replica_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "replica_name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "generate_video",
          "description": "Generate a video using a replica and script or audio",
          "parameters": [
            {
              "name": "generate_video",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_video",
          "description": "Get details of a specific video",
          "parameters": [
            {
              "name": "get_video",
              "required": false,
              "type": "string"
            },
            {
              "name": "video_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_videos",
          "description": "List all videos in your account",
          "parameters": [
            {
              "name": "list_videos",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_video",
          "description": "Delete a video permanently",
          "parameters": [
            {
              "name": "delete_video",
              "required": false,
              "type": "string"
            },
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "video",
              "required": false,
              "type": "string"
            },
            {
              "name": "permanently",
              "required": false,
              "type": "string"
            },
            {
              "name": "video_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "rename_video",
          "description": "Rename an existing video",
          "parameters": [
            {
              "name": "Rename",
              "required": false,
              "type": "string"
            },
            {
              "name": "an",
              "required": false,
              "type": "string"
            },
            {
              "name": "existing",
              "required": false,
              "type": "string"
            },
            {
              "name": "video",
              "required": false,
              "type": "string"
            },
            {
              "name": "video_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "video_name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_conversation",
          "description": "Create a new conversational video interface",
          "parameters": [
            {
              "name": "create_conversation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_conversation",
          "description": "Get details of a specific conversation",
          "parameters": [
            {
              "name": "get_conversation",
              "required": false,
              "type": "string"
            },
            {
              "name": "conversation_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_conversations",
          "description": "List all conversations in your account",
          "parameters": [
            {
              "name": "list_conversations",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "end_conversation",
          "description": "End an active conversation",
          "parameters": [
            {
              "name": "end_conversation",
              "required": false,
              "type": "string"
            },
            {
              "name": "End",
              "required": false,
              "type": "string"
            },
            {
              "name": "an",
              "required": false,
              "type": "string"
            },
            {
              "name": "active",
              "required": false,
              "type": "string"
            },
            {
              "name": "conversation",
              "required": false,
              "type": "string"
            },
            {
              "name": "conversation_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_conversation",
          "description": "Delete a conversation permanently",
          "parameters": [
            {
              "name": "delete_conversation",
              "required": false,
              "type": "string"
            },
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "conversation",
              "required": false,
              "type": "string"
            },
            {
              "name": "permanently",
              "required": false,
              "type": "string"
            },
            {
              "name": "conversation_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_persona",
          "description": "Create a new persona for conversational AI",
          "parameters": [
            {
              "name": "create_persona",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_persona",
          "description": "Get details of a specific persona",
          "parameters": [
            {
              "name": "get_persona",
              "required": false,
              "type": "string"
            },
            {
              "name": "persona_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_personas",
          "description": "List all personas in your account",
          "parameters": [
            {
              "name": "list_personas",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "patch_persona",
          "description": "Update a persona using JSON patch format",
          "parameters": [
            {
              "name": "patch",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "persona_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_persona",
          "description": "Delete a persona permanently",
          "parameters": [
            {
              "name": "delete_persona",
              "required": false,
              "type": "string"
            },
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "persona",
              "required": false,
              "type": "string"
            },
            {
              "name": "permanently",
              "required": false,
              "type": "string"
            },
            {
              "name": "persona_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_lipsync",
          "description": "Create a lipsync video by synchronizing audio with video",
          "parameters": [
            {
              "name": "create_lipsync",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_lipsync",
          "description": "Get details of a specific lipsync",
          "parameters": [
            {
              "name": "get_lipsync",
              "required": false,
              "type": "string"
            },
            {
              "name": "lipsync_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_lipsyncs",
          "description": "List all lipsyncs in your account",
          "parameters": [
            {
              "name": "list_lipsyncs",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_lipsync",
          "description": "Delete a lipsync permanently",
          "parameters": [
            {
              "name": "delete_lipsync",
              "required": false,
              "type": "string"
            },
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "lipsync",
              "required": false,
              "type": "string"
            },
            {
              "name": "permanently",
              "required": false,
              "type": "string"
            },
            {
              "name": "lipsync_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "generate_speech",
          "description": "Generate speech audio from text using a replica",
          "parameters": [
            {
              "name": "generate_speech",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_speech",
          "description": "Get details of a specific speech",
          "parameters": [
            {
              "name": "get_speech",
              "required": false,
              "type": "string"
            },
            {
              "name": "speech_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_speeches",
          "description": "List all speeches in your account",
          "parameters": [
            {
              "name": "list_speeches",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_speech",
          "description": "Delete a speech permanently",
          "parameters": [
            {
              "name": "delete_speech",
              "required": false,
              "type": "string"
            },
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "speech",
              "required": false,
              "type": "string"
            },
            {
              "name": "permanently",
              "required": false,
              "type": "string"
            },
            {
              "name": "speech_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "rename_speech",
          "description": "Rename an existing speech",
          "parameters": [
            {
              "name": "Rename",
              "required": false,
              "type": "string"
            },
            {
              "name": "an",
              "required": false,
              "type": "string"
            },
            {
              "name": "existing",
              "required": false,
              "type": "string"
            },
            {
              "name": "speech",
              "required": false,
              "type": "string"
            },
            {
              "name": "speech_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "speech_name",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@rakeshdavid/tavus-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "tavusApiKey",
          "required": true,
          "description": "Your Tavus API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@rakeshdavid/tavus-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1026.@rakeshdavid_tavus-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1004
  }
}