{
  "labels": {
    "analysis": "The MCP Server is designed to provide real estate professionals with tools for accessing, verifying, and analyzing property data through various functions such as address verification, geocoding, property search, and data analysis. The available tools indicate a strong focus on property data retrieval, validation, and decision-making support for real estate workflows.",
    "reasoning": "The primary functionality revolves around property data management and analysis, which aligns well with the \"Data Analysis & Processing\" category. Additionally, the geocoding and address verification tools suggest relevance to \"Web Search & Research\" due to their information retrieval capabilities. A custom label for \"Real Estate Data\" is also appropriate to highlight its specific domain focus.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "Web Search & Research"
    ],
    "custom_label": "Real Estate Data",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 956,
    "server_name": "BatchData Real Estate Server",
    "rank_by_usage": 957,
    "usage_count": "3",
    "original_file": "../crawler/smithery/@zellerhaus_batchdata-mcp-real-estate.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@zellerhaus/batchdata-mcp-real-estate/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 956,
      "name": "BatchData Real Estate Server",
      "author": "@zellerhaus/batchdata-mcp-real-estate",
      "overview": "Provide real estate professionals and developers with direct access to comprehensive property data, address verification, and advanced property search capabilities through natural language queries. Enable validation, geocoding, and skip tracing of addresses seamlessly integrated with BatchData.io APIs. Simplify property data retrieval and analysis for enhanced decision-making workflows.",
      "repository_url": "https://github.com/zellerhaus/batchdata-mcp-real-estate",
      "homepage": "https://smithery.ai/server/@zellerhaus/batchdata-mcp-real-estate",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "3",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@zellerhaus_batchdata-mcp-real-estate.json",
      "tools_count": 8,
      "tools": [
        {
          "name": "verify-address",
          "description": "Deploy Server BatchData Real Estate Server @zellerhaus/batchdata-mcp-real-estate Try in Playground verify-address",
          "parameters": [
            {
              "name": "zip",
              "required": true,
              "type": "string"
            },
            {
              "name": "city",
              "required": true,
              "type": "string"
            },
            {
              "name": "state",
              "required": true,
              "type": "string"
            },
            {
              "name": "street",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestId",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "autocomplete-address",
          "description": "Description not available",
          "parameters": [
            {
              "name": "take",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "uspsVerified",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "geocode-address",
          "description": "Description not available",
          "parameters": [
            {
              "name": "address",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "reverse-geocode",
          "description": "Description not available",
          "parameters": [
            {
              "name": "latitude",
              "required": true,
              "type": "string"
            },
            {
              "name": "longitude",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "lookup-property",
          "description": "Description not available",
          "parameters": [
            {
              "name": "county",
              "required": false,
              "type": "string"
            },
            {
              "name": "street",
              "required": false,
              "type": "string"
            },
            {
              "name": "skipTrace",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search-properties",
          "description": "maxBedrooms minBedrooms useBedrooms useDistance maxBathrooms maxYearBuilt minBathrooms minYearBuilt propertyType useBathrooms useYearBuilt distanceMiles minEquityPercent maxEstimatedValue minEstimatedValue search-properties-by-boundary",
          "parameters": []
        },
        {
          "name": "search-properties-by-boundary",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "count-properties",
          "description": "Description not available",
          "parameters": [
            {
              "name": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "propertyType",
              "required": false,
              "type": "string"
            },
            {
              "name": "minEquityPercent",
              "required": false,
              "type": "string"
            },
            {
              "name": "maxEstimatedValue",
              "required": false,
              "type": "string"
            },
            {
              "name": "minEstimatedValue",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@zellerhaus/batchdata-mcp-real-estate/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "batchdataApiKey",
          "required": true,
          "description": "BatchData.io API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@zellerhaus/batchdata-mcp-real-estate/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0957.@zellerhaus_batchdata-mcp-real-estate_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 935
  }
}