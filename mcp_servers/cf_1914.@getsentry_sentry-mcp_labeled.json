{
  "labels": {
    "analysis": "The MCP Server for Sentry provides tools to interact with the Sentry API, which is a platform for error tracking, monitoring, and release management. It enables users to list organizations, teams, projects, issues (errors), releases, and perform search operations to investigate issues. Additionally, it offers tools to create new teams and projects, as well as retrieve detailed information about issues, including stack traces. The primary use case involves development, debugging, and monitoring of applications by accessing Sentry's monitoring capabilities programmatically.",
    "reasoning": "The primary label \"Development Tools\" is selected because the server's tools are primarily used for debugging, error tracking, and monitoring applications, which are core development activities. The secondary label \"Database Operations\" is chosen because many of the tools involve querying and retrieving data from Sentry, which acts as a database for monitoring events. \"API Integration\" is included as a secondary label because the server facilitates seamless interaction with the Sentry API.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Database Operations",
      "API Integration"
    ],
    "custom_label": "Error Monitoring & Tracking",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1913,
    "server_name": "Sentry",
    "rank_by_usage": 1914,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@getsentry_sentry-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@getsentry/sentry-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1913,
      "name": "Sentry",
      "author": "@getsentry/sentry-mcp",
      "overview": "Connect to the Sentry API seamlessly and enhance your applications with powerful monitoring tools. Utilize a remote middleware to access Sentry's capabilities directly from your LLM clients. Simplify your development workflow by integrating Sentry's features effortlessly.",
      "repository_url": "https://github.com/getsentry/sentry-mcp",
      "homepage": "https://smithery.ai/server/@getsentry/sentry-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@getsentry_sentry-mcp.json",
      "tools_count": 12,
      "tools": [
        {
          "name": "list_organizations",
          "description": "Deploy Server @getsentry/sentry-mcp Try in Playground list_organizations",
          "parameters": []
        },
        {
          "name": "list_teams",
          "description": "List all teams in an organization in Sentry. Use this tool when you need to: - View all teams in a Sentry organization",
          "parameters": []
        },
        {
          "name": "list_projects",
          "description": "Retrieve a list of projects in Sentry. Use this tool when you need to: - View all projects in a Sentry organization",
          "parameters": []
        },
        {
          "name": "list_issues",
          "description": "List all issues in Sentry. Use this tool when you need to: - View all issues in a Sentry organization If you're looking for more granular data beyond a summary of identified problems, you should use the `search_errors()` or `search_transactions()` tools instead. <examples> ### Find the newest unresolved issues in the 'my-project' project list_issues(organizationSlug='my-organization', projectSlug='my-project', query='is:unresolved', sortBy='last_seen') ### Find the most frequently occurring crashes in the 'my-project' project list_issues(organizationSlug='my-organization', projectSlug='my-project', query='is:unresolved error.handled:false', sortBy='count') ### Find the oldest unresolved issues in the 'my-project' project list_issues(organizationSlug='my-organization', projectSlug='my-project', query='is:unresolved', sortBy='first_seen') </examples> <query_syntax> Use the tool `help('query_syntax')` to get more information about the query syntax. There are some common query parameters that are useful for searching errors: - `is:unresolved` - Find unresolved issues - `release:[1.0, 2.0]` - Find issues in a specific release - `release:latest` - Find issues in the latest release only </query_syntax> <hints> If only one parameter is provided, and it could be either `organizationSlug` or `projectSlug`, its probably `organizationSlug`, but if you're really uncertain you should call `list_organizations()` first. </hints>",
          "parameters": []
        },
        {
          "name": "list_releases",
          "description": "List all releases in Sentry. Use this tool when you need to: - Find recent releases in a Sentry organization - Find the most recent version released of a specific project - Determine when a release was deployed to an environment <hints> If only one parameter is provided, and it could be either `organizationSlug` or `projectSlug`, its probably `organizationSlug`, but if you're really uncertain you should call `list_organizations()` first. </hints>",
          "parameters": []
        },
        {
          "name": "get_issue_summary",
          "description": "Retrieve a summary of an issue in Sentry. Use this tool when you need to: - View a summary of an issue in Sentry If the issue is an error, or you want additional information like the stacktrace, you should use `get_issue_details()` tool instead.",
          "parameters": []
        },
        {
          "name": "get_issue_details",
          "description": "Retrieve issue details from Sentry for a specific Issue ID, including the stacktrace and error message if available. Either issueId or issueUrl MUST be provided.\n\nUse this tool when you need to:\n- Investigate a specific production error\n- Access detailed error information and stacktraces from Sentry",
          "parameters": [
            {
              "name": "tool",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_errors",
          "description": "If you're looking for more granular data beyond a summary of identified problems, you should use the `search_errors()` or `search_transactions()` tools instead. ### Find the newest unresolved issues in the 'my-project' project",
          "parameters": []
        },
        {
          "name": "search_transactions",
          "description": "If you're looking for more granular data beyond a summary of identified problems, you should use the `search_errors()` or `search_transactions()` tools instead. ### Find the newest unresolved issues in the 'my-project' project",
          "parameters": []
        },
        {
          "name": "create_team",
          "description": "Create a new team in Sentry. Use this tool when you need to: - Create a new team in a Sentry organization <hints> - If any parameter is ambiguous, you should clarify with the user what they meant. </hints>",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "organizationSlug",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_project",
          "description": "Create a new project in Sentry, giving you access to a new SENTRY_DSN. Use this tool when you need to: - Create a new project in a Sentry organization <hints> - If any parameter is ambiguous, you should clarify with the user what they meant. </hints>",
          "parameters": []
        },
        {
          "name": "help",
          "description": "Get information to help you better work with Sentry. Use this tool when you need to: - Understand the Sentry search syntax <examples> ### Get help with the Sentry search syntax help('query_syntax') </examples>",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@getsentry/sentry-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "sentryAuthToken",
          "required": true,
          "description": "Sentry authentication token with proper scopes."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@getsentry/sentry-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1914.@getsentry_sentry-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1689
  }
}