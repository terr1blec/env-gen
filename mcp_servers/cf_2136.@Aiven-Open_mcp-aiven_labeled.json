{
  "labels": {
    "analysis": "The Aiven MCP Server is designed to facilitate integration and management of Aiven cloud services (PostgreSQL, Kafka, OpenSearch) for developers building full-stack applications with LLMs. Its core functionality revolves around enabling seamless interaction with Aiven projects and resources, simplifying the development process by providing tools to list projects, services, and retrieve detailed service information.",
    "reasoning": "The primary functionality aligns with cloud services and database operations, as it primarily manages Aiven's cloud-based database and streaming services. Secondary relevance is given to API integration due to the server's role in facilitating communication with Aiven's APIs, and development tools due to its role in simplifying the development process.",
    "primary_label": "Cloud Services",
    "secondary_labels": [
      "Database Operations",
      "API Integration"
    ],
    "custom_label": "Managed Cloud Database Integration",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2135,
    "server_name": "Aiven MCP Server",
    "rank_by_usage": 2136,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@Aiven-Open_mcp-aiven.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Aiven-Open/mcp-aiven/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2135,
      "name": "Aiven MCP Server",
      "author": "@Aiven-Open/mcp-aiven",
      "overview": "Access Aiven services like PostgreSQL, Kafka, and OpenSearch to enable LLMs to build full stack solutions for various use cases. Integrate seamlessly with your Aiven projects and services to enhance your applications. Simplify your development process with powerful tools for managing your Aiven resources.",
      "repository_url": "https://github.com/Aiven-Open/mcp-aiven",
      "homepage": "https://smithery.ai/server/@Aiven-Open/mcp-aiven",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Aiven-Open_mcp-aiven.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "list_projects",
          "description": "Deploy Server Aiven MCP Server Claim Server @Aiven-Open/mcp-aiven Try in Playground list_projects",
          "parameters": [
            {
              "name": "list_projects",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_services",
          "description": "Description not available",
          "parameters": [
            {
              "name": "list_services",
              "required": false,
              "type": "string"
            },
            {
              "name": "project_name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_service_details",
          "description": "Description not available",
          "parameters": [
            {
              "name": "get_service_details",
              "required": false,
              "type": "string"
            },
            {
              "name": "project_name",
              "required": true,
              "type": "string"
            },
            {
              "name": "service_name",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Aiven-Open/mcp-aiven/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "aivenToken",
          "required": true,
          "description": "The Aiven authentication token."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Aiven-Open/mcp-aiven/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2136.@Aiven-Open_mcp-aiven_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1851
  }
}