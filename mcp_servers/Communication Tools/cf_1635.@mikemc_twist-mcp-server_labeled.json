{
  "labels": {
    "analysis": "The MCP Server is designed for seamless integration with Twist workspaces, providing tools to manage and automate interactions within the platform. Its core functionality includes managing threads, channels, and messages, allowing users to archive, star, pin, and mark threads for better organization. The server also supports creating, updating, and deleting threads, as well as managing read/unread statuses and thread visibility. This makes it a tool primarily focused on improving communication and productivity within the Twist collaboration platform.",
    "reasoning": "The primary label \"Communication Tools\" was chosen because the server's primary functionality revolves around managing and automating communication within the Twist workspace, including thread management, messaging, and user interactions. The secondary label \"Daily Productivity\" was selected because the server enhances productivity by helping users organize and streamline their workspace. The custom label \"Twist Workspace Automation\" was added to specifically describe the unique focus on automating tasks within the Twist platform.",
    "primary_label": "Communication Tools",
    "secondary_labels": [
      "Daily Productivity"
    ],
    "custom_label": "Twist Workspace Automation",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1634,
    "server_name": "Twist Workspace Integration Server",
    "rank_by_usage": 1635,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@mikemc_twist-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@mikemc/twist-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1634,
      "name": "Twist Workspace Integration Server",
      "author": "@mikemc/twist-mcp-server",
      "overview": "Enable seamless interaction with your Twist workspace by accessing and managing inbox threads, channels, and messages through a comprehensive set of tools. Automate workspace organization tasks such as archiving, starring, pinning, and marking threads to enhance productivity. Integrate your Twist workspace effortlessly with your applications using this Python-based MCP server.",
      "repository_url": "https://github.com/mikemc/twist-mcp-server",
      "homepage": "https://smithery.ai/server/@mikemc/twist-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@mikemc_twist-mcp-server.json",
      "tools_count": 24,
      "tools": [
        {
          "name": "twist_inbox_archive",
          "description": "Deploy Server Twist Workspace Integration Server Claim Server @mikemc/twist-mcp-server Try in Playground twist_inbox_archive",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "twist_inbox_archive_all",
          "description": "Archives all threads in a workspace. Args: older_than_ts: Only archives threads that are the same or older than this timestamp",
          "parameters": []
        },
        {
          "name": "twist_inbox_get",
          "description": "Get the authenticated user's inbox. Args: limit: Limits the number of threads returned (default is 30, maximum is 500) newer_than_ts: Limits threads to those newer when the specified Unix time older_than_ts: Limits threads to those older when the specified Unix time archive_filter: Filter threads based on their is_archived flag: 'all', 'archived', or 'active' (default) order_by: Order of threads: 'desc' (default) or 'asc', based on last_updated attribute exclude_thread_ids: Thread IDs to exclude from results",
          "parameters": []
        },
        {
          "name": "twist_inbox_get_count",
          "description": "Gets inbox count in a workspace for the authenticated user.",
          "parameters": [
            {
              "name": "twist_inbox_get_count",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "twist_inbox_mark_all_read",
          "description": "Marks all inbox threads in the workspace as read.",
          "parameters": [
            {
              "name": "twist_inbox_mark_all_read",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "twist_inbox_unarchive",
          "description": "Unarchives a thread.\n\n    Args:\n        id: The ID of the thread to unarchive",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "twist_threads_add",
          "description": "Adds a new thread to a channel. Args: channel_id: The id of the channel title: The title of the new thread content: The content of the new thread actions: List of action buttons to the new thread attachments: List of attachments to the new thread direct_group_mentions: The groups that are directly mentioned direct_mentions: The users that are directly mentioned groups: The groups that will be notified recipients: An array of users that will be attached to the thread or \"EVERYONE\" send_as_integration: Displays the integration as the thread creator temp_id: The temporary id of the thread",
          "parameters": []
        },
        {
          "name": "twist_threads_clear_unread",
          "description": "Clears unread threads in workspace.",
          "parameters": [
            {
              "name": "twist_threads_clear_unread",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "twist_threads_get",
          "description": "Gets all threads in a channel. Args: channel_id: The id of the channel as_ids: If enabled, only the ids of the threads are returned filter_by: A filter can be one of \"attached_to_me\" or \"everyone\". Default is \"everyone\" limit: Limits the number of threads returned (default is 20, maximum is 500) newer_than_ts: Limits threads to those newer when the specified Unix time older_than_ts: Limits threads to those older when the specified Unix time before_id: Limits threads to those with a lower than the specified id after_id: Limits threads to those with a higher than the specified id workspace_id: The id of the workspace is_pinned: If enabled, only pinned threads are returned is_starred: If enabled, only starred threads are returned order_by: The order of the threads returned. Either \"desc\" (default) or \"asc\" exclude_thread_ids: The thread ids that should be excluded from the results",
          "parameters": []
        },
        {
          "name": "twist_threads_get_unread",
          "description": "Gets unread threads in a workspace for the authenticated user.",
          "parameters": [
            {
              "name": "twist_threads_get_unread",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "twist_threads_getone",
          "description": "Gets a thread object by id.\n\n    Args:\n        id: The id of the thread",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "twist_threads_mark_all_read",
          "description": "Marks all threads in the workspace or channel as read. Args: workspace_id: The id of the workspace channel_id: The id of the channel",
          "parameters": []
        },
        {
          "name": "twist_threads_mark_read",
          "description": "Marks the thread as being read. Args: id: The id of the thread obj_index: The index of the last known read message",
          "parameters": []
        },
        {
          "name": "twist_threads_mark_unread",
          "description": "Marks the thread as being unread. Args: id: The id of the thread obj_index: The index of the last unread message. A value of -1 marks the whole thread as unread",
          "parameters": []
        },
        {
          "name": "twist_threads_mark_unread_for_others",
          "description": "Marks the thread as being unread for others. Args: id: The id of the thread obj_index: The index of the last unread message. A value of -1 marks the whole thread as unread",
          "parameters": []
        },
        {
          "name": "twist_threads_move_to_channel",
          "description": "Moves the thread to a different channel. Args: id: The id of the thread to_channel: The target channel's id",
          "parameters": []
        },
        {
          "name": "twist_threads_mute",
          "description": "Mutes a thread for a number of minutes. Args: id: The id of the thread minutes: The number of minutes to mute the thread",
          "parameters": []
        },
        {
          "name": "twist_threads_pin",
          "description": "Pins a thread.\n\n    Args:\n        id: The id of the thread",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "twist_threads_remove",
          "description": "Removes a thread.\n\n    Args:\n        id: The id of the thread",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "twist_threads_star",
          "description": "Stars a thread.\n\n    Args:\n        id: The id of the thread",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "twist_threads_unmute",
          "description": "Unmutes a thread.\n\n    Args:\n        id: The id of the thread",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "twist_threads_unpin",
          "description": "Unpins a thread.\n\n    Args:\n        id: The id of the thread",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "twist_threads_unstar",
          "description": "Unstars a thread.\n\n    Args:\n        id: The id of the thread",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "twist_threads_update",
          "description": "Updates an existing thread. Args: id: The id of the thread actions: List of action buttons to the thread attachments: List of attachments to the thread content: The content of the thread direct_group_mentions: The groups that are directly mentioned direct_mentions: The users that are directly mentioned title: The title of the thread",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@mikemc/twist-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "twistApiToken",
          "required": true,
          "description": "Twist API OAuth2 test token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@mikemc/twist-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1635.@mikemc_twist-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1482
  }
}