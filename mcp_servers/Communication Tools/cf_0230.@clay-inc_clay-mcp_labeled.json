{
  "labels": {
    "analysis": "The MCP Server (Clay) is primarily focused on managing and interacting with contact and interaction data within a network. Its core functionality revolves around searching, aggregating, and manipulating contact records, groups, notes, and events. The tools provided enable users to organize their networking data, retrieve specific information about contacts, and manage their contact database efficiently. The server does not fit neatly into traditional categories like browser automation or AI/ML, but rather serves as a specialized contacts and interaction management system.",
    "reasoning": "The primary label of \"Contact Management\" was chosen because the server's primary functionality revolves around managing contacts, interactions, and related data. The secondary labels of \"Database Operations\" and \"Daily Productivity\" were selected because the tools enable efficient data querying and organization, which are common productivity tasks. No custom label is needed as the predefined labels sufficiently cover the server's functionality.",
    "primary_label": "Communication Tools",
    "secondary_labels": [
      "Database Operations",
      "Daily Productivity"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 229,
    "server_name": "Clay MCP",
    "rank_by_usage": 230,
    "usage_count": "191",
    "original_file": "../crawler/smithery/@clay-inc_clay-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@clay-inc/clay-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 229,
      "name": "Clay MCP",
      "author": "@clay-inc/clay-mcp",
      "overview": "Access your network seamlessly with a simple and efficient server. Leverage a variety of tools to enhance your applications and workflows. Start integrating with your existing systems effortlessly.",
      "repository_url": "https://github.com/clay-inc/clay-mcp",
      "homepage": "https://smithery.ai/server/@clay-inc/clay-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "191",
      "success_rate": "98.76%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@clay-inc_clay-mcp.json",
      "tools_count": 11,
      "tools": [
        {
          "name": "searchContacts",
          "description": "Deploy Server @clay-inc/clay-mcp Try in Playground searchContacts",
          "parameters": [
            {
              "name": "searchContacts",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "searchInteractions",
          "description": "Search for interactions and return matching interactions. Use for questions about specific interactions, \"who\" questions (e.g. \"Who did I meet most?\"), finding best friends based on relevance score, or finding recently added/created contacts. Returns actual contact records for queries needing specific interactions.",
          "parameters": [
            {
              "name": "searchInteractions",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "aggregateContacts",
          "description": "Get numerical statistics and counts ONLY. Returns numbers and percentages, never specific contacts. For counting questions like \"how many work at Google?\" or \"what % are engineers?\". Use search endpoint instead for any \"who\" questions or to get actual contact details.",
          "parameters": [
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "job_title",
              "required": false,
              "type": "string"
            },
            {
              "name": "company_name",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getContact",
          "description": "Get details for a contact by id, including emails, social links, phone numbers, and notes.",
          "parameters": [
            {
              "name": "getContact",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "createContact",
          "description": "Create a new contact record in Clay. This endpoint should only be used when you need to create a completely new contact, not for adding contacts to groups.",
          "parameters": [
            {
              "name": "createContact",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "createNote",
          "description": "Create a note for a contact. Only use this when the user explicitly asks to create, add, or save a note.",
          "parameters": [
            {
              "name": "createNote",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getGroups",
          "description": "Get all groups or lists for the user.",
          "parameters": [
            {
              "name": "getGroups",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "createGroup",
          "description": "Create a group or list for the user. If a group with the same name already exists, it will not create a duplicate unless explicitly requested to ignore the check.",
          "parameters": [
            {
              "name": "createGroup",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "updateGroup",
          "description": "Update a group or list. Use this to update the group title and/or modify its members. When adding or removing contacts, provide ALL contact IDs to add/remove in a single call - do not make multiple calls for individual contacts.",
          "parameters": [
            {
              "name": "updateGroup",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getNotes",
          "description": "Use ONLY when the user explicitly mentions \"note\" or \"notes\" to retrieve notes between two dates (e.g. \"what notes from last week?\"). Returns notes by creation date only - does NOT search note content or filter by other criteria. NEVER use this tool for finding contacts or any other purpose besides retrieving notes. This tool is strictly prohibited from being used unless \"note\" or \"notes\" are explicitly mentioned in the query.",
          "parameters": [
            {
              "name": "getNotes",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getEvents",
          "description": "Use this tool ONLY to fetch meetings/events in a date range (e.g. \"what meetings next week?\", \"show calendar for tomorrow\"). DO NOT use for counting meetings, analyzing patterns, or finding frequent participants.",
          "parameters": [
            {
              "name": "getEvents",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@clay-inc/clay-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "clayApiKey",
          "required": true,
          "description": "Your Clay API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@clay-inc/clay-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0230.@clay-inc_clay-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 226
  }
}