{
  "labels": {
    "analysis": "The MCP Server described specializes in SMS communication via the Aligo SMS API. Its core functionality revolves around sending SMS messages and retrieving related information, primarily serving as an integration point for AI agents like Claude AI to facilitate communication tasks. The server streamlines SMS operations by providing easy integration and setup.",
    "reasoning": "The primary label \"Communication Tools\" is chosen because the server's main functionality is centered around sending SMS messages, which is a key aspect of communication services. The secondary label \"API Integration\" fits as the server acts as an intermediary between users and the Aligo SMS API. A custom label \"SMS Management\" is added to highlight the specific nature of the communication tool.",
    "primary_label": "Communication Tools",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": "SMS Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2202,
    "server_name": "Aligo SMS API Integration Server",
    "rank_by_usage": 2203,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@hongsw_aligo-sms-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@hongsw/aligo-sms-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2202,
      "name": "Aligo SMS API Integration Server",
      "author": "@hongsw/aligo-sms-mcp-server",
      "overview": "Access the Aligo SMS API seamlessly with this server. Send SMS messages and retrieve related information using compatible AI agents like Claude AI. Simplify your communication tasks with easy integration and setup.",
      "repository_url": "https://github.com/hongsw/aligo-sms-mcp-server",
      "homepage": "https://smithery.ai/server/@hongsw/aligo-sms-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@hongsw_aligo-sms-mcp-server.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "send-sms",
          "description": "Deploy Server Aligo SMS API Integration Server Claim Server @hongsw/aligo-sms-mcp-server Try in Playground",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@hongsw/aligo-sms-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "apiKey",
          "required": true,
          "description": "Aligo API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@hongsw/aligo-sms-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2203.@hongsw_aligo-sms-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1900
  }
}