{
  "labels": {
    "analysis": "The MCP Server described is focused on sending real-time notifications through the Pushover service. Its primary functionality involves automating alerts and keeping users informed through timely updates. The available tool, \"send,\" allows for direct integration with applications to dispatch notifications efficiently. This server addresses communication and alert needs in an automated fashion.",
    "reasoning": "The primary label \"Communication Tools\" was chosen because the server's core functionality revolves around messaging and notifications, which are key aspects of communication. The secondary label \"Daily Productivity\" was selected because real-time alerts often improve personal and professional efficiency. No custom label is needed as the predefined categories adequately capture the serverâ€™s functionality.",
    "primary_label": "Communication Tools",
    "secondary_labels": [
      "Daily Productivity"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1573,
    "server_name": "Pushover Notification",
    "rank_by_usage": 1574,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@AshikNesin_pushover-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@AshikNesin/pushover-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1573,
      "name": "Pushover Notification",
      "author": "@AshikNesin/pushover-mcp",
      "overview": "Send real-time notifications effortlessly through Pushover.net. Integrate this tool with your AI agents to keep users informed with timely alerts. Simplify your communication by automating notifications directly from your applications.",
      "repository_url": "https://github.com/AshikNesin/pushover-mcp",
      "homepage": "https://smithery.ai/server/@AshikNesin/pushover-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@AshikNesin_pushover-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "send",
          "description": "Deploy Server Pushover Notification @AshikNesin/pushover-mcp Try in Playground",
          "parameters": [
            {
              "name": "title",
              "required": false,
              "type": "string"
            },
            {
              "name": "device",
              "required": false,
              "type": "string"
            },
            {
              "name": "message",
              "required": true,
              "type": "string"
            },
            {
              "name": "priority",
              "required": false,
              "type": "string"
            },
            {
              "name": "url_title",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@AshikNesin/pushover-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "token",
          "required": true,
          "description": "Your Pushover application token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@AshikNesin/pushover-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1574.@AshikNesin_pushover-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1439
  }
}