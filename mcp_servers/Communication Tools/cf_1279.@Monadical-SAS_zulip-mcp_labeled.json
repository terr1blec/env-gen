{
  "labels": {
    "analysis": "The MCP Server is specialized for interacting with Zulip workspaces, offering tools to automate communication tasks such as listing channels, posting messages, sending direct messages, adding reactions, and retrieving conversation history. Its functionality enables efficient communication and bot automation within Zulip organizations through straightforward integration options.",
    "reasoning": "The primary label \"Communication Tools\" is chosen because the server's core functionality revolves around messaging, channels, and user interactions within Zulip. The secondary label \"API Integration\" is included because the server facilitates integration with Zulip's API for automation purposes. No custom label is necessary as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Communication Tools",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1278,
    "server_name": "Zulip Integration Server",
    "rank_by_usage": 1279,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@Monadical-SAS_zulip-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Monadical-SAS/zulip-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1278,
      "name": "Zulip Integration Server",
      "author": "@Monadical-SAS/zulip-mcp",
      "overview": "Enable AI assistants to interact seamlessly with Zulip workspaces by listing channels, posting messages, sending direct messages, adding reactions, and retrieving conversation history. Facilitate efficient communication and automation within your Zulip organization through a comprehensive set of tools. Simplify bot setup and integration with straightforward configuration options for various deployment methods.",
      "repository_url": "https://github.com/Monadical-SAS/zulip-mcp",
      "homepage": "https://smithery.ai/server/@Monadical-SAS/zulip-mcp",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Monadical-SAS_zulip-mcp.json",
      "tools_count": 8,
      "tools": [
        {
          "name": "zulip_list_channels",
          "description": "Deploy Server Zulip Integration Server Claim Server @Monadical-SAS/zulip-mcp Try in Playground zulip_list_channels",
          "parameters": [
            {
              "name": "zulip_list_channels",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "zulip_post_message",
          "description": "Post a new message to a Zulip channel (stream)",
          "parameters": [
            {
              "name": "zulip_post_message",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "zulip_send_direct_message",
          "description": "Send a direct message to one or more users",
          "parameters": [
            {
              "name": "zulip_send_direct_message",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "zulip_add_reaction",
          "description": "Add an emoji reaction to a message",
          "parameters": [
            {
              "name": "emoji_name",
              "required": true,
              "type": "string"
            },
            {
              "name": "message_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "zulip_get_channel_history",
          "description": "Get recent messages from a channel (stream) and topic",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "topic",
              "required": true,
              "type": "string"
            },
            {
              "name": "anchor",
              "required": false,
              "type": "string"
            },
            {
              "name": "channel_name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "zulip_get_topics",
          "description": "Get topics in a channel (stream)",
          "parameters": [
            {
              "name": "zulip_get_topics",
              "required": false,
              "type": "string"
            },
            {
              "name": "channel_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "zulip_subscribe_to_channel",
          "description": "Subscribe the bot to a channel (stream)",
          "parameters": [
            {
              "name": "zulip_subscribe_to_channel",
              "required": false,
              "type": "string"
            },
            {
              "name": "channel_name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "zulip_get_users",
          "description": "Get list of users in the Zulip organization",
          "parameters": [
            {
              "name": "zulip_get_users",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Monadical-SAS/zulip-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "zulipApiKey",
          "required": true,
          "description": "The Zulip bot's API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Monadical-SAS/zulip-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1279.@Monadical-SAS_zulip-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1219
  }
}