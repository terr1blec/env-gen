{
  "labels": {
    "analysis": "The MCP Server acts as an OpenAPI proxy, enabling seamless interaction with WhatsApp's API through automated tool generation for each API operation. It simplifies API integration by allowing Claude AI to directly invoke WhatsApp endpoints for authentication, session management, messaging, media sharing, group management, and more without manual coding. The tools cover a wide range of WhatsApp functionalities, including message sending, chat management, status updates, and presence monitoring.",
    "reasoning": "The primary label \"Communication Tools\" was chosen because the server primarily facilitates interaction with WhatsApp's communication features (messaging, sessions, groups, status updates). \"API Integration\" is a secondary label due to its role as an OpenAPI proxy. \"Social Media\" is also relevant since WhatsApp is a social/communication platform. No custom label is needed as the predefined categories cover its functionality well.",
    "primary_label": "Communication Tools",
    "secondary_labels": [
      "API Integration",
      "Social Media"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 699,
    "server_name": "OpenAPI Proxy Server",
    "rank_by_usage": 700,
    "usage_count": "11",
    "original_file": "../crawler/smithery/@fellipesaraiva88_waha-api-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@fellipesaraiva88/waha-api-mcp-server/mcp?config=eyJkZWJ1ZyI6IGZhbHNlLCAib3BlbmFwaUZpbGUiOiAiLi9vcGVuYXBpLnlhbWwifQ==&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "AuthController_getQR",
          "description": "Get QR code for pairing WhatsApp API.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "format": {
                "type": "string",
                "description": "format parameter"
              }
            },
            "required": [
              "session",
              "format"
            ]
          },
          "annotations": null
        },
        {
          "name": "AuthController_requestCode",
          "description": "Request authentication code.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "SessionsController_list",
          "description": "List all sessions",
          "input_schema": {
            "type": "object",
            "properties": {
              "all": {
                "type": "boolean",
                "description": "Return all sessions, including those that are in the STOPPED state."
              }
            },
            "required": []
          },
          "annotations": null
        },
        {
          "name": "SessionsController_create",
          "description": "Create session a new session (and start it at the same time if required).",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "SessionsController_get",
          "description": "Get session information",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "SessionsController_update",
          "description": "Update a session",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "SessionsController_delete",
          "description": "Delete the session with the given name. Stop and logout as well. Idempotent operation.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "SessionsController_getMe",
          "description": "Get information about the authenticated account",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "SessionsController_start",
          "description": "Start the session with the given name. The session must exist. Idempotent operation.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "SessionsController_stop",
          "description": "Stop the session with the given name. Idempotent operation.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "SessionsController_logout",
          "description": "Logout the session, restart a session if it was not STOPPED",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "SessionsController_restart",
          "description": "Restart the session with the given name.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "SessionsController_DEPRACATED_start",
          "description": "Create session (if not exists) or update a config (if exists) and start it.",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "SessionsController_DEPRECATED_stop",
          "description": "Stop session and Logout by default.",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "SessionsController_DEPRECATED_logout",
          "description": "Stop, Logout and Delete session.",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ProfileController_getMyProfile",
          "description": "Get my profile",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ProfileController_setProfileName",
          "description": "Set my profile name",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ProfileController_setProfileStatus",
          "description": "Set profile status (About)",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ProfileController_setProfilePicture",
          "description": "Set profile picture",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ProfileController_deleteProfilePicture",
          "description": "Delete profile picture",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendText",
          "description": "Send a text message",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendTextGet",
          "description": "Send a text message",
          "input_schema": {
            "type": "object",
            "properties": {
              "phone": {
                "type": "string",
                "description": "phone parameter"
              },
              "text": {
                "type": "string",
                "description": "text parameter"
              },
              "session": {
                "type": "string",
                "description": "session parameter"
              }
            },
            "required": [
              "phone",
              "text",
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendImage",
          "description": "Either from an URL or base64 data - look at the request schemas for details.",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendFile",
          "description": "Either from an URL or base64 data - look at the request schemas for details.",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendVoice",
          "description": "Either from an URL or base64 data - look at the request schemas for details.",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendVideo",
          "description": "Either from an URL or base64 data - look at the request schemas for details.",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendButtons",
          "description": "Send Buttons",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_forwardMessage",
          "description": "POST /api/forwardMessage",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendSeen",
          "description": "POST /api/sendSeen",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_startTyping",
          "description": "POST /api/startTyping",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_stopTyping",
          "description": "POST /api/stopTyping",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_setReaction",
          "description": "React to a message with an emoji",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_setStar",
          "description": "Star or unstar a message",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendPoll",
          "description": "You can use it as buttons or list replacement",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendLocation",
          "description": "POST /api/sendLocation",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendLinkPreview",
          "description": "POST /api/sendLinkPreview",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendContactVcard",
          "description": "POST /api/sendContactVcard",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendButtonsReply",
          "description": "Reply on a button message",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_getMessages",
          "description": "DEPRECATED. Use \"GET /api/chats/{id}/messages\" instead",
          "input_schema": {
            "type": "object",
            "properties": {
              "downloadMedia": {
                "type": "boolean",
                "description": "Download media for messages"
              },
              "chatId": {
                "type": "string",
                "description": "chatId parameter"
              },
              "session": {
                "type": "string",
                "description": "session parameter"
              },
              "limit": {
                "type": "number",
                "description": "limit parameter"
              },
              "offset": {
                "type": "number",
                "description": "offset parameter"
              },
              "filter.timestamp.lte": {
                "type": "number",
                "description": "Filter messages before this timestamp (inclusive)"
              },
              "filter.timestamp.gte": {
                "type": "number",
                "description": "Filter messages after this timestamp (inclusive)"
              },
              "filter.fromMe": {
                "type": "boolean",
                "description": "From me filter (by default shows all messages)"
              }
            },
            "required": [
              "chatId",
              "session",
              "limit"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_DEPRECATED_checkNumberStatus",
          "description": "DEPRECATED. Use \"POST /contacts/check-exists\" instead",
          "input_schema": {
            "type": "object",
            "properties": {
              "phone": {
                "type": "string",
                "description": "The phone number to check"
              },
              "session": {
                "type": "string",
                "description": "session parameter"
              }
            },
            "required": [
              "phone",
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_reply",
          "description": "DEPRECATED - you can set \"reply_to\" field when sending text, image, etc",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_getChats",
          "description": "Get chats",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "sortBy": {
                "type": "string",
                "description": "Sort by field"
              },
              "sortOrder": {
                "type": "string",
                "description": "Sort order - <b>desc</b>ending (Z => A, New first) or <b>asc</b>ending (A => Z, Old first)"
              },
              "limit": {
                "type": "number",
                "description": "limit parameter"
              },
              "offset": {
                "type": "number",
                "description": "offset parameter"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_getChatsOverview",
          "description": "Get chats overview. Includes all necessary things to build UI \"your chats overview\" page - chat id, name, picture, last message. Sorting by last message timestamp",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "limit": {
                "type": "number",
                "description": "limit parameter"
              },
              "offset": {
                "type": "number",
                "description": "offset parameter"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_deleteChat",
          "description": "Deletes the chat",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              }
            },
            "required": [
              "session",
              "chatId"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_getChatPicture",
          "description": "Gets chat picture",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "chatId parameter"
              },
              "refresh": {
                "type": "boolean",
                "description": "Refresh the picture from the server (24h cache by default). Do not refresh if not needed, you can get rate limit error"
              }
            },
            "required": [
              "session",
              "chatId"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_getChatMessages",
          "description": "Gets messages in the chat",
          "input_schema": {
            "type": "object",
            "properties": {
              "downloadMedia": {
                "type": "boolean",
                "description": "Download media for messages"
              },
              "limit": {
                "type": "number",
                "description": "limit parameter"
              },
              "offset": {
                "type": "number",
                "description": "offset parameter"
              },
              "filter.timestamp.lte": {
                "type": "number",
                "description": "Filter messages before this timestamp (inclusive)"
              },
              "filter.timestamp.gte": {
                "type": "number",
                "description": "Filter messages after this timestamp (inclusive)"
              },
              "filter.fromMe": {
                "type": "boolean",
                "description": "From me filter (by default shows all messages)"
              },
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              }
            },
            "required": [
              "limit",
              "session",
              "chatId"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_clearMessages",
          "description": "Clears all messages from the chat",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              }
            },
            "required": [
              "session",
              "chatId"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_getChatMessage",
          "description": "Gets message by id",
          "input_schema": {
            "type": "object",
            "properties": {
              "downloadMedia": {
                "type": "boolean",
                "description": "Download media for messages"
              },
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              },
              "messageId": {
                "type": "string",
                "description": "messageId parameter"
              }
            },
            "required": [
              "session",
              "chatId",
              "messageId"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_deleteMessage",
          "description": "Deletes a message from the chat",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              },
              "messageId": {
                "type": "string",
                "description": "Message ID in format <code>{fromMe}_{chat}_{message_id}[_{participant}]</code>"
              }
            },
            "required": [
              "session",
              "chatId",
              "messageId"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_editMessage",
          "description": "Edits a message in the chat",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              },
              "messageId": {
                "type": "string",
                "description": "Message ID in format <code>{fromMe}_{chat}_{message_id}[_{participant}]</code>"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "chatId",
              "messageId",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_pinMessage",
          "description": "Pins a message in the chat",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              },
              "messageId": {
                "type": "string",
                "description": "messageId parameter"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "chatId",
              "messageId",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_unpinMessage",
          "description": "Unpins a message in the chat",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              },
              "messageId": {
                "type": "string",
                "description": "messageId parameter"
              }
            },
            "required": [
              "session",
              "chatId",
              "messageId"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_archiveChat",
          "description": "Archive the chat",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              }
            },
            "required": [
              "session",
              "chatId"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_unarchiveChat",
          "description": "Unarchive the chat",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              }
            },
            "required": [
              "session",
              "chatId"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_unreadChat",
          "description": "Unread the chat",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              }
            },
            "required": [
              "session",
              "chatId"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_list",
          "description": "Get list of know channels",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "role": {
                "type": "string",
                "description": "role parameter"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_create",
          "description": "Create a new channel.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_delete",
          "description": "Delete the channel.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "WhatsApp Channel ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_get",
          "description": "You can use either id (123@newsletter) OR invite code (https://www.whatsapp.com/channel/123)",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "WhatsApp Channel ID or invite code from invite link https://www.whatsapp.com/channel/11111"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_previewChannelMessages",
          "description": "You can use either invite code (https://www.whatsapp.com/channel/123) or (123)ORChannel ID (123@newsletter).",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Channel id or invite code"
              },
              "downloadMedia": {
                "type": "boolean",
                "description": "downloadMedia parameter"
              },
              "limit": {
                "type": "number",
                "description": "limit parameter"
              }
            },
            "required": [
              "session",
              "id",
              "downloadMedia",
              "limit"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_follow",
          "description": "Follow the channel.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "WhatsApp Channel ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_unfollow",
          "description": "Unfollow the channel.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "WhatsApp Channel ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_mute",
          "description": "Mute the channel.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "WhatsApp Channel ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_unmute",
          "description": "Unmute the channel.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "WhatsApp Channel ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_searchByView",
          "description": "Search for channels (by view)",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_searchByText",
          "description": "Search for channels (by text)",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_getSearchViews",
          "description": "Get list of views for channel search",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_getSearchCountries",
          "description": "Get list of countries for channel search",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_getSearchCategories",
          "description": "Get list of categories for channel search",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "StatusController_sendTextStatus",
          "description": "Send text status",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "StatusController_sendImageStatus",
          "description": "Send image status",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "StatusController_sendVoiceStatus",
          "description": "Send voice status",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "StatusController_sendVideoStatus",
          "description": "Send video status",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "StatusController_deleteStatus",
          "description": "DELETE sent status",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "StatusController_getNewMessageId",
          "description": "Generate message ID you can use to batch contacts",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "LabelsController_getAll",
          "description": "Get all labels",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "LabelsController_create",
          "description": "Create a new label",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "LabelsController_update",
          "description": "Update a label",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "labelId": {
                "type": "string",
                "description": "labelId parameter"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "labelId",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "LabelsController_delete",
          "description": "Delete a label",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "labelId": {
                "type": "string",
                "description": "labelId parameter"
              }
            },
            "required": [
              "session",
              "labelId"
            ]
          },
          "annotations": null
        },
        {
          "name": "LabelsController_getChatLabels",
          "description": "Get labels for the chat",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              }
            },
            "required": [
              "session",
              "chatId"
            ]
          },
          "annotations": null
        },
        {
          "name": "LabelsController_putChatLabels",
          "description": "Save labels for the chat",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "chatId",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "LabelsController_getChatsByLabel",
          "description": "Get chats by label",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "labelId": {
                "type": "string",
                "description": "labelId parameter"
              }
            },
            "required": [
              "session",
              "labelId"
            ]
          },
          "annotations": null
        },
        {
          "name": "ContactsController_getAll",
          "description": "Get all contacts",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "session parameter"
              },
              "sortBy": {
                "type": "string",
                "description": "Sort by field"
              },
              "sortOrder": {
                "type": "string",
                "description": "Sort order - <b>desc</b>ending (Z => A, New first) or <b>asc</b>ending (A => Z, Old first)"
              },
              "limit": {
                "type": "number",
                "description": "limit parameter"
              },
              "offset": {
                "type": "number",
                "description": "offset parameter"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ContactsController_get",
          "description": "The method always return result, even if the phone number is not registered in WhatsApp. For that - use /contacts/check-exists endpoint below.",
          "input_schema": {
            "type": "object",
            "properties": {
              "contactId": {
                "type": "string",
                "description": "contactId parameter"
              },
              "session": {
                "type": "string",
                "description": "session parameter"
              }
            },
            "required": [
              "contactId",
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ContactsController_checkExists",
          "description": "Check phone number is registered in WhatsApp.",
          "input_schema": {
            "type": "object",
            "properties": {
              "phone": {
                "type": "string",
                "description": "The phone number to check"
              },
              "session": {
                "type": "string",
                "description": "session parameter"
              }
            },
            "required": [
              "phone",
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ContactsController_getAbout",
          "description": "Returns null if you do not have permission to read their status.",
          "input_schema": {
            "type": "object",
            "properties": {
              "contactId": {
                "type": "string",
                "description": "contactId parameter"
              },
              "session": {
                "type": "string",
                "description": "session parameter"
              }
            },
            "required": [
              "contactId",
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ContactsController_getProfilePicture",
          "description": "If privacy settings do not allow to get the picture, the method will return null.",
          "input_schema": {
            "type": "object",
            "properties": {
              "contactId": {
                "type": "string",
                "description": "contactId parameter"
              },
              "refresh": {
                "type": "boolean",
                "description": "Refresh the picture from the server (24h cache by default). Do not refresh if not needed, you can get rate limit error"
              },
              "session": {
                "type": "string",
                "description": "session parameter"
              }
            },
            "required": [
              "contactId",
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ContactsController_block",
          "description": "Block contact",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ContactsController_unblock",
          "description": "Unblock contact",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_createGroup",
          "description": "Create a new group.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_getGroups",
          "description": "Get all groups.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "sortBy": {
                "type": "string",
                "description": "Sort by field"
              },
              "sortOrder": {
                "type": "string",
                "description": "Sort order - <b>desc</b>ending (Z => A, New first) or <b>asc</b>ending (A => Z, Old first)"
              },
              "limit": {
                "type": "number",
                "description": "limit parameter"
              },
              "offset": {
                "type": "number",
                "description": "offset parameter"
              },
              "exclude": {
                "type": "array",
                "description": "Exclude fields"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_joinInfoGroup",
          "description": "Get info about the group before joining.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "code": {
                "type": "string",
                "description": "Group code (123) or url (https://chat.whatsapp.com/123)"
              }
            },
            "required": [
              "session",
              "code"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_joinGroup",
          "description": "Join group via code",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_getGroupsCount",
          "description": "Get the number of groups.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_refreshGroups",
          "description": "Refresh groups from the server.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_getGroup",
          "description": "Get the group.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_deleteGroup",
          "description": "Delete the group.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_leaveGroup",
          "description": "Leave the group.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_getChatPicture",
          "description": "Get group picture",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              },
              "refresh": {
                "type": "boolean",
                "description": "Refresh the picture from the server (24h cache by default). Do not refresh if not needed, you can get rate limit error"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_setPicture",
          "description": "Set group picture",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Group ID"
              },
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "id",
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_deletePicture",
          "description": "Delete group picture",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Group ID"
              },
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "id",
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_setDescription",
          "description": "Returns \"true\" if the subject was properly updated. This can return \"false\" if the user does not have the necessary permissions.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "id",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_setSubject",
          "description": "Returns \"true\" if the subject was properly updated. This can return \"false\" if the user does not have the necessary permissions.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "id",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_setInfoAdminOnly",
          "description": "You can allow only admins to edit group info (title, description, photo).",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "id",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_getInfoAdminOnly",
          "description": "You can allow only admins to edit group info (title, description, photo).",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_setMessagesAdminOnly",
          "description": "Updates the group settings to only allow admins to send messages.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "id",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_getMessagesAdminOnly",
          "description": "The group settings to only allow admins to send messages.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_getInviteCode",
          "description": "Gets the invite code for the group.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_revokeInviteCode",
          "description": "Invalidates the current group invite code and generates a new one.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_getParticipants",
          "description": "Get participants",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_addParticipants",
          "description": "Add participants",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "id",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_removeParticipants",
          "description": "Remove participants",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "id",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_promoteToAdmin",
          "description": "Promote participants to admin users.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "id",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_demoteToAdmin",
          "description": "Demotes participants to regular users.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "id",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "PresenceController_setPresence",
          "description": "Set session presence",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "PresenceController_getPresenceAll",
          "description": "Get all subscribed presence information.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "PresenceController_getPresence",
          "description": "Get the presence for the chat id. If it hasn't been subscribed - it also subscribes to it.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              }
            },
            "required": [
              "session",
              "chatId"
            ]
          },
          "annotations": null
        },
        {
          "name": "PresenceController_subscribe",
          "description": "Subscribe to presence events for the chat.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              }
            },
            "required": [
              "session",
              "chatId"
            ]
          },
          "annotations": null
        },
        {
          "name": "ScreenshotController_screenshot",
          "description": "GET /api/screenshot",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "session parameter"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "PingController_ping",
          "description": "Check if the server is alive and responding to requests.",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "HealthController_check",
          "description": "Perform all health checks and return the server's health status.",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "ServerController_get",
          "description": "Get the version of the server",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "ServerController_environment",
          "description": "Get the server environment",
          "input_schema": {
            "type": "object",
            "properties": {
              "all": {
                "type": "boolean",
                "description": "Include all environment variables"
              }
            },
            "required": []
          },
          "annotations": null
        },
        {
          "name": "ServerController_status",
          "description": "Get the server status",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "ServerController_stop",
          "description": "If you're using docker, after calling this endpoint Docker will start a new container, so you can use this endpoint to restart the server",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ServerDebugController_heapsnapshot",
          "description": "Return a heapsnapshot of the server's memory",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "VersionController_get",
          "description": "Use 'GET /api/server/version' instead ",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        }
      ],
      "tool_count": 127,
      "tool_names": [
        "AuthController_getQR",
        "AuthController_requestCode",
        "SessionsController_list",
        "SessionsController_create",
        "SessionsController_get",
        "SessionsController_update",
        "SessionsController_delete",
        "SessionsController_getMe",
        "SessionsController_start",
        "SessionsController_stop",
        "SessionsController_logout",
        "SessionsController_restart",
        "SessionsController_DEPRACATED_start",
        "SessionsController_DEPRECATED_stop",
        "SessionsController_DEPRECATED_logout",
        "ProfileController_getMyProfile",
        "ProfileController_setProfileName",
        "ProfileController_setProfileStatus",
        "ProfileController_setProfilePicture",
        "ProfileController_deleteProfilePicture",
        "ChattingController_sendText",
        "ChattingController_sendTextGet",
        "ChattingController_sendImage",
        "ChattingController_sendFile",
        "ChattingController_sendVoice",
        "ChattingController_sendVideo",
        "ChattingController_sendButtons",
        "ChattingController_forwardMessage",
        "ChattingController_sendSeen",
        "ChattingController_startTyping",
        "ChattingController_stopTyping",
        "ChattingController_setReaction",
        "ChattingController_setStar",
        "ChattingController_sendPoll",
        "ChattingController_sendLocation",
        "ChattingController_sendLinkPreview",
        "ChattingController_sendContactVcard",
        "ChattingController_sendButtonsReply",
        "ChattingController_getMessages",
        "ChattingController_DEPRECATED_checkNumberStatus",
        "ChattingController_reply",
        "ChatsController_getChats",
        "ChatsController_getChatsOverview",
        "ChatsController_deleteChat",
        "ChatsController_getChatPicture",
        "ChatsController_getChatMessages",
        "ChatsController_clearMessages",
        "ChatsController_getChatMessage",
        "ChatsController_deleteMessage",
        "ChatsController_editMessage",
        "ChatsController_pinMessage",
        "ChatsController_unpinMessage",
        "ChatsController_archiveChat",
        "ChatsController_unarchiveChat",
        "ChatsController_unreadChat",
        "ChannelsController_list",
        "ChannelsController_create",
        "ChannelsController_delete",
        "ChannelsController_get",
        "ChannelsController_previewChannelMessages",
        "ChannelsController_follow",
        "ChannelsController_unfollow",
        "ChannelsController_mute",
        "ChannelsController_unmute",
        "ChannelsController_searchByView",
        "ChannelsController_searchByText",
        "ChannelsController_getSearchViews",
        "ChannelsController_getSearchCountries",
        "ChannelsController_getSearchCategories",
        "StatusController_sendTextStatus",
        "StatusController_sendImageStatus",
        "StatusController_sendVoiceStatus",
        "StatusController_sendVideoStatus",
        "StatusController_deleteStatus",
        "StatusController_getNewMessageId",
        "LabelsController_getAll",
        "LabelsController_create",
        "LabelsController_update",
        "LabelsController_delete",
        "LabelsController_getChatLabels",
        "LabelsController_putChatLabels",
        "LabelsController_getChatsByLabel",
        "ContactsController_getAll",
        "ContactsController_get",
        "ContactsController_checkExists",
        "ContactsController_getAbout",
        "ContactsController_getProfilePicture",
        "ContactsController_block",
        "ContactsController_unblock",
        "GroupsController_createGroup",
        "GroupsController_getGroups",
        "GroupsController_joinInfoGroup",
        "GroupsController_joinGroup",
        "GroupsController_getGroupsCount",
        "GroupsController_refreshGroups",
        "GroupsController_getGroup",
        "GroupsController_deleteGroup",
        "GroupsController_leaveGroup",
        "GroupsController_getChatPicture",
        "GroupsController_setPicture",
        "GroupsController_deletePicture",
        "GroupsController_setDescription",
        "GroupsController_setSubject",
        "GroupsController_setInfoAdminOnly",
        "GroupsController_getInfoAdminOnly",
        "GroupsController_setMessagesAdminOnly",
        "GroupsController_getMessagesAdminOnly",
        "GroupsController_getInviteCode",
        "GroupsController_revokeInviteCode",
        "GroupsController_getParticipants",
        "GroupsController_addParticipants",
        "GroupsController_removeParticipants",
        "GroupsController_promoteToAdmin",
        "GroupsController_demoteToAdmin",
        "PresenceController_setPresence",
        "PresenceController_getPresenceAll",
        "PresenceController_getPresence",
        "PresenceController_subscribe",
        "ScreenshotController_screenshot",
        "PingController_ping",
        "HealthController_check",
        "ServerController_get",
        "ServerController_environment",
        "ServerController_status",
        "ServerController_stop",
        "ServerDebugController_heapsnapshot",
        "VersionController_get"
      ]
    },
    "server_info_crawled": {
      "id": 699,
      "name": "OpenAPI Proxy Server",
      "author": "@fellipesaraiva88/waha-api-mcp-server",
      "overview": "Enable seamless interaction with any OpenAPI v3.1 compliant API through Claude Desktop by automatically generating tools for each API operation. Simplify API integration with dynamic tool creation, live API calls, and built-in authentication support. Enhance productivity by letting Claude AI directly invoke API endpoints without manual coding.",
      "repository_url": "https://github.com/fellipesaraiva88/waha-api-mcp-server",
      "homepage": "https://smithery.ai/server/@fellipesaraiva88/waha-api-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "11",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@fellipesaraiva88_waha-api-mcp-server.json",
      "tools_count": 127,
      "tools": [
        {
          "name": "AuthController_getQR",
          "description": "Get QR code for pairing WhatsApp API.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "format": {
                "type": "string",
                "description": "format parameter"
              }
            },
            "required": [
              "session",
              "format"
            ]
          },
          "annotations": null
        },
        {
          "name": "AuthController_requestCode",
          "description": "Request authentication code.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "SessionsController_list",
          "description": "List all sessions",
          "input_schema": {
            "type": "object",
            "properties": {
              "all": {
                "type": "boolean",
                "description": "Return all sessions, including those that are in the STOPPED state."
              }
            },
            "required": []
          },
          "annotations": null
        },
        {
          "name": "SessionsController_create",
          "description": "Create session a new session (and start it at the same time if required).",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "SessionsController_get",
          "description": "Get session information",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "SessionsController_update",
          "description": "Update a session",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "SessionsController_delete",
          "description": "Delete the session with the given name. Stop and logout as well. Idempotent operation.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "SessionsController_getMe",
          "description": "Get information about the authenticated account",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "SessionsController_start",
          "description": "Start the session with the given name. The session must exist. Idempotent operation.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "SessionsController_stop",
          "description": "Stop the session with the given name. Idempotent operation.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "SessionsController_logout",
          "description": "Logout the session, restart a session if it was not STOPPED",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "SessionsController_restart",
          "description": "Restart the session with the given name.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "SessionsController_DEPRACATED_start",
          "description": "Create session (if not exists) or update a config (if exists) and start it.",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "SessionsController_DEPRECATED_stop",
          "description": "Stop session and Logout by default.",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "SessionsController_DEPRECATED_logout",
          "description": "Stop, Logout and Delete session.",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ProfileController_getMyProfile",
          "description": "Get my profile",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ProfileController_setProfileName",
          "description": "Set my profile name",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ProfileController_setProfileStatus",
          "description": "Set profile status (About)",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ProfileController_setProfilePicture",
          "description": "Set profile picture",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ProfileController_deleteProfilePicture",
          "description": "Delete profile picture",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendText",
          "description": "Send a text message",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendTextGet",
          "description": "Send a text message",
          "input_schema": {
            "type": "object",
            "properties": {
              "phone": {
                "type": "string",
                "description": "phone parameter"
              },
              "text": {
                "type": "string",
                "description": "text parameter"
              },
              "session": {
                "type": "string",
                "description": "session parameter"
              }
            },
            "required": [
              "phone",
              "text",
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendImage",
          "description": "Either from an URL or base64 data - look at the request schemas for details.",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendFile",
          "description": "Either from an URL or base64 data - look at the request schemas for details.",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendVoice",
          "description": "Either from an URL or base64 data - look at the request schemas for details.",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendVideo",
          "description": "Either from an URL or base64 data - look at the request schemas for details.",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendButtons",
          "description": "Send Buttons",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_forwardMessage",
          "description": "POST /api/forwardMessage",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendSeen",
          "description": "POST /api/sendSeen",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_startTyping",
          "description": "POST /api/startTyping",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_stopTyping",
          "description": "POST /api/stopTyping",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_setReaction",
          "description": "React to a message with an emoji",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_setStar",
          "description": "Star or unstar a message",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendPoll",
          "description": "You can use it as buttons or list replacement",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendLocation",
          "description": "POST /api/sendLocation",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendLinkPreview",
          "description": "POST /api/sendLinkPreview",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendContactVcard",
          "description": "POST /api/sendContactVcard",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_sendButtonsReply",
          "description": "Reply on a button message",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_getMessages",
          "description": "DEPRECATED. Use \"GET /api/chats/{id}/messages\" instead",
          "input_schema": {
            "type": "object",
            "properties": {
              "downloadMedia": {
                "type": "boolean",
                "description": "Download media for messages"
              },
              "chatId": {
                "type": "string",
                "description": "chatId parameter"
              },
              "session": {
                "type": "string",
                "description": "session parameter"
              },
              "limit": {
                "type": "number",
                "description": "limit parameter"
              },
              "offset": {
                "type": "number",
                "description": "offset parameter"
              },
              "filter.timestamp.lte": {
                "type": "number",
                "description": "Filter messages before this timestamp (inclusive)"
              },
              "filter.timestamp.gte": {
                "type": "number",
                "description": "Filter messages after this timestamp (inclusive)"
              },
              "filter.fromMe": {
                "type": "boolean",
                "description": "From me filter (by default shows all messages)"
              }
            },
            "required": [
              "chatId",
              "session",
              "limit"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_DEPRECATED_checkNumberStatus",
          "description": "DEPRECATED. Use \"POST /contacts/check-exists\" instead",
          "input_schema": {
            "type": "object",
            "properties": {
              "phone": {
                "type": "string",
                "description": "The phone number to check"
              },
              "session": {
                "type": "string",
                "description": "session parameter"
              }
            },
            "required": [
              "phone",
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChattingController_reply",
          "description": "DEPRECATED - you can set \"reply_to\" field when sending text, image, etc",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_getChats",
          "description": "Get chats",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "sortBy": {
                "type": "string",
                "description": "Sort by field"
              },
              "sortOrder": {
                "type": "string",
                "description": "Sort order - <b>desc</b>ending (Z => A, New first) or <b>asc</b>ending (A => Z, Old first)"
              },
              "limit": {
                "type": "number",
                "description": "limit parameter"
              },
              "offset": {
                "type": "number",
                "description": "offset parameter"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_getChatsOverview",
          "description": "Get chats overview. Includes all necessary things to build UI \"your chats overview\" page - chat id, name, picture, last message. Sorting by last message timestamp",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "limit": {
                "type": "number",
                "description": "limit parameter"
              },
              "offset": {
                "type": "number",
                "description": "offset parameter"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_deleteChat",
          "description": "Deletes the chat",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              }
            },
            "required": [
              "session",
              "chatId"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_getChatPicture",
          "description": "Gets chat picture",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "chatId parameter"
              },
              "refresh": {
                "type": "boolean",
                "description": "Refresh the picture from the server (24h cache by default). Do not refresh if not needed, you can get rate limit error"
              }
            },
            "required": [
              "session",
              "chatId"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_getChatMessages",
          "description": "Gets messages in the chat",
          "input_schema": {
            "type": "object",
            "properties": {
              "downloadMedia": {
                "type": "boolean",
                "description": "Download media for messages"
              },
              "limit": {
                "type": "number",
                "description": "limit parameter"
              },
              "offset": {
                "type": "number",
                "description": "offset parameter"
              },
              "filter.timestamp.lte": {
                "type": "number",
                "description": "Filter messages before this timestamp (inclusive)"
              },
              "filter.timestamp.gte": {
                "type": "number",
                "description": "Filter messages after this timestamp (inclusive)"
              },
              "filter.fromMe": {
                "type": "boolean",
                "description": "From me filter (by default shows all messages)"
              },
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              }
            },
            "required": [
              "limit",
              "session",
              "chatId"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_clearMessages",
          "description": "Clears all messages from the chat",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              }
            },
            "required": [
              "session",
              "chatId"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_getChatMessage",
          "description": "Gets message by id",
          "input_schema": {
            "type": "object",
            "properties": {
              "downloadMedia": {
                "type": "boolean",
                "description": "Download media for messages"
              },
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              },
              "messageId": {
                "type": "string",
                "description": "messageId parameter"
              }
            },
            "required": [
              "session",
              "chatId",
              "messageId"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_deleteMessage",
          "description": "Deletes a message from the chat",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              },
              "messageId": {
                "type": "string",
                "description": "Message ID in format <code>{fromMe}_{chat}_{message_id}[_{participant}]</code>"
              }
            },
            "required": [
              "session",
              "chatId",
              "messageId"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_editMessage",
          "description": "Edits a message in the chat",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              },
              "messageId": {
                "type": "string",
                "description": "Message ID in format <code>{fromMe}_{chat}_{message_id}[_{participant}]</code>"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "chatId",
              "messageId",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_pinMessage",
          "description": "Pins a message in the chat",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              },
              "messageId": {
                "type": "string",
                "description": "messageId parameter"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "chatId",
              "messageId",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_unpinMessage",
          "description": "Unpins a message in the chat",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              },
              "messageId": {
                "type": "string",
                "description": "messageId parameter"
              }
            },
            "required": [
              "session",
              "chatId",
              "messageId"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_archiveChat",
          "description": "Archive the chat",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              }
            },
            "required": [
              "session",
              "chatId"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_unarchiveChat",
          "description": "Unarchive the chat",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              }
            },
            "required": [
              "session",
              "chatId"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChatsController_unreadChat",
          "description": "Unread the chat",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              }
            },
            "required": [
              "session",
              "chatId"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_list",
          "description": "Get list of know channels",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "role": {
                "type": "string",
                "description": "role parameter"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_create",
          "description": "Create a new channel.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_delete",
          "description": "Delete the channel.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "WhatsApp Channel ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_get",
          "description": "You can use either id (123@newsletter) OR invite code (https://www.whatsapp.com/channel/123)",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "WhatsApp Channel ID or invite code from invite link https://www.whatsapp.com/channel/11111"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_previewChannelMessages",
          "description": "You can use either invite code (https://www.whatsapp.com/channel/123) or (123)ORChannel ID (123@newsletter).",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Channel id or invite code"
              },
              "downloadMedia": {
                "type": "boolean",
                "description": "downloadMedia parameter"
              },
              "limit": {
                "type": "number",
                "description": "limit parameter"
              }
            },
            "required": [
              "session",
              "id",
              "downloadMedia",
              "limit"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_follow",
          "description": "Follow the channel.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "WhatsApp Channel ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_unfollow",
          "description": "Unfollow the channel.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "WhatsApp Channel ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_mute",
          "description": "Mute the channel.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "WhatsApp Channel ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_unmute",
          "description": "Unmute the channel.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "WhatsApp Channel ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_searchByView",
          "description": "Search for channels (by view)",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_searchByText",
          "description": "Search for channels (by text)",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_getSearchViews",
          "description": "Get list of views for channel search",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_getSearchCountries",
          "description": "Get list of countries for channel search",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ChannelsController_getSearchCategories",
          "description": "Get list of categories for channel search",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "StatusController_sendTextStatus",
          "description": "Send text status",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "StatusController_sendImageStatus",
          "description": "Send image status",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "StatusController_sendVoiceStatus",
          "description": "Send voice status",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "StatusController_sendVideoStatus",
          "description": "Send video status",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "StatusController_deleteStatus",
          "description": "DELETE sent status",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "StatusController_getNewMessageId",
          "description": "Generate message ID you can use to batch contacts",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "LabelsController_getAll",
          "description": "Get all labels",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "LabelsController_create",
          "description": "Create a new label",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "LabelsController_update",
          "description": "Update a label",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "labelId": {
                "type": "string",
                "description": "labelId parameter"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "labelId",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "LabelsController_delete",
          "description": "Delete a label",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "labelId": {
                "type": "string",
                "description": "labelId parameter"
              }
            },
            "required": [
              "session",
              "labelId"
            ]
          },
          "annotations": null
        },
        {
          "name": "LabelsController_getChatLabels",
          "description": "Get labels for the chat",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              }
            },
            "required": [
              "session",
              "chatId"
            ]
          },
          "annotations": null
        },
        {
          "name": "LabelsController_putChatLabels",
          "description": "Save labels for the chat",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "chatId",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "LabelsController_getChatsByLabel",
          "description": "Get chats by label",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "labelId": {
                "type": "string",
                "description": "labelId parameter"
              }
            },
            "required": [
              "session",
              "labelId"
            ]
          },
          "annotations": null
        },
        {
          "name": "ContactsController_getAll",
          "description": "Get all contacts",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "session parameter"
              },
              "sortBy": {
                "type": "string",
                "description": "Sort by field"
              },
              "sortOrder": {
                "type": "string",
                "description": "Sort order - <b>desc</b>ending (Z => A, New first) or <b>asc</b>ending (A => Z, Old first)"
              },
              "limit": {
                "type": "number",
                "description": "limit parameter"
              },
              "offset": {
                "type": "number",
                "description": "offset parameter"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ContactsController_get",
          "description": "The method always return result, even if the phone number is not registered in WhatsApp. For that - use /contacts/check-exists endpoint below.",
          "input_schema": {
            "type": "object",
            "properties": {
              "contactId": {
                "type": "string",
                "description": "contactId parameter"
              },
              "session": {
                "type": "string",
                "description": "session parameter"
              }
            },
            "required": [
              "contactId",
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ContactsController_checkExists",
          "description": "Check phone number is registered in WhatsApp.",
          "input_schema": {
            "type": "object",
            "properties": {
              "phone": {
                "type": "string",
                "description": "The phone number to check"
              },
              "session": {
                "type": "string",
                "description": "session parameter"
              }
            },
            "required": [
              "phone",
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ContactsController_getAbout",
          "description": "Returns null if you do not have permission to read their status.",
          "input_schema": {
            "type": "object",
            "properties": {
              "contactId": {
                "type": "string",
                "description": "contactId parameter"
              },
              "session": {
                "type": "string",
                "description": "session parameter"
              }
            },
            "required": [
              "contactId",
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ContactsController_getProfilePicture",
          "description": "If privacy settings do not allow to get the picture, the method will return null.",
          "input_schema": {
            "type": "object",
            "properties": {
              "contactId": {
                "type": "string",
                "description": "contactId parameter"
              },
              "refresh": {
                "type": "boolean",
                "description": "Refresh the picture from the server (24h cache by default). Do not refresh if not needed, you can get rate limit error"
              },
              "session": {
                "type": "string",
                "description": "session parameter"
              }
            },
            "required": [
              "contactId",
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "ContactsController_block",
          "description": "Block contact",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ContactsController_unblock",
          "description": "Unblock contact",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_createGroup",
          "description": "Create a new group.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_getGroups",
          "description": "Get all groups.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "sortBy": {
                "type": "string",
                "description": "Sort by field"
              },
              "sortOrder": {
                "type": "string",
                "description": "Sort order - <b>desc</b>ending (Z => A, New first) or <b>asc</b>ending (A => Z, Old first)"
              },
              "limit": {
                "type": "number",
                "description": "limit parameter"
              },
              "offset": {
                "type": "number",
                "description": "offset parameter"
              },
              "exclude": {
                "type": "array",
                "description": "Exclude fields"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_joinInfoGroup",
          "description": "Get info about the group before joining.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "code": {
                "type": "string",
                "description": "Group code (123) or url (https://chat.whatsapp.com/123)"
              }
            },
            "required": [
              "session",
              "code"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_joinGroup",
          "description": "Join group via code",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_getGroupsCount",
          "description": "Get the number of groups.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_refreshGroups",
          "description": "Refresh groups from the server.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_getGroup",
          "description": "Get the group.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_deleteGroup",
          "description": "Delete the group.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_leaveGroup",
          "description": "Leave the group.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_getChatPicture",
          "description": "Get group picture",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              },
              "refresh": {
                "type": "boolean",
                "description": "Refresh the picture from the server (24h cache by default). Do not refresh if not needed, you can get rate limit error"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_setPicture",
          "description": "Set group picture",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Group ID"
              },
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "id",
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_deletePicture",
          "description": "Delete group picture",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Group ID"
              },
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "id",
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_setDescription",
          "description": "Returns \"true\" if the subject was properly updated. This can return \"false\" if the user does not have the necessary permissions.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "id",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_setSubject",
          "description": "Returns \"true\" if the subject was properly updated. This can return \"false\" if the user does not have the necessary permissions.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "id",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_setInfoAdminOnly",
          "description": "You can allow only admins to edit group info (title, description, photo).",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "id",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_getInfoAdminOnly",
          "description": "You can allow only admins to edit group info (title, description, photo).",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_setMessagesAdminOnly",
          "description": "Updates the group settings to only allow admins to send messages.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "id",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_getMessagesAdminOnly",
          "description": "The group settings to only allow admins to send messages.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_getInviteCode",
          "description": "Gets the invite code for the group.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_revokeInviteCode",
          "description": "Invalidates the current group invite code and generates a new one.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_getParticipants",
          "description": "Get participants",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              }
            },
            "required": [
              "session",
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_addParticipants",
          "description": "Add participants",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "id",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_removeParticipants",
          "description": "Remove participants",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "id",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_promoteToAdmin",
          "description": "Promote participants to admin users.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "id",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "GroupsController_demoteToAdmin",
          "description": "Demotes participants to regular users.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "id": {
                "type": "string",
                "description": "Group ID"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "id",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "PresenceController_setPresence",
          "description": "Set session presence",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "session",
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "PresenceController_getPresenceAll",
          "description": "Get all subscribed presence information.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "PresenceController_getPresence",
          "description": "Get the presence for the chat id. If it hasn't been subscribed - it also subscribes to it.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              }
            },
            "required": [
              "session",
              "chatId"
            ]
          },
          "annotations": null
        },
        {
          "name": "PresenceController_subscribe",
          "description": "Subscribe to presence events for the chat.",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "Session name"
              },
              "chatId": {
                "type": "string",
                "description": "Chat ID"
              }
            },
            "required": [
              "session",
              "chatId"
            ]
          },
          "annotations": null
        },
        {
          "name": "ScreenshotController_screenshot",
          "description": "GET /api/screenshot",
          "input_schema": {
            "type": "object",
            "properties": {
              "session": {
                "type": "string",
                "description": "session parameter"
              }
            },
            "required": [
              "session"
            ]
          },
          "annotations": null
        },
        {
          "name": "PingController_ping",
          "description": "Check if the server is alive and responding to requests.",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "HealthController_check",
          "description": "Perform all health checks and return the server's health status.",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "ServerController_get",
          "description": "Get the version of the server",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "ServerController_environment",
          "description": "Get the server environment",
          "input_schema": {
            "type": "object",
            "properties": {
              "all": {
                "type": "boolean",
                "description": "Include all environment variables"
              }
            },
            "required": []
          },
          "annotations": null
        },
        {
          "name": "ServerController_status",
          "description": "Get the server status",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "ServerController_stop",
          "description": "If you're using docker, after calling this endpoint Docker will start a new container, so you can use this endpoint to restart the server",
          "input_schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Request body",
                "properties": {}
              }
            },
            "required": [
              "body"
            ]
          },
          "annotations": null
        },
        {
          "name": "ServerDebugController_heapsnapshot",
          "description": "Return a heapsnapshot of the server's memory",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "VersionController_get",
          "description": "Use 'GET /api/server/version' instead ",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"debug\": false,\n  \"openapiFile\": \"./openapi.yaml\"\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@fellipesaraiva88/waha-api-mcp-server/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"debug\": false,\n  \"openapiFile\": \"./openapi.yaml\"\n}",
      "python_sdk_url": "https://server.smithery.ai/@fellipesaraiva88/waha-api-mcp-server/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "0700.@fellipesaraiva88_waha-api-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 683
  }
}