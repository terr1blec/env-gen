{
  "labels": {
    "analysis": "The MCP Server is primarily focused on providing weather forecast data to applications. It offers a tool to retrieve live temperature information for specified cities, enabling seamless integration of weather information. Its core functionality revolves around meteorological data, which can be used for weather forecasting, decision-making, and possibly other weather-related use cases.",
    "reasoning": "The primary label \"Weather\" is chosen because the server's main purpose is to provide weather data. While there is a predefined category for \"Weather,\" it's contextually fitting as the server operates in this domain. No secondary labels are needed as the functionality is limited to weather data retrieval, and no unique functionality outside predefined categories is observed.",
    "primary_label": "Weather",
    "secondary_labels": [],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1470,
    "server_name": "Weather Forecast Server",
    "rank_by_usage": 1471,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@selckKrml_weather-forecast-mcp3.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@selckKrml/weather-forecast-mcp3/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_live_temp",
          "description": "\n    Verilen şehir adına göre canlı sıcaklık verisini döndürür.\n    Bu, Smithery.ai'deki 'Tools' sekmesinde görüntülenecek fonksiyondur.\n    ",
          "input_schema": {
            "properties": {
              "city_name": {
                "title": "City Name",
                "type": "string"
              }
            },
            "required": [
              "city_name"
            ],
            "title": "get_live_tempArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get_live_temp"
      ]
    },
    "server_info_crawled": {
      "id": 1470,
      "name": "Weather Forecast Server",
      "author": "@selckKrml/weather-forecast-mcp3",
      "overview": "Provide accurate and up-to-date weather forecast data to your applications. Enable seamless integration of weather information through a standardized protocol. Enhance your agents with reliable meteorological context for better decision-making.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@selckKrml/weather-forecast-mcp3",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@selckKrml_weather-forecast-mcp3.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_live_temp",
          "description": "\n    Verilen şehir adına göre canlı sıcaklık verisini döndürür.\n    Bu, Smithery.ai'deki 'Tools' sekmesinde görüntülenecek fonksiyondur.\n    ",
          "input_schema": {
            "properties": {
              "city_name": {
                "title": "City Name",
                "type": "string"
              }
            },
            "required": [
              "city_name"
            ],
            "title": "get_live_tempArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@selckKrml/weather-forecast-mcp3/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@selckKrml/weather-forecast-mcp3/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1471.@selckKrml_weather-forecast-mcp3_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1360
  }
}