{
  "labels": {
    "analysis": "The MCP Server, \"Scrapezy Structured Data Extractor,\" is designed to extract structured data from websites by using a URL and a descriptive prompt to specify the information needed. This tool enables AI models to gather detailed product information, pricing, descriptions, and other relevant data from web pages, effectively automating the data extraction process. It simplifies web data extraction for AI applications by providing an easy-to-use interface.",
    "reasoning": "The primary label is **Web Search & Research** because the server's core functionality is extracting structured data from websites to gather information, which aligns well with academic and general web-based research. The secondary label **Browser Automation** is appropriate because the tool automates data extraction from web pages, which is a form of browser automation. The tertiary label **AI/ML Tools** is selected because the server is explicitly designed to enable AI models to retrieve structured data from websites, making it a valuable tool for AI applications.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Browser Automation",
      "AI/ML Tools"
    ],
    "custom_label": "Web Data Extraction",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1175,
    "server_name": "Scrapezy Structured Data Extractor",
    "rank_by_usage": 1176,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@kxkaloo_mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@kxkaloo/mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1175,
      "name": "Scrapezy Structured Data Extractor",
      "author": "@kxkaloo/mcp",
      "overview": "Extract structured data from websites by providing a URL and a clear prompt describing the data to extract. Enable AI models to retrieve detailed product information, pricing, descriptions, and more from web pages seamlessly. Simplify web data extraction for AI applications with an easy-to-use tool integrated via MCP.",
      "repository_url": "https://github.com/kxkaloo/mcp",
      "homepage": "https://smithery.ai/server/@kxkaloo/mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@kxkaloo_mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "extract-structured-data",
          "description": "Deploy Server Scrapezy Structured Data Extractor Claim Server @kxkaloo/mcp Try in Playground extract-structured-data",
          "parameters": [
            {
              "name": "url",
              "required": true,
              "type": "string"
            },
            {
              "name": "prompt",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@kxkaloo/mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "apiKey",
          "required": true,
          "description": "Scrapezy API key used to authenticate requests."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@kxkaloo/mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1176.@kxkaloo_mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1143
  }
}