{
  "labels": {
    "analysis": "The MCP Server is designed to facilitate seamless interaction with the GitHub API, providing tools for repository management, file operations, and issue/PR workflows. Its core functionality revolves around automating development tasks such as creating/retrieving files, managing repositories and branches, searching for repositories issues, and handling pull requests. The server essentially acts as a bridge between applications and GitHub's backend, enabling automated workflows for developers.",
    "reasoning": "The primary label \"API Integration\" is chosen because the server's fundamental purpose is to integrate with and automate operations on GitHub's API. The secondary \"Development Tools\" is selected due to the specific GitHub-centric workflows it enables (issue/PR management, version control automation). The secondary \"File Management\" reflects the file-related operations (create/update/delete files, push files). While \"Web Search & Research\" is present in the tools (search functionality), it's not the main focus. The custom label beschreibt the unique GitHub-specific automation aspect.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Development Tools",
      "File Management"
    ],
    "custom_label": "GitHub Workflow Automation",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2040,
    "server_name": "GitHub MCP Server",
    "rank_by_usage": 2041,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@HeskeyBaozi_servers.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@HeskeyBaozi/servers/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2040,
      "name": "GitHub MCP Server",
      "author": "@HeskeyBaozi/servers",
      "overview": "Enable seamless integration with the GitHub API for file operations, repository management, and advanced search functionalities. Automate your workflows with features like automatic branch creation and comprehensive error handling. Enhance your development process by managing repositories and issues directly from your applications.",
      "repository_url": "https://github.com/HeskeyBaozi/servers",
      "homepage": "https://smithery.ai/server/@HeskeyBaozi/servers",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@HeskeyBaozi_servers.json",
      "tools_count": 26,
      "tools": [
        {
          "name": "create_or_update_file",
          "description": "Deploy Server GitHub MCP Server @HeskeyBaozi/servers Try in Playground create_or_update_file",
          "parameters": [
            {
              "name": "create_or_update_file",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_repositories",
          "description": "Search for GitHub repositories",
          "parameters": [
            {
              "name": "Search",
              "required": false,
              "type": "string"
            },
            {
              "name": "for",
              "required": false,
              "type": "string"
            },
            {
              "name": "GitHub",
              "required": false,
              "type": "string"
            },
            {
              "name": "repositories",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "perPage",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_repository",
          "description": "Create a new GitHub repository in your account",
          "parameters": [
            {
              "name": "create_repository",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_file_contents",
          "description": "Get the contents of a file or directory from a GitHub repository",
          "parameters": [
            {
              "name": "get_file_contents",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "push_files",
          "description": "Push multiple files to a GitHub repository in a single commit",
          "parameters": [
            {
              "name": "files",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "branch",
              "required": true,
              "type": "string"
            },
            {
              "name": "message",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_issue",
          "description": "Create a new issue in a GitHub repository",
          "parameters": [
            {
              "name": "labels",
              "required": false,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "assignees",
              "required": false,
              "type": "string"
            },
            {
              "name": "milestone",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_pull_request",
          "description": "Create a new pull request in a GitHub repository",
          "parameters": [
            {
              "name": "create_pull_request",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "fork_repository",
          "description": "Fork a GitHub repository to your account or specified organization",
          "parameters": [
            {
              "name": "fork_repository",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_branch",
          "description": "Create a new branch in a GitHub repository",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "branch",
              "required": true,
              "type": "string"
            },
            {
              "name": "from_branch",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_commits",
          "description": "Get list of commits of a branch in a GitHub repository",
          "parameters": [
            {
              "name": "list_commits",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_issues",
          "description": "List issues in a GitHub repository with filtering options",
          "parameters": [
            {
              "name": "list_issues",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_issue",
          "description": "Update an existing issue in a GitHub repository",
          "parameters": [
            {
              "name": "update_issue",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_issue_comment",
          "description": "Add a comment to an existing issue",
          "parameters": [
            {
              "name": "body",
              "required": true,
              "type": "string"
            },
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "issue_number",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_code",
          "description": "Search for code across GitHub repositories",
          "parameters": [
            {
              "name": "q",
              "required": true,
              "type": "string"
            },
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "order",
              "required": false,
              "type": "string"
            },
            {
              "name": "per_page",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_issues",
          "description": "Search for issues and pull requests across GitHub repositories",
          "parameters": [
            {
              "name": "search_issues",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_users",
          "description": "Search for users on GitHub",
          "parameters": [
            {
              "name": "q",
              "required": true,
              "type": "string"
            },
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "sort",
              "required": false,
              "type": "string"
            },
            {
              "name": "order",
              "required": false,
              "type": "string"
            },
            {
              "name": "per_page",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_issue",
          "description": "Get details of a specific issue in a GitHub repository.",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "issue_number",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_pull_request",
          "description": "Get details of a specific pull request",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "pull_number",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_pull_requests",
          "description": "List and filter repository pull requests",
          "parameters": [
            {
              "name": "list_pull_requests",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_pull_request_review",
          "description": "Create a review on a pull request",
          "parameters": [
            {
              "name": "create_pull_request_review",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "merge_pull_request",
          "description": "Description not available",
          "parameters": [
            {
              "name": "merge_pull_request",
              "required": false,
              "type": "string"
            },
            {
              "name": "Merge",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "pull",
              "required": false,
              "type": "string"
            },
            {
              "name": "request",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_pull_request_files",
          "description": "Get the list of files changed in a pull request",
          "parameters": [
            {
              "name": "get_pull_request_files",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_pull_request_status",
          "description": "Get the combined status of all status checks for a pull request",
          "parameters": [
            {
              "name": "get_pull_request_status",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_pull_request_branch",
          "description": "Update a pull request branch with the latest changes from the base branch",
          "parameters": [
            {
              "name": "update_pull_request_branch",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_pull_request_comments",
          "description": "Get the review comments on a pull request",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "pull_number",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_pull_request_reviews",
          "description": "Get the reviews on a pull request",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "pull_number",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@HeskeyBaozi/servers/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "githubPersonalAccessToken",
          "required": true,
          "description": "Your GitHub Personal Access Token with the necessary repo permissions."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@HeskeyBaozi/servers/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2041.@HeskeyBaozi_servers_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1778
  }
}