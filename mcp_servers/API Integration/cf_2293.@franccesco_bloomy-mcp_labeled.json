{
  "labels": {
    "analysis": "The MCP Server described specializes in interacting with Bloom Growth's GraphQL API, providing tools to query and mutate data, retrieve user information, and manage schema details. Its core functionality revolves around enabling AI assistants to perform operations through a standardized GraphQL interface, making it particularly useful for applications that require seamless integration with GraphQL-based systems. The available tools focus on executing queries/mutations, fetching detailed metadata about them, and handling authenticated user interactions.",
    "reasoning": "The primary label \"API Integration\" is chosen because the server's main purpose is to facilitate interaction with Bloom Growth's GraphQL API through various tools. The secondary label \"Database Operations\" is selected due to its involvement with querying and mutating structured data, which is a core aspect of database interactions. \"Security & Authentication\" is also relevant as the server handles authenticated user information. No custom label is needed as existing categories adequately capture the functionality.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Database Operations",
      "Security & Authentication"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2292,
    "server_name": "Bloom Growth",
    "rank_by_usage": 2293,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@franccesco_bloomy-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@franccesco/bloomy-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2292,
      "name": "Bloom Growth",
      "author": "@franccesco/bloomy-mcp",
      "overview": "Connect to Bloom Growth's GraphQL API and enable AI assistants to perform operations seamlessly. Query and mutate data effortlessly while retrieving user information and schema details. Enhance your applications with powerful GraphQL capabilities through a standardized interface.",
      "repository_url": "https://github.com/franccesco/bloomy-mcp",
      "homepage": "https://smithery.ai/server/@franccesco/bloomy-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@franccesco_bloomy-mcp.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "get_query_details",
          "description": "Deploy Server Bloom Growth Claim Server @franccesco/bloomy-mcp Try in Playground get_query_details",
          "parameters": []
        },
        {
          "name": "get_mutation_details",
          "description": "Get detailed information about specific GraphQL mutations. Retrieves argument requirements, return type information, descriptions, and example usage for the specified mutations. Args: mutation_names: Comma-separated list of mutation names to get details for Returns: A YAML-formatted string containing detailed information about the requested mutations",
          "parameters": []
        },
        {
          "name": "execute_query",
          "description": "Execute a GraphQL query or mutation with variables. Parses and executes the provided GraphQL operation string with optional variables. Args: query: Raw GraphQL query or mutation string variables: Optional dictionary of variables to use in the operation Returns: Dictionary containing the operation results or an error message string Raises: Exception: Handled internally, returns error message as string",
          "parameters": []
        },
        {
          "name": "get_authenticated_user_id",
          "description": "Get the ID of the currently authenticated user. Uses a special mutation to retrieve the ID of the user associated with the current API token. Returns: User ID string if successful, None if user not found, or error message string Raises: Exception: Handled internally, returns error message as string",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@franccesco/bloomy-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "bloomApiToken",
          "required": true,
          "description": "Bloom Growth API Token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@franccesco/bloomy-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2293.@franccesco_bloomy-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1971
  }
}