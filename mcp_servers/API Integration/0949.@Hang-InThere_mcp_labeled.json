{
  "labels": {
    "analysis": "The Hang-InThere MCP Server is designed to integrate large language models with external data sources and tools using a standardized protocol. It facilitates dynamic access to various external resources (files, APIs, custom operations) to enhance AI capabilities. The provided tools (get_weather_tool and get_restaurant_tool) demonstrate its ability to fetch real-world data, suggesting a focus on enhancing AI decision-making with external information.",
    "reasoning": "The primary functionality of enabling AI models to interact with external tools aligns with API Integration. The secondary functionality of fetching weather and restaurant data suggests relevance to Weather and Daily Productivity tools. A custom label indicating the server's role as an 'AI Tool Interface' would highlight its unique position in bridging AI models with external services.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Weather",
      "Daily Productivity"
    ],
    "custom_label": "AI Tool Interface",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 948,
    "server_name": "Hang-InThere MCP Server",
    "rank_by_usage": 949,
    "usage_count": "3",
    "original_file": "../crawler/smithery/@Hang-InThere_mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Hang-InThere/mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_weather_tool",
          "description": "\n    获取城市的天气信息\n    :param city: 城市名称（需要试用英文，如 beijing）\n    :return: 天气数据字典；若发生错误，返回包含error信息的字典\n    ",
          "input_schema": {
            "properties": {
              "city": {
                "title": "City",
                "type": "string"
              }
            },
            "required": [
              "city"
            ],
            "title": "get_weather_toolArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_restaurant_tool",
          "description": "\n    获取附近的饭店信息\n    :param address: 公司地址\n    :return: 饭店信息列表\n    ",
          "input_schema": {
            "properties": {
              "address": {
                "title": "Address",
                "type": "string"
              }
            },
            "required": [
              "address"
            ],
            "title": "get_restaurant_toolArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 2,
      "tool_names": [
        "get_weather_tool",
        "get_restaurant_tool"
      ]
    },
    "server_info_crawled": {
      "id": 948,
      "name": "Hang-InThere MCP Server",
      "author": "@Hang-InThere/mcp",
      "overview": "Enable seamless integration of large language models with external data sources and tools through a standardized protocol. Facilitate dynamic access to files, APIs, and custom operations to enhance AI capabilities. Simplify the development of intelligent applications by providing a unified interface for context and action management.",
      "repository_url": "https://github.com/Hang-InThere/MCP",
      "homepage": "https://smithery.ai/server/@Hang-InThere/mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "3",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Hang-InThere_mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "get_weather_tool",
          "description": "\n    获取城市的天气信息\n    :param city: 城市名称（需要试用英文，如 beijing）\n    :return: 天气数据字典；若发生错误，返回包含error信息的字典\n    ",
          "input_schema": {
            "properties": {
              "city": {
                "title": "City",
                "type": "string"
              }
            },
            "required": [
              "city"
            ],
            "title": "get_weather_toolArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_restaurant_tool",
          "description": "\n    获取附近的饭店信息\n    :param address: 公司地址\n    :return: 饭店信息列表\n    ",
          "input_schema": {
            "properties": {
              "address": {
                "title": "Address",
                "type": "string"
              }
            },
            "required": [
              "address"
            ],
            "title": "get_restaurant_toolArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Hang-InThere/mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Hang-InThere/mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0949.@Hang-InThere_mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 927
  }
}