{
  "labels": {
    "analysis": "The Pulumi MCP Server facilitates integration between applications and external data/resources through a standardized protocol. Its primary function is enabling dynamic interactions between LLMs and various tools by providing a framework for seamless connections. The available tool, \"create-stack,\" suggests a focus on deployment and resource management, likely aiming to bridge gaps between different systems for enhanced workflow automation.",
    "reasoning": "The \"API Integration\" label is selected as the primary category because the server's core functionality revolves around integrating applications with external tools and data using standardized protocols. \"Development Tools\" is included as a secondary label due to the deployment-oriented \"create-stack\" tool, which suggests use cases in development workflows. \"Cloud Services\" could apply if the server interacts with cloud-based resources (though not explicitly stated in the description). No custom label is needed, as predefined categories adequately cover the server's functionality.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Development Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2266,
    "server_name": "Pulumi MCP Server",
    "rank_by_usage": 2267,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@dogukanakkaya_pulumi-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@dogukanakkaya/pulumi-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2266,
      "name": "Pulumi MCP Server",
      "author": "@dogukanakkaya/pulumi-mcp-server",
      "overview": "Integrate your applications with external data and tools seamlessly. Enhance your workflows by leveraging real-world data and actions through a standardized protocol. Simplify the connection between your LLMs and various resources for dynamic interactions.",
      "repository_url": "https://github.com/dogukanakkaya/pulumi-mcp-server",
      "homepage": "https://smithery.ai/server/@dogukanakkaya/pulumi-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@dogukanakkaya_pulumi-mcp-server.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "create-stack",
          "description": "Deploy Server Pulumi MCP Server Claim Server @dogukanakkaya/pulumi-mcp-server Try in Playground create-stack",
          "parameters": [
            {
              "name": "project",
              "required": true,
              "type": "string"
            },
            {
              "name": "stackName",
              "required": true,
              "type": "string"
            },
            {
              "name": "organization",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@dogukanakkaya/pulumi-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "pulumiAccessToken",
          "required": true,
          "description": "Pulumi API access token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@dogukanakkaya/pulumi-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2267.@dogukanakkaya_pulumi-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1950
  }
}