{
  "labels": {
    "analysis": "The MCP4GQL server enables seamless interaction between MCP clients and GraphQL APIs by providing tools to introspect schemas and execute queries. Its core functionality revolves around GraphQL API operations, including schema discovery and query execution. This falls under API integration and data querying, with security considerations for authentication.",
    "reasoning": "The primary functionality aligns closely with API Integration due to the server's role in facilitating interactions with external GraphQL APIs. Data Analysis & Processing is a secondary fit since it enables querying and data retrieval from APIs. No custom label is needed as the predefined categories adequately describe the server's purpose.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1351,
    "server_name": "mcp4gql",
    "rank_by_usage": 1352,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@jorgeraad_mcp4gql.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@jorgeraad/mcp4gql/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1351,
      "name": "mcp4gql",
      "author": "@jorgeraad/mcp4gql",
      "overview": "Enable MCP clients to interact seamlessly with any GraphQL API by exposing introspection and query execution tools. Simplify integration by providing a standardized interface to fetch schemas and run operations on your GraphQL endpoint. Securely connect using bearer token authentication if needed.",
      "repository_url": "https://github.com/jorgeraad/mcp4gql",
      "homepage": "https://smithery.ai/server/@jorgeraad/mcp4gql",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@jorgeraad_mcp4gql.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "introspectGraphQLSchema",
          "description": "Deploy Server @jorgeraad/mcp4gql Try in Playground introspectGraphQLSchema",
          "parameters": []
        },
        {
          "name": "executeGraphQLOperation",
          "description": "Executes an arbitrary GraphQL query or mutation against the target API. Use introspectGraphQLSchema first to understand the available operations.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@jorgeraad/mcp4gql/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@jorgeraad/mcp4gql/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1352.@jorgeraad_mcp4gql_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1274
  }
}