{
  "labels": {
    "analysis": "The MCP Server focuses on integrating Figma's API capabilities to allow seamless interaction with design files. Its core functionality revolves around extracting components from Figma files, either specific components, newly added components, or all components. This enables users to automate design workflows, connect design data with other tools, and streamline the design-to-development process. The server acts as a bridge between Figma and other applications, enhancing productivity for designers and developers.",
    "reasoning": "The primary label \"API Integration\" is chosen because the server's main purpose is interacting with Figma's API for data extraction and workflow automation. \"Browser Automation\" is a secondary label as extracting components often involves automated interactions with web-based design files. \"Content Creation\" is another relevant secondary label since the extracted components can be used in creative and design workflows. No custom label is needed as the predefined options cover the server's functionality adequately.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Browser Automation",
      "Content Creation"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1160,
    "server_name": "Figma API Integration Server",
    "rank_by_usage": 1161,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@kailashAppDev_figma-mcp-toolkit.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@kailashAppDev/figma-mcp-toolkit/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1160,
      "name": "Figma API Integration Server",
      "author": "@kailashAppDev/figma-mcp-toolkit",
      "overview": "Integrate Figma's powerful design capabilities into your applications. Leverage the MCP server to interact with Figma's API seamlessly and enhance your workflows. Simplify your design processes by connecting Figma with other tools and services effortlessly.",
      "repository_url": "https://github.com/kailashAppDev/figma-mcp-toolkit",
      "homepage": "https://smithery.ai/server/@kailashAppDev/figma-mcp-toolkit",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@kailashAppDev_figma-mcp-toolkit.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "extract-components",
          "description": "Deploy Server Figma API Integration Server @kailashAppDev/figma-mcp-toolkit Try in Playground extract-components",
          "parameters": []
        },
        {
          "name": "extract-latest-components",
          "description": "Extract newly added components from Figma file",
          "parameters": []
        },
        {
          "name": "extract-one-component",
          "description": "Extract a single component from Figma file",
          "parameters": [
            {
              "name": "parameters",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@kailashAppDev/figma-mcp-toolkit/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "figmaToken",
          "required": true,
          "description": "Figma API token required to fetch Figma file data"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@kailashAppDev/figma-mcp-toolkit/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1161.@kailashAppDev_figma-mcp-toolkit_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1133
  }
}