{
  "labels": {
    "analysis": "The MCP Server's core functionality revolves around enabling seamless integration of webhook-based services with LLM applications. It acts as a bridge between external webhook services and AI workflows, facilitating dynamic data handling and actions. The primary tool \"call-webhook\" suggests that the server is designed to deploy webhook endpoints that can trigger actions or process data within the AI system. The mention of Cloudflare Workers indicates a focus on scalability and efficient operation.",
    "reasoning": "The primary label \"API Integration\" was chosen because the server's main purpose is to facilitate communication between webhook services and AI applications, essentially providing a bridge for API-like interactions. The secondary label \"AI/ML Tools\" is included because the server is specifically designed to work with LLM applications, indicating its relevance to AI/ML workflows. The predefined labels already cover the server's functionality well, so no custom label is needed.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "AI/ML Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1426,
    "server_name": "Webhook MCP Server",
    "rank_by_usage": 1427,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@noobnooc_webhook-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@noobnooc/webhook-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1426,
      "name": "Webhook MCP Server",
      "author": "@noobnooc/webhook-mcp",
      "overview": "Enable seamless integration of webhook-based services with LLM applications by exposing tools and resources via the Model Context Protocol. Simplify connecting external webhooks to your AI workflows for dynamic data and action handling. Deploy easily with Cloudflare Workers for scalable and efficient operation.",
      "repository_url": "https://github.com/noobnooc/webhook-mcp",
      "homepage": "https://smithery.ai/server/@noobnooc/webhook-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@noobnooc_webhook-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "call-webhook",
          "description": "Deploy Server Webhook MCP Server @noobnooc/webhook-mcp Try in Playground call-webhook",
          "parameters": [
            {
              "name": "url",
              "required": false,
              "type": "string"
            },
            {
              "name": "message",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@noobnooc/webhook-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@noobnooc/webhook-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1427.@noobnooc_webhook-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1329
  }
}