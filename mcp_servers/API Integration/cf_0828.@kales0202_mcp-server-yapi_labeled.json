{
  "labels": {
    "analysis": "The MCP Server 'mcp-server-yapi' is designed for YApi, a platform for API documentation and management. Its core functionality revolves around automating the management and interaction with YApi using natural language prompting through large language models. The tools allow for adding, updating, listing, and importing interfaces, as well as organizing them into categories and menus. This automation aids developers and users in maintaining and interacting with their API documentation more efficiently.",
    "reasoning": "The primary label 'API Integration' is chosen because the server allows users to interact with and manage YApi's API documentation through automated tools. 'Database Operations' is selected as a secondary label because some tools appear to interact with or manipulate the underlying data structure of YApi.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Database Operations"
    ],
    "custom_label": "YApi Automation",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 827,
    "server_name": "mcp-server-yapi",
    "rank_by_usage": 828,
    "usage_count": "6",
    "original_file": "../crawler/smithery/@kales0202_mcp-server-yapi.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@kales0202/mcp-server-yapi/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 827,
      "name": "mcp-server-yapi",
      "author": "@kales0202/mcp-server-yapi",
      "overview": "mcp-server-yapi is an MCP server designed for YApi. It encapsulates the commonly used features of YApi into a series of tools, allowing large language models (LLMs) to interact with your YApi platform through natural language to automate interface management.",
      "repository_url": "https://github.com/kales0202/mcp-server-yapi",
      "homepage": "https://smithery.ai/server/@kales0202/mcp-server-yapi",
      "remote_or_local": "Remote",
      "license": "GPL-3.0",
      "usage_count": "6",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@kales0202_mcp-server-yapi.json",
      "tools_count": 11,
      "tools": [
        {
          "name": "add_cat",
          "description": "Deploy Server mcp-server-yapi @kales0202/mcp-server-yapi Try in Playground",
          "parameters": [
            {
              "name": "desc",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_interface",
          "description": "Description not available",
          "parameters": [
            {
              "name": "add_interface",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_interface",
          "description": "Description not available",
          "parameters": [
            {
              "name": "get_interface",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_project",
          "description": "Description not available",
          "parameters": [
            {
              "name": "get_project",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "import_data",
          "description": "服务端数据导入 - 从外部数据源批量导入接口到YAPI项目。支持Swagger、Postman、HAR、JSON格式，可通过JSON数据或URL链接导入",
          "parameters": [
            {
              "name": "import_data",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_cat",
          "description": "Description not available",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "catid",
              "required": true,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_interface",
          "description": "Description not available",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_menu",
          "description": "获取接口菜单列表 - 以分类为节点、接口为叶子的树形结构展示项目的所有接口",
          "parameters": [
            {
              "name": "list_menu",
              "required": false,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "save_interface",
          "description": "新增或者更新接口 - 相比较于AddInterface和UpdateInterface，更推荐使用这个接口，path参数是数据唯一标识，如果存在则更新，不存在则新增 Add Item",
          "parameters": [
            {
              "name": "save_interface",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "up_interface",
          "description": "更新接口 - 建议优先使用save_interface",
          "parameters": [
            {
              "name": "up_interface",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_cat_menu",
          "description": "获取菜单列表 - 获取所有接口分类列表，一般用于了解项目结构和获取分类ID",
          "parameters": [
            {
              "name": "get_cat_menu",
              "required": false,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@kales0202/mcp-server-yapi/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "yapiToken",
          "required": true,
          "description": "YAPI项目访问令牌"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@kales0202/mcp-server-yapi/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0828.@kales0202_mcp-server-yapi_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 809
  }
}