{
  "labels": {
    "analysis": "The MCP Server, as described, focuses on integrating applications with external APIs through RapidAPI. The primary functionality involves simplifying API management and facilitating access to various services and data, as evidenced by the available tool \"get_user_recent_tweets\" which indicates the ability to fetch data from external APIs like Twitter. This suggests the server's core use case is enabling seamless interaction with third-party APIs, enhancing applications with external data or services.",
    "reasoning": "The primary label \"API Integration\" is chosen because the server's main purpose is to simplify the integration and management of external APIs, which is a central function of RapidAPI. The secondary label \"Web Search & Research\" is selected because tools like fetching recent tweets can be used for research or data-gathering purposes. These labels accurately reflect the server's primary use cases and the problems it solves.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Web Search & Research"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1185,
    "server_name": "RapidAPI",
    "rank_by_usage": 1186,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@SecurFi_rapidapi_mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@SecurFi/rapidapi_mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_user_recent_tweets",
          "description": "",
          "input_schema": {
            "properties": {
              "username": {
                "title": "Username",
                "type": "string"
              }
            },
            "required": [
              "username"
            ],
            "title": "get_user_recent_tweetsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get_user_recent_tweets"
      ]
    },
    "server_info_crawled": {
      "id": 1185,
      "name": "RapidAPI",
      "author": "@SecurFi/rapidapi_mcp",
      "overview": "Integrate your applications with external APIs seamlessly. Enhance your projects by leveraging the power of RapidAPI to access a wide range of services and data. Simplify API management and streamline your development process with our easy-to-use MCP server.",
      "repository_url": "https://github.com/SecurFi/RapidAPI_mcp",
      "homepage": "https://smithery.ai/server/@SecurFi/rapidapi_mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@SecurFi_rapidapi_mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_user_recent_tweets",
          "description": "",
          "input_schema": {
            "properties": {
              "username": {
                "title": "Username",
                "type": "string"
              }
            },
            "required": [
              "username"
            ],
            "title": "get_user_recent_tweetsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@SecurFi/rapidapi_mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@SecurFi/rapidapi_mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1186.@SecurFi_rapidapi_mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1151
  }
}