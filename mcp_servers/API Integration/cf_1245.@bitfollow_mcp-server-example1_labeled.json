{
  "labels": {
    "analysis": "The MCP Server is designed to act as an intermediary that integrates AI models with external data sources and tools. Its core functionality revolves around enabling seamless communication between AI clients and various resources, allowing for standardized access to tools, data, and prompt execution. The server enhances application capabilities by providing a unified interface for accessing diverse functionalities.",
    "reasoning": "The primary label \"API Integration\" was chosen because the server facilitates interactions between AI models and external tools/data sources, acting as an intermediary bridge. \"AI/ML Tools\" was selected as a secondary label due to its role in enhancing AI model capabilities. No custom label is needed as the server's functionality aligns well with existing categories.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "AI/ML Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1244,
    "server_name": "MCP Server Example",
    "rank_by_usage": 1245,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@bitfollow_mcp-server-example1.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@bitfollow/mcp-server-example1/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1244,
      "name": "MCP Server Example",
      "author": "@bitfollow/mcp-server-example1",
      "overview": "Build a functional server that integrates with various LLM clients. Connect your AI models to different data sources and tools seamlessly. Enhance your applications with standardized capabilities for accessing resources, executing tools, and utilizing prompts.",
      "repository_url": "https://github.com/bitfollow/mcp-server-example",
      "homepage": "https://smithery.ai/server/@bitfollow/mcp-server-example1",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@bitfollow_mcp-server-example1.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_docs",
          "description": "Deploy Server MCP Server Example @bitfollow/mcp-server-example1 Try in Playground",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@bitfollow/mcp-server-example1/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "serperApiKey",
          "required": true,
          "description": "API key for Serper search API"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@bitfollow/mcp-server-example1/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1245.@bitfollow_mcp-server-example1_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1194
  }
}