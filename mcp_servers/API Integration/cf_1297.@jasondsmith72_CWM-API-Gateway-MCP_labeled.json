{
  "labels": {
    "analysis": "The MCP Server acts as an API gateway specifically for the ConnectWise Manage API, providing tools to simplify API interaction. Its core functionality includes API discovery, execution, and management, with features like natural language search, categorized navigation, and a fast memory system for frequently used queries. The tools enable developers and AI assistants to streamline complex API workflows, improving productivity and efficiency.",
    "reasoning": "The primary label is \"API Integration\" because the server is designed to facilitate interaction with the ConnectWise Manage API. Secondary labels are \"Development Tools\" due to its focus on simplifying API workflows for developers, and \"Memory Management\" due to its fast memory system for storing frequently used queries. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Development Tools",
      "Memory Management"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1296,
    "server_name": "ConnectWise API Gateway",
    "rank_by_usage": 1297,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@jasondsmith72_CWM-API-Gateway-MCP.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@jasondsmith72/CWM-API-Gateway-MCP/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1296,
      "name": "ConnectWise API Gateway",
      "author": "@jasondsmith72/CWM-API-Gateway-MCP",
      "overview": "Provide a streamlined interface to interact with the ConnectWise Manage API, enabling easy API discovery, execution, and management. Enhance productivity with natural language search, categorized navigation, and a fast memory system for frequently used queries. Simplify complex API workflows and improve efficiency for developers and AI assistants.",
      "repository_url": "https://github.com/jasondsmith72/CWM-API-Gateway-MCP",
      "homepage": "https://smithery.ai/server/@jasondsmith72/CWM-API-Gateway-MCP",
      "remote_or_local": "Remote",
      "license": "@jasondsmith72/CWM-API-Gateway-MCP",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@jasondsmith72_CWM-API-Gateway-MCP.json",
      "tools_count": 11,
      "tools": [
        {
          "name": "search_api_endpoints",
          "description": "Deploy Server ConnectWise API Gateway Claim Server @jasondsmith72/CWM-API-Gateway-MCP Try in Playground search_api_endpoints",
          "parameters": []
        },
        {
          "name": "get_api_endpoint_details",
          "description": "Get detailed information about a specific API endpoint. Args: path: API path (e.g., /service/tickets) method: HTTP method (GET, POST, PUT, PATCH, DELETE)",
          "parameters": []
        },
        {
          "name": "execute_api_call",
          "description": "Execute an API call to the ConnectWise API. Args: path: API endpoint path (e.g., /service/tickets) method: HTTP method (GET, POST, PUT, PATCH, DELETE) params: Query parameters for the request data: Request body data (for POST, PUT, PATCH)",
          "parameters": []
        },
        {
          "name": "natural_language_api_search",
          "description": "Search for API endpoints using natural language. Args: query: Natural language description of what you're looking for max_results: Maximum number of results to return",
          "parameters": []
        },
        {
          "name": "list_api_categories",
          "description": "category: Category name (use list_api_categories to see available categories) max_results: Maximum number of results to return",
          "parameters": []
        },
        {
          "name": "get_category_endpoints",
          "description": "Get all endpoints for a specific API category. Args: category: Category name (use list_api_categories to see available categories) max_results: Maximum number of results to return",
          "parameters": []
        },
        {
          "name": "send_raw_api_request",
          "description": "Send a raw API request to the ConnectWise API. Args: raw_request: Raw API request in the format \"METHOD /path?params [JSON body]\" Example: \"GET /service/tickets?conditions=status/name='Open'\" Example: \"POST /service/tickets { \"summary\": \"Test ticket\" }\"",
          "parameters": []
        },
        {
          "name": "save_to_fast_memory",
          "description": "Save an API query to Fast Memory. Args: path: API endpoint path method: HTTP method description: User-friendly description of the query params: Query parameters data: Request body data",
          "parameters": [
            {
              "name": "Query",
              "required": false,
              "type": "string"
            },
            {
              "name": "parameters",
              "required": false,
              "type": "string"
            },
            {
              "name": "Request",
              "required": false,
              "type": "string"
            },
            {
              "name": "body",
              "required": false,
              "type": "string"
            },
            {
              "name": "data",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_fast_memory",
          "description": "List queries saved in Fast Memory. Args: search_term: Optional search term to filter queries",
          "parameters": []
        },
        {
          "name": "delete_from_fast_memory",
          "description": "Delete a query from Fast Memory. Args: query_id: ID of the query to delete",
          "parameters": []
        },
        {
          "name": "clear_fast_memory",
          "description": "Clear all queries from Fast Memory.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@jasondsmith72/CWM-API-Gateway-MCP/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "connectwisePublicKey",
          "required": true,
          "description": "ConnectWise API public key"
        },
        {
          "name": "connectwisePrivateKey",
          "required": true,
          "description": "ConnectWise API private key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@jasondsmith72/CWM-API-Gateway-MCP/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1297.@jasondsmith72_CWM-API-Gateway-MCP_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1233
  }
}