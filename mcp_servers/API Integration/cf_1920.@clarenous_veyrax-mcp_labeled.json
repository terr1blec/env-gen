{
  "labels": {
    "analysis": "The VeyraX MCP Server serves as an integration hub that unifies access to various tools across multiple MCP-compatible environments. It simplifies user workflows by providing single sign-on authentication and centralized tool management. The available tools specifically focus on discovering, retrieving, and executing integrated tools and workflows, allowing users to streamline interactions with different applications like AI assistants and code editors. This suggests a focus on tool management, workflow automation, and cross-platform integration.",
    "reasoning": "The primary label of \"API Integration\" is chosen because the server's core functionality revolves around retrieving and executing APIs/tools dynamically. The secondary label of \"Workflow Automation\" is chosen because of the emphasis on workflows (flows) and their execution, while the third label of \"Tool Management\" is selected due to the server's ability to manage and deploy tools across environments. These labels collectively represent the server's ability to centralize tool access and automate workflows.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Browser Automation"
    ],
    "custom_label": "MCP Environment Orchestration",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1919,
    "server_name": "VeyraX MCP",
    "rank_by_usage": 1920,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@clarenous_veyrax-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@clarenous/veyrax-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1919,
      "name": "VeyraX MCP",
      "author": "@clarenous/veyrax-mcp",
      "overview": "Provide seamless access to all your integrated tools across multiple MCP-compatible environments with a single authentication. Connect once to the VeyraX platform and instantly use your tools in editors and AI assistants like Claude, Cursor, VS Code, and Windsurf. Simplify your workflow with a quick setup and unified tool management.",
      "repository_url": "https://github.com/clarenous/veyrax-mcp",
      "homepage": "https://smithery.ai/server/@clarenous/veyrax-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@clarenous_veyrax-mcp.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "get_tools",
          "description": "Deploy Server @clarenous/veyrax-mcp Try in Playground",
          "parameters": []
        },
        {
          "name": "tool_call",
          "description": "\"Use this tool to retrieve a list of available tools from the Veyrax API. This will return dynamic tools that user has access to. You can use this tool to get the list of tools, method names and parameters, and then use tool_call tool to call the tool with the provided parameters. This method also returns all flows with name and id that user has access to (if any).",
          "parameters": [
            {
              "name": "tool",
              "required": true,
              "type": "string"
            },
            {
              "name": "question",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_flow",
          "description": "\"Use this tool to retrieve a specific workflow by its ID. Workflow is sequence of steps that are executed in order to get some result. Flow comes with description, steps and input schema of all methods to call. You can call this tool once you have a flowId which usually you can get from: user directly OR using get-tools method.\"",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@clarenous/veyrax-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "VEYRAX_API_KEY",
          "required": true,
          "description": "The VEYRAX API key from https://veyrax.com/agent"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@clarenous/veyrax-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1920.@clarenous_veyrax-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1694
  }
}