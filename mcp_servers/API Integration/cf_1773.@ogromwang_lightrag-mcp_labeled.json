{
  "labels": {
    "analysis": "The lightRAG MCP Server emphasizes real-time data processing and interaction capabilities, enabling dynamic responses and actions in LLM applications. Its primary functionality appears to be integration and manipulation of external resources to enhance application performance. The optional sign-in tool suggests it may include some form of authentication or server management.",
    "reasoning": "The primary label \"API Integration\" is chosen because the description highlights external resource integration and manipulation, which is core to API functionality. \"AI/ML Tools\" is a secondary label due to mentions of LLM applications, while \"Security & Authentication\" is included based on the optional sign-in feature. The server's uniqueness doesn't require a custom label.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "AI/ML Tools",
      "Security & Authentication"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1772,
    "server_name": "lightRAG",
    "rank_by_usage": 1773,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@ogromwang_lightrag-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ogromwang/lightrag-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "Connection timeout (20 seconds)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1772,
      "name": "lightRAG",
      "author": "@ogromwang/lightrag-mcp",
      "overview": "Enhance your applications with real-time data processing and interaction capabilities. Utilize our server to seamlessly integrate and manipulate external resources, enabling dynamic responses and actions. Experience a powerful toolset designed to elevate your LLM applications with ease and efficiency.",
      "repository_url": "https://github.com/ogromwang/lightRAG-mcp",
      "homepage": "https://smithery.ai/server/@ogromwang/lightrag-mcp",
      "remote_or_local": "Remote",
      "license": "Not specified",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ogromwang_lightrag-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "Optional Settings",
          "description": "Access and manage servers by signing in.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ogromwang/lightrag-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ogromwang/lightrag-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1773.@ogromwang_lightrag-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1586
  }
}