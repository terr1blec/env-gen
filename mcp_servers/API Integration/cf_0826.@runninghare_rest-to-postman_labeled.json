{
  "labels": {
    "analysis": "The MCP Server focuses on automating the synchronization between REST API configurations and Postman, a popular API development tool. It allows developers to convert REST API endpoints and environment variables into Postman collections and environments, streamlining API development, testing, and documentation workflows. The core functionality revolves around API integration, collaboration, and environment management.",
    "reasoning": "The primary label \"API Integration\" is chosen because the server's main function is to integrate REST API configurations with Postman. Secondary labels \"Development Tools\" and \"Daily Productivity\" are selected because the server aids in development workflow efficiency and collaboration. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Development Tools",
      "Daily Productivity"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 825,
    "server_name": "REST-to-Postman",
    "rank_by_usage": 826,
    "usage_count": "6",
    "original_file": "../crawler/smithery/@runninghare_rest-to-postman.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@runninghare/rest-to-postman/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 825,
      "name": "REST-to-Postman",
      "author": "@runninghare/rest-to-postman",
      "overview": "Convert REST API endpoints and environment variables to Postman collections seamlessly. Sync your API configurations with Postman to streamline your development workflow and enhance collaboration. Automate the management of your API documentation and testing environments effortlessly.",
      "repository_url": "https://github.com/runninghare/rest-to-postman",
      "homepage": "https://smithery.ai/server/@runninghare/rest-to-postman",
      "remote_or_local": "Remote",
      "license": "https://smithery.ai/server/@runninghare/rest-to-postman-mcp",
      "usage_count": "6",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@runninghare_rest-to-postman.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "rest_to_postman_env",
          "description": "Creates or updates a Postman environment with the provided environment variables. This tool helps synchronize your REST application's environment configuration with Postman. It supports both creating new environments and updating existing ones in your Postman workspace.",
          "parameters": []
        },
        {
          "name": "rest_to_postman_collection",
          "description": "Creates or updates a Postman collection with the provided collection configuration. This tool helps synchronize your REST API endpoints with Postman. When updating an existing collection, it intelligently merges the new endpoints with existing ones, avoiding duplicates while preserving custom modifications made in Postman.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@runninghare/rest-to-postman/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "postmanApiKey",
          "required": true,
          "description": "Your Postman API Key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@runninghare/rest-to-postman/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0826.@runninghare_rest-to-postman_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 807
  }
}