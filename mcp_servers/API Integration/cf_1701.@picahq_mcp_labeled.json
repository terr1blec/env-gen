{
  "labels": {
    "analysis": "The MCP Server \"Pica\" focuses on integrating and managing interactions with third-party platforms through a unified interface. Its core functionality allows users to list available integrations, discover actions for specific platforms, access detailed documentation for those actions, and execute them directly. The tools provided emphasize secure and seamless automation of platform-specific actions without exposing sensitive credentials. This server is designed to simplify complex integration workflows by providing a centralized hub for managing multiple external services.",
    "reasoning": "The primary label \"API Integration\" is chosen because the server's main purpose is to facilitate interactions with third-party platforms via their APIs in a unified manner. The secondary labels \"Development Tools\" and \"Automation\" are selected because the server aids in developing integration code and automating workflows. No custom label is needed as the predefined categories sufficiently cover the server's functionality.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Development Tools",
      "Browser Automation"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1700,
    "server_name": "Pica",
    "rank_by_usage": 1701,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@picahq_mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@picahq/mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1700,
      "name": "Pica",
      "author": "@picahq/mcp",
      "overview": "Enable seamless interaction with over 100 third-party platforms through a unified interface, powered by Pica. Execute platform actions directly, generate integration code, and manage connections securely without exposing secrets. Simplify automation and integration workflows with real-time status and intelligent intent detection.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@picahq/mcp",
      "remote_or_local": "Remote",
      "license": "GPL-3.0",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@picahq_mcp.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "list_pica_integrations",
          "description": "Deploy Server @picahq/mcp Try in Playground list_pica_integrations",
          "parameters": [
            {
              "name": "list_pica_integrations",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_pica_platform_actions",
          "description": "Get all available actions for a specific platform. Call this after list_pica_integrations to discover what actions are possible on a platform. Use the exact kebab-case platform name from the integrations list. This shows you what actions are available for that platform's API.",
          "parameters": [
            {
              "name": "get_pica_platform_actions",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_pica_action_knowledge",
          "description": "Get comprehensive documentation for a specific action including parameters, requirements, and usage examples. MANDATORY: You MUST call this tool before execute_pica_action to understand the action's requirements, parameter structure, caveats, and proper usage. This loads the action documentation into context and is required for successful execution.",
          "parameters": [
            {
              "name": "platform",
              "required": true,
              "type": "string"
            },
            {
              "name": "action_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "execute_pica_action",
          "description": "Description not available",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@picahq/mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "picaSecret",
          "required": true,
          "description": "Your Pica API secret key to authenticate requests"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@picahq/mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1701.@picahq_mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1532
  }
}