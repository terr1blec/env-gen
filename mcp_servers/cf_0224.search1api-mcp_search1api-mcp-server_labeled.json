{
  "labels": {
    "analysis": "The MCP Server focuses primarily on search, content extraction, and information retrieval from web sources. Its tools include web crawling, sitemap generation, and trending topic identification, which align with gathering and analyzing web data. The reasoning tool suggests a layer of deeper analysis or problem-solving based on retrieved information.",
    "reasoning": "The primary label \"Web Search & Research\" is chosen because the server's core functionality revolves around web searching and content extraction, which are central to information gathering and research. \"Data Analysis & Processing\" is a secondary label due to the tools for extracting structured data and identifying trends. No custom label is needed as the predefined categories cover the server's functionality well.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 223,
    "server_name": "Search1API MCP Server",
    "rank_by_usage": 224,
    "usage_count": "199",
    "original_file": "../crawler/smithery/search1api-mcp_search1api-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/search1api-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 223,
      "name": "Search1API MCP Server",
      "author": "search1api-mcp",
      "overview": "A Model Context Protocol (MCP) server that provides search and crawl functionality using Search1API.",
      "repository_url": "https://github.com/fatwang2/search1api-mcp",
      "homepage": "https://smithery.ai/server/search1api-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "199",
      "success_rate": "96.17%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/search1api-mcp_search1api-mcp-server.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "search",
          "description": "Deploy Server Search1API MCP Server Claim Server search1api-mcp Try in Playground",
          "parameters": [
            {
              "name": "exclude_sites",
              "required": false,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "include_sites",
              "required": false,
              "type": "string"
            },
            {
              "name": "search_service",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "news",
          "description": "Description not available",
          "parameters": [
            {
              "name": "news",
              "required": false,
              "type": "string"
            },
            {
              "name": "News",
              "required": false,
              "type": "string"
            },
            {
              "name": "search",
              "required": false,
              "type": "string"
            },
            {
              "name": "tool",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "crawl",
          "description": "Extract content from URL",
          "parameters": [
            {
              "name": "crawl",
              "required": false,
              "type": "string"
            },
            {
              "name": "Extract",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "required": false,
              "type": "string"
            },
            {
              "name": "from",
              "required": false,
              "type": "string"
            },
            {
              "name": "URL",
              "required": false,
              "type": "string"
            },
            {
              "name": "url",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "sitemap",
          "description": "Get all related links from a URL",
          "parameters": [
            {
              "name": "sitemap",
              "required": false,
              "type": "string"
            },
            {
              "name": "url",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "reasoning",
          "description": "Deep thinking and complex problem solving",
          "parameters": [
            {
              "name": "reasoning",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "trending",
          "description": "Get trending topics from popular platforms",
          "parameters": [
            {
              "name": "max_results",
              "required": false,
              "type": "string"
            },
            {
              "name": "search_service",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/search1api-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "search1apiKey",
          "required": true,
          "description": "Your Search1API key from Search1API dashboard."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/search1api-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0224.search1api-mcp_search1api-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 220
  }
}