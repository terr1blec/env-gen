{
  "labels": {
    "analysis": "The MCP Server \"WinTerm\" is designed to enable programmability with the Windows command line interface (CLI). It allows for the execution of commands, capturing terminal outputs, and sending control signals such as keyboard inputs or signals (like Ctrl+C). This functionality is particularly useful for automation, system administration, and enhancing AI models by integrating terminal interactions into workflows. The tools provided directly interact with the terminal, allowing for bidirectional communication and control, which is essential for tasks like -- but not limited to -- automated system management, script execution, and debugging.",
    "reasoning": "The primary label \"Operating System\" was chosen because the server's core functionality involves managing and interacting with the Windows command line interface, which is fundamental to system-level operations. The secondary label \"Browser Automation\" is included because some automated tasks involving the terminal could overlap with browser automation, though not directly. No custom label is needed as the predefined labels adequately cover the server's functionality.",
    "primary_label": "Operating System",
    "secondary_labels": [
      "Browser Automation"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1043,
    "server_name": "WinTerm",
    "rank_by_usage": 1044,
    "usage_count": "2",
    "original_file": "../crawler/smithery/@capecoma_winterm-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@capecoma/winterm-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "write_to_terminal",
          "description": "Write text or commands to the terminal",
          "input_schema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "The text or command to write to the terminal"
              }
            },
            "required": [
              "command"
            ]
          },
          "annotations": null
        },
        {
          "name": "read_terminal_output",
          "description": "Read the output from the terminal",
          "input_schema": {
            "type": "object",
            "properties": {
              "linesOfOutput": {
                "type": "number",
                "description": "Number of lines of output to read"
              }
            },
            "required": [
              "linesOfOutput"
            ]
          },
          "annotations": null
        },
        {
          "name": "send_control_character",
          "description": "Send a control character to the terminal",
          "input_schema": {
            "type": "object",
            "properties": {
              "letter": {
                "type": "string",
                "description": "The letter corresponding to the control character (e.g., \"C\" for Ctrl+C)"
              }
            },
            "required": [
              "letter"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 3,
      "tool_names": [
        "write_to_terminal",
        "read_terminal_output",
        "send_control_character"
      ]
    },
    "server_info_crawled": {
      "id": 1043,
      "name": "WinTerm",
      "author": "@capecoma/winterm-mcp",
      "overview": "Interact with the Windows command line interface programmatically. Execute commands, read outputs, and send control signals seamlessly through a standardized set of tools. Enhance your AI models' capabilities by integrating terminal interactions directly into your workflows.",
      "repository_url": "https://github.com/capecoma/winterm-mcp",
      "homepage": "https://smithery.ai/server/@capecoma/winterm-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "2",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@capecoma_winterm-mcp.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "write_to_terminal",
          "description": "Write text or commands to the terminal",
          "input_schema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "The text or command to write to the terminal"
              }
            },
            "required": [
              "command"
            ]
          },
          "annotations": null
        },
        {
          "name": "read_terminal_output",
          "description": "Read the output from the terminal",
          "input_schema": {
            "type": "object",
            "properties": {
              "linesOfOutput": {
                "type": "number",
                "description": "Number of lines of output to read"
              }
            },
            "required": [
              "linesOfOutput"
            ]
          },
          "annotations": null
        },
        {
          "name": "send_control_character",
          "description": "Send a control character to the terminal",
          "input_schema": {
            "type": "object",
            "properties": {
              "letter": {
                "type": "string",
                "description": "The letter corresponding to the control character (e.g., \"C\" for Ctrl+C)"
              }
            },
            "required": [
              "letter"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@capecoma/winterm-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@capecoma/winterm-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1044.@capecoma_winterm-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1022
  }
}