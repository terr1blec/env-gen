{
  "labels": {
    "analysis": "The MCP Server described as \"Pocket Connector\" is primarily designed to interact with the Pocket service API, allowing users to fetch and manage their Pocket articles through Claude. The available tools enable fetching articles and marking them as read (archived), which indicates functionality related to managing web content or saved articles.",
    "reasoning": "The primary label is chosen because the server's primary functionality revolves around managing articles saved in Pocket, which is a content curation and reading service. The secondary label of \"Daily Productivity\" is selected because managing and organizing read articles can be part of a user's productivity workflow. No custom label is needed as the predefined labels adequately capture the server's functionality.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "Daily Productivity"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1857,
    "server_name": "Pocket Connector",
    "rank_by_usage": 1858,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@kazuph_mcp-pocket.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@kazuph/mcp-pocket/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1857,
      "name": "Pocket Connector",
      "author": "@kazuph/mcp-pocket",
      "overview": "Fetch and manage your Pocket articles through Claude.",
      "repository_url": "https://github.com/kazuph/mcp-pocket",
      "homepage": "https://smithery.ai/server/@kazuph/mcp-pocket",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@kazuph_mcp-pocket.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "pocket_get_articles",
          "description": "Deploy Server Pocket Connector Claim Server @kazuph/mcp-pocket Try in Playground pocket_get_articles",
          "parameters": []
        },
        {
          "name": "pocket_mark_as_read",
          "description": "Marks a specific Pocket article as read (archived) using its item ID.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@kazuph/mcp-pocket/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@kazuph/mcp-pocket/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1858.@kazuph_mcp-pocket_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1648
  }
}