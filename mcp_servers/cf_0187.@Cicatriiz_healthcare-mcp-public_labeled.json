{
  "labels": {
    "analysis": "The MCP Server focuses on providing healthcare data and medical information through various tools. It enables access to authoritative sources for drug information, medical literature, clinical trials, and medical terminology. The server includes tools for searching PubMed, FDA drug databases, clinical trials, and ICD-10 codes. It also provides usage statistics for monitoring API calls. The core functionality revolves around healthcare research, medical reference, and data retrieval.",
    "reasoning": "The primary functionality is centered around medical and healthcare data retrieval, making \"Health & Fitness\" the most appropriate primary label. Secondary labels include \"Database Operations\" due to the querying tools for medical databases and \"Web Search & Research\" because it facilitates research in medical literature and clinical trials. A custom label is added to highlight its specialized focus on healthcare data.",
    "primary_label": "Health & Fitness",
    "secondary_labels": [
      "Database Operations",
      "Web Search & Research"
    ],
    "custom_label": "Healthcare Data & Medical Reference",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 186,
    "server_name": "Healthcare Data and Medical Information Server",
    "rank_by_usage": 187,
    "usage_count": "256",
    "original_file": "../crawler/smithery/@Cicatriiz_healthcare-mcp-public.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Cicatriiz/healthcare-mcp-public/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 186,
      "name": "Healthcare Data and Medical Information Server",
      "author": "@Cicatriiz/healthcare-mcp-public",
      "overview": "Provide AI assistants with access to comprehensive healthcare data and medical information tools. Enable retrieval of accurate drug information, medical literature, clinical trials, and medical terminology from authoritative sources. Improve AI capabilities with efficient caching, robust error handling, and multiple interface support including HTTP and stdio.",
      "repository_url": "https://github.com/Cicatriiz/healthcare-mcp-public",
      "homepage": "https://smithery.ai/server/@Cicatriiz/healthcare-mcp-public",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "256",
      "success_rate": "99.69%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Cicatriiz_healthcare-mcp-public.json",
      "tools_count": 7,
      "tools": [
        {
          "name": "fda_drug_lookup",
          "description": "Deploy Server Healthcare Data and Medical Information Server @Cicatriiz/healthcare-mcp-public Try in Playground fda_drug_lookup",
          "parameters": []
        },
        {
          "name": "pubmed_search",
          "description": "Search for medical literature in PubMed database Args: query: Search query for medical literature max_results: Maximum number of results to return date_range: Limit to articles published within years (e.g. '5' for last 5 years)",
          "parameters": []
        },
        {
          "name": "health_topics",
          "description": "Get evidence-based health information on various topics Args: topic: Health topic to search for information language: Language for content (en or es)",
          "parameters": []
        },
        {
          "name": "clinical_trials_search",
          "description": "Search for clinical trials by condition, status, and other parameters Args: condition: Medical condition or disease to search for status: Trial status (recruiting, completed, active, not_recruiting, or all) max_results: Maximum number of results to return",
          "parameters": []
        },
        {
          "name": "lookup_icd_code",
          "description": "Look up ICD-10 codes by code or description Args: code: ICD-10 code to look up (optional if description is provided) description: Medical condition description to search for (optional if code is provided) max_results: Maximum number of results to return",
          "parameters": []
        },
        {
          "name": "get_usage_stats",
          "description": "Get usage statistics for the current session Returns: A summary of API usage for the current session",
          "parameters": []
        },
        {
          "name": "get_all_usage_stats",
          "description": "Get overall usage statistics for all sessions Returns: A summary of API usage across all sessions",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Cicatriiz/healthcare-mcp-public/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Cicatriiz/healthcare-mcp-public/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0187.@Cicatriiz_healthcare-mcp-public_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 183
  }
}