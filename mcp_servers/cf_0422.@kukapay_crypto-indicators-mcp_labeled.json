{
  "labels": {
    "analysis": "The MCP Server primarily focuses on providing technical analysis indicators and trading strategies for cryptocurrency markets. It offers a comprehensive set of tools to calculate various technical indicators and generate trading signals (BUY, SELL, HOLD) based on these indicators. The server is designed to support AI trading agents and enables efficient quantitative strategy development by analyzing OHLCV (Open, High, Low, Close, Volume) data from Binance and other exchanges.",
    "reasoning": "The primary functionality of this server is clearly tied to cryptocurrency trading analysis, making \"Cryptocurrency & Blockchain\" the most appropriate primary label. The server's tools also provide actionable trading signals, which aligns well with automated trading strategies, hence \"Automated Trading Strategies\" as a secondary label. The extensive set of technical indicators justifies \"Technical Analysis Tools\" as another secondary label.",
    "primary_label": "Cryptocurrency & Blockchain",
    "secondary_labels": [
      "Cryptocurrency & Blockchain",
      "Data Analysis & Processing"
    ],
    "custom_label": "Cryptocurrency Technical Analysis",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 421,
    "server_name": "Crypto Indicators MCP Server",
    "rank_by_usage": 422,
    "usage_count": "52",
    "original_file": "../crawler/smithery/@kukapay_crypto-indicators-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@kukapay/crypto-indicators-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 421,
      "name": "Crypto Indicators MCP Server",
      "author": "@kukapay/crypto-indicators-mcp",
      "overview": "Provide AI trading agents with a comprehensive suite of cryptocurrency technical analysis indicators and trading strategies to analyze market trends and generate actionable signals. Enable efficient quantitative strategy development with support for multiple exchanges and modular indicator categories. Empower users to make informed trading decisions through flexible and extensive market data analysis.",
      "repository_url": "https://github.com/kukapay/crypto-indicators-mcp",
      "homepage": "https://smithery.ai/server/@kukapay/crypto-indicators-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "52",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@kukapay_crypto-indicators-mcp.json",
      "tools_count": 78,
      "tools": [
        {
          "name": "calculate_absolute_price_oscillator",
          "description": "Deploy Server Crypto Indicators MCP Server Claim Server @kukapay/crypto-indicators-mcp Try in Playground calculate_absolute_price_oscillator",
          "parameters": [
            {
              "name": "calculate_absolute_price_oscillator",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_aroon",
          "description": "Calculate the Aroon Indicator for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_aroon",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_balance_of_power",
          "description": "Calculate the Balance of Power (BOP) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "symbol",
              "required": true,
              "type": "string"
            },
            {
              "name": "timeframe",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_chande_forecast_oscillator",
          "description": "Calculate the Chande Forecast Oscillator (CFO) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_chande_forecast_oscillator",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_commodity_channel_index",
          "description": "Calculate the Commodity Channel Index (CCI) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_commodity_channel_index",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_double_exponential_moving_average",
          "description": "Calculate the Double Exponential Moving Average (DEMA) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_double_exponential_moving_average",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_exponential_moving_average",
          "description": "Calculate the Exponential Moving Average (EMA) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_exponential_moving_average",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_mass_index",
          "description": "Calculate the Mass Index (MI) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_mass_index",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_moving_average_convergence_divergence",
          "description": "Calculate the MACD for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_moving_average_convergence_divergence",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_moving_max",
          "description": "Calculate the Moving Max (MMAX) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_moving_max",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_moving_min",
          "description": "Calculate the Moving Min (MMIN) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_moving_min",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_moving_sum",
          "description": "Calculate the Moving Sum (MSUM) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_moving_sum",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_parabolic_sar",
          "description": "Calculate the Parabolic SAR (PSAR) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_parabolic_sar",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_qstick",
          "description": "Calculate the Qstick Indicator for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_qstick",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_kdj",
          "description": "Calculate the Random Index (KDJ) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_kdj",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_rolling_moving_average",
          "description": "Calculate the Rolling Moving Average (RMA) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_rolling_moving_average",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_simple_moving_average",
          "description": "Calculate the Simple Moving Average (SMA) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_simple_moving_average",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_since_change",
          "description": "Calculate the Since Change for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_since_change",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_triple_exponential_moving_average",
          "description": "Calculate the Triple Exponential Moving Average (TEMA) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_triple_exponential_moving_average",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_triangular_moving_average",
          "description": "Calculate the Triangular Moving Average (TRIMA) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_triangular_moving_average",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_triple_exponential_average",
          "description": "Calculate the Triple Exponential Average (TRIX) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_triple_exponential_average",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_typical_price",
          "description": "Calculate the Typical Price for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_typical_price",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_volume_weighted_moving_average",
          "description": "Calculate the Volume Weighted Moving Average (VWMA) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_volume_weighted_moving_average",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_vortex",
          "description": "Calculate the Vortex Indicator for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_vortex",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_awesome_oscillator",
          "description": "Calculate the Awesome Oscillator (AO) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_awesome_oscillator",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_chaikin_oscillator",
          "description": "Calculate the Chaikin Oscillator (CMO) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_chaikin_oscillator",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_ichimoku_cloud",
          "description": "Calculate the Ichimoku Cloud for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_ichimoku_cloud",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_percentage_price_oscillator",
          "description": "Calculate the Percentage Price Oscillator (PPO) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_percentage_price_oscillator",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_percentage_volume_oscillator",
          "description": "Calculate the Percentage Volume Oscillator (PVO) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_percentage_volume_oscillator",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_price_rate_of_change",
          "description": "Calculate the Price Rate of Change (ROC) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_price_rate_of_change",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_relative_strength_index",
          "description": "Calculate the Relative Strength Index (RSI) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_relative_strength_index",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_stochastic_oscillator",
          "description": "Calculate the Stochastic Oscillator (STOCH) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_stochastic_oscillator",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_williams_r",
          "description": "Calculate the Williams R (WILLR) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_williams_r",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_acceleration_bands",
          "description": "Calculate the Acceleration Bands (AB) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_acceleration_bands",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_average_true_range",
          "description": "Calculate the Average True Range (ATR) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_average_true_range",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_bollinger_bands",
          "description": "Calculate the Bollinger Bands (BB) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_bollinger_bands",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_bollinger_bands_width",
          "description": "Calculate the Bollinger Bands Width (BBW) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_bollinger_bands_width",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_chandelier_exit",
          "description": "Calculate the Chandelier Exit (CE) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_chandelier_exit",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_donchian_channel",
          "description": "Calculate the Donchian Channel (DC) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_donchian_channel",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_keltner_channel",
          "description": "Calculate the Keltner Channel (KC) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_keltner_channel",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_moving_standard_deviation",
          "description": "Calculate the Moving Standard Deviation (MSTD) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_moving_standard_deviation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_projection_oscillator",
          "description": "Calculate the Projection Oscillator (PO) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_projection_oscillator",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_true_range",
          "description": "Calculate the True Range (TR) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_true_range",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_ulcer_index",
          "description": "Calculate the Ulcer Index (UI) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_ulcer_index",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_accumulation_distribution",
          "description": "Calculate the Accumulation/Distribution (AD) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_accumulation_distribution",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_chaikin_money_flow",
          "description": "Calculate the Chaikin Money Flow (CMF) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_chaikin_money_flow",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_ease_of_movement",
          "description": "Calculate the Ease of Movement (EMV) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_ease_of_movement",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_force_index",
          "description": "Calculate the Force Index (FI) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_force_index",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_money_flow_index",
          "description": "Calculate the Money Flow Index (MFI) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_money_flow_index",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_negative_volume_index",
          "description": "Calculate the Negative Volume Index (NVI) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_negative_volume_index",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_on_balance_volume",
          "description": "Calculate the On-Balance Volume (OBV) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_on_balance_volume",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_volume_price_trend",
          "description": "Calculate the Volume Price Trend (VPT) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_volume_price_trend",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_volume_weighted_average_price",
          "description": "Calculate the Volume Weighted Average Price (VWAP) for a given trading pair using Binance OHLCV data",
          "parameters": [
            {
              "name": "calculate_volume_weighted_average_price",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_absolute_price_oscillator_strategy",
          "description": "Calculate the Absolute Price Oscillator Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_absolute_price_oscillator_strategy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_aroon_strategy",
          "description": "Calculate the Aroon Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_aroon_strategy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_balance_of_power_strategy",
          "description": "Calculate the Balance of Power Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_balance_of_power_strategy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_chande_forecast_oscillator_strategy",
          "description": "Calculate the Chande Forecast Oscillator Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_chande_forecast_oscillator_strategy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_kdj_strategy",
          "description": "Calculate the KDJ Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_kdj_strategy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_macd_strategy",
          "description": "Calculate the MACD Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_macd_strategy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_parabolic_sar_strategy",
          "description": "Calculate the Parabolic SAR Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_parabolic_sar_strategy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_typical_price_strategy",
          "description": "Calculate the Typical Price Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_typical_price_strategy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_volume_weighted_moving_average_strategy",
          "description": "Calculate the VWMA Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_volume_weighted_moving_average_strategy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_vortex_strategy",
          "description": "Calculate the Vortex Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_vortex_strategy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_momentum_strategy",
          "description": "Calculate the Momentum Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_momentum_strategy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_awesome_oscillator_strategy",
          "description": "Calculate the Awesome Oscillator Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_awesome_oscillator_strategy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_ichimoku_cloud_strategy",
          "description": "Calculate the Ichimoku Cloud Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_ichimoku_cloud_strategy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_rsi2_strategy",
          "description": "Calculate the RSI2 Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_rsi2_strategy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_stochastic_oscillator_strategy",
          "description": "Calculate the Stochastic Oscillator Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_stochastic_oscillator_strategy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_williams_r_strategy",
          "description": "Calculate the Williams R Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_williams_r_strategy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_acceleration_bands_strategy",
          "description": "Calculate the Acceleration Bands Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_acceleration_bands_strategy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_bollinger_bands_strategy",
          "description": "Calculate the Bollinger Bands Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_bollinger_bands_strategy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_projection_oscillator_strategy",
          "description": "Calculate the Projection Oscillator Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_projection_oscillator_strategy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_chaikin_money_flow_strategy",
          "description": "Calculate the Chaikin Money Flow Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_chaikin_money_flow_strategy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_ease_of_movement_strategy",
          "description": "Calculate the Ease of Movement Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_ease_of_movement_strategy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_force_index_strategy",
          "description": "Calculate the Force Index Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_force_index_strategy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_money_flow_index_strategy",
          "description": "Calculate the Money Flow Index Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_money_flow_index_strategy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_negative_volume_index_strategy",
          "description": "Calculate the Negative Volume Index Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_negative_volume_index_strategy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_volume_weighted_average_price_strategy",
          "description": "Calculate the VWAP Strategy for a given trading pair using Binance OHLCV data. Outputs: -1 (SELL), 0 (HOLD), 1 (BUY)",
          "parameters": [
            {
              "name": "calculate_volume_weighted_average_price_strategy",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@kukapay/crypto-indicators-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@kukapay/crypto-indicators-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0422.@kukapay_crypto-indicators-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 416
  }
}