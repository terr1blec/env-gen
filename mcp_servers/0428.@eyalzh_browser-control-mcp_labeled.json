{
  "labels": {
    "analysis": "The MCP Server is primarily focused on enabling control and interaction with a user's local browser through a variety of commands. Its core functionality includes managing tabs (opening, closing, reordering), retrieving browser history and web content, and highlighting text within web pages. This suggests it's designed to integrate language model interactions with browser actions, effectively making web browsing more efficient and controllable via natural language commands.",
    "reasoning": "The \"Browser Automation\" primary label is chosen because the server's tools are specifically designed to automate and streamline browser interactions, which is the core focus of this category. \"Web Search & Research\" is a secondary label as the tools support accessing and managing web content, which is inherently related to researching and gathering information. The \"Content Creation\" secondary label is included because highlighting text and retrieving web content can support content creation workflows. No custom label is needed as the predefined categories sufficiently cover the server's functionality.",
    "primary_label": "Browser Automation",
    "secondary_labels": [
      "Web Search & Research",
      "Content Creation"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 427,
    "server_name": "Browser Control",
    "rank_by_usage": 428,
    "usage_count": "50",
    "original_file": "../crawler/smithery/@eyalzh_browser-control-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@eyalzh/browser-control-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "open-browser-tab",
          "description": "Open a new tab in the user's browser",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              }
            },
            "required": [
              "url"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "close-browser-tabs",
          "description": "Close tabs in the user's browser by tab IDs",
          "input_schema": {
            "type": "object",
            "properties": {
              "tabIds": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            },
            "required": [
              "tabIds"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-list-of-open-tabs",
          "description": "Get the list of open tabs in the user's browser",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-recent-browser-history",
          "description": "Get the list of recent browser history (to get all, don't use searchQuery)",
          "input_schema": {
            "type": "object",
            "properties": {
              "searchQuery": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-tab-web-content",
          "description": "\n    Get the full text content of the webpage and the list of links in the webpage, by tab ID. \n    Use \"offset\" only for larger documents when the first call was truncated and if you require more content in order to assist the user.\n  ",
          "input_schema": {
            "type": "object",
            "properties": {
              "tabId": {
                "type": "number"
              },
              "offset": {
                "type": "number",
                "default": 0
              }
            },
            "required": [
              "tabId"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "reorder-browser-tabs",
          "description": "Change the order of open browser tabs",
          "input_schema": {
            "type": "object",
            "properties": {
              "tabOrder": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            },
            "required": [
              "tabOrder"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "find-highlight-in-browser-tab",
          "description": "Find and highlight text in a browser tab (use a query phrase that exists in the web content)",
          "input_schema": {
            "type": "object",
            "properties": {
              "tabId": {
                "type": "number"
              },
              "queryPhrase": {
                "type": "string"
              }
            },
            "required": [
              "tabId",
              "queryPhrase"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 7,
      "tool_names": [
        "open-browser-tab",
        "close-browser-tabs",
        "get-list-of-open-tabs",
        "get-recent-browser-history",
        "get-tab-web-content",
        "reorder-browser-tabs",
        "find-highlight-in-browser-tab"
      ]
    },
    "server_info_crawled": {
      "id": 427,
      "name": "Browser Control",
      "author": "@eyalzh/browser-control-mcp",
      "overview": "Control your local browser seamlessly with LLM clients. Manage tabs, search history, and read content directly from your browser using intuitive commands. Enhance your browsing experience by integrating it with powerful language models.",
      "repository_url": "https://github.com/eyalzh/browser-control-mcp",
      "homepage": "https://smithery.ai/server/@eyalzh/browser-control-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "50",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@eyalzh_browser-control-mcp.json",
      "tools_count": 7,
      "tools": [
        {
          "name": "open-browser-tab",
          "description": "Open a new tab in the user's browser",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              }
            },
            "required": [
              "url"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "close-browser-tabs",
          "description": "Close tabs in the user's browser by tab IDs",
          "input_schema": {
            "type": "object",
            "properties": {
              "tabIds": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            },
            "required": [
              "tabIds"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-list-of-open-tabs",
          "description": "Get the list of open tabs in the user's browser",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-recent-browser-history",
          "description": "Get the list of recent browser history (to get all, don't use searchQuery)",
          "input_schema": {
            "type": "object",
            "properties": {
              "searchQuery": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-tab-web-content",
          "description": "\n    Get the full text content of the webpage and the list of links in the webpage, by tab ID. \n    Use \"offset\" only for larger documents when the first call was truncated and if you require more content in order to assist the user.\n  ",
          "input_schema": {
            "type": "object",
            "properties": {
              "tabId": {
                "type": "number"
              },
              "offset": {
                "type": "number",
                "default": 0
              }
            },
            "required": [
              "tabId"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "reorder-browser-tabs",
          "description": "Change the order of open browser tabs",
          "input_schema": {
            "type": "object",
            "properties": {
              "tabOrder": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            },
            "required": [
              "tabOrder"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "find-highlight-in-browser-tab",
          "description": "Find and highlight text in a browser tab (use a query phrase that exists in the web content)",
          "input_schema": {
            "type": "object",
            "properties": {
              "tabId": {
                "type": "number"
              },
              "queryPhrase": {
                "type": "string"
              }
            },
            "required": [
              "tabId",
              "queryPhrase"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@eyalzh/browser-control-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@eyalzh/browser-control-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0428.@eyalzh_browser-control-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 422
  }
}