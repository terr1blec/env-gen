{
  "labels": {
    "analysis": "The MCP Server for Hugging Face provides tools primarily focused on accessing, searching, and retrieving information about models, datasets, research papers, and other resources available on the Hugging Face Hub. It enables users to efficiently explore and interact with AI/ML resources, making it particularly useful for researchers, developers, and data scientists who need to stay updated with the latest models, datasets, and academic research in the AI field.",
    "reasoning": "The primary functionality of this server revolves around accessing and managing AI/ML resources, which aligns closely with the **AI/ML Tools** category. The tools provide direct interaction with models, datasets, and research papers, which are core components of machine learning workflows. The server also facilitates research and discovery, which could be considered a secondary function tied to **Web Search & Research** and **Data Analysis & Processing**.",
    "primary_label": "AI/ML Tools",
    "secondary_labels": [
      "Web Search & Research",
      "Data Analysis & Processing"
    ],
    "custom_label": "AI/ML Resource Hub Management",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 231,
    "server_name": "Hugging Face MCP Server",
    "rank_by_usage": 232,
    "usage_count": "187",
    "original_file": "../crawler/smithery/@shreyaskarnik_huggingface-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@shreyaskarnik/huggingface-mcp-server/mcp?config=eyJoZlRva2VuIjogIiJ9&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "search-models",
          "description": "Search for models on Hugging Face Hub",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Search term (e.g., 'bert', 'gpt')"
              },
              "author": {
                "type": "string",
                "description": "Filter by author/organization (e.g., 'huggingface', 'google')"
              },
              "tags": {
                "type": "string",
                "description": "Filter by tags (e.g., 'text-classification', 'translation')"
              },
              "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "get-model-info",
          "description": "Get detailed information about a specific model",
          "input_schema": {
            "type": "object",
            "properties": {
              "model_id": {
                "type": "string",
                "description": "The ID of the model (e.g., 'google/bert-base-uncased')"
              }
            },
            "required": [
              "model_id"
            ]
          },
          "annotations": null
        },
        {
          "name": "search-datasets",
          "description": "Search for datasets on Hugging Face Hub",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Search term"
              },
              "author": {
                "type": "string",
                "description": "Filter by author/organization"
              },
              "tags": {
                "type": "string",
                "description": "Filter by tags"
              },
              "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "get-dataset-info",
          "description": "Get detailed information about a specific dataset",
          "input_schema": {
            "type": "object",
            "properties": {
              "dataset_id": {
                "type": "string",
                "description": "The ID of the dataset (e.g., 'squad')"
              }
            },
            "required": [
              "dataset_id"
            ]
          },
          "annotations": null
        },
        {
          "name": "search-spaces",
          "description": "Search for Spaces on Hugging Face Hub",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Search term"
              },
              "author": {
                "type": "string",
                "description": "Filter by author/organization"
              },
              "tags": {
                "type": "string",
                "description": "Filter by tags"
              },
              "sdk": {
                "type": "string",
                "description": "Filter by SDK (e.g., 'streamlit', 'gradio', 'docker')"
              },
              "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "get-space-info",
          "description": "Get detailed information about a specific Space",
          "input_schema": {
            "type": "object",
            "properties": {
              "space_id": {
                "type": "string",
                "description": "The ID of the Space (e.g., 'huggingface/diffusers-demo')"
              }
            },
            "required": [
              "space_id"
            ]
          },
          "annotations": null
        },
        {
          "name": "get-paper-info",
          "description": "Get information about a specific paper on Hugging Face",
          "input_schema": {
            "type": "object",
            "properties": {
              "arxiv_id": {
                "type": "string",
                "description": "The arXiv ID of the paper (e.g., '1810.04805')"
              }
            },
            "required": [
              "arxiv_id"
            ]
          },
          "annotations": null
        },
        {
          "name": "get-daily-papers",
          "description": "Get the list of daily papers curated by Hugging Face",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "search-collections",
          "description": "Search for collections on Hugging Face Hub",
          "input_schema": {
            "type": "object",
            "properties": {
              "owner": {
                "type": "string",
                "description": "Filter by owner"
              },
              "item": {
                "type": "string",
                "description": "Filter by item (e.g., 'models/teknium/OpenHermes-2.5-Mistral-7B')"
              },
              "query": {
                "type": "string",
                "description": "Search term for titles and descriptions"
              },
              "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "get-collection-info",
          "description": "Get detailed information about a specific collection",
          "input_schema": {
            "type": "object",
            "properties": {
              "namespace": {
                "type": "string",
                "description": "The namespace of the collection (user or organization)"
              },
              "collection_id": {
                "type": "string",
                "description": "The ID part of the collection"
              }
            },
            "required": [
              "namespace",
              "collection_id"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 10,
      "tool_names": [
        "search-models",
        "get-model-info",
        "search-datasets",
        "get-dataset-info",
        "search-spaces",
        "get-space-info",
        "get-paper-info",
        "get-daily-papers",
        "search-collections",
        "get-collection-info"
      ]
    },
    "server_info_crawled": {
      "id": 231,
      "name": "Hugging Face MCP Server",
      "author": "@shreyaskarnik/huggingface-mcp-server",
      "overview": "Access Hugging Face's models, datasets, and research papers seamlessly. Interact with a wide range of resources and tools to enhance your LLM's capabilities. Utilize prompt templates for efficient model comparisons and paper summaries.",
      "repository_url": "https://github.com/shreyaskarnik/huggingface-mcp-server",
      "homepage": "https://smithery.ai/server/@shreyaskarnik/huggingface-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "187",
      "success_rate": "99.52%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@shreyaskarnik_huggingface-mcp-server.json",
      "tools_count": 10,
      "tools": [
        {
          "name": "search-models",
          "description": "Search for models on Hugging Face Hub",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Search term (e.g., 'bert', 'gpt')"
              },
              "author": {
                "type": "string",
                "description": "Filter by author/organization (e.g., 'huggingface', 'google')"
              },
              "tags": {
                "type": "string",
                "description": "Filter by tags (e.g., 'text-classification', 'translation')"
              },
              "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "get-model-info",
          "description": "Get detailed information about a specific model",
          "input_schema": {
            "type": "object",
            "properties": {
              "model_id": {
                "type": "string",
                "description": "The ID of the model (e.g., 'google/bert-base-uncased')"
              }
            },
            "required": [
              "model_id"
            ]
          },
          "annotations": null
        },
        {
          "name": "search-datasets",
          "description": "Search for datasets on Hugging Face Hub",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Search term"
              },
              "author": {
                "type": "string",
                "description": "Filter by author/organization"
              },
              "tags": {
                "type": "string",
                "description": "Filter by tags"
              },
              "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "get-dataset-info",
          "description": "Get detailed information about a specific dataset",
          "input_schema": {
            "type": "object",
            "properties": {
              "dataset_id": {
                "type": "string",
                "description": "The ID of the dataset (e.g., 'squad')"
              }
            },
            "required": [
              "dataset_id"
            ]
          },
          "annotations": null
        },
        {
          "name": "search-spaces",
          "description": "Search for Spaces on Hugging Face Hub",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Search term"
              },
              "author": {
                "type": "string",
                "description": "Filter by author/organization"
              },
              "tags": {
                "type": "string",
                "description": "Filter by tags"
              },
              "sdk": {
                "type": "string",
                "description": "Filter by SDK (e.g., 'streamlit', 'gradio', 'docker')"
              },
              "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "get-space-info",
          "description": "Get detailed information about a specific Space",
          "input_schema": {
            "type": "object",
            "properties": {
              "space_id": {
                "type": "string",
                "description": "The ID of the Space (e.g., 'huggingface/diffusers-demo')"
              }
            },
            "required": [
              "space_id"
            ]
          },
          "annotations": null
        },
        {
          "name": "get-paper-info",
          "description": "Get information about a specific paper on Hugging Face",
          "input_schema": {
            "type": "object",
            "properties": {
              "arxiv_id": {
                "type": "string",
                "description": "The arXiv ID of the paper (e.g., '1810.04805')"
              }
            },
            "required": [
              "arxiv_id"
            ]
          },
          "annotations": null
        },
        {
          "name": "get-daily-papers",
          "description": "Get the list of daily papers curated by Hugging Face",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "search-collections",
          "description": "Search for collections on Hugging Face Hub",
          "input_schema": {
            "type": "object",
            "properties": {
              "owner": {
                "type": "string",
                "description": "Filter by owner"
              },
              "item": {
                "type": "string",
                "description": "Filter by item (e.g., 'models/teknium/OpenHermes-2.5-Mistral-7B')"
              },
              "query": {
                "type": "string",
                "description": "Search term for titles and descriptions"
              },
              "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "get-collection-info",
          "description": "Get detailed information about a specific collection",
          "input_schema": {
            "type": "object",
            "properties": {
              "namespace": {
                "type": "string",
                "description": "The namespace of the collection (user or organization)"
              },
              "collection_id": {
                "type": "string",
                "description": "The ID part of the collection"
              }
            },
            "required": [
              "namespace",
              "collection_id"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"hfToken\": \"\"\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@shreyaskarnik/huggingface-mcp-server/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"hfToken\": \"\"\n}",
      "python_sdk_url": "https://server.smithery.ai/@shreyaskarnik/huggingface-mcp-server/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "0232.@shreyaskarnik_huggingface-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 228
  }
}