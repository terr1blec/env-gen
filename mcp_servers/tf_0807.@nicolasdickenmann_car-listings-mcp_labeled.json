{
  "labels": {
    "analysis": "The MCP Server is designed to manage and retrieve car listings efficiently. Its primary tool, search_cars, allows users to search for vehicles using natural language queries, indicating a focus on vehicle inventory management and user-driven car listings access. The server solves problems related to organizing and retrieving detailed car information quickly and easily.",
    "reasoning": "The primary label \"Data Analysis & Processing\" is chosen because the server processes and structures car data to provide search results. A secondary label \"Web Search & Research\" is added since the natural language search functionality aligns with finding specific information. The custom label \"Vehicle Inventory Management\" captures the unique automotive focus of the server.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "Web Search & Research"
    ],
    "custom_label": "Vehicle Inventory Management",
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 806,
    "server_name": "Car Listings",
    "rank_by_usage": 807,
    "usage_count": "7",
    "original_file": "../crawler/smithery/@nicolasdickenmann_car-listings-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@nicolasdickenmann/car-listings-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "search_cars",
          "description": "\n    Search for cars using natural language.\n    \n    Args:\n        query: The search query in natural language (e.g., \"I want a Toyota with less than 50,000 miles\")\n    \n    Returns:\n        A structured string with car search results\n    ",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_carsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "search_cars"
      ]
    },
    "server_info_crawled": {
      "id": 806,
      "name": "Car Listings",
      "author": "@nicolasdickenmann/car-listings-mcp",
      "overview": "Manage and retrieve car listings efficiently. Streamline your vehicle inventory management and enhance user experience with quick access to detailed car information.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@nicolasdickenmann/car-listings-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "7",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@nicolasdickenmann_car-listings-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "search_cars",
          "description": "\n    Search for cars using natural language.\n    \n    Args:\n        query: The search query in natural language (e.g., \"I want a Toyota with less than 50,000 miles\")\n    \n    Returns:\n        A structured string with car search results\n    ",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_carsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@nicolasdickenmann/car-listings-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@nicolasdickenmann/car-listings-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0807.@nicolasdickenmann_car-listings-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 788
  }
}