{
  "labels": {
    "analysis": "The MCP-WORD Server acts as an intermediary between LLMs and external services, enabling real-time data access through standardized JSON-RPC. Its core functionality allows LLMs to interact with external systems, fetching specific data like live temperature based on location coordinates. This bridges the gap between AI models and real-world data sources.",
    "reasoning": "The primary label \"API Integration\" was chosen because the server exposes tools via a standardized JSON-RPC interface. As a secondary label, \"Weather\" was selected due to the available temperature query tool. The server's purpose of facilitating LLM interactions with external services makes \"API Integration\" the most representative label.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Weather"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2389,
    "server_name": "MCP-WORD Server",
    "rank_by_usage": 2390,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@ebubekirkarakurt_mcp-word.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ebubekirkarakurt/mcp-word/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_live_temp",
          "description": "\n    Get live temperature for a given latitude and longitude.\n    ",
          "input_schema": {
            "properties": {
              "latitude": {
                "title": "Latitude",
                "type": "number"
              },
              "longitude": {
                "title": "Longitude",
                "type": "number"
              }
            },
            "required": [
              "latitude",
              "longitude"
            ],
            "title": "get_live_tempArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get_live_temp"
      ]
    },
    "server_info_crawled": {
      "id": 2389,
      "name": "MCP-WORD Server",
      "author": "@ebubekirkarakurt/mcp-word",
      "overview": "Provide a server implementation that integrates with the Model Context Protocol to expose tools, resources, and prompts for enhanced LLM interactions. Enable dynamic access to external data and actions to empower LLM applications with real-world context and capabilities. Facilitate seamless communication between LLM clients and external services through a standardized JSON-RPC interface.",
      "repository_url": "https://github.com/ebubekirkarakurt/MCP-WORD",
      "homepage": "https://smithery.ai/server/@ebubekirkarakurt/mcp-word",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ebubekirkarakurt_mcp-word.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_live_temp",
          "description": "\n    Get live temperature for a given latitude and longitude.\n    ",
          "input_schema": {
            "properties": {
              "latitude": {
                "title": "Latitude",
                "type": "number"
              },
              "longitude": {
                "title": "Longitude",
                "type": "number"
              }
            },
            "required": [
              "latitude",
              "longitude"
            ],
            "title": "get_live_tempArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ebubekirkarakurt/mcp-word/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ebubekirkarakurt/mcp-word/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "2390.@ebubekirkarakurt_mcp-word_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 2045
  }
}