{
  "labels": {
    "analysis": "The MCP Server is focused on providing real-time information and planning tools for U.S. National Parks. It offers detailed park information, current alerts, visitor center details, campground availability, and events. The core functionality revolves around travel planning, exploration, and discovery of national parks, making it a specialized tool for outdoor enthusiasts and travelers.",
    "reasoning": "The primary label \"Travel & Maps\" was chosen because the server provides location-based services and tools for planning trips to national parks. The secondary label \"Daily Productivity\" is included because it helps users organize their visits and plan activities efficiently. The functionality is well-covered by these predefined categories without needing custom labels.",
    "primary_label": "Travel & Maps",
    "secondary_labels": [
      "Daily Productivity"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 124,
    "server_name": "National Parks Server",
    "rank_by_usage": 125,
    "usage_count": "514",
    "original_file": "../crawler/smithery/@KyrieTangSheng_mcp-server-nationalparks.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@KyrieTangSheng/mcp-server-nationalparks/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 124,
      "name": "National Parks Server",
      "author": "@KyrieTangSheng/mcp-server-nationalparks",
      "overview": "Access real-time information about U.S. National Parks, including park details, alerts, activities, and visitor center information. Discover parks based on your interests and plan your next adventure with ease.",
      "repository_url": "https://github.com/KyrieTangSheng/mcp-server-nationalparks",
      "homepage": "https://smithery.ai/server/@KyrieTangSheng/mcp-server-nationalparks",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "514",
      "success_rate": "99.82%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@KyrieTangSheng_mcp-server-nationalparks.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "findParks",
          "description": "Deploy Server National Parks Server @KyrieTangSheng/mcp-server-nationalparks Try in Playground",
          "parameters": [
            {
              "name": "findParks",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getParkDetails",
          "description": "Get detailed information about a specific national park",
          "parameters": [
            {
              "name": "getParkDetails",
              "required": false,
              "type": "string"
            },
            {
              "name": "parkCode",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getAlerts",
          "description": "Get current alerts for national parks including closures, hazards, and important information",
          "parameters": [
            {
              "name": "q",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "start",
              "required": false,
              "type": "string"
            },
            {
              "name": "parkCode",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getVisitorCenters",
          "description": "Get information about visitor centers and their operating hours",
          "parameters": [
            {
              "name": "getVisitorCenters",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getCampgrounds",
          "description": "Get information about available campgrounds and their amenities",
          "parameters": [
            {
              "name": "getCampgrounds",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getEvents",
          "description": "Find upcoming events at parks",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "start",
              "required": false,
              "type": "string"
            },
            {
              "name": "dateEnd",
              "required": false,
              "type": "string"
            },
            {
              "name": "parkCode",
              "required": false,
              "type": "string"
            },
            {
              "name": "dateStart",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@KyrieTangSheng/mcp-server-nationalparks/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "npsApiKey",
          "required": true,
          "description": "API key for the National Park Service"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@KyrieTangSheng/mcp-server-nationalparks/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0125.@KyrieTangSheng_mcp-server-nationalparks_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 122
  }
}