{
  "labels": {
    "analysis": "The MCP Server described as \"Serper Search and Scrape\" focuses on enabling web search and content extraction capabilities. It provides two key tools: \"google_search\" for performing web searches via Google and \"scrape\" for extracting content from webpages. This functionality is primarily aimed at gathering real-time data from the web, making it useful for applications requiring up-to-date information or automated data collection.",
    "reasoning": "The primary label \"Web Search & Research\" is chosen because the server's core functionality revolves around web searches (via Google) and content extraction. These tasks are directly aligned with gathering and processing web-based information. The secondary label \"Browser Automation\" is included because scraping content from webpages involves automated browsing and page interaction. No custom label is necessary as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Browser Automation"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2298,
    "server_name": "Serper Search and Scrape",
    "rank_by_usage": 2299,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@tahaswx_mcp-server-serper-test.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@tahaswx/mcp-server-serper-test/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2298,
      "name": "Serper Search and Scrape",
      "author": "@tahaswx/mcp-server-serper-test",
      "overview": "Enable powerful web search and content extraction capabilities. Perform web searches and scrape webpage content seamlessly to enhance your applications with real-time data.",
      "repository_url": "https://github.com/tahaswx/mcp-server-serper",
      "homepage": "https://smithery.ai/server/@tahaswx/mcp-server-serper-test",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@tahaswx_mcp-server-serper-test.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "google_search",
          "description": "Deploy Server Serper Search and Scrape @tahaswx/mcp-server-serper-test Try in Playground google_search",
          "parameters": []
        },
        {
          "name": "scrape",
          "description": "Deploy Server Serper Search and Scrape @tahaswx/mcp-server-serper-test Try in Playground google_search",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@tahaswx/mcp-server-serper-test/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "serperApiKey",
          "required": true,
          "description": "The API key for the Serper MCP server."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@tahaswx/mcp-server-serper-test/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2299.@tahaswx_mcp-server-serper-test_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1977
  }
}