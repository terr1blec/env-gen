{
  "labels": {
    "analysis": "The MCP Server is primarily focused on providing weather-related tools, such as generating weather PDFs with charts and performing arithmetic calculations. It also includes core server functionalities like message echoing and secure session management with API authentication. The server is designed to be integrated into client applications for seamless weather data utilization.",
    "reasoning": "The \"Weather\" category is the primary label because the server's core functionality revolves around weather data and related utilities. The \"Data Analysis & Processing\" and \"API Integration\" secondary labels are chosen to reflect the server's data generation capabilities and its secure API integration features. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Weather",
    "secondary_labels": [
      "Data Analysis & Processing",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2052,
    "server_name": "Weather Server",
    "rank_by_usage": 2053,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@SettledCo_mcp-weather-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@SettledCo/mcp-weather-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "Connection timeout (20 seconds)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2052,
      "name": "Weather Server",
      "author": "@SettledCo/mcp-weather-server",
      "overview": "Provide dynamic weather-related tools including message echoing, weather PDF generation with charts, and arithmetic calculations. Securely manage sessions and authenticate API requests to ensure safe and reliable interactions. Enable clients to integrate weather data and utilities seamlessly via a robust MCP server implementation.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@SettledCo/mcp-weather-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@SettledCo_mcp-weather-server.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "echo",
          "description": "Deploy Server Weather Server @SettledCo/mcp-weather-server Try in Playground",
          "parameters": [
            {
              "name": "echo",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "generate-weather-pdf",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "calculator",
          "description": "Description not available",
          "parameters": [
            {
              "name": "calculator",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@SettledCo/mcp-weather-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@SettledCo/mcp-weather-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2053.@SettledCo_mcp-weather-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1789
  }
}