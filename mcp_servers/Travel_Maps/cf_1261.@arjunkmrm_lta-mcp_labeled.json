{
  "labels": {
    "analysis": "The MCP Server provides real-time transportation data for Singapore, specifically from the Land Transport Authority (LTA) DataMall. It offers tools for monitoring bus arrivals, station crowding, train service alerts, carpark availability, travel times, and traffic incidents. This data is essential for travel planning, commuting, and urban mobility management in Singapore. The server enables seamless integration of LTA data into applications, making it valuable for developers and commuters alike.",
    "reasoning": "The primary label \"Travel & Maps\" was chosen because the server primarily deals with transportation data, travel times, and traffic information, which are core aspects of travel planning and navigation. The secondary label \"Real-time Monitoring\" was selected to highlight the server's capability to provide up-to-date information on various transportation metrics. A custom label \"Singapore Transport API\" was added to emphasize the server's specific focus on Singapore's LTA data and its API integration functionality.",
    "primary_label": "Travel & Maps",
    "secondary_labels": [
      "Time & Calendar",
      "Data Analysis & Processing"
    ],
    "custom_label": "Singapore Transport API",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1260,
    "server_name": "Singapore LTA DataMall Server",
    "rank_by_usage": 1261,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@arjunkmrm_lta-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@arjunkmrm/lta-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1260,
      "name": "Singapore LTA DataMall Server",
      "author": "@arjunkmrm/lta-mcp",
      "overview": "Provide real-time transportation data including bus arrivals, train service alerts, carpark availability, travel times, and traffic incidents for Singapore. Access up-to-date information on MRT/LRT station crowding and forecasts to enhance travel planning. Enable seamless integration of Singapore's Land Transport Authority data into your applications.",
      "repository_url": "https://github.com/arjunkmrm/lta-mcp",
      "homepage": "https://smithery.ai/server/@arjunkmrm/lta-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@arjunkmrm_lta-mcp.json",
      "tools_count": 7,
      "tools": [
        {
          "name": "bus_arrival",
          "description": "Deploy Server Singapore LTA DataMall Server @arjunkmrm/lta-mcp Try in Playground bus_arrival",
          "parameters": [
            {
              "name": "bus_arrival",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "station_crowding",
          "description": "Get real-time MRT/LRT station crowdedness level for a particular train network line. Updates every 10 minutes.",
          "parameters": [
            {
              "name": "station_crowding",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "train_alerts",
          "description": "Get real-time train service alerts including service disruptions and shuttle services. Updates when there are changes.",
          "parameters": [
            {
              "name": "train_alerts",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "carpark_availability",
          "description": "Get real-time availability of parking lots for HDB, LTA, and URA carparks. Updates every minute.",
          "parameters": [
            {
              "name": "carpark_availability",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "travel_times",
          "description": "Get estimated travel times on expressway segments. Updates every 5 minutes.",
          "parameters": [
            {
              "name": "travel_times",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "traffic_incidents",
          "description": "Get current road incidents including accidents, roadworks, and heavy traffic. Updates every 2 minutes.",
          "parameters": [
            {
              "name": "traffic_incidents",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "station_crowd_forecast",
          "description": "Get forecasted MRT/LRT station crowdedness levels in 30-minute intervals.",
          "parameters": [
            {
              "name": "station_crowd_forecast",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@arjunkmrm/lta-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "ltaApiKey",
          "required": true,
          "description": "LTA DataMall API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@arjunkmrm/lta-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1261.@arjunkmrm_lta-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1205
  }
}