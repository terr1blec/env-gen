{
  "labels": {
    "analysis": "The MCP Server provides real-time subway congestion data for Seoul, enabling users to access station-specific transit information. It includes tools for checking real-time congestion levels, station details, train congestion by time/date, car-specific congestion, exit traffic patterns, and demographic-based commuter analytics. The server is designed to help commuters plan their trips efficiently and can be integrated into applications via a FastMCP interface.",
    "reasoning": "The primary functionality is clearly focused on providing real-time and historical transit data for subway systems, which aligns well with the \"Travel & Maps\" category. Secondary functionality includes data analysis (congestion patterns) and API integration (FastMCP server interface). The server's unique focus on subway-specific data and congestion metrics doesn't easily fit into a single predefined category, so the custom label \"Public Transit Analytics\" is added for precision.",
    "primary_label": "Travel & Maps",
    "secondary_labels": [
      "Data Analysis & Processing",
      "API Integration"
    ],
    "custom_label": "Public Transit Analytics",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 779,
    "server_name": "Puzzle Subway Server",
    "rank_by_usage": 780,
    "usage_count": "8",
    "original_file": "../crawler/smithery/@november11th_smithery-puzzle-subway-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@november11th/smithery-puzzle-subway-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 779,
      "name": "Puzzle Subway Server",
      "author": "@november11th/smithery-puzzle-subway-mcp-server",
      "overview": "Provide real-time subway congestion information for Seoul with station and line-based search capabilities. Enable users to quickly access up-to-date transit data to improve their commuting experience. Simplify integration of subway data into applications via a FastMCP server interface.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@november11th/smithery-puzzle-subway-mcp-server",
      "remote_or_local": "Remote",
      "license": "@november11th/smithery-puzzle-subway-mcp-server",
      "usage_count": "8",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@november11th_smithery-puzzle-subway-mcp-server.json",
      "tools_count": 7,
      "tools": [
        {
          "name": "get_subway_real_time_congestion",
          "description": "Deploy Server Puzzle Subway Server @november11th/smithery-puzzle-subway-mcp-server Try in Playground get_subway_real_time_congestion",
          "parameters": []
        },
        {
          "name": "get_subway_station_info",
          "description": "퍼즐 지하철 API를 사용하여 지하철역 정보를 조회합니다. Args: station_name: 지하철역 이름(예: '강남역')",
          "parameters": []
        },
        {
          "name": "get_subway_train_congestion",
          "description": "특정 역으로 진입하는 열차의 혼잡도를 제공합니다. Args: stationCode: 역 코드 (예: '221'은 역삼역) dow: 검색 기준 요일 (예: 'MON', 'TUE' 등, 미입력 시 현재 요일) hh: 검색 기준 시간 (예: '08'은 8:00-8:59, 미입력 시 현재 시간)",
          "parameters": []
        },
        {
          "name": "get_subway_car_congestion",
          "description": "특정 역으로 진입하는 열차의 칸별 혼잡도를 제공합니다. Args: stationCode: 역 코드 (예: '133'은 서울역) dow: 검색 기준 요일 (예: 'MON', 'TUE' 등, 미입력 시 현재 요일) hh: 검색 기준 시간 (예: '08'은 8:00-8:59, 미입력 시 현재 시간)",
          "parameters": []
        },
        {
          "name": "get_subway_car_exit_rate",
          "description": "특정 역으로 진입하는 열차에서 하차한 인원의 칸별 하차 비율을 제공합니다. Args: stationCode: 역 코드 (예: '133'은 서울역) dow: 검색 기준 요일 (예: 'MON', 'TUE' 등, 미입력 시 현재 요일) hh: 검색 기준 시간 (예: '08'은 8:00-8:59, 미입력 시 현재 시간)",
          "parameters": []
        },
        {
          "name": "get_subway_exit_traffic_by_dow",
          "description": "최근 3개월 내 해당 지하철역 출구를 이용한 고유한 통행자 수를 제공합니다. Args: stationCode: 역 코드 (예: '221'은 역삼역) gender: 성별 필터 ('male', 'female', 'all' - 기본값 'all') ageGrp: 연령대 필터 ('10', '20', '30', '40', '50', '60_over', 'all' - 기본값 'all') dow: 요일 (예: 'MON', 'TUE' 등, 미입력 시 현재 요일)",
          "parameters": []
        },
        {
          "name": "get_subway_exit_traffic_by_hour",
          "description": "특정 일자의 해당 지하철역 출구를 이용한 적이 있는 고유한 통행자 수를 시간대로 구분하여 제공합니다. Args: stationCode: 역 코드 (예: '221'은 역삼역) gender: 성별 필터 ('male', 'female', 'all' - 기본값 'all') ageGrp: 연령대 필터 ('10', '20', '30', '40', '50', '60_over', 'all' - 기본값 'all') date: 조회할 날짜 (YYYYMMDD 형식 또는 'latest' - 기본값 'latest')",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@november11th/smithery-puzzle-subway-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "appKey",
          "required": true,
          "description": "The APP_KEY for SK Open API"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@november11th/smithery-puzzle-subway-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0780.@november11th_smithery-puzzle-subway-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 762
  }
}