{
  "labels": {
    "analysis": "The MCP Server \"Kakao Navigation\" primarily provides navigation and traffic information services using Kakao Maps and Mobility APIs. It specializes in route planning, address/geocode conversion, and future traffic prediction for Korea. The tools focus on direction search (by coordinates or addresses), geocoding, and multi-destination routing, making it essential for location-based services and transportation applications.",
    "reasoning": "The primary label \"Navigation & Traffic\" is custom since none of the predefined categories perfectly match its focused functionality. Secondary labels include \"Travel & Maps\" (broad location services) and \"API Integration\" (as it relies on Kakao's external APIs). No predefined categories fully capture its core speciality.",
    "primary_label": "Travel & Maps",
    "secondary_labels": [
      "Travel & Maps",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 194,
    "server_name": "Kakao Navigation",
    "rank_by_usage": 195,
    "usage_count": "241",
    "original_file": "../crawler/smithery/@CaChiJ_kakao-mobility-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@CaChiJ/kakao-mobility-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 194,
      "name": "Kakao Navigation",
      "author": "@CaChiJ/kakao-mobility-mcp-server",
      "overview": "Kakao Map 및 Mobility API를 통해 한국 내 교통 정보 및 경로 탐색 기능을 제공합니다. 자세한 사용 방법은 Github 레포지토리의 Readme를 참고해주세요.\n\nProvides the car route and traffic information navigation function of Kakao Mobility.",
      "repository_url": "https://github.com/CaChiJ/kakao-mobility-mcp-server",
      "homepage": "https://smithery.ai/server/@CaChiJ/kakao-mobility-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "241",
      "success_rate": "99.33%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@CaChiJ_kakao-mobility-mcp-server.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "direction_search_by_coords",
          "description": "Deploy Server Kakao Navigation @CaChiJ/kakao-mobility-mcp-server Try in Playground direction_search_by_coords",
          "parameters": [
            {
              "name": "direction_search_by_coords",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "direction_search_by_address",
          "description": "Search for directions between two locations using their addresses. The tool first geocodes the addresses to coordinates, then finds the optimal route between them.",
          "parameters": [
            {
              "name": "direction_search_by_address",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "address_search_by_place_name",
          "description": "Search for addresses using a place name or keyword. Returns detailed location information including coordinates and address details.",
          "parameters": [
            {
              "name": "address_search_by_place_name",
              "required": false,
              "type": "string"
            },
            {
              "name": "placeName",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "geocode",
          "description": "Convert an address into geographic coordinates (geocoding). Returns the exact location coordinates and address details for the given place name.",
          "parameters": []
        },
        {
          "name": "future_direction_search_by_coords",
          "description": "Search for directions with future departure time. Provides navigation information considering traffic predictions for a specific future time. Supports various options like waypoints, route preferences, and vehicle details.",
          "parameters": [
            {
              "name": "future_direction_search_by_coords",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "multi_destination_direction_search",
          "description": "Search for directions between a starting point and multiple destinations with coordinates. Returns a summary of the route including distance, duration, and route details. For detailed route information, additional calls to the car navigation API are required.",
          "parameters": [
            {
              "name": "multi_destination_direction_search",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@CaChiJ/kakao-mobility-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "kakaoRestApiKey",
          "required": true,
          "description": "Kakao REST API 키"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@CaChiJ/kakao-mobility-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0195.@CaChiJ_kakao-mobility-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 191
  }
}