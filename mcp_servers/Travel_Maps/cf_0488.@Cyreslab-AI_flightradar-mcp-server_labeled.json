{
  "labels": {
    "analysis": "The MCP Server \"FlightRadar\" specializes in providing real-time flight tracking and status information. Its core functionality revolves around accessing and retrieving detailed flight data, searching for flights using various criteria, and acquiring current flight statuses. The tools it offers—get_flight_data, search_flights, and get_flight_status—clearly indicate its primary use case: aviation monitoring and flight information services.",
    "reasoning": "The primary label \"Travel & Maps\" was chosen because the server deals with real-time flight tracking, which aligns with travel planning and location-based services. The secondary label \"Web Search & Research\" fits as the server allows querying and retrieving detailed flight data, which could be useful for academic or operational research. No custom label is needed as the functionality is well-covered by the predefined categories.",
    "primary_label": "Travel & Maps",
    "secondary_labels": [
      "Web Search & Research"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 487,
    "server_name": "FlightRadar",
    "rank_by_usage": 488,
    "usage_count": "35",
    "original_file": "../crawler/smithery/@Cyreslab-AI_flightradar-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Cyreslab-AI/flightradar-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 487,
      "name": "FlightRadar",
      "author": "@Cyreslab-AI/flightradar-mcp-server",
      "overview": "Access real-time flight tracking and status information effortlessly. Get detailed flight data, search for flights by various criteria, and receive human-readable status summaries with ease.",
      "repository_url": "https://github.com/Cyreslab-AI/flightradar-mcp-server",
      "homepage": "https://smithery.ai/server/@Cyreslab-AI/flightradar-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "35",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Cyreslab-AI_flightradar-mcp-server.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "get_flight_data",
          "description": "Deploy Server FlightRadar @Cyreslab-AI/flightradar-mcp-server Try in Playground get_flight_data",
          "parameters": [
            {
              "name": "get_flight_data",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_flights",
          "description": "Search for flights by various criteria",
          "parameters": []
        },
        {
          "name": "get_flight_status",
          "description": "Get the current status of a flight by flight number",
          "parameters": [
            {
              "name": "flight_iata",
              "required": false,
              "type": "string"
            },
            {
              "name": "flight_icao",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Cyreslab-AI/flightradar-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "aviationStackApiKey",
          "required": true,
          "description": "Your AviationStack API key."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Cyreslab-AI/flightradar-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0488.@Cyreslab-AI_flightradar-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 478
  }
}