{
  "labels": {
    "analysis": "The MCP Server is designed to provide real-time information about Hong Kong's KMB and Long Win bus services. It offers tools to check bus arrival times, search for routes to destinations, get detailed information about stops along specific routes, and find specific bus stops. The server serves as a digital assistant for commuters, helping them plan their journeys efficiently with bilingual support in English and Traditional Chinese.",
    "reasoning": "The primary label \"Transportation & Navigation\" best represents the server's core functionality as it deals with real-time bus information and route planning. The secondary label \"Travel & Maps\" is relevant because it involves location-based services and navigation. While not a predefined category, \"Public Transport\" is a highly descriptive custom label that succinctly captures the server's specialized focus.",
    "primary_label": "Travel & Maps",
    "secondary_labels": [
      "Travel & Maps"
    ],
    "custom_label": "Public Transport",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1656,
    "server_name": "KMB Bus",
    "rank_by_usage": 1657,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@kennyckk_mcp_hkbus.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@kennyckk/mcp_hkbus/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_next_bus",
          "description": "Get the next arrival time for a specified bus route at a stop.\n    \n    Args:\n        route: The bus route number (e.g., \"1A\", \"6\", \"960\")\n        stop_name: The name of the bus stop\n    ",
          "input_schema": {
            "properties": {
              "route": {
                "title": "Route",
                "type": "string"
              },
              "stop_name": {
                "title": "Stop Name",
                "type": "string"
              }
            },
            "required": [
              "route",
              "stop_name"
            ],
            "title": "get_next_busArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "find_buses_to_destination",
          "description": "Find bus routes that go to a specified destination.\n    \n    Args:\n        destination: The destination to search for (e.g., \"Central\", \"Mong Kok\", \"Airport\")\n    ",
          "input_schema": {
            "properties": {
              "destination": {
                "title": "Destination",
                "type": "string"
              }
            },
            "required": [
              "destination"
            ],
            "title": "find_buses_to_destinationArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_route_stops_info",
          "description": "Get all stops along a specified bus route.\n    \n    Args:\n        route: The bus route number (e.g., \"1A\", \"6\", \"960\")\n    ",
          "input_schema": {
            "properties": {
              "route": {
                "title": "Route",
                "type": "string"
              }
            },
            "required": [
              "route"
            ],
            "title": "get_route_stops_infoArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "find_stop_by_name",
          "description": "Find bus stops matching a name or partial name.\n    \n    Args:\n        stop_name: Full or partial name of the bus stop to search for\n    ",
          "input_schema": {
            "properties": {
              "stop_name": {
                "title": "Stop Name",
                "type": "string"
              }
            },
            "required": [
              "stop_name"
            ],
            "title": "find_stop_by_nameArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_all_routes_at_stop",
          "description": "Get all bus routes that pass through a specified bus stop.\n    \n    Args:\n        stop_name: Name of the bus stop\n    ",
          "input_schema": {
            "properties": {
              "stop_name": {
                "title": "Stop Name",
                "type": "string"
              }
            },
            "required": [
              "stop_name"
            ],
            "title": "get_all_routes_at_stopArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 5,
      "tool_names": [
        "get_next_bus",
        "find_buses_to_destination",
        "get_route_stops_info",
        "find_stop_by_name",
        "get_all_routes_at_stop"
      ]
    },
    "server_info_crawled": {
      "id": 1656,
      "name": "KMB Bus",
      "author": "@kennyckk/mcp_hkbus",
      "overview": "Access real-time bus arrival information and comprehensive route details for Hong Kong's KMB and Long Win Bus services. Query bus routes, stops, and estimated arrival times effortlessly to enhance user experience. Utilize bilingual support for both English and Traditional Chinese to cater to a wider audience.",
      "repository_url": "https://github.com/kennyckk/mcp_hkbus",
      "homepage": "https://smithery.ai/server/@kennyckk/mcp_hkbus",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@kennyckk_mcp_hkbus.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "get_next_bus",
          "description": "Get the next arrival time for a specified bus route at a stop.\n    \n    Args:\n        route: The bus route number (e.g., \"1A\", \"6\", \"960\")\n        stop_name: The name of the bus stop\n    ",
          "input_schema": {
            "properties": {
              "route": {
                "title": "Route",
                "type": "string"
              },
              "stop_name": {
                "title": "Stop Name",
                "type": "string"
              }
            },
            "required": [
              "route",
              "stop_name"
            ],
            "title": "get_next_busArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "find_buses_to_destination",
          "description": "Find bus routes that go to a specified destination.\n    \n    Args:\n        destination: The destination to search for (e.g., \"Central\", \"Mong Kok\", \"Airport\")\n    ",
          "input_schema": {
            "properties": {
              "destination": {
                "title": "Destination",
                "type": "string"
              }
            },
            "required": [
              "destination"
            ],
            "title": "find_buses_to_destinationArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_route_stops_info",
          "description": "Get all stops along a specified bus route.\n    \n    Args:\n        route: The bus route number (e.g., \"1A\", \"6\", \"960\")\n    ",
          "input_schema": {
            "properties": {
              "route": {
                "title": "Route",
                "type": "string"
              }
            },
            "required": [
              "route"
            ],
            "title": "get_route_stops_infoArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "find_stop_by_name",
          "description": "Find bus stops matching a name or partial name.\n    \n    Args:\n        stop_name: Full or partial name of the bus stop to search for\n    ",
          "input_schema": {
            "properties": {
              "stop_name": {
                "title": "Stop Name",
                "type": "string"
              }
            },
            "required": [
              "stop_name"
            ],
            "title": "find_stop_by_nameArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_all_routes_at_stop",
          "description": "Get all bus routes that pass through a specified bus stop.\n    \n    Args:\n        stop_name: Name of the bus stop\n    ",
          "input_schema": {
            "properties": {
              "stop_name": {
                "title": "Stop Name",
                "type": "string"
              }
            },
            "required": [
              "stop_name"
            ],
            "title": "get_all_routes_at_stopArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@kennyckk/mcp_hkbus/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@kennyckk/mcp_hkbus/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1657.@kennyckk_mcp_hkbus_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1500
  }
}