{
  "labels": {
    "analysis": "The MCP Server is primarily focused on time-related operations, providing tools to retrieve and format timestamp data. Its core functionality includes fetching the current Unix timestamp and converting it into human-readable date and time strings. The server addresses the need for consistent time representation and user-friendly time formatting, which can be useful for applications requiring time synchronization or user-friendly time displays.",
    "reasoning": "The primary label \"Time & Calendar\" was chosen because the server's main functionality revolves around time management and formatting. The secondary label \"API Integration\" was selected because the tools (getTime, readableTime) can be used by other applications via API-like calls. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Time & Calendar",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 260,
    "server_name": "Time Server",
    "rank_by_usage": 261,
    "usage_count": "147",
    "original_file": "../crawler/smithery/@javilujann_timemcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@javilujann/timemcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "getTime",
          "description": "\n    Get the current Unix timestamp.\n    \n    Returns:\n        float: The current time as seconds since January 1, 1970 (Unix epoch).\n        This is a standardized way to represent time as a single number.\n        Example: 1687302487.654321\n    ",
          "input_schema": {
            "properties": {},
            "title": "getTimeArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "readableTime",
          "description": "\n    Convert a Unix timestamp to a human-readable date and time string.\n    \n    Args:\n        timestamp (float): A Unix timestamp (seconds since epoch) to convert.\n            Can be obtained from the getTime() function.\n            \n    Returns:\n        str: A formatted date and time string in the format:\n            \"Weekday, Day Month Year Hour:Minute:Second\"\n            Example: \"Wednesday, 19 June 2025 15:30:45\"\n    ",
          "input_schema": {
            "properties": {
              "timestamp": {
                "title": "Timestamp",
                "type": "number"
              }
            },
            "required": [
              "timestamp"
            ],
            "title": "readableTimeArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 2,
      "tool_names": [
        "getTime",
        "readableTime"
      ]
    },
    "server_info_crawled": {
      "id": 260,
      "name": "Time Server",
      "author": "@javilujann/timemcp",
      "overview": "Provide current time information and translate it into natural language. Enable applications to access and interpret time data easily through simple tools. Enhance user interactions by delivering time-related responses in a human-friendly format.",
      "repository_url": "https://github.com/javilujann/TimeMCP",
      "homepage": "https://smithery.ai/server/@javilujann/timemcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "147",
      "success_rate": "97.06%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@javilujann_timemcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "getTime",
          "description": "\n    Get the current Unix timestamp.\n    \n    Returns:\n        float: The current time as seconds since January 1, 1970 (Unix epoch).\n        This is a standardized way to represent time as a single number.\n        Example: 1687302487.654321\n    ",
          "input_schema": {
            "properties": {},
            "title": "getTimeArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "readableTime",
          "description": "\n    Convert a Unix timestamp to a human-readable date and time string.\n    \n    Args:\n        timestamp (float): A Unix timestamp (seconds since epoch) to convert.\n            Can be obtained from the getTime() function.\n            \n    Returns:\n        str: A formatted date and time string in the format:\n            \"Weekday, Day Month Year Hour:Minute:Second\"\n            Example: \"Wednesday, 19 June 2025 15:30:45\"\n    ",
          "input_schema": {
            "properties": {
              "timestamp": {
                "title": "Timestamp",
                "type": "number"
              }
            },
            "required": [
              "timestamp"
            ],
            "title": "readableTimeArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@javilujann/timemcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@javilujann/timemcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0261.@javilujann_timemcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 257
  }
}