{
  "labels": {
    "analysis": "The MCP Server focuses on fetching news articles from GeekNews, a news aggregation platform. Its primary functionality involves web scraping to retrieve current news stories by category (top, new, ask, show) or weekly news summaries, which can then be integrated into applications. This server solves the problem of programmatically accessing and leveraging real-time news data for projects that require news content.",
    "reasoning": "The primary label \"News & Media\" is chosen because the server's core functionality revolves around fetching and integrating news articles, which aligns with news aggregation and media consumption. The \"Web Search & Research\" label is secondary as the server enables accessing structured news data often required for research purposes. No custom label is needed as the predefined categories adequately cover its functionality.",
    "primary_label": "News & Media",
    "secondary_labels": [
      "Web Search & Research"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 266,
    "server_name": "GeekNews Server",
    "rank_by_usage": 267,
    "usage_count": "142",
    "original_file": "../crawler/smithery/@the0807_geeknews-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@the0807/geeknews-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_articles",
          "description": "\n            GeekNews에서 아티클을 가져오는 도구\n            \n            Args:\n                type: 아티클 유형 (top, new, ask, show)\n                limit: 반환할 아티클 수 (최대 30)\n            \n            Returns:\n                List[Dict[str, Any]]: 아티클 목록\n                \n            Raises:\n                ValueError: 유효하지 않은 아티클 유형이 지정된 경우\n            ",
          "input_schema": {
            "properties": {
              "type": {
                "default": "top",
                "title": "Type",
                "type": "string"
              },
              "limit": {
                "default": 10,
                "title": "Limit",
                "type": "integer"
              }
            },
            "title": "get_articlesArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_weekly_news",
          "description": "\n            GeekNews에서 주간 뉴스를 가져오는 도구\n            \n            Args:\n                weekly_id: 주간 뉴스 ID (빈 문자열인 경우 가장 최근 주간 뉴스를 가져옴)\n                \n            Returns:\n                Dict[str, Any]: 주간 뉴스 정보\n            ",
          "input_schema": {
            "properties": {
              "weekly_id": {
                "default": "",
                "title": "Weekly Id",
                "type": "string"
              }
            },
            "title": "get_weekly_newsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 2,
      "tool_names": [
        "get_articles",
        "get_weekly_news"
      ]
    },
    "server_info_crawled": {
      "id": 266,
      "name": "GeekNews Server",
      "author": "@the0807/geeknews-mcp-server",
      "overview": "Fetch articles from GeekNews and integrate them into your applications. Leverage web scraping capabilities to access the latest news stories effortlessly. Enhance your projects with real-time news data using this MCP server.",
      "repository_url": "https://github.com/the0807/GeekNews-MCP-Server",
      "homepage": "https://smithery.ai/server/@the0807/geeknews-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "142",
      "success_rate": "99.92%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@the0807_geeknews-mcp-server.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "get_articles",
          "description": "\n            GeekNews에서 아티클을 가져오는 도구\n            \n            Args:\n                type: 아티클 유형 (top, new, ask, show)\n                limit: 반환할 아티클 수 (최대 30)\n            \n            Returns:\n                List[Dict[str, Any]]: 아티클 목록\n                \n            Raises:\n                ValueError: 유효하지 않은 아티클 유형이 지정된 경우\n            ",
          "input_schema": {
            "properties": {
              "type": {
                "default": "top",
                "title": "Type",
                "type": "string"
              },
              "limit": {
                "default": 10,
                "title": "Limit",
                "type": "integer"
              }
            },
            "title": "get_articlesArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_weekly_news",
          "description": "\n            GeekNews에서 주간 뉴스를 가져오는 도구\n            \n            Args:\n                weekly_id: 주간 뉴스 ID (빈 문자열인 경우 가장 최근 주간 뉴스를 가져옴)\n                \n            Returns:\n                Dict[str, Any]: 주간 뉴스 정보\n            ",
          "input_schema": {
            "properties": {
              "weekly_id": {
                "default": "",
                "title": "Weekly Id",
                "type": "string"
              }
            },
            "title": "get_weekly_newsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@the0807/geeknews-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@the0807/geeknews-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0267.@the0807_geeknews-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 263
  }
}