{
  "labels": {
    "analysis": "The MCP Server is designed for interacting with Plex Media Server, facilitating the search, browsing, and management of various media libraries (movies, TV shows, music, etc.). It offers tools to handle playlists, collections, media metadata, watch history, and statistics. The server provides OAuth-based authentication for secure access to Plex. The core functionality revolves around media library management, content discovery, and personalized recommendations.",
    "reasoning": "The primary label is selected based on the server's main functionality of managing and interacting with Plex media libraries, which aligns with \"Media Management.\" Secondary labels are chosen for the content discovery/recommendation capabilities and media statistics features. A custom label is added to highlight the Plex-specific integration.",
    "primary_label": "News & Media",
    "secondary_labels": [
      "Content Creation",
      "Data Analysis & Processing"
    ],
    "custom_label": "Plex Media Integration",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 543,
    "server_name": "Plex Media Library Search Server",
    "rank_by_usage": 544,
    "usage_count": "24",
    "original_file": "../crawler/smithery/@vyb1ng_plex-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@vyb1ng/plex-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 543,
      "name": "Plex Media Library Search Server",
      "author": "@vyb1ng/plex-mcp",
      "overview": "Enable seamless searching and browsing of your Plex media libraries through an MCP server. Authenticate securely with Plex via OAuth or static tokens and retrieve rich metadata for movies, shows, music, playlists, and more. Manage your Plex content efficiently with comprehensive tools for playlists, collections, and media information.",
      "repository_url": "https://github.com/vyb1ng/plex-mcp",
      "homepage": "https://smithery.ai/server/@vyb1ng/plex-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "24",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@vyb1ng_plex-mcp.json",
      "tools_count": 21,
      "tools": [
        {
          "name": "search_plex",
          "description": "Deploy Server Plex Media Library Search Server @vyb1ng/plex-mcp Try in Playground search_plex",
          "parameters": [
            {
              "name": "search_plex",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "browse_libraries",
          "description": "List all available Plex libraries (Movies, TV Shows, Music, etc.)",
          "parameters": [
            {
              "name": "browse_libraries",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "browse_library",
          "description": "Browse content within a specific Plex library with filtering and sorting options",
          "parameters": [
            {
              "name": "browse_library",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_recently_added",
          "description": "Get recently added content from Plex libraries",
          "parameters": [
            {
              "name": "get_recently_added",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_watch_history",
          "description": "Get playback history for the Plex server",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "account_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "chunk_size",
              "required": false,
              "type": "string"
            },
            {
              "name": "chunk_offset",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_on_deck",
          "description": "Get 'On Deck' items (continue watching) for users",
          "parameters": [
            {
              "name": "get_on_deck",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_playlists",
          "description": "List all playlists on the Plex server",
          "parameters": [
            {
              "name": "list_playlists",
              "required": false,
              "type": "string"
            },
            {
              "name": "playlist_type",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "browse_playlist",
          "description": "Browse and view the contents of a specific playlist with full track metadata",
          "parameters": [
            {
              "name": "browse_playlist",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_playlist",
          "description": "Create a new regular playlist on the Plex server. Requires an initial item (item_key parameter) to be created successfully. Smart playlists are not supported due to their complex filter requirements.",
          "parameters": [
            {
              "name": "create_playlist",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_to_playlist",
          "description": "Add items to an existing playlist",
          "parameters": [
            {
              "name": "item_keys",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "playlist_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_playlist",
          "description": "Delete an existing playlist",
          "parameters": [
            {
              "name": "delete_playlist",
              "required": false,
              "type": "string"
            },
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "an",
              "required": false,
              "type": "string"
            },
            {
              "name": "existing",
              "required": false,
              "type": "string"
            },
            {
              "name": "playlist",
              "required": false,
              "type": "string"
            },
            {
              "name": "playlist_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_watched_status",
          "description": "Check watch status and progress for specific content items",
          "parameters": [
            {
              "name": "get_watched_status",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_collections",
          "description": "List all collections available on the Plex server",
          "parameters": [
            {
              "name": "get_collections",
              "required": false,
              "type": "string"
            },
            {
              "name": "library_id",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "browse_collection",
          "description": "Browse content within a specific collection",
          "parameters": [
            {
              "name": "sort",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "offset",
              "required": false,
              "type": "string"
            },
            {
              "name": "collection_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_media_info",
          "description": "Get detailed technical information about media files (codecs, bitrates, file sizes, etc.)",
          "parameters": [
            {
              "name": "get_media_info",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_library_stats",
          "description": "Get comprehensive statistics about Plex libraries (storage usage, file counts, content breakdown, etc.)",
          "parameters": [
            {
              "name": "get_library_stats",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_listening_stats",
          "description": "Get detailed listening statistics and music recommendations based on play history and patterns",
          "parameters": [
            {
              "name": "get_listening_stats",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "discover_music",
          "description": "Natural language music discovery with smart recommendations based on your preferences and library",
          "parameters": [
            {
              "name": "discover_music",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "authenticate_plex",
          "description": "Initiate Plex OAuth authentication flow to get user login URL",
          "parameters": [
            {
              "name": "authenticate_plex",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "check_auth_status",
          "description": "Check if Plex authentication is complete and retrieve the auth token",
          "parameters": [
            {
              "name": "check_auth_status",
              "required": false,
              "type": "string"
            },
            {
              "name": "pin_id",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "clear_auth",
          "description": "Clear stored authentication credentials",
          "parameters": [
            {
              "name": "clear_auth",
              "required": false,
              "type": "string"
            },
            {
              "name": "Clear",
              "required": false,
              "type": "string"
            },
            {
              "name": "stored",
              "required": false,
              "type": "string"
            },
            {
              "name": "authentication",
              "required": false,
              "type": "string"
            },
            {
              "name": "credentials",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@vyb1ng/plex-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "plexToken",
          "required": true,
          "description": "Plex authentication token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@vyb1ng/plex-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0544.@vyb1ng_plex-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 532
  }
}