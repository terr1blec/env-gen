{
  "labels": {
    "analysis": "The MCP Server is designed to provide comprehensive movie and TV show information through a search tool. It retrieves detailed metadata such as cast, ratings, genres, plot summaries, and poster images, serving as a specialized repository for entertainment content. This functionality is primarily useful for enhancing applications that require high-quality entertainment metadata.",
    "reasoning": "The \"Media Retrieval\" category is chosen as the primary label because the server's core functionality revolves around fetching and presenting entertainment-related data, which isn't fully covered by predefined categories like \"Web Search & Research\" or \"Database Operations.\" It serves as a metadata aggregator for movies and TV shows, distinction it from generic search tools.",
    "primary_label": "News & Media",
    "secondary_labels": [
      "Web Search & Research"
    ],
    "custom_label": "Entertainment Metadata",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 745,
    "server_name": "Movie Information Server",
    "rank_by_usage": 746,
    "usage_count": "9",
    "original_file": "../crawler/smithery/@yusaaztrk_movie-mcp-main.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@yusaaztrk/movie-mcp-main/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "search_movie",
          "description": "\n    Search for movies and TV shows.\n    \n    Args:\n        query: The movie or TV show name to search for\n    \n    Returns:\n        Detailed information about the movie/TV show including cast, rating, overview, and poster\n    ",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_movieArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "search_movie"
      ]
    },
    "server_info_crawled": {
      "id": 745,
      "name": "Movie Information Server",
      "author": "@yusaaztrk/movie-mcp-main",
      "overview": "Provide detailed movie and TV show information by searching titles. Retrieve comprehensive data including ratings, cast, genres, plot summaries, and poster images. Enhance your applications with high-quality entertainment metadata from a trusted source.",
      "repository_url": "https://github.com/yusaaztrk/movie-mcp-main",
      "homepage": "https://smithery.ai/server/@yusaaztrk/movie-mcp-main",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "9",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@yusaaztrk_movie-mcp-main.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "search_movie",
          "description": "\n    Search for movies and TV shows.\n    \n    Args:\n        query: The movie or TV show name to search for\n    \n    Returns:\n        Detailed information about the movie/TV show including cast, rating, overview, and poster\n    ",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_movieArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@yusaaztrk/movie-mcp-main/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@yusaaztrk/movie-mcp-main/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0746.@yusaaztrk_movie-mcp-main_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 728
  }
}