{
  "labels": {
    "analysis": "The MCP Server provides a suite of tools specifically designed to interact with YouTube content through the YouTube Data API. Its core functionality revolves around retrieving video details, managing captions (transcripts), analyzing video performance metrics, searching for content, and discovering trending or related videos. The tools enable users to gather rich real-time insights and automate interactions with YouTube's platform, making it valuable for content analysis, research, and performer tracking.",
    "reasoning": "The primary label is \"Web Search & Research\" because the server's tools focus on retrieving and analyzing YouTube video data, which aligns closely with research and information gathering. Secondary labels include \"Data Analysis & Processing\" due to its engagement ratio calculations and comparison tools, and \"Content Creation\" since the transcript and video detail tools could aid in content development. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Data Analysis & Processing",
      "Content Creation"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 31,
    "server_name": "YouTube MCP Server",
    "rank_by_usage": 32,
    "usage_count": "3,637",
    "original_file": "../crawler/smithery/@icraft2170_youtube-data-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@icraft2170/youtube-data-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 31,
      "name": "YouTube MCP Server",
      "author": "@icraft2170/youtube-data-mcp-server",
      "overview": "Interact with YouTube content seamlessly. Retrieve video details, manage captions, and analyze trends to enhance your AI's capabilities. Leverage the YouTube Data API for rich, real-time insights.",
      "repository_url": "https://github.com/icraft2170/youtube-data-mcp-server",
      "homepage": "https://smithery.ai/server/@icraft2170/youtube-data-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "3,637",
      "success_rate": "98.92%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@icraft2170_youtube-data-mcp-server.json",
      "tools_count": 9,
      "tools": [
        {
          "name": "getVideoDetails",
          "description": "Deploy Server YouTube MCP Server @icraft2170/youtube-data-mcp-server Try in Playground getVideoDetails",
          "parameters": [
            {
              "name": "getVideoDetails",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "searchVideos",
          "description": "Searches for videos based on a query string. Returns a list of videos matching the search criteria, including titles, descriptions, and metadata. Use this when you need to find videos related to specific topics or keywords.",
          "parameters": [
            {
              "name": "searchVideos",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getTranscripts",
          "description": "Retrieves transcripts for multiple videos. Returns the text content of videos' captions, useful for accessibility and content analysis. Use this when you need the spoken content of multiple videos.",
          "parameters": [
            {
              "name": "lang",
              "required": false,
              "type": "string"
            },
            {
              "name": "videoIds",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getRelatedVideos",
          "description": "Retrieves related videos for a specific video. Returns a list of videos that are similar or related to the specified video, based on YouTube's recommendation algorithm. Use this when you want to discover content similar to a particular video.",
          "parameters": [
            {
              "name": "getRelatedVideos",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getChannelStatistics",
          "description": "Retrieves statistics for multiple channels. Returns detailed metrics including subscriber count, view count, and video count for each channel. Use this when you need to analyze the performance and reach of multiple YouTube channels.",
          "parameters": [
            {
              "name": "getChannelStatistics",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getChannelTopVideos",
          "description": "Retrieves the top videos from a specific channel. Returns a list of the most viewed or popular videos from the channel, based on view count. Use this when you want to identify the most successful content from a channel.",
          "parameters": [
            {
              "name": "getChannelTopVideos",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getVideoEngagementRatio",
          "description": "Calculates the engagement ratio for multiple videos. Returns metrics such as view count, like count, comment count, and the calculated engagement ratio for each video. Use this when you want to measure the audience interaction with videos.",
          "parameters": [
            {
              "name": "getVideoEngagementRatio",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getTrendingVideos",
          "description": "Retrieves trending videos based on region and category. Returns a list of videos that are currently popular in the specified region and category. Use this when you want to discover what's trending in specific areas or categories. Available category IDs: 1 (Film & Animation), 2 (Autos & Vehicles), 10 (Music), 15 (Pets & Animals), 17 (Sports), 18 (Short Movies), 19 (Travel & Events), 20 (Gaming), 21 (Videoblogging), 22 (People & Blogs), 23 (Comedy), 24 (Entertainment), 25 (News & Politics), 26 (Howto & Style), 27 (Education), 28 (Science & Technology), 29 (Nonprofits & Activism), 30 (Movies), 31 (Anime/Animation), 32 (Action/Adventure), 33 (Classics), 34 (Comedy), 35 (Documentary), 36 (Drama), 37 (Family), 38 (Foreign), 39 (Horror), 40 (Sci-Fi/Fantasy), 41 (Thriller), 42 (Shorts), 43 (Shows), 44 (Trailers).",
          "parameters": [
            {
              "name": "getTrendingVideos",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "compareVideos",
          "description": "Compares multiple videos based on their statistics. Returns a comparison of view counts, like counts, comment counts, and other metrics for the specified videos. Use this when you want to analyze the performance of multiple videos side by side.",
          "parameters": [
            {
              "name": "compareVideos",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@icraft2170/youtube-data-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "youtubeApiKey",
          "required": true,
          "description": "YouTube Data API key for accessing the YouTube API."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@icraft2170/youtube-data-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0032.@icraft2170_youtube-data-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 31
  }
}