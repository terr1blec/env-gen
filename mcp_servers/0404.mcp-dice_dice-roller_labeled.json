{
  "labels": {
    "analysis": "The MCP Server's core functionality is centered around simulating dice rolls commonly used in tabletop gaming, particularly role-playing games like Dungeons & Dragons. It processes standard dice notation strings (e.g., \"2d6+3\", \"1d20-2\"), calculates the resulting dice rolls, and returns both individual roll results and the summed total. This is primarily a utility for gamers who need quick, random dice outcomes without needing physical dice.",
    "reasoning": "The primary functionality aligns most closely with Gaming, as it provides tools specifically designed for dice-related mechanics integral to gaming. The problem it solves – quick simulation of dice rolls – is uniquely valuable in gaming contexts. Secondary labels could include Daily Productivity for broader random number generation use cases or Math & Probability for potential educational applications in understanding probability.",
    "primary_label": "Gaming",
    "secondary_labels": [
      "Daily Productivity"
    ],
    "custom_label": "Dice Simulation",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 403,
    "server_name": "Dice Roller",
    "rank_by_usage": 404,
    "usage_count": "58",
    "original_file": "../crawler/smithery/mcp-dice_dice-roller.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/mcp-dice/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "roll_dice",
          "description": "Roll dice using standard notation (e.g., '2d6+3', '1d20-2')",
          "input_schema": {
            "type": "object",
            "properties": {
              "notation": {
                "type": "string",
                "description": "Dice notation (e.g., '2d6+3', '1d20-2')",
                "pattern": "^\\d+d\\d+([+-]\\d+)?$"
              }
            },
            "required": [
              "notation"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "roll_dice"
      ]
    },
    "server_info_crawled": {
      "id": 403,
      "name": "Dice Roller",
      "author": "mcp-dice",
      "overview": "Roll dice using standard dice notation and return results with their total sum.",
      "repository_url": "https://github.com/yamaton/mcp-dice",
      "homepage": "https://smithery.ai/server/mcp-dice",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "58",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/mcp-dice_dice-roller.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "roll_dice",
          "description": "Roll dice using standard notation (e.g., '2d6+3', '1d20-2')",
          "input_schema": {
            "type": "object",
            "properties": {
              "notation": {
                "type": "string",
                "description": "Dice notation (e.g., '2d6+3', '1d20-2')",
                "pattern": "^\\d+d\\d+([+-]\\d+)?$"
              }
            },
            "required": [
              "notation"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/mcp-dice/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/mcp-dice/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0404.mcp-dice_dice-roller_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 398
  }
}