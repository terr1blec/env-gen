{
  "labels": {
    "analysis": "The MCP Server described specializes in note storage and summarization, allowing users to add new notes dynamically and generate summaries with customizable detail levels. Its primary function revolves around managing textual information and making it more accessible through organization and summarization features. The current tool (add-note) suggests a focus on creating and storing notes, with the implied future capability of summarization.",
    "reasoning": "The primary label \"Memory Management\" is chosen because the server's core functionality is centered around storing and organizing notes, which aligns with data storage and retrieval. The secondary label \"Daily Productivity\" complements this as note-taking and summarization are common productivity tasks. No custom label is needed as the predefined categories adequately cover the server's purpose.",
    "primary_label": "Memory Management",
    "secondary_labels": [
      "Daily Productivity"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2171,
    "server_name": "Note Storage and Summarization Server",
    "rank_by_usage": 2172,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@daikw_mcp-server-on-raspi.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@daikw/mcp-server-on-raspi/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "add-note",
          "description": "Add a new note",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "content": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "content"
            ]
          },
          "annotations": {}
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "add-note"
      ]
    },
    "server_info_crawled": {
      "id": 2171,
      "name": "Note Storage and Summarization Server",
      "author": "@daikw/mcp-server-on-raspi",
      "overview": "Manage and summarize notes efficiently with a simple note storage system. Add new notes dynamically and generate summaries with customizable detail levels. Keep your notes organized and accessible through a custom URI scheme.",
      "repository_url": "https://github.com/daikw/mcp-server-on-raspi",
      "homepage": "https://smithery.ai/server/@daikw/mcp-server-on-raspi",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@daikw_mcp-server-on-raspi.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "add-note",
          "description": "Add a new note",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "content": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "content"
            ]
          },
          "annotations": {}
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@daikw/mcp-server-on-raspi/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@daikw/mcp-server-on-raspi/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "2172.@daikw_mcp-server-on-raspi_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1878
  }
}