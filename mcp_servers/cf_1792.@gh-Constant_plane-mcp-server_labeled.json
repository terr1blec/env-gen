{
  "labels": {
    "analysis": "The Plane MCP Server is designed for seamless interaction with the Plane project management platform. It provides tools to manage workspaces, projects, issues, and their respective lifecycle stages (states, cycles, modules). The available tools facilitate listing, retrieving, creating, updating, and deleting project-related entities (e.g., issues, comments) as well as automating tasks and retrieving real-time data. This server enhances productivity for teams using Plane by integrating AI-assisted automation into their project management workflow.",
    "reasoning": "The primary label \"Project Management\" was chosen because the server's core functionality revolves around managing projects, issues, and associated metadata within the Plane platform. The secondary label \"Daily Productivity\" is selected because the automation and real-time data retrieval features enhance user productivity in a work context. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Project Management",
    "secondary_labels": [
      "Daily Productivity"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false
  },
  "metadata": {
    "server_id": 1791,
    "server_name": "Plane MCP Server",
    "rank_by_usage": 1792,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@gh-Constant_plane-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@gh-Constant/plane-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1791,
      "name": "Plane MCP Server",
      "author": "@gh-Constant/plane-mcp-server",
      "overview": "Interact seamlessly with the Plane project management platform. Manage workspaces, projects, and issues effortlessly through a set of powerful tools designed for AI assistants. Enhance your project management experience by automating tasks and retrieving real-time data.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@gh-Constant/plane-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@gh-Constant_plane-mcp-server.json",
      "tools_count": 16,
      "tools": [
        {
          "name": "list-workspaces",
          "description": "Deploy Server Plane MCP Server @gh-Constant/plane-mcp-server Try in Playground list-workspaces",
          "parameters": []
        },
        {
          "name": "get-workspace",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "list-projects",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "get-project",
          "description": "Description not available",
          "parameters": [
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-project-states",
          "description": "Description not available",
          "parameters": [
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list-cycles",
          "description": "Description not available",
          "parameters": [
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-cycle",
          "description": "Description not available",
          "parameters": [
            {
              "name": "cycle_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list-modules",
          "description": "Description not available",
          "parameters": [
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-module",
          "description": "Description not available",
          "parameters": [
            {
              "name": "module_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list-issues",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "get-issue",
          "description": "Description not available",
          "parameters": [
            {
              "name": "issue_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create-issue",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "update-issue",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "delete-issue",
          "description": "Description not available",
          "parameters": [
            {
              "name": "issue_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list-issue-comments",
          "description": "Description not available",
          "parameters": [
            {
              "name": "issue_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "add-issue-comment",
          "description": "Description not available",
          "parameters": [
            {
              "name": "issue_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "comment_html",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@gh-Constant/plane-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "planeApiKey",
          "required": true,
          "description": "Your Plane API key."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@gh-Constant/plane-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1792.@gh-Constant_plane-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1598
  }
}