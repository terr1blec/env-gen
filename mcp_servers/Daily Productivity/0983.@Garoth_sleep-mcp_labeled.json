{
  "labels": {
    "analysis": "The Sleep Server's primary functionality revolves around introducing controlled delays in operations, such as between API calls or for testing systems that require eventual consistency. It focuses on precision timing management to enhance workflows by ensuring appropriate pacing in automated processes.",
    "reasoning": "The primary label \"Daily Productivity\" is chosen because the server improves workflow efficiency by managing timing, a common need in production automation and task scheduling. \"Development Tools\" is a secondary label as delays are often critical for API rate limiting and testing scenarios during software development. \"API Integration\" could also apply as timed delays are common in API interaction workflows.",
    "primary_label": "Daily Productivity",
    "secondary_labels": [
      "Development Tools",
      "API Integration"
    ],
    "custom_label": "Timing Management",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 982,
    "server_name": "Sleep Server",
    "rank_by_usage": 983,
    "usage_count": "2",
    "original_file": "../crawler/smithery/@Garoth_sleep-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Garoth/sleep-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "sleep",
          "description": "Wait for a specified duration",
          "input_schema": {
            "type": "object",
            "properties": {
              "milliseconds": {
                "type": "number",
                "description": "Duration to wait in milliseconds",
                "minimum": 0
              }
            },
            "required": [
              "milliseconds"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "sleep"
      ]
    },
    "server_info_crawled": {
      "id": 982,
      "name": "Sleep Server",
      "author": "@Garoth/sleep-mcp",
      "overview": "Introduce delays in your operations effortlessly. Use this tool to wait between API calls or to test systems that require eventual consistency. Enhance your workflows by managing timing with precision.",
      "repository_url": "https://github.com/Garoth/sleep-mcp",
      "homepage": "https://smithery.ai/server/@Garoth/sleep-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "2",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Garoth_sleep-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "sleep",
          "description": "Wait for a specified duration",
          "input_schema": {
            "type": "object",
            "properties": {
              "milliseconds": {
                "type": "number",
                "description": "Duration to wait in milliseconds",
                "minimum": 0
              }
            },
            "required": [
              "milliseconds"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Garoth/sleep-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Garoth/sleep-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0983.@Garoth_sleep-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 961
  }
}