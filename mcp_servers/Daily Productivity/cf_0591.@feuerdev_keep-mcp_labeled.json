{
  "labels": {
    "analysis": "The MCP Server for Google Keep is designed to manage notes within Google Keep via programmatic tools. It allows users to create, update, search, and delete notes through a set of API-like commands. This server bridges applications with Google Keep, enhancing productivity by automating note management tasks that would otherwise require manual interaction with the Google Keep interface.",
    "reasoning": "The primary functionality of this server revolves around managing notes, which directly aligns with productivity and file/document management. The tools provided are designed for controlled manipulation of note data, making \"Daily Productivity\" and \"File Management\" the most fitting labels. No custom label is needed as the predefined categories sufficiently describe the server's purpose.",
    "primary_label": "Daily Productivity",
    "secondary_labels": [
      "File Management"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 590,
    "server_name": "MCP Server for Google Keep",
    "rank_by_usage": 591,
    "usage_count": "18",
    "original_file": "../crawler/smithery/@feuerdev_keep-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@feuerdev/keep-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 590,
      "name": "MCP Server for Google Keep",
      "author": "@feuerdev/keep-mcp",
      "overview": "Manage your Google Keep notes effortlessly. Create, update, search, and delete notes with ease using this powerful MCP server. Enhance your productivity by integrating Google Keep into your applications seamlessly.",
      "repository_url": "https://github.com/feuerdev/keep-mcp",
      "homepage": "https://smithery.ai/server/@feuerdev/keep-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "18",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@feuerdev_keep-mcp.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "find",
          "description": "Deploy Server MCP Server for Google Keep Claim Server @feuerdev/keep-mcp Try in Playground",
          "parameters": []
        },
        {
          "name": "create_note",
          "description": "Create a new note with title and text. Args: title (str, optional): The title of the note text (str, optional): The content of the note Returns: str: JSON string containing the created note's data",
          "parameters": []
        },
        {
          "name": "update_note",
          "description": "Update a note's properties. Args: note_id (str): The ID of the note to update title (str, optional): New title for the note text (str, optional): New text content for the note Returns: str: JSON string containing the updated note's data Raises: ValueError: If the note doesn't exist or cannot be modified",
          "parameters": []
        },
        {
          "name": "delete_note",
          "description": "Delete a note (mark for deletion). Args: note_id (str): The ID of the note to delete Returns: str: Success message Raises: ValueError: If the note doesn't exist or cannot be modified",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@feuerdev/keep-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "googleMasterToken",
          "required": true,
          "description": "Your Google account master token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@feuerdev/keep-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0591.@feuerdev_keep-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 577
  }
}