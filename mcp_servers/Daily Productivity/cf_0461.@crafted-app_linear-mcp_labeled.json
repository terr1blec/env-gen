{
  "labels": {
    "analysis": "The MCP Server is designed for integration with Linear, a project management platform. It enables AI agents to programmatically interact with Linear's API to manage issues, projects, teams, and workflows. The tools provided allow for creating, updating, listing, and searching for various entities within Linear, as well as retrieving statuses and metadata. This server streamlines project management workflows by automating and customizing interactions with Linear's platform.",
    "reasoning": "The primary functionality revolves around project and issue management, which aligns with productivity and task management tools. Since it heavily focuses on Linear's API and project tracking, it also fits into workflow automation. The secondary label \"API Integration\" is appropriate due to its direct interaction with Linear's API. No custom label is needed as the predefined categories adequately cover its functionality.",
    "primary_label": "Daily Productivity",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 460,
    "server_name": "Linear Issue and Project Management Server",
    "rank_by_usage": 461,
    "usage_count": "40",
    "original_file": "../crawler/smithery/@crafted-app_linear-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@crafted-app/linear-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 460,
      "name": "Linear Issue and Project Management Server",
      "author": "@crafted-app/linear-mcp",
      "overview": "Enable AI agents to programmatically manage issues, projects, and teams within the Linear platform. Create, list, update, and retrieve detailed information about issues, teams, and projects with flexible filtering and customizable properties. Streamline your workflow by integrating Linear's API directly into your AI-powered tools.",
      "repository_url": "https://github.com/crafted-app/linear-mcp",
      "homepage": "https://smithery.ai/server/@crafted-app/linear-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "40",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@crafted-app_linear-mcp.json",
      "tools_count": 9,
      "tools": [
        {
          "name": "list_workspaces",
          "description": "Deploy Server Linear Issue and Project Management Server @crafted-app/linear-mcp Try in Playground list_workspaces",
          "parameters": [
            {
              "name": "list_workspaces",
              "required": false,
              "type": "string"
            },
            {
              "name": "workspace",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_issue",
          "description": "Create a new issue in Linear",
          "parameters": [
            {
              "name": "create_issue",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_issues",
          "description": "List issues with optional filters",
          "parameters": [
            {
              "name": "first",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "required": false,
              "type": "string"
            },
            {
              "name": "teamId",
              "required": false,
              "type": "string"
            },
            {
              "name": "assigneeId",
              "required": false,
              "type": "string"
            },
            {
              "name": "workspaceId",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_issue",
          "description": "Update an existing issue",
          "parameters": [
            {
              "name": "update_issue",
              "required": false,
              "type": "string"
            },
            {
              "name": "Update",
              "required": false,
              "type": "string"
            },
            {
              "name": "an",
              "required": false,
              "type": "string"
            },
            {
              "name": "existing",
              "required": false,
              "type": "string"
            },
            {
              "name": "issue",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_issue_status",
          "description": "Get all workflow states (statuses) for a team, including id, name, description, position, and type.",
          "parameters": [
            {
              "name": "get_issue_status",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_teams",
          "description": "List all teams in the workspace",
          "parameters": [
            {
              "name": "list_teams",
              "required": false,
              "type": "string"
            },
            {
              "name": "workspaceId",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_projects",
          "description": "Description not available",
          "parameters": [
            {
              "name": "List",
              "required": false,
              "type": "string"
            },
            {
              "name": "all",
              "required": false,
              "type": "string"
            },
            {
              "name": "projects",
              "required": false,
              "type": "string"
            },
            {
              "name": "first",
              "required": false,
              "type": "string"
            },
            {
              "name": "teamId",
              "required": false,
              "type": "string"
            },
            {
              "name": "workspaceId",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_issues",
          "description": "Search for issues using a text query",
          "parameters": [
            {
              "name": "first",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "workspaceId",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_issue",
          "description": "Get detailed information about a specific issue",
          "parameters": [
            {
              "name": "get_issue_status",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@crafted-app/linear-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "linearApiKey",
          "required": true,
          "description": "Linear API key for authentication"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@crafted-app/linear-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0461.@crafted-app_linear-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 452
  }
}