{
  "labels": {
    "analysis": "The MCP Server performs as an AI-powered project management tool known as Dart. Its core functionality revolves around task management, document handling, and AI-assisted planning. Dart helps teams with task creation, status updates, duplicate detection, and report generation to streamline project workflows. The tools available allow for comprehensive task and document lifecycle management, including listing, creating, updating, retrieving, and deleting entries. AI features assist with planning and reducing repetitive tasks, enhancing productivity.",
    "reasoning": "The primary functionality of Dart aligns closely with task and project management tools. The secondary features related to document handling and AI-assisted planning also contribute to defining its overall purpose. No custom label is needed as the predefined categories sufficiently describe the server's capabilities.",
    "primary_label": "Daily Productivity",
    "secondary_labels": [
      "File Management",
      "AI/ML Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 389,
    "server_name": "Dart",
    "rank_by_usage": 390,
    "usage_count": "65",
    "original_file": "../crawler/smithery/@its-dart_dart-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@its-dart/dart-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 389,
      "name": "Dart",
      "author": "@its-dart/dart-mcp-server",
      "overview": "Dart is a fully-featured project management tool that uses AI to assist with roadmap planning, report generation, breaking tasks into subtasks, duplicate detection, and executing on writing and design tasks. Teams use Dart in order to chat with their tasks, plan better, and eliminate regular PM chores from their schedule, freeing up seven hours per week to focus on other work.",
      "repository_url": "https://github.com/its-dart/dart-mcp-server",
      "homepage": "https://smithery.ai/server/@its-dart/dart-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "65",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@its-dart_dart-mcp-server.json",
      "tools_count": 11,
      "tools": [
        {
          "name": "get_config",
          "description": "Deploy Server @its-dart/dart-mcp-server Try in Playground",
          "parameters": [
            {
              "name": "get_config",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_tasks",
          "description": "List tasks from Dart with optional filtering parameters. You can filter by assignee, status, dartboard, priority, due date, and more.",
          "parameters": [
            {
              "name": "list_tasks",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_task",
          "description": "Create a new task in Dart. You can specify title, description, status, priority, size, dates, dartboard, assignees, tags, and parent task.",
          "parameters": [
            {
              "name": "priority",
              "required": false,
              "type": "string"
            },
            {
              "name": "assignees",
              "required": false,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "dartboard",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_task",
          "description": "Retrieve an existing task by its ID. Returns the task's information including title, description, status, priority, dates, and more.",
          "parameters": [
            {
              "name": "get_task",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_task",
          "description": "Update an existing task. You can modify any of its properties including title, description, status, priority, dates, assignees, and more.",
          "parameters": [
            {
              "name": "update_task",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_task",
          "description": "Move an existing task to the trash, where it can be recovered if needed. Nothing else about the task will be changed.",
          "parameters": [
            {
              "name": "delete_task",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_docs",
          "description": "List docs from Dart with optional filtering parameters. You can filter by folder, title, text content, and more.",
          "parameters": [
            {
              "name": "list_docs",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_doc",
          "description": "Create a new doc in Dart. You can specify title, text content, and folder.",
          "parameters": [
            {
              "name": "create_doc",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_doc",
          "description": "Retrieve an existing doc by its ID. Returns the doc's information including title, text content, folder, and more.",
          "parameters": [
            {
              "name": "get_doc",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_doc",
          "description": "Update an existing doc. You can modify its title, text content, and folder.",
          "parameters": [
            {
              "name": "update_doc",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_doc",
          "description": "Move an existing doc to the trash, where it can be recovered if needed. Nothing else about the doc will be changed.",
          "parameters": [
            {
              "name": "delete_doc",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@its-dart/dart-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "dartToken",
          "required": true,
          "description": "The Dart API token to authenticate with the Dart MCP server"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@its-dart/dart-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0390.@its-dart_dart-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 384
  }
}