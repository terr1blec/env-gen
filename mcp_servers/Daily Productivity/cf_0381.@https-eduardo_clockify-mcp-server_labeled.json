{
  "labels": {
    "analysis": "The MCP Server is designed specifically for managing time entries in Clockify, a time tracking application. It enables users to interact with their Clockify account through AI-powered prompts, allowing them to add, view, and control time entries without leaving the AI interface. The available tools focus on retrieving necessary data (user details, workspaces, projects) and creating time entries, which points to a time management solution.",
    "reasoning": "The primary label \"Daily Productivity\" was chosen because the server's core functionality revolves around managing time entries, which directly relates to personal productivity and time tracking. The secondary label \"Time & Calendar\" is also appropriate as it pertains to scheduling and time management. No custom label was necessary as the functionality fits well within the predefined categories.",
    "primary_label": "Daily Productivity",
    "secondary_labels": [
      "Time & Calendar"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 380,
    "server_name": "Clockify Time Entry Manager",
    "rank_by_usage": 381,
    "usage_count": "67",
    "original_file": "../crawler/smithery/@https-eduardo_clockify-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@https-eduardo/clockify-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 380,
      "name": "Clockify Time Entry Manager",
      "author": "@https-eduardo/clockify-mcp-server",
      "overview": "Manage your Clockify time entries effortlessly by sending prompts to an LLM. Add, view, and control your time tracking directly through AI-powered interactions. Simplify your time management workflow with seamless integration to Clockify.",
      "repository_url": "https://github.com/https-eduardo/clockify-mcp-server",
      "homepage": "https://smithery.ai/server/@https-eduardo/clockify-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "67",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@https-eduardo_clockify-mcp-server.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "create-time-entry",
          "description": "Deploy Server Clockify Time Entry Manager @https-eduardo/clockify-mcp-server Try in Playground create-time-entry",
          "parameters": []
        },
        {
          "name": "get-projects",
          "description": "Get workspace projects id and name, the projects can be associated with time entries",
          "parameters": []
        },
        {
          "name": "get-current-user",
          "description": "Get the current user id and name, to search for entries is required to have the user id",
          "parameters": []
        },
        {
          "name": "get-workspaces",
          "description": "Get user available workspaces id and name, a workspace is required to manage time entries",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@https-eduardo/clockify-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "clockifyApiToken",
          "required": true,
          "description": "Clockify API token for authentication"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@https-eduardo/clockify-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0381.@https-eduardo_clockify-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 375
  }
}