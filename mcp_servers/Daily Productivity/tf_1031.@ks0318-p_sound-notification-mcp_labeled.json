{
  "labels": {
    "analysis": "The MCP Sound Notification Server is designed to provide audio alerts for AI coding assistants. Its primary function is to play predefined sounds to notify users about task completitions or approvals, enhancing productivity by providing timely audio cues in a coding environment.",
    "reasoning": "The primary label is chosen because the server's functionality aligns most closely with tools that enhance daily productivity, particularly by managing notifications and user attention. The secondary label reflects its specialized use in development workflows.",
    "primary_label": "Daily Productivity",
    "secondary_labels": [
      "Development Tools"
    ],
    "custom_label": "AI Coding Alerts",
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1030,
    "server_name": "Sound Notification Server",
    "rank_by_usage": 1031,
    "usage_count": "2",
    "original_file": "../crawler/smithery/@ks0318-p_sound-notification-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ks0318-p/sound-notification-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "play-completion-sound",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "soundType": {
                "type": "string",
                "enum": [
                  "default",
                  "success",
                  "error"
                ]
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "play-completion-sound"
      ]
    },
    "server_info_crawled": {
      "id": 1030,
      "name": "Sound Notification Server",
      "author": "@ks0318-p/sound-notification-mcp",
      "overview": "Play notification sounds to alert users when AI coding assistants need attention. Enhance your coding experience by receiving timely audio cues for task completions and approvals.",
      "repository_url": "https://github.com/ks0318-p/sound-notification-mcp",
      "homepage": "https://smithery.ai/server/@ks0318-p/sound-notification-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "2",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ks0318-p_sound-notification-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "play-completion-sound",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "soundType": {
                "type": "string",
                "enum": [
                  "default",
                  "success",
                  "error"
                ]
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ks0318-p/sound-notification-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ks0318-p/sound-notification-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1031.@ks0318-p_sound-notification-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1009
  }
}