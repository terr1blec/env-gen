{
  "labels": {
    "analysis": "The MCP Server is designed to integrate with GitHub, specifically focusing on retrieving and analyzing code diffs from pull requests. Its core functionality revolves around facilitating code review and development workflows by automating the extraction of changes between code versions. The available tool suggests a narrow yet powerful use case centered on version control and code collaboration.",
    "reasoning": "The primary label is chosen because the server's functionality is dedicated to integrating with GitHub for development purposes, particularly around code changes. Secondary labels are added to acknowledge broader development workflows and the server's ability to process structured data from GitHub. No custom label is needed as the predefined categories sufficiently cover the server's functionality.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Development Tools",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1949,
    "server_name": "GitHub Integration",
    "rank_by_usage": 1950,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@highlight-ing_highlight-github-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@highlight-ing/highlight-github-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1949,
      "name": "GitHub Integration",
      "author": "@highlight-ing/highlight-github-mcp",
      "overview": "Retrieve diffs from GitHub Pull Requests effortlessly. Extract and analyze changes in your codebase with a simple command. Enhance your development workflow by integrating GitHub diff retrieval into your tools.",
      "repository_url": "https://github.com/highlight-ing/highlight-github-mcp",
      "homepage": "https://smithery.ai/server/@highlight-ing/highlight-github-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@highlight-ing_highlight-github-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_pr_diff",
          "description": "Deploy Server GitHub Integration Claim Server @highlight-ing/highlight-github-mcp Try in Playground get_pr_diff",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullNumber",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@highlight-ing/highlight-github-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "githubToken",
          "required": true,
          "description": "GitHub Personal Access Token with repo access"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@highlight-ing/highlight-github-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1950.@highlight-ing_highlight-github-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1713
  }
}