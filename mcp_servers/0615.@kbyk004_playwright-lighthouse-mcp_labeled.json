{
  "labels": {
    "analysis": "The MCP Server \"Playwright-Lighthouse\" is designed to analyze website performance and capture screenshots using Playwright and Lighthouse tools. It provides real-time insights into web application performance metrics and visual feedback via screenshots. The available tools enable performance analysis and screenshot capture, which are useful for web development and QA testing.",
    "reasoning": "The primary function of capturing website performance metrics and screenshots aligns most closely with the \"Browser Automation\" category, as it involves automated interactions with web pages. The tools also have strong ties to web development workflows, making \"Development Tools\" a relevant secondary label. Since the functionality is quite specific, no custom label is necessary as the predefined categories adequately describe the use cases.",
    "primary_label": "Browser Automation",
    "secondary_labels": [
      "Development Tools"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 614,
    "server_name": "Playwright-Lighthouse",
    "rank_by_usage": 615,
    "usage_count": "16",
    "original_file": "../crawler/smithery/@kbyk004_playwright-lighthouse-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@kbyk004/playwright-lighthouse-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "run-lighthouse",
          "description": "Runs a Lighthouse performance analysis on the currently open page",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri",
                "description": "URL of the website you want to analyze"
              },
              "categories": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "performance",
                    "accessibility",
                    "best-practices",
                    "seo",
                    "pwa"
                  ]
                },
                "default": [
                  "performance"
                ],
                "description": "Categories to analyze (performance, accessibility, best-practices, seo, pwa)"
              },
              "maxItems": {
                "type": "number",
                "minimum": 1,
                "maximum": 5,
                "default": 3,
                "description": "Maximum number of improvement items to display for each category"
              }
            },
            "required": [
              "url"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "take-screenshot",
          "description": "Takes a screenshot of the currently open page",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri",
                "description": "URL of the website you want to capture"
              },
              "fullPage": {
                "type": "boolean",
                "default": false,
                "description": "If true, captures a screenshot of the entire page"
              }
            },
            "required": [
              "url"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 2,
      "tool_names": [
        "run-lighthouse",
        "take-screenshot"
      ]
    },
    "server_info_crawled": {
      "id": 614,
      "name": "Playwright-Lighthouse",
      "author": "@kbyk004/playwright-lighthouse-mcp",
      "overview": "Analyze website performance and capture screenshots effortlessly. Leverage the power of Playwright and Lighthouse to gain insights into your web applications' performance metrics. Enhance your LLM capabilities with real-time performance analysis and visual feedback.",
      "repository_url": "https://github.com/kbyk004/playwright-lighthouse-mcp",
      "homepage": "https://smithery.ai/server/@kbyk004/playwright-lighthouse-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "16",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@kbyk004_playwright-lighthouse-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "run-lighthouse",
          "description": "Runs a Lighthouse performance analysis on the currently open page",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri",
                "description": "URL of the website you want to analyze"
              },
              "categories": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "performance",
                    "accessibility",
                    "best-practices",
                    "seo",
                    "pwa"
                  ]
                },
                "default": [
                  "performance"
                ],
                "description": "Categories to analyze (performance, accessibility, best-practices, seo, pwa)"
              },
              "maxItems": {
                "type": "number",
                "minimum": 1,
                "maximum": 5,
                "default": 3,
                "description": "Maximum number of improvement items to display for each category"
              }
            },
            "required": [
              "url"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "take-screenshot",
          "description": "Takes a screenshot of the currently open page",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri",
                "description": "URL of the website you want to capture"
              },
              "fullPage": {
                "type": "boolean",
                "default": false,
                "description": "If true, captures a screenshot of the entire page"
              }
            },
            "required": [
              "url"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@kbyk004/playwright-lighthouse-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@kbyk004/playwright-lighthouse-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0615.@kbyk004_playwright-lighthouse-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 600
  }
}