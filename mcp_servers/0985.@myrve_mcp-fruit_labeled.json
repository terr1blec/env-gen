{
  "labels": {
    "analysis": "The Fruit Data Server provides structured access to fruit-related data through standardized protocols, focusing on querying and manipulating fruit information. The available tool, get_fruit_info, allows fetching detailed data about fruits using an external API. The server is designed to integrate fruit data smoothly into LLM applications, suggesting it serves as an intermediary for structured data retrieval and processing.",
    "reasoning": "The primary function of the server is to provide access and operations on fruit-related data, which aligns with data querying and processing. The external API integration also suggests API interaction capabilities. No additional predefined categories are necessary beyond these core functions, and no unique functionality requires a custom label.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 984,
    "server_name": "Fruit Data Server",
    "rank_by_usage": 985,
    "usage_count": "2",
    "original_file": "../crawler/smithery/@myrve_mcp-fruit.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@myrve/mcp-fruit/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_fruit_info",
          "description": "\n    Kullanıcıdan alınan meyve ismine göre Fruityvice API'den detayları getirir.\n    ",
          "input_schema": {
            "properties": {
              "name": {
                "title": "Name",
                "type": "string"
              }
            },
            "required": [
              "name"
            ],
            "title": "get_fruit_infoArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get_fruit_info"
      ]
    },
    "server_info_crawled": {
      "id": 984,
      "name": "Fruit Data Server",
      "author": "@myrve/mcp-fruit",
      "overview": "Provide structured access to fruit-related data and operations through a standardized protocol. Enable clients to query, manipulate, and retrieve fruit information efficiently. Facilitate integration of fruit data into LLM applications seamlessly.",
      "repository_url": "https://github.com/myrve/MCP-Fruit",
      "homepage": "https://smithery.ai/server/@myrve/mcp-fruit",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "2",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@myrve_mcp-fruit.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_fruit_info",
          "description": "\n    Kullanıcıdan alınan meyve ismine göre Fruityvice API'den detayları getirir.\n    ",
          "input_schema": {
            "properties": {
              "name": {
                "title": "Name",
                "type": "string"
              }
            },
            "required": [
              "name"
            ],
            "title": "get_fruit_infoArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@myrve/mcp-fruit/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@myrve/mcp-fruit/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0985.@myrve_mcp-fruit_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 963
  }
}