{
  "labels": {
    "analysis": "The MCP Server functions as a comprehensive travel planning assistant, enabling users to search for hotels, events, places of interest, and currency exchange rates. It leverages APIs like SerpApi and CurrencyFreaks to provide detailed, up-to-date information, making it ideal for trip organization, itinerary planning, and financial considerations during travel.",
    "reasoning": "The primary label \"Travel & Maps\" was chosen because the server's core functionality revolves around location-based searches, event planning, and travel logistics. The secondary label \"Web Search & Research\" reflects its use of SerpApi for gathering detailed information. No custom label is needed since the predefined categories adequately cover the server's functionality.",
    "primary_label": "Travel & Maps",
    "secondary_labels": [
      "Web Search & Research"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1357,
    "server_name": "Travel Agent Server",
    "rank_by_usage": 1358,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@alan5543_travel-agent-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@alan5543/travel-agent-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1357,
      "name": "Travel Agent Server",
      "author": "@alan5543/travel-agent-mcp-server",
      "overview": "Enable LLMs to act as travel agents by searching hotels, events, places, and currency rates using SerpApi and CurrencyFreaks APIs. Plan trips and accommodations with detailed hotel info, event listings, and up-to-date currency exchange data. Integrate seamlessly with MCP-compatible clients for enhanced travel planning capabilities.",
      "repository_url": "https://github.com/alan5543/Travel-Agent-MCP-Server",
      "homepage": "https://smithery.ai/server/@alan5543/travel-agent-mcp-server",
      "remote_or_local": "Remote",
      "license": "https://smithery.ai/server/@alan5543/travel-agent-mcp-server",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@alan5543_travel-agent-mcp-server.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "search_hotels",
          "description": "Deploy Server Travel Agent Server @alan5543/travel-agent-mcp-server Try in Playground search_hotels",
          "parameters": []
        },
        {
          "name": "find_hotel_detail",
          "description": "Retrieve detailed information for a specific hotel or vacation rental using the SerpApi Google Hotels API. This tool fetches detailed information about a property identified by its `property_token`, which is obtained from the `search_hotels` tool. The response includes the property's name, address, phone number, prices, amenities, nearby places, ratings, and images. Args: query (str): The search query used in the original search (e.g., \"Hong Kong\"). Required. property_token (str): Unique token identifying the property (from `search_hotels` response). Required. check_in_date (str): Check-in date in YYYY-MM-DD format (e.g., \"2025-06-27\"). Required. check_out_date (str): Check-out date in YYYY-MM-DD format (e.g., \"2025-06-28\"). Required. adults (int, optional): Number of adults. Defaults to 2. currency (str, optional): Currency code for prices (e.g., \"USD\", \"EUR\"). Defaults to \"USD\". gl (str, optional): Country code for localization (e.g., \"us\", \"uk\"). Defaults to \"us\". hl (str, optional): Language code for results (e.g., \"en\", \"fr\"). Defaults to \"en\". children (int, optional): Number of children. Defaults to None. children_ages (List[int], optional): Ages of children (1 to 17). Must match the number of children. Returns: A JSON object with the following structure: \"search_metadata\": { \"status\": str, // e.g., \"Success\" \"created_at\": str // e.g., \"2025-06-26 19:52:23 UTC\" \"search_parameters\": { \"q\": str, // e.g., \"Hong Kong\" \"check_in_date\": str, // e.g., \"2025-06-27\" \"check_out_date\": str, // e.g., \"2025-06-28\" \"adults\": int, // e.g., 2 \"children\": int // e.g., 2 (optional) \"hotel\": { \"name\": str, // e.g., \"Regal Airport Hotel Hong Kong\" \"description\": str, // Brief description \"link\": str, // URL to property's website \"address\": str, // e.g., \"9 Cheong Tat Road, Hong Kong International Airport Chek Lap Kok, Lantau Island, Hong Kong\" \"phone\": str, // e.g., \"+852 2286 8888\" \"gps_coordinates\": {\"latitude\": float, \"longitude\": float}, // e.g., {\"latitude\": 22.3186949, \"longitude\": 113.9343274} \"check_in_time\": str, // e.g., \"2:00 PM\" \"check_out_time\": str, // e.g., \"12:00 PM\" \"rates\": { \"lowest\": str, // e.g., \"US$190\" \"before_taxes\": str // e.g., \"US$174\" \"deal\": str, // e.g., \"41% less than usual\" (optional) \"hotel_class\": str, // e.g., \"5-star hotel\" \"overall_rating\": float, // e.g., 4.0 \"reviews\": int, // e.g., 5681 \"images\": [{\"thumbnail\": str}], // List of image URLs \"amenities\": [str] // e.g., [\"6 restaurants\", \"Spa\", \"Gym\", \"Indoor/outdoor pools\"] \"prices\": { \"sources\": [ \"source\": str, // e.g., \"klook\" \"rate\": str // e.g., \"US$190\" \"nearby_places\": { \"points_of_interest\": [ \"name\": str, // e.g., \"Hong Kong Disneyland\" \"distance\": str, // e.g., \"18 km\" \"rating\": float // e.g., 4.5 \"restaurants\": [ \"name\": str, // e.g., \"Rouge 紅軒\" \"type\": str, // e.g., \"Cantonese\" \"rating\": float // e.g., 4.0 \"reviews_summary\": { \"total\": int, // e.g., 5681 \"breakdown\": { \"5_star\": int, // e.g., 2401 \"4_star\": int // e.g., 1749 \"top_categories\": [ \"name\": str, // e.g., \"Location\" \"rating\": float // e.g., 4.0 If the request fails, returns: {\"error\": str} // e.g., \"API request failed: <reason>\" Raises: ValueError: If check_in_date or check_out_date is not in YYYY-MM-DD format, or if children_ages length does not match children count.",
          "parameters": []
        },
        {
          "name": "search_events",
          "description": "Search for current events in a specified location using the SerpApi Google Events API. This tool retrieves a list of events based on the provided search query and optional filters. The query should include the location (e.g., \"Events in Austin, TX\"). Use the `filters` parameter to narrow down results by date or event type (e.g., [\"date:today\"] for today's events). Args: query (str): The search query, including the location (e.g., \"Events in Austin, TX\"). Required. location (str, optional): The city or region to originate the search from (e.g., \"Austin, TX\"). If omitted, the location in the query is used. gl (str, optional): Country code for localization (e.g., \"us\" for United States, \"uk\" for United Kingdom). See Google countries: https://serpapi.com/google-countries hl (str, optional): Language code for results (e.g., \"en\" for English, \"fr\" for French). See Google languages: https://serpapi.com/google-languages start (int, optional): Result offset for pagination (e.g., 0 for first page, 10 for second page). filters (List[str], optional): Filters for events. Options: - \"date:today\" - Today's events - \"date:tomorrow\" - Tomorrow's events - \"date:week\" - This week's events - \"date:weekend\" - This weekend's events - \"date:next_week\" - Next week's events - \"date:month\" - This month's events - \"date:next_month\" - Next month's events - \"event_type:Virtual-Event\" - Online events Multiple filters can be combined (e.g., [\"date:today\", \"event_type:Virtual-Event\"]). Returns: A JSON object with the following structure: \"search_metadata\": { \"status\": str, // e.g., \"Success\" \"created_at\": str // e.g., \"2025-06-26 19:52:23 UTC\" \"search_parameters\": { \"q\": str, // e.g., \"Events in Austin, TX\" \"engine\": str // e.g., \"google_events\" \"events_results\": [ \"title\": str, // e.g., \"Austin City Limits Music Festival\" \"date\": { \"start_date\": str, // e.g., \"Oct 1\" \"when\": str // e.g., \"Oct 1 – 10\" \"address\": [str], // e.g., [\"Zilker Park, 2207 Lou Neff Rd\", \"Austin, TX\"] \"link\": str, // e.g., \"https://www.austintexas.org/event/...\" \"description\": str, // Brief event description \"ticket_info\": [ \"source\": str, // e.g., \"Mileycyrus.com\" \"link\": str, // e.g., \"https://mileycyrus.com/events/...\" \"link_type\": str // e.g., \"tickets\" or \"more info\" \"venue\": { \"name\": str, // e.g., \"Zilker Park\" \"rating\": float, // e.g., 4.8 \"reviews\": int, // e.g., 837 \"link\": str // e.g., \"https://www.google.com/search?q=Zilker+Park...\" \"thumbnail\": str // e.g., \"https://encrypted-tbn0.gstatic.com/...\" If the request fails, returns: {\"error\": str} // e.g., \"API request failed: <reason>\"",
          "parameters": []
        },
        {
          "name": "search_places",
          "description": "Search for top sights or places (e.g., attractions, restaurants) using the SerpApi Google Top Sights API. This tool retrieves a list of top sights or places based on the provided search query, such as \"top sights in Paris\" or \"best restaurants in Paris\". The response includes categories (e.g., \"Local favorites\"), sights with details like title, description, rating, reviews, and thumbnail, and a link to view more results. Args: query (str): The search query, including the type of place and location (e.g., \"top sights in Paris\" or \"best restaurants in Paris\"). Required. gl (str, optional): Country code for localization (e.g., \"us\" for United States, \"fr\" for France). See Google countries: https://serpapi.com/google-countries hl (str, optional): Language code for results (e.g., \"en\" for English, \"fr\" for French). See Google languages: https://serpapi.com/google-languages Returns: A JSON object with the following structure: \"search_metadata\": { \"status\": str, // e.g., \"Success\" \"created_at\": str // e.g., \"2025-06-26 19:52:23 UTC\" \"search_parameters\": { \"q\": str, // e.g., \"top sights in Paris\" \"engine\": str // e.g., \"google\" \"top_sights\": { \"categories\": [ \"title\": str, // e.g., \"Local favorites\" \"link\": str // e.g., \"https://www.google.com/travel/things-to-do/...\" \"sights\": [ \"title\": str, // e.g., \"Eiffel Tower\" \"link\": str, // e.g., \"https://www.google.com/travel/things-to-do/...\" \"description\": str, // e.g., \"Landmark 324m-high 19th-century tower\" \"rating\": float, // e.g., 4.6 \"reviews\": int, // e.g., 273384 \"thumbnail\": str // e.g., \"https://serpapi.com/searches/...\" \"show_more_link\": str // e.g., \"https://www.google.com/travel/things-to-do/...\" If the request fails or no top sights are found, returns: {\"error\": str} // e.g., \"No top sights found\"",
          "parameters": []
        },
        {
          "name": "get_latest_currency_rates",
          "description": "Getting the latest currency rates in the world Args: base: str, the base currency to get the rates for. Example: \"USD\" Returns: json: { \"date\": \"2023-03-21 12:43:00+00\", \"base\": \"USD\", \"rates\": { \"AGLD\": \"2.3263929277654998\", \"FJD\": \"2.21592\", \"MXN\": \"18.670707655673546\", \"LVL\": \"0.651918\", \"SCR\": \"13.21713243157135\", \"CDF\": \"2068.490771\", \"BBD\": \"2.0\", \"HNL\": \"24.57644632001569\",",
          "parameters": []
        },
        {
          "name": "current_date",
          "description": "Retrieve the current date and time and year. This tool provides the current date and time to ensure accurate time-sensitive queries. Returns: A JSON object with the following structure: \"date\": str, // e.g., \"2025-06-26\" \"time\": str, // e.g., \"23:48:00\" \"timezone\": str // e.g., \"EDT\"",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@alan5543/travel-agent-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "serpapiKey",
          "required": true,
          "description": "Your SerpApi API key"
        },
        {
          "name": "currencyFreaksApiKey",
          "required": true,
          "description": "Your CurrencyFreaks API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@alan5543/travel-agent-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1358.@alan5543_travel-agent-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1279
  }
}