{
  "labels": {
    "analysis": "The MCP Server for Laravel documentation is primarily focused on providing tools to access, search, and manage Laravel documentation and related resources. It supports dynamic updates from official sources, package discovery, service documentation, and detailed content retrieval. The tools enable developers to efficiently navigate Laravel's extensive documentation ecosystem, including core framework documentation, external services, and third-party package information.",
    "reasoning": "The primary function of this server is tightly coupled with documentation and resource management specifically for Laravel, making \"Development Tools\" the most appropriate primary label as it directly supports developer workflows. Secondary labels are chosen for the package management and search capabilities, which are critical aspects of Laravel development. The custom label \"Laravel Ecosystem Navigator\" captures the server's unique focus on the Laravel-specific tools and documentation structure.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Browser Automation",
      "API Integration"
    ],
    "custom_label": "Laravel Ecosystem Navigator",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 359,
    "server_name": "Laravel MCP Companion",
    "rank_by_usage": 360,
    "usage_count": "81",
    "original_file": "../crawler/smithery/@brianirish_laravel-mcp-companion.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@brianirish/laravel-mcp-companion/mcp?config=eyJ2ZXJzaW9uIjogIjEyLngiLCAiY29yZU9ubHkiOiBmYWxzZSwgImRvY3NQYXRoIjogIi4vZG9jcyIsICJsb2dMZXZlbCI6ICJJTkZPIiwgInNlcnZlck5hbWUiOiAiTGFyYXZlbE1DUENvbXBhbmlvbiIsICJ1cGRhdGVEb2NzIjogZmFsc2UsICJmb3JjZVVwZGF0ZSI6IGZhbHNlLCAiZXh0ZXJuYWxPbmx5IjogZmFsc2V9&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "list_laravel_docs",
          "description": "Lists all available Laravel documentation files across versions. Essential for discovering what documentation exists before diving into specific topics.\n\nWhen to use:\n- Initial exploration of Laravel documentation\n- Finding available documentation files\n- Checking which versions have specific documentation\n- Getting an overview of documentation coverage",
          "input_schema": {
            "properties": {
              "version": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Version"
              }
            },
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_laravel_docs",
          "description": "Searches for specific terms across all Laravel documentation files. Returns file names and match counts.\n\nWhen to use:\n- Finding which files mention a specific feature\n- Quick lookup of where topics are discussed\n- Discovering related documentation files",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "version": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Version"
              },
              "include_external": {
                "default": true,
                "title": "Include External",
                "type": "boolean"
              }
            },
            "required": [
              "query"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "update_laravel_docs",
          "description": "Updates documentation from the official Laravel GitHub repository. Ensures access to the latest documentation changes.\n\nWhen to use:\n- Working with newly released Laravel versions\n- Ensuring documentation is current\n- Resolving missing documentation issues\n- Syncing after Laravel updates",
          "input_schema": {
            "properties": {
              "version": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Version"
              },
              "force": {
                "default": false,
                "title": "Force",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "laravel_docs_info",
          "description": "Provides metadata about documentation versions, including last update times and commit information.\n\nWhen to use:\n- Checking documentation freshness\n- Verifying version compatibility\n- Understanding documentation state\n- Troubleshooting sync issues",
          "input_schema": {
            "properties": {
              "version": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Version"
              }
            },
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_laravel_package_recommendations",
          "description": "Intelligently recommends Laravel packages based on described use cases or implementation needs.\n\nWhen to use:\n- Starting new feature implementation\n- Finding packages for specific functionality\n- Discovering ecosystem solutions\n- Comparing implementation approaches",
          "input_schema": {
            "properties": {
              "use_case": {
                "title": "Use Case",
                "type": "string"
              }
            },
            "required": [
              "use_case"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_laravel_package_info",
          "description": "Provides comprehensive details about a specific Laravel package including installation and use cases.\n\nWhen to use:\n- Learning about a specific package\n- Getting installation instructions\n- Understanding package capabilities\n- Checking package categories",
          "input_schema": {
            "properties": {
              "package_name": {
                "title": "Package Name",
                "type": "string"
              }
            },
            "required": [
              "package_name"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_laravel_package_categories",
          "description": "Lists all packages within a specific functional category.\n\nWhen to use:\n- Exploring packages by domain\n- Comparing similar packages\n- Finding category-specific solutions\n- Discovering package alternatives",
          "input_schema": {
            "properties": {
              "category": {
                "title": "Category",
                "type": "string"
              }
            },
            "required": [
              "category"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_features_for_laravel_package",
          "description": "Details common implementation features and patterns for a specific package.\n\nWhen to use:\n- Planning package implementation\n- Understanding feature scope\n- Learning implementation patterns\n- Discovering package capabilities",
          "input_schema": {
            "properties": {
              "package": {
                "title": "Package",
                "type": "string"
              }
            },
            "required": [
              "package"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "read_laravel_doc_content",
          "description": "Read the full content of a specific Laravel documentation file",
          "input_schema": {
            "properties": {
              "filename": {
                "title": "Filename",
                "type": "string"
              },
              "version": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Version"
              }
            },
            "required": [
              "filename"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_laravel_docs_with_context",
          "description": "Search Laravel docs with context snippets",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "version": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Version"
              },
              "context_length": {
                "default": 200,
                "title": "Context Length",
                "type": "integer"
              },
              "include_external": {
                "default": true,
                "title": "Include External",
                "type": "boolean"
              }
            },
            "required": [
              "query"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_doc_structure",
          "description": "Get the structure and sections of a documentation file",
          "input_schema": {
            "properties": {
              "filename": {
                "title": "Filename",
                "type": "string"
              },
              "version": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Version"
              }
            },
            "required": [
              "filename"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "browse_docs_by_category",
          "description": "Browse Laravel documentation by category",
          "input_schema": {
            "properties": {
              "category": {
                "title": "Category",
                "type": "string"
              },
              "version": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Version"
              }
            },
            "required": [
              "category"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "update_external_laravel_docs",
          "description": "Updates documentation for external Laravel services like Forge, Vapor, Envoyer, and Nova.\n\nWhen to use:\n- Fetching latest Laravel service documentation\n- Accessing official Laravel service guides\n- Getting documentation for Laravel hosting/deployment services\n- Updating cached external documentation",
          "input_schema": {
            "properties": {
              "services": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Services"
              },
              "force": {
                "default": false,
                "title": "Force",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "list_laravel_services",
          "description": "Lists all available Laravel services with external documentation support.\n\nWhen to use:\n- Discovering available Laravel services\n- Finding external documentation sources\n- Understanding Laravel ecosystem services\n- Checking service documentation availability",
          "input_schema": {
            "properties": {},
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_external_laravel_docs",
          "description": "Searches through external Laravel service documentation.\n\nWhen to use:\n- Finding specific information in service docs\n- Searching across multiple Laravel services\n- Looking for deployment or hosting guidance\n- Finding service-specific features",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "services": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Services"
              }
            },
            "required": [
              "query"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_laravel_service_info",
          "description": "Provides detailed information about a specific Laravel service.\n\nWhen to use:\n- Learning about a specific Laravel service\n- Getting service documentation overview\n- Understanding service capabilities\n- Checking service documentation status",
          "input_schema": {
            "properties": {
              "service": {
                "title": "Service",
                "type": "string"
              }
            },
            "required": [
              "service"
            ],
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 16,
      "tool_names": [
        "list_laravel_docs",
        "search_laravel_docs",
        "update_laravel_docs",
        "laravel_docs_info",
        "get_laravel_package_recommendations",
        "get_laravel_package_info",
        "get_laravel_package_categories",
        "get_features_for_laravel_package",
        "read_laravel_doc_content",
        "search_laravel_docs_with_context",
        "get_doc_structure",
        "browse_docs_by_category",
        "update_external_laravel_docs",
        "list_laravel_services",
        "search_external_laravel_docs",
        "get_laravel_service_info"
      ]
    },
    "server_info_crawled": {
      "id": 359,
      "name": "Laravel MCP Companion",
      "author": "@brianirish/laravel-mcp-companion",
      "overview": "Provide AI assistants and language models with seamless access to Laravel documentation. Enable searching, reading, and updating Laravel docs dynamically to enhance AI-driven development support. Support multiple Laravel versions and automatic documentation updates from GitHub.",
      "repository_url": "https://github.com/brianirish/laravel-mcp-companion",
      "homepage": "https://smithery.ai/server/@brianirish/laravel-mcp-companion",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "81",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@brianirish_laravel-mcp-companion.json",
      "tools_count": 16,
      "tools": [
        {
          "name": "list_laravel_docs",
          "description": "Lists all available Laravel documentation files across versions. Essential for discovering what documentation exists before diving into specific topics.\n\nWhen to use:\n- Initial exploration of Laravel documentation\n- Finding available documentation files\n- Checking which versions have specific documentation\n- Getting an overview of documentation coverage",
          "input_schema": {
            "properties": {
              "version": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Version"
              }
            },
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_laravel_docs",
          "description": "Searches for specific terms across all Laravel documentation files. Returns file names and match counts.\n\nWhen to use:\n- Finding which files mention a specific feature\n- Quick lookup of where topics are discussed\n- Discovering related documentation files",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "version": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Version"
              },
              "include_external": {
                "default": true,
                "title": "Include External",
                "type": "boolean"
              }
            },
            "required": [
              "query"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "update_laravel_docs",
          "description": "Updates documentation from the official Laravel GitHub repository. Ensures access to the latest documentation changes.\n\nWhen to use:\n- Working with newly released Laravel versions\n- Ensuring documentation is current\n- Resolving missing documentation issues\n- Syncing after Laravel updates",
          "input_schema": {
            "properties": {
              "version": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Version"
              },
              "force": {
                "default": false,
                "title": "Force",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "laravel_docs_info",
          "description": "Provides metadata about documentation versions, including last update times and commit information.\n\nWhen to use:\n- Checking documentation freshness\n- Verifying version compatibility\n- Understanding documentation state\n- Troubleshooting sync issues",
          "input_schema": {
            "properties": {
              "version": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Version"
              }
            },
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_laravel_package_recommendations",
          "description": "Intelligently recommends Laravel packages based on described use cases or implementation needs.\n\nWhen to use:\n- Starting new feature implementation\n- Finding packages for specific functionality\n- Discovering ecosystem solutions\n- Comparing implementation approaches",
          "input_schema": {
            "properties": {
              "use_case": {
                "title": "Use Case",
                "type": "string"
              }
            },
            "required": [
              "use_case"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_laravel_package_info",
          "description": "Provides comprehensive details about a specific Laravel package including installation and use cases.\n\nWhen to use:\n- Learning about a specific package\n- Getting installation instructions\n- Understanding package capabilities\n- Checking package categories",
          "input_schema": {
            "properties": {
              "package_name": {
                "title": "Package Name",
                "type": "string"
              }
            },
            "required": [
              "package_name"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_laravel_package_categories",
          "description": "Lists all packages within a specific functional category.\n\nWhen to use:\n- Exploring packages by domain\n- Comparing similar packages\n- Finding category-specific solutions\n- Discovering package alternatives",
          "input_schema": {
            "properties": {
              "category": {
                "title": "Category",
                "type": "string"
              }
            },
            "required": [
              "category"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_features_for_laravel_package",
          "description": "Details common implementation features and patterns for a specific package.\n\nWhen to use:\n- Planning package implementation\n- Understanding feature scope\n- Learning implementation patterns\n- Discovering package capabilities",
          "input_schema": {
            "properties": {
              "package": {
                "title": "Package",
                "type": "string"
              }
            },
            "required": [
              "package"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "read_laravel_doc_content",
          "description": "Read the full content of a specific Laravel documentation file",
          "input_schema": {
            "properties": {
              "filename": {
                "title": "Filename",
                "type": "string"
              },
              "version": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Version"
              }
            },
            "required": [
              "filename"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_laravel_docs_with_context",
          "description": "Search Laravel docs with context snippets",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "version": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Version"
              },
              "context_length": {
                "default": 200,
                "title": "Context Length",
                "type": "integer"
              },
              "include_external": {
                "default": true,
                "title": "Include External",
                "type": "boolean"
              }
            },
            "required": [
              "query"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_doc_structure",
          "description": "Get the structure and sections of a documentation file",
          "input_schema": {
            "properties": {
              "filename": {
                "title": "Filename",
                "type": "string"
              },
              "version": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Version"
              }
            },
            "required": [
              "filename"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "browse_docs_by_category",
          "description": "Browse Laravel documentation by category",
          "input_schema": {
            "properties": {
              "category": {
                "title": "Category",
                "type": "string"
              },
              "version": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Version"
              }
            },
            "required": [
              "category"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "update_external_laravel_docs",
          "description": "Updates documentation for external Laravel services like Forge, Vapor, Envoyer, and Nova.\n\nWhen to use:\n- Fetching latest Laravel service documentation\n- Accessing official Laravel service guides\n- Getting documentation for Laravel hosting/deployment services\n- Updating cached external documentation",
          "input_schema": {
            "properties": {
              "services": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Services"
              },
              "force": {
                "default": false,
                "title": "Force",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "list_laravel_services",
          "description": "Lists all available Laravel services with external documentation support.\n\nWhen to use:\n- Discovering available Laravel services\n- Finding external documentation sources\n- Understanding Laravel ecosystem services\n- Checking service documentation availability",
          "input_schema": {
            "properties": {},
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_external_laravel_docs",
          "description": "Searches through external Laravel service documentation.\n\nWhen to use:\n- Finding specific information in service docs\n- Searching across multiple Laravel services\n- Looking for deployment or hosting guidance\n- Finding service-specific features",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "services": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Services"
              }
            },
            "required": [
              "query"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_laravel_service_info",
          "description": "Provides detailed information about a specific Laravel service.\n\nWhen to use:\n- Learning about a specific Laravel service\n- Getting service documentation overview\n- Understanding service capabilities\n- Checking service documentation status",
          "input_schema": {
            "properties": {
              "service": {
                "title": "Service",
                "type": "string"
              }
            },
            "required": [
              "service"
            ],
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"version\": \"12.x\",\n  \"coreOnly\": false,\n  \"docsPath\": \"./docs\",\n  \"logLevel\": \"INFO\",\n  \"serverName\": \"LaravelMCPCompanion\",\n  \"updateDocs\": false,\n  \"forceUpdate\": false,\n  \"externalOnly\": false\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@brianirish/laravel-mcp-companion/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"version\": \"12.x\",\n  \"coreOnly\": false,\n  \"docsPath\": \"./docs\",\n  \"logLevel\": \"INFO\",\n  \"serverName\": \"LaravelMCPCompanion\",\n  \"updateDocs\": false,\n  \"forceUpdate\": false,\n  \"externalOnly\": false\n}",
      "python_sdk_url": "https://server.smithery.ai/@brianirish/laravel-mcp-companion/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "0360.@brianirish_laravel-mcp-companion_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 356
  }
}