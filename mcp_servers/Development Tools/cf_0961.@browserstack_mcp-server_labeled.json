{
  "labels": {
    "analysis": "The MCP Server is focused on enabling software testing through BrowserStack's cloud infrastructure, offering tools for both manual and automated testing of websites and mobile applications. It provides capabilities for running tests, debugging issues (crashes, performance, layout), checking accessibility compliance, managing test projects, and analyzing failures. The core functionality revolves around cross-browser and cross-device testing without local hardware requirements.",
    "reasoning": "The primary label \"Quality Assurance & Testing\" was chosen because the server's main purpose is to facilitate software testing (automated and manual) across various devices and browsers. The secondary labels \"Browser Automation\" and \"Development Tools\" were selected because the server enables automated testing (web scraping-like functionalities) and integrates into the development workflow. No custom label is needed as the predefined categories cover the server's functionality well.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Browser Automation",
      "Development Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 960,
    "server_name": "BrowserStack Test Platform Server",
    "rank_by_usage": 961,
    "usage_count": "3",
    "original_file": "../crawler/smithery/@browserstack_mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@browserstack/mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 960,
      "name": "BrowserStack Test Platform Server",
      "author": "@browserstack/mcp-server",
      "overview": "Enable developers and testers to run manual and automated tests on real devices and browsers using BrowserStack's cloud infrastructure directly from AI tools. Test mobile apps, websites, and automated test suites with access to a wide range of devices, OS versions, and browsers without needing local installations or emulators. Debug crashes, fix test failures, and ensure accessibility compliance seamlessly within your development workflow.",
      "repository_url": "https://github.com/browserstack/mcp-server",
      "homepage": "https://smithery.ai/server/@browserstack/mcp-server",
      "remote_or_local": "Remote",
      "license": "AGPL-3.0",
      "usage_count": "3",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@browserstack_mcp-server.json",
      "tools_count": 8,
      "tools": [
        {
          "name": "runTestsOnBrowserStack",
          "description": "Deploy Server BrowserStack Test Platform Server Claim Server @browserstack/mcp-server Try in Playground runTestsOnBrowserStack",
          "parameters": [
            {
              "name": "runTestsOnBrowserStack",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "runAppLiveSession",
          "description": "Use this tool when user wants to manually check their app on a particular mobile device using BrowserStack's cloud infrastructure. Can be used to debug crashes, slow performance, etc.",
          "parameters": [
            {
              "name": "runAppLiveSession",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "runBrowserLiveSession",
          "description": "Use this tool when user wants to manually check their website on a particular browser and OS combination using BrowserStack's cloud infrastructure. Can be used to debug layout issues, compatibility problems, etc.",
          "parameters": [
            {
              "name": "desiredOS",
              "required": true,
              "type": "string"
            },
            {
              "name": "desiredURL",
              "required": true,
              "type": "string"
            },
            {
              "name": "desiredBrowser",
              "required": true,
              "type": "string"
            },
            {
              "name": "desiredOSVersion",
              "required": true,
              "type": "string"
            },
            {
              "name": "desiredBrowserVersion",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getFailuresInLastRun",
          "description": "Use this tool to debug failures in the last run of the test suite on BrowserStack. Use only when browserstack.yml file is present in the project root.",
          "parameters": [
            {
              "name": "getFailuresInLastRun",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "startAccessibilityScan",
          "description": "Use this tool to start an accessibility scan for a list of URLs on BrowserStack.",
          "parameters": [
            {
              "name": "startAccessibilityScan",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getNetworkFailures",
          "description": "Use this tool to fetch failed network requests from a BrowserStack Automate session.",
          "parameters": [
            {
              "name": "getNetworkFailures",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "createProjectOrFolder",
          "description": "Create a project and/or folder in BrowserStack Test Management.",
          "parameters": [
            {
              "name": "createProjectOrFolder",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "createTestCase",
          "description": "Use this tool to create a test case in BrowserStack Test Management.",
          "parameters": [
            {
              "name": "createTestCase",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@browserstack/mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "browserstackAccessKey",
          "required": true,
          "description": "BrowserStack access key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@browserstack/mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0961.@browserstack_mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 939
  }
}