{
  "labels": {
    "analysis": "The MCP Server \"Sentient Brain Multi-Agent System\" focuses on AI-driven software development workflows. Its core functionality revolves around managing complex code projects through a multi-agent architecture, with capabilities like code analysis, semantic search across a knowledge graph, debugging, and project architecture. The available tools are specialized for intelligent code development, suggesting advanced automation and AI integration in the software development lifecycle.",
    "reasoning": "The primary label \"Development Tools\" is chosen because the server's primary purpose is to assist with software development tasks like architectural planning, code analysis, and debugging. The secondary labels \"AI/ML Tools\" and \"Memory Management\" are included because the server leverages AI/ML agents and a unified knowledge graph for intelligent operations. There is no need for a custom label as the predefined categories adequately cover the functionality.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "AI/ML Tools",
      "Memory Management"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1398,
    "server_name": "Sentient Brain Multi-Agent System",
    "rank_by_usage": 1399,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@mbpfws_sentient-brain-smithery.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@mbpfws/sentient-brain-smithery/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1398,
      "name": "Sentient Brain Multi-Agent System",
      "author": "@mbpfws/sentient-brain-smithery",
      "overview": "Coordinate and manage complex AI-driven software development workflows using a multi-agent architecture. Analyze, design, debug, and improve code projects with intelligent agents leveraging a unified knowledge graph and semantic search. Seamlessly deploy on Smithery.ai platform for scalable and efficient AI code development.",
      "repository_url": "https://github.com/mbpfws/sentient-brain-smithery",
      "homepage": "https://smithery.ai/server/@mbpfws/sentient-brain-smithery",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@mbpfws_sentient-brain-smithery.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "sentient-brain/orchestrate",
          "description": "Deploy Server Sentient Brain Multi-Agent System @mbpfws/sentient-brain-smithery Try in Playground sentient-brain/orchestrate",
          "parameters": []
        },
        {
          "name": "sentient-brain/architect",
          "description": "Architect Agent - Design and plan software projects",
          "parameters": []
        },
        {
          "name": "sentient-brain/analyze-code",
          "description": "Code Analysis - Deep code understanding and indexing",
          "parameters": []
        },
        {
          "name": "sentient-brain/search-knowledge",
          "description": "Knowledge Graph Search - Semantic search across project knowledge",
          "parameters": []
        },
        {
          "name": "sentient-brain/debug-assist",
          "description": "Debug & Refactor Agent - Code debugging and improvement",
          "parameters": [
            {
              "name": "code",
              "required": true,
              "type": "string"
            },
            {
              "name": "debug_type",
              "required": false,
              "type": "string"
            },
            {
              "name": "error_message",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@mbpfws/sentient-brain-smithery/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "GROQ_API_KEY",
          "required": true,
          "description": "Groq API key for LLM inference"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@mbpfws/sentient-brain-smithery/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1399.@mbpfws_sentient-brain-smithery_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1309
  }
}