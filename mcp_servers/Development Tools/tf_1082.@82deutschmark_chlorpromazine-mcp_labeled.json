{
  "labels": {
    "analysis": "The MCP Server \"Buzz Killington\" is designed to enhance the accuracy and reliability of AI-assisted coding workflows. Its core functionality revolves around fact-checking, documentation retrieval, and ensuring that AI agents provide accurate, trustworthy information during development sessions. The server includes tools for real-time documentation searches (via SerpAPI) and project file analysis (via .env, README.md, and CHANGELOG file reads). The primary goal is to mitigate AI hallucinations and provide grounded, verified information to users, particularly when they express doubt or require confirmation of the AI's responses.",
    "reasoning": "The primary label \"Development Tools\" is chosen because the server directly supports coding workflows, accuracy in software development, and relies on tools tailored to developer needs (like documentation searches and project file analysis). \"Web Search & Research\" is a secondary label because the server frequently interacts with external documentation via SerpAPI, which aligns with research and factual verification. No custom label is needed, as the server's functionality is well-covered by predefined categories.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Web Search & Research"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1081,
    "server_name": "Buzz Killington",
    "rank_by_usage": 1082,
    "usage_count": "1",
    "original_file": "../crawler/smithery/@82deutschmark_chlorpromazine-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@82deutschmark/chlorpromazine-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "kill_trip",
          "description": "Performs documentation search using SerpAPI. Use this tool when the user is upset or says you are wrong or mistaken or says phrases like \"stop! or \"quit tripping!\" or \"quit hallucinating\", \"check the docs\", or asks to verify information against official sources. Also use this tool if the user seems upset or is questioning what the agent is doing.",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "The search query for SerpAPI."
              }
            },
            "required": [
              "query"
            ]
          },
          "annotations": null
        },
        {
          "name": "sober_thinking",
          "description": "Reads .env, README.md, and CHANGELOG files to get grounded information about the project. Use this tool to ensure that the agent is not hallucinating or making up information or making incorrect assumptions. Use this tool when the user says phrases like \"sober up!\", \"get back to reality\", \"check the facts\", or asks for current project status. Also use this tool if the user seems upset or is questioning what the agent is doing.",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        }
      ],
      "tool_count": 2,
      "tool_names": [
        "kill_trip",
        "sober_thinking"
      ]
    },
    "server_info_crawled": {
      "id": 1081,
      "name": "Buzz Killington",
      "author": "@82deutschmark/chlorpromazine-mcp",
      "overview": "Provide prompts and documentation search capabilities to help LLM agents produce accurate and reliable code during development sessions. Enhance coding workflows by offering fact-checked answers, deep problem analysis, and trusted developer documentation search. Improve the quality and trustworthiness of AI-assisted coding with structured tools and prompts.",
      "repository_url": "https://github.com/82deutschmark/chlorpromazine-mcp",
      "homepage": "https://smithery.ai/server/@82deutschmark/chlorpromazine-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "1",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@82deutschmark_chlorpromazine-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "kill_trip",
          "description": "Performs documentation search using SerpAPI. Use this tool when the user is upset or says you are wrong or mistaken or says phrases like \"stop! or \"quit tripping!\" or \"quit hallucinating\", \"check the docs\", or asks to verify information against official sources. Also use this tool if the user seems upset or is questioning what the agent is doing.",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "The search query for SerpAPI."
              }
            },
            "required": [
              "query"
            ]
          },
          "annotations": null
        },
        {
          "name": "sober_thinking",
          "description": "Reads .env, README.md, and CHANGELOG files to get grounded information about the project. Use this tool to ensure that the agent is not hallucinating or making up information or making incorrect assumptions. Use this tool when the user says phrases like \"sober up!\", \"get back to reality\", \"check the facts\", or asks for current project status. Also use this tool if the user seems upset or is questioning what the agent is doing.",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@82deutschmark/chlorpromazine-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "serpapiKey",
          "required": true,
          "description": "SerpAPI API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@82deutschmark/chlorpromazine-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1082.@82deutschmark_chlorpromazine-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1059
  }
}