{
  "labels": {
    "analysis": "The MCP Server acts as an AI-powered assistant focused on streamlining coding tasks. It enhances developer productivity by automating code generation and modifications, allowing developers to concentrate on higher-level tasks. The tools listed enable interacting with AI models for coding assistance and model management, indicating a core focus on development workflow optimization.",
    "reasoning": "The primary label \"Development Tools\" was chosen because the server's core functionality revolves around assisting in code development, an area fundamental to software creation and maintenance. The secondary label \"AI/ML Tools\" is included because the server leverages AI models to enhance coding processes. Given that the primary functionality fits well within existing categories, no custom label is necessary.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "AI/ML Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1146,
    "server_name": "Aider MCP Server",
    "rank_by_usage": 1147,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@disler_aider-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@disler/aider-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "Connection timeout (20 seconds)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1146,
      "name": "Aider MCP Server",
      "author": "@disler/aider-mcp-server",
      "overview": "Offload AI coding tasks to Aider, enhancing your development efficiency and flexibility. Automate code generation and modifications, allowing you to focus on higher-level design and review. Experience seamless integration with your coding environment for a more orchestrated workflow.",
      "repository_url": "https://github.com/disler/aider-mcp-server",
      "homepage": "https://smithery.ai/server/@disler/aider-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@disler_aider-mcp-server.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "aider_ai_code",
          "description": "Deploy Server Aider MCP Server Claim Server @disler/aider-mcp-server Try in Playground aider_ai_code",
          "parameters": []
        },
        {
          "name": "list_models",
          "description": "List available models that match the provided substring",
          "parameters": [
            {
              "name": "list_models",
              "required": false,
              "type": "string"
            },
            {
              "name": "substring",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@disler/aider-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@disler/aider-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1147.@disler_aider-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1123
  }
}