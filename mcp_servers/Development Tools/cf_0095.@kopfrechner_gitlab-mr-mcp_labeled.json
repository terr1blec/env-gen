{
  "labels": {
    "analysis": "The MCP Server focuses on integration with GitLab's merge request and issue management system. Its core functionality revolves around interacting with GitLab repositories to manage merge requests and streamline the code review process. The available tools enable users to list, retrieve details, add comments, and modify titles/descriptions of merge requests and issues, effectively supporting the code review workflow.",
    "reasoning": "The primary functionality clearly aligns with development tools since it assists in managing code repositories, merge requests, and issuesâ€”key aspects of software development workflows. Secondary labels are applicable due to the server's ability to interact with APIs (GitLab API) and manage specific types of data (issues and merge requests). No custom label is needed as the predefined categories adequately cover its functionality.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "API Integration",
      "Database Operations"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 94,
    "server_name": "GitLab Merge Request Integration",
    "rank_by_usage": 95,
    "usage_count": "801",
    "original_file": "../crawler/smithery/@kopfrechner_gitlab-mr-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@kopfrechner/gitlab-mr-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 94,
      "name": "GitLab Merge Request Integration",
      "author": "@kopfrechner/gitlab-mr-mcp",
      "overview": "Interact seamlessly with GitLab repositories to manage merge requests and issues. Fetch details, add comments, and streamline your code review process with ease.",
      "repository_url": "https://github.com/kopfrechner/gitlab-mr-mcp",
      "homepage": "https://smithery.ai/server/@kopfrechner/gitlab-mr-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "801",
      "success_rate": "98.94%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@kopfrechner_gitlab-mr-mcp.json",
      "tools_count": 10,
      "tools": [
        {
          "name": "get_projects",
          "description": "Deploy Server GitLab Merge Request Integration @kopfrechner/gitlab-mr-mcp Try in Playground get_projects",
          "parameters": [
            {
              "name": "get_projects",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_open_merge_requests",
          "description": "Lists all open merge requests in the project",
          "parameters": [
            {
              "name": "list_open_merge_requests",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_merge_request_details",
          "description": "Get details about a specific merge request of a project like title, source-branch, target-branch, web_url, ...",
          "parameters": [
            {
              "name": "get_merge_request_details",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_merge_request_comments",
          "description": "Get general and file diff comments of a certain merge request",
          "parameters": [
            {
              "name": "get_merge_request_comments",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_merge_request_comment",
          "description": "Add a general comment to a merge request",
          "parameters": [
            {
              "name": "comment",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "merge_request_iid",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_merge_request_diff_comment",
          "description": "Add a comment of a merge request at a specific line in a file diff",
          "parameters": [
            {
              "name": "add_merge_request_diff_comment",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_merge_request_diff",
          "description": "Get the file diffs of a certain merge request",
          "parameters": [
            {
              "name": "get_merge_request_diff",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_issue_details",
          "description": "Get details of an issue within a certain project",
          "parameters": [
            {
              "name": "get_issue_details",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "set_merge_request_description",
          "description": "Set the description of a merge request",
          "parameters": [
            {
              "name": "set_merge_request_description",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "set_merge_request_title",
          "description": "Set the title of a merge request",
          "parameters": [
            {
              "name": "title",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "merge_request_iid",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@kopfrechner/gitlab-mr-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "gitlabMrMcpToken",
          "required": true,
          "description": "GitLab Access Token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@kopfrechner/gitlab-mr-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0095.@kopfrechner_gitlab-mr-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 92
  }
}