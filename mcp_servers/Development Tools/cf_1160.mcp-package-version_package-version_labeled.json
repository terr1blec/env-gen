{
  "labels": {
    "analysis": "The MCP Server is designed to provide Version Control, C53, systems management utilities that enable users to check and retrieve the latest stable versions of packages and dependencies across multiple programming languages and platforms. Its tools focus on package management for npm, Python, Java, Go, Swift, Docker, and GitHub Actions, as well as model version checks for Amazon Bedrock.",
    "reasoning": "The primary functionality of this server revolves around retrieving and managing package versions and dependency information, which falls under the \"Development Tools\" category. The focus on package management aligns closely with tools used in software development workflows. The inclusion of Bedrock model checks suggests some relationship with AI/ML, but the core functionality is still centered around development environment support.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": "Package Version Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1159,
    "server_name": "Package Version",
    "rank_by_usage": 1160,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/mcp-package-version_package-version.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/mcp-package-version/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1159,
      "name": "Package Version",
      "author": "mcp-package-version",
      "overview": "Provides the latest stable package versions from multiple registries for LLMs.",
      "repository_url": "https://github.com/sammcj/mcp-package-version",
      "homepage": "https://smithery.ai/server/mcp-package-version",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/mcp-package-version_package-version.json",
      "tools_count": 11,
      "tools": [
        {
          "name": "check_npm_versions",
          "description": "Deploy Server Package Version Claim Server mcp-package-version Try in Playground check_npm_versions",
          "parameters": [
            {
              "name": "constraints",
              "required": false,
              "type": "string"
            },
            {
              "name": "dependencies",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "check_python_versions",
          "description": "Check latest stable versions for Python packages",
          "parameters": [
            {
              "name": "requirements",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "check_pyproject_versions",
          "description": "Check latest stable versions for Python packages in pyproject.toml",
          "parameters": [
            {
              "name": "check_pyproject_versions",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "check_maven_versions",
          "description": "Check latest stable versions for Java packages in pom.xml",
          "parameters": [
            {
              "name": "check_maven_versions",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "check_gradle_versions",
          "description": "Check latest stable versions for Java packages in build.gradle",
          "parameters": [
            {
              "name": "dependencies",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "check_go_versions",
          "description": "Check latest stable versions for Go packages in go.mod",
          "parameters": [
            {
              "name": "check_go_versions",
              "required": false,
              "type": "string"
            },
            {
              "name": "dependencies",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "check_bedrock_models",
          "description": "Search, list, and get information about Amazon Bedrock models",
          "parameters": [
            {
              "name": "check_bedrock_models",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_latest_bedrock_model",
          "description": "Get the latest Claude Sonnet model from Amazon Bedrock (best for coding tasks)",
          "parameters": [
            {
              "name": "get_latest_bedrock_model",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "check_docker_tags",
          "description": "Check available tags for Docker container images from Docker Hub, GitHub Container Registry, or custom registries",
          "parameters": [
            {
              "name": "check_docker_tags",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "check_swift_versions",
          "description": "Check latest stable versions for Swift packages in Package.swift",
          "parameters": [
            {
              "name": "check_swift_versions",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "check_github_actions",
          "description": "Check latest versions for GitHub Actions",
          "parameters": [
            {
              "name": "check_github_actions",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/mcp-package-version/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/mcp-package-version/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1160.mcp-package-version_package-version_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1132
  }
}