{
  "labels": {
    "analysis": "The MCP-Atlassian server is designed to interact with Atlassian products, specifically Jira and Confluence. It provides a comprehensive set of tools for querying, creating, updating, and managing issues in Jira, as well as searching and manipulating content in Confluence. The primary focus is on project management, issue tracking, and collaborative documentation, which are core functionalities of both Jira and Confluence.",
    "reasoning": "The primary label is \"Development Tools\" because the server's tools are primarily used for managing software development workflows, issue tracking, and project management, which are common in development environments. The secondary label \"Content Creation\" is selected because of the Confluence-related tools that allow for creation, updating, and management of documentation. \"Project Management\" is a custom label to highlight the server's specific focus on managing Agile boards, sprints, and issues, which are key aspects of project management in software development.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Content Creation"
    ],
    "custom_label": "Project Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 36,
    "server_name": "MCP-Atlassian",
    "rank_by_usage": 37,
    "usage_count": "3,115",
    "original_file": "../crawler/smithery/mcp-atlassian_mcp-atlassian.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/mcp-atlassian/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 36,
      "name": "MCP-Atlassian",
      "author": "mcp-atlassian",
      "overview": "An MCP server for accessing Atlassian products (Confluence and Jira)",
      "repository_url": "https://github.com/sooperset/mcp-atlassian",
      "homepage": "https://smithery.ai/server/mcp-atlassian",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "3,115",
      "success_rate": "99.91%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/mcp-atlassian_mcp-atlassian.json",
      "tools_count": 31,
      "tools": [
        {
          "name": "jira_get_issue",
          "description": "Deploy Server MCP-Atlassian mcp-atlassian Try in Playground jira_get_issue",
          "parameters": [
            {
              "name": "jira_get_issue",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "jira_search",
          "description": "Search Jira issues using JQL (Jira Query Language)",
          "parameters": [
            {
              "name": "jira_search",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "jira_get_project_issues",
          "description": "Get all issues for a specific Jira project",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "start_at",
              "required": false,
              "type": "string"
            },
            {
              "name": "project_key",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "jira_get_epic_issues",
          "description": "Get all issues linked to a specific epic",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "epic_key",
              "required": true,
              "type": "string"
            },
            {
              "name": "start_at",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "jira_get_transitions",
          "description": "Get available status transitions for a Jira issue",
          "parameters": [
            {
              "name": "jira_get_transitions",
              "required": false,
              "type": "string"
            },
            {
              "name": "issue_key",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "jira_get_worklog",
          "description": "Get worklog entries for a Jira issue",
          "parameters": [
            {
              "name": "jira_get_worklog",
              "required": false,
              "type": "string"
            },
            {
              "name": "issue_key",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "jira_download_attachments",
          "description": "Download attachments from a Jira issue",
          "parameters": [
            {
              "name": "issue_key",
              "required": true,
              "type": "string"
            },
            {
              "name": "target_dir",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "jira_get_agile_boards",
          "description": "Get jira agile boards by name, project key, or type",
          "parameters": [
            {
              "name": "jira_get_agile_boards",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "jira_get_board_issues",
          "description": "Get all issues linked to a specific board",
          "parameters": [
            {
              "name": "jira_get_board_issues",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "jira_get_sprints_from_board",
          "description": "Get jira sprints from board by state",
          "parameters": [
            {
              "name": "jira_get_sprints_from_board",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "jira_get_sprint_issues",
          "description": "Get jira issues from sprint",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "fields",
              "required": false,
              "type": "string"
            },
            {
              "name": "start_at",
              "required": false,
              "type": "string"
            },
            {
              "name": "sprint_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "jira_update_sprint",
          "description": "Description not available",
          "parameters": [
            {
              "name": "state",
              "required": false,
              "type": "string"
            },
            {
              "name": "end_date",
              "required": false,
              "type": "string"
            },
            {
              "name": "sprint_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "start_date",
              "required": false,
              "type": "string"
            },
            {
              "name": "sprint_name",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "jira_create_issue",
          "description": "Create a new Jira issue with optional Epic link or parent for subtasks",
          "parameters": [
            {
              "name": "jira_create_issue",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "jira_batch_create_issues",
          "description": "Create multiple Jira issues in a batch",
          "parameters": [
            {
              "name": "jira_batch_create_issues",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "jira_update_issue",
          "description": "Update an existing Jira issue including changing status, adding Epic links, updating fields, etc.",
          "parameters": [
            {
              "name": "jira_update_issue",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "jira_delete_issue",
          "description": "Delete an existing Jira issue",
          "parameters": [
            {
              "name": "jira_delete_issue",
              "required": false,
              "type": "string"
            },
            {
              "name": "issue_key",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "jira_add_comment",
          "description": "Add a comment to a Jira issue",
          "parameters": [
            {
              "name": "comment",
              "required": true,
              "type": "string"
            },
            {
              "name": "issue_key",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "jira_add_worklog",
          "description": "Add a worklog entry to a Jira issue",
          "parameters": [
            {
              "name": "comment",
              "required": false,
              "type": "string"
            },
            {
              "name": "started",
              "required": false,
              "type": "string"
            },
            {
              "name": "issue_key",
              "required": true,
              "type": "string"
            },
            {
              "name": "time_spent",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "jira_link_to_epic",
          "description": "Link an existing issue to an epic",
          "parameters": [
            {
              "name": "epic_key",
              "required": true,
              "type": "string"
            },
            {
              "name": "issue_key",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "jira_create_issue_link",
          "description": "Create a link between two Jira issues",
          "parameters": [
            {
              "name": "jira_create_issue_link",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "jira_remove_issue_link",
          "description": "Remove a link between two Jira issues",
          "parameters": [
            {
              "name": "jira_remove_issue_link",
              "required": false,
              "type": "string"
            },
            {
              "name": "link_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "jira_transition_issue",
          "description": "Transition a Jira issue to a new status",
          "parameters": [
            {
              "name": "jira_transition_issue",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "jira_search_fields",
          "description": "Search Jira fields by keyword with fuzzy match",
          "parameters": [
            {
              "name": "jira_search_fields",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "confluence_search",
          "description": "Search Confluence content using simple terms or CQL",
          "parameters": [
            {
              "name": "confluence_search",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "confluence_get_page",
          "description": "Get content of a specific Confluence page by ID",
          "parameters": [
            {
              "name": "confluence_get_page",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "confluence_get_page_children",
          "description": "Get child pages of a specific Confluence page.",
          "parameters": [
            {
              "name": "confluence_get_page_children",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "confluence_get_page_ancestors",
          "description": "Get ancestor (parent) pages of a specific Confluence page.",
          "parameters": [
            {
              "name": "confluence_get_page_ancestors",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "confluence_get_comments",
          "description": "Get comments for a specific Confluence page",
          "parameters": [
            {
              "name": "confluence_get_comments",
              "required": false,
              "type": "string"
            },
            {
              "name": "page_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "confluence_create_page",
          "description": "Create a new Confluence page",
          "parameters": [
            {
              "name": "title",
              "required": true,
              "type": "string"
            },
            {
              "name": "content",
              "required": true,
              "type": "string"
            },
            {
              "name": "parent_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "space_key",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "confluence_update_page",
          "description": "Update an existing Confluence page.",
          "parameters": [
            {
              "name": "confluence_update_page",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "confluence_delete_page",
          "description": "Delete an existing Confluence page.",
          "parameters": [
            {
              "name": "confluence_delete_page",
              "required": false,
              "type": "string"
            },
            {
              "name": "page_id",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/mcp-atlassian/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/mcp-atlassian/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0037.mcp-atlassian_mcp-atlassian_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 36
  }
}