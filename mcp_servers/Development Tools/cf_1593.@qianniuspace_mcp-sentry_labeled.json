{
  "labels": {
    "analysis": "MCP-Sentry is designed to interact with Sentry.io for error tracking and debugging purposes. It provides tools to retrieve and analyze error reports, stack traces, and other critical issue insights from Sentry projects. The primary use cases include investigating production errors, accessing detailed stacktraces, analyzing error patterns, and monitoring error frequencies and statuses. This streamlines the debugging workflow by centralizing access to Sentry's error management capabilities.",
    "reasoning": "The primary label \"Development Tools\" is chosen because the server's functionality is directly tied to software development debugging and error management. The secondary label \"Database Operations\" is included because it involves querying and retrieving issue data from Sentry, which can be considered a form of database interaction. Additionally, \"API Integration\" is relevant since the server interfaces with Sentry's API to fetch and analyze data. No custom label is necessary as the predefined categories sufficiently cover the server's functionality.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Database Operations",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1592,
    "server_name": "MCP-Sentry",
    "rank_by_usage": 1593,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@qianniuspace_mcp-sentry.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@qianniuspace/mcp-sentry/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1592,
      "name": "MCP-Sentry",
      "author": "@qianniuspace/mcp-sentry",
      "overview": "Retrieve and analyze issues from Sentry.io to enhance your debugging process. Inspect error reports, stack traces, and other critical information seamlessly. Streamline your error management workflow with easy access to detailed issue insights.",
      "repository_url": "https://github.com/qianniuspace/mcp-sentry",
      "homepage": "https://smithery.ai/server/@qianniuspace/mcp-sentry",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@qianniuspace_mcp-sentry.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "get_sentry_issue",
          "description": "Deploy Server @qianniuspace/mcp-sentry Try in Playground get_sentry_issue",
          "parameters": []
        },
        {
          "name": "get_list_issues",
          "description": "Retrieve and analyze Sentry issues by project slug. Use this tool when you need to:\n                - Investigate production errors and crashes\n                - Access detailed stacktraces from Sentry\n                - Analyze error patterns and frequencies\n                - Get information about when issues first/last occurred\n                - Review error counts and status",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@qianniuspace/mcp-sentry/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "authToken",
          "required": true,
          "description": "Your Sentry authentication token."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@qianniuspace/mcp-sentry/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1593.@qianniuspace_mcp-sentry_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1453
  }
}