{
  "labels": {
    "analysis": "The Atlassian Integration Server is designed to streamline workflows by integrating with Atlassian products like Confluence and Jira. It provides tools to search Confluence content and Jira issues, allowing users to access and interact with these systems directly through the MCP interface. This server enhances productivity by eliminating the need to switch between multiple platforms for content and issue management.",
    "reasoning": "The server's primary functionality is centered around integrating with Jira (issue tracking) and Confluence (documentation), which fall under the category of Development Tools since these are primarily used by development teams and project managers. The tools provided also serve a broader purpose in enhancing daily productivity by reducing context-switching. Since the integration focuses on specific Atlassian products rather than general project management, a custom label is appropriate to highlight this niche functionality.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Daily Productivity"
    ],
    "custom_label": "Atlassian Platform Integration",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1990,
    "server_name": "Atlassian Integration Server",
    "rank_by_usage": 1991,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@petrsovadina_mcp-atlassian.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@petrsovadina/mcp-atlassian/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1990,
      "name": "Atlassian Integration Server",
      "author": "@petrsovadina/mcp-atlassian",
      "overview": "Integrate your Atlassian products with ease. Access Confluence content and Jira tickets directly through the MCP interface, streamlining your workflow and enhancing productivity.",
      "repository_url": "https://github.com/petrsovadina/mcp-atlassian",
      "homepage": "https://smithery.ai/server/@petrsovadina/mcp-atlassian",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@petrsovadina_mcp-atlassian.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "confluence_search",
          "description": "Deploy Server Atlassian Integration Server @petrsovadina/mcp-atlassian Try in Playground confluence_search",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "jira_search",
          "description": "Search Jira issues using JQL",
          "parameters": [
            {
              "name": "jql",
              "required": true,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "fields",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@petrsovadina/mcp-atlassian/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "JIRA_API_TOKEN",
          "required": true,
          "description": "API token for Jira."
        },
        {
          "name": "CONFLUENCE_API_TOKEN",
          "required": true,
          "description": "API token for Confluence."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@petrsovadina/mcp-atlassian/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1991.@petrsovadina_mcp-atlassian_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1737
  }
}