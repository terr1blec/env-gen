{
  "labels": {
    "analysis": "The MCP Server provides a comprehensive suite of tools for interacting with the GitHub API, enabling repository management, issue tracking, pull request handling, and code search capabilities. Its core functionality revolves around automating and streamlining GitHub workflows, allowing users to perform file operations, branch management, and advanced searches directly through the server. It serves as a bridge for integrating GitHub capabilities into applications, making it particularly useful for developers and teams working in software development environments.",
    "reasoning": "The primary functionality of the server is centered around GitHub API operations, which aligns closely with repository management and version control. Therefore, the \"Development Tools\" label is the most appropriate primary category, as it encompasses the tools and workflows used in software development. Secondary labels include \"API Integration\" due to the server's role in interacting with the GitHub API, and \"File Management\" for tools related to file operations within repositories. No custom label is needed as the predefined categories sufficiently cover the server's functionality.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "API Integration",
      "File Management"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2063,
    "server_name": "GitHub API MCP Server",
    "rank_by_usage": 2064,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@lowkeyrd_servers.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@lowkeyrd/servers/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2063,
      "name": "GitHub API MCP Server",
      "author": "@lowkeyrd/servers",
      "overview": "Enable seamless file operations, repository management, and advanced search functionalities on GitHub. Automate your workflows with automatic branch creation and comprehensive error handling, all while preserving Git history. Enhance your development experience by integrating GitHub capabilities directly into your applications.",
      "repository_url": "https://github.com/lowkeyrd/servers",
      "homepage": "https://smithery.ai/server/@lowkeyrd/servers",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@lowkeyrd_servers.json",
      "tools_count": 26,
      "tools": [
        {
          "name": "create_or_update_file",
          "description": "Deploy Server GitHub API MCP Server @lowkeyrd/servers Try in Playground create_or_update_file",
          "parameters": [
            {
              "name": "create_or_update_file",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_repositories",
          "description": "Search for GitHub repositories",
          "parameters": [
            {
              "name": "Search",
              "required": false,
              "type": "string"
            },
            {
              "name": "for",
              "required": false,
              "type": "string"
            },
            {
              "name": "GitHub",
              "required": false,
              "type": "string"
            },
            {
              "name": "repositories",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "perPage",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_repository",
          "description": "Create a new GitHub repository in your account",
          "parameters": [
            {
              "name": "create_repository",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_file_contents",
          "description": "Get the contents of a file or directory from a GitHub repository",
          "parameters": [
            {
              "name": "get_file_contents",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "push_files",
          "description": "Push multiple files to a GitHub repository in a single commit",
          "parameters": [
            {
              "name": "files",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "branch",
              "required": true,
              "type": "string"
            },
            {
              "name": "message",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_issue",
          "description": "Create a new issue in a GitHub repository",
          "parameters": [
            {
              "name": "labels",
              "required": false,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "assignees",
              "required": false,
              "type": "string"
            },
            {
              "name": "milestone",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_pull_request",
          "description": "Create a new pull request in a GitHub repository",
          "parameters": [
            {
              "name": "create_pull_request",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "fork_repository",
          "description": "Fork a GitHub repository to your account or specified organization",
          "parameters": [
            {
              "name": "fork_repository",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_branch",
          "description": "Create a new branch in a GitHub repository",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "branch",
              "required": true,
              "type": "string"
            },
            {
              "name": "from_branch",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_commits",
          "description": "Get list of commits of a branch in a GitHub repository",
          "parameters": [
            {
              "name": "list_commits",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_issues",
          "description": "List issues in a GitHub repository with filtering options",
          "parameters": [
            {
              "name": "list_issues",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_issue",
          "description": "Update an existing issue in a GitHub repository",
          "parameters": [
            {
              "name": "update_issue",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_issue_comment",
          "description": "Add a comment to an existing issue",
          "parameters": [
            {
              "name": "body",
              "required": true,
              "type": "string"
            },
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "issue_number",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_code",
          "description": "Search for code across GitHub repositories",
          "parameters": [
            {
              "name": "q",
              "required": true,
              "type": "string"
            },
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "order",
              "required": false,
              "type": "string"
            },
            {
              "name": "per_page",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_issues",
          "description": "Search for issues and pull requests across GitHub repositories",
          "parameters": [
            {
              "name": "search_issues",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_users",
          "description": "Search for users on GitHub",
          "parameters": [
            {
              "name": "q",
              "required": true,
              "type": "string"
            },
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "sort",
              "required": false,
              "type": "string"
            },
            {
              "name": "order",
              "required": false,
              "type": "string"
            },
            {
              "name": "per_page",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_issue",
          "description": "Get details of a specific issue in a GitHub repository.",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "issue_number",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_pull_request",
          "description": "Get details of a specific pull request",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "pull_number",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_pull_requests",
          "description": "List and filter repository pull requests",
          "parameters": [
            {
              "name": "list_pull_requests",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_pull_request_review",
          "description": "Create a review on a pull request",
          "parameters": [
            {
              "name": "create_pull_request_review",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "merge_pull_request",
          "description": "Description not available",
          "parameters": [
            {
              "name": "merge_pull_request",
              "required": false,
              "type": "string"
            },
            {
              "name": "Merge",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "pull",
              "required": false,
              "type": "string"
            },
            {
              "name": "request",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_pull_request_files",
          "description": "Get the list of files changed in a pull request",
          "parameters": [
            {
              "name": "get_pull_request_files",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_pull_request_status",
          "description": "Get the combined status of all status checks for a pull request",
          "parameters": [
            {
              "name": "get_pull_request_status",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_pull_request_branch",
          "description": "Update a pull request branch with the latest changes from the base branch",
          "parameters": [
            {
              "name": "update_pull_request_branch",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_pull_request_comments",
          "description": "Get the review comments on a pull request",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "pull_number",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_pull_request_reviews",
          "description": "Get the reviews on a pull request",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "pull_number",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@lowkeyrd/servers/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "githubPersonalAccessToken",
          "required": true,
          "description": "GitHub Personal Access Token for accessing the GitHub API"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@lowkeyrd/servers/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2064.@lowkeyrd_servers_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1799
  }
}