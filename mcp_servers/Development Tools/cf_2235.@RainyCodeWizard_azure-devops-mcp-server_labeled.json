{
  "labels": {
    "analysis": "The Azure DevOps Integration Server is designed to streamline development workflows by providing tools to interact with Azure DevOps services. It allows users to manage work items, repositories, pipelines, wikis, and pull requests directly from a centralized interface. The server's core functionality revolves around CI/CD, project management, and source control, making it an essential tool for development teams using Azure DevOps.",
    "reasoning": "The primary label is \"Development Tools\" because the server's main purpose is to enhance the development workflow by automating tasks and retrieving data from Azure DevOps, which is a key development environment tool. The secondary labels \"API Integration\" and \"Source Control\" are chosen because the server heavily relies on API interactions with Azure DevOps and includes tools for repository and pull request management. A custom label \"Continuous Integration/Continuous Deployment\" is added to emphasize the server's role in pipeline management and automation.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": "Continuous Integration/Continuous Deployment (CI/CD)",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2234,
    "server_name": "Azure DevOps Integration Server",
    "rank_by_usage": 2235,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@RainyCodeWizard_azure-devops-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@RainyCodeWizard/azure-devops-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2234,
      "name": "Azure DevOps Integration Server",
      "author": "@RainyCodeWizard/azure-devops-mcp-server",
      "overview": "Integrate seamlessly with Azure DevOps to manage work items, repositories, and pipelines. Enhance your Cline experience by automating tasks and retrieving data directly from Azure DevOps services. Streamline your development workflow with powerful tools at your fingertips.",
      "repository_url": "https://github.com/RainyCodeWizard/azure-devops-mcp-server",
      "homepage": "https://smithery.ai/server/@RainyCodeWizard/azure-devops-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@RainyCodeWizard_azure-devops-mcp-server.json",
      "tools_count": 19,
      "tools": [
        {
          "name": "get_work_item",
          "description": "Deploy Server Azure DevOps Integration Server @RainyCodeWizard/azure-devops-mcp-server Try in Playground get_work_item",
          "parameters": [
            {
              "name": "asOf",
              "required": false,
              "type": "string"
            },
            {
              "name": "fields",
              "required": false,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "errorPolicy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_work_items",
          "description": "List work items from a board",
          "parameters": [
            {
              "name": "list_work_items",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_work_item",
          "description": "Create a new work item using JSON patch operations",
          "parameters": [
            {
              "name": "type",
              "required": true,
              "type": "string"
            },
            {
              "name": "document",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_work_item",
          "description": "Update an existing work item using JSON patch operations",
          "parameters": [
            {
              "name": "update_work_item",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_boards",
          "description": "List available boards in the project",
          "parameters": [
            {
              "name": "get_boards",
              "required": false,
              "type": "string"
            },
            {
              "name": "team",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_wikis",
          "description": "List all wikis in the project",
          "parameters": [
            {
              "name": "get_wikis",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_wiki_page",
          "description": "Get a wiki page by path",
          "parameters": [
            {
              "name": "version",
              "required": false,
              "type": "string"
            },
            {
              "name": "includeContent",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "wikiIdentifier",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_wiki",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Create",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "new",
              "required": false,
              "type": "string"
            },
            {
              "name": "wiki",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "projectId",
              "required": false,
              "type": "string"
            },
            {
              "name": "mappedPath",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_wiki_page",
          "description": "Create or update a wiki page",
          "parameters": [
            {
              "name": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "comment",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "required": true,
              "type": "string"
            },
            {
              "name": "wikiIdentifier",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_projects",
          "description": "List all projects in the Azure DevOps organization",
          "parameters": [
            {
              "name": "list_projects",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_pipelines",
          "description": "List all pipelines in the project",
          "parameters": [
            {
              "name": "name",
              "required": false,
              "type": "string"
            },
            {
              "name": "folder",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "trigger_pipeline",
          "description": "Trigger a pipeline run",
          "parameters": [
            {
              "name": "Trigger",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "pipeline",
              "required": false,
              "type": "string"
            },
            {
              "name": "run",
              "required": false,
              "type": "string"
            },
            {
              "name": "branch",
              "required": false,
              "type": "string"
            },
            {
              "name": "variables",
              "required": false,
              "type": "string"
            },
            {
              "name": "pipelineId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_pull_requests",
          "description": "List all pull requests in the project",
          "parameters": [
            {
              "name": "status",
              "required": false,
              "type": "string"
            },
            {
              "name": "creatorId",
              "required": false,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_pull_request",
          "description": "Get a specific pull request by ID",
          "parameters": [
            {
              "name": "get_pull_request",
              "required": false,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_pull_request",
          "description": "Create a new pull request",
          "parameters": [
            {
              "name": "create_pull_request",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_pull_request",
          "description": "Update an existing pull request",
          "parameters": [
            {
              "name": "update_pull_request",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_repositories",
          "description": "List all Git repositories in the project",
          "parameters": [
            {
              "name": "list_repositories",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_file",
          "description": "Get the content of a specific file from the repository",
          "parameters": [
            {
              "name": "get_file",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "compare_branches",
          "description": "Compare two branches and get commit history between them",
          "parameters": [
            {
              "name": "compare_branches",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@RainyCodeWizard/azure-devops-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@RainyCodeWizard/azure-devops-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2235.@RainyCodeWizard_azure-devops-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1926
  }
}