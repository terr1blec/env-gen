{
  "labels": {
    "analysis": "The MCP Server focuses on interacting with and automating iOS Simulators. Its primary functionality includes validating UI elements, controlling user interactions, inspecting screen elements, and capturing visual data (screenshots and videos). The available tools enable automated testing, UI validation, and quality assurance for iOS applications, which are critical for mobile app development and testing workflows.",
    "reasoning": "The primary label \"Development Tools\" was chosen because the server is primarily used for automating testing and UI interactions, which are core tasks in the software development lifecycle. \"Automated Testing\" is added as a custom label to better reflect its specialized use in iOS app testing. \"Content Creation\" is included as a secondary label because capturing screenshots and videos can be used for documentation and presentations.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Content Creation"
    ],
    "custom_label": "Automated Testing",
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 626,
    "server_name": "iOS Simulator",
    "rank_by_usage": 627,
    "usage_count": "15",
    "original_file": "../crawler/smithery/@joshuayoes_ios-simulator-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@joshuayoes/ios-simulator-mcp/mcp?config=eyJmaWx0ZXJlZFRvb2xzIjogW119&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_booted_sim_id",
          "description": "Get the ID of the currently booted iOS simulator",
          "input_schema": {
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "ui_describe_all",
          "description": "Describes accessibility information for the entire screen in the iOS Simulator",
          "input_schema": {
            "type": "object",
            "properties": {
              "udid": {
                "type": "string",
                "description": "Udid of target, can also be set with the IDB_UDID env var"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "ui_tap",
          "description": "Tap on the screen in the iOS Simulator",
          "input_schema": {
            "type": "object",
            "properties": {
              "duration": {
                "type": "string",
                "description": "Press duration"
              },
              "udid": {
                "type": "string",
                "description": "Udid of target, can also be set with the IDB_UDID env var"
              },
              "x": {
                "type": "number",
                "description": "The x-coordinate"
              },
              "y": {
                "type": "number",
                "description": "The x-coordinate"
              }
            },
            "required": [
              "x",
              "y"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "ui_type",
          "description": "Input text into the iOS Simulator",
          "input_schema": {
            "type": "object",
            "properties": {
              "udid": {
                "type": "string",
                "description": "Udid of target, can also be set with the IDB_UDID env var"
              },
              "text": {
                "type": "string",
                "description": "Text to input"
              }
            },
            "required": [
              "text"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "ui_swipe",
          "description": "Swipe on the screen in the iOS Simulator",
          "input_schema": {
            "type": "object",
            "properties": {
              "udid": {
                "type": "string",
                "description": "Udid of target, can also be set with the IDB_UDID env var"
              },
              "x_start": {
                "type": "number",
                "description": "The starting x-coordinate"
              },
              "y_start": {
                "type": "number",
                "description": "The starting y-coordinate"
              },
              "x_end": {
                "type": "number",
                "description": "The ending x-coordinate"
              },
              "y_end": {
                "type": "number",
                "description": "The ending y-coordinate"
              },
              "delta": {
                "type": "number",
                "description": "The size of each step in the swipe (default is 1)",
                "default": 1
              }
            },
            "required": [
              "x_start",
              "y_start",
              "x_end",
              "y_end"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "ui_describe_point",
          "description": "Returns the accessibility element at given co-ordinates on the iOS Simulator's screen",
          "input_schema": {
            "type": "object",
            "properties": {
              "udid": {
                "type": "string",
                "description": "Udid of target, can also be set with the IDB_UDID env var"
              },
              "x": {
                "type": "number",
                "description": "The x-coordinate"
              },
              "y": {
                "type": "number",
                "description": "The y-coordinate"
              }
            },
            "required": [
              "x",
              "y"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "screenshot",
          "description": "Takes a screenshot of the iOS Simulator",
          "input_schema": {
            "type": "object",
            "properties": {
              "udid": {
                "type": "string",
                "description": "Udid of target, can also be set with the IDB_UDID env var"
              },
              "output_path": {
                "type": "string",
                "description": "File path where the screenshot will be saved (if relative, ~/Downloads will be used as base directory)"
              },
              "type": {
                "type": "string",
                "enum": [
                  "png",
                  "tiff",
                  "bmp",
                  "gif",
                  "jpeg"
                ],
                "description": "Image format (png, tiff, bmp, gif, or jpeg). Default is png."
              },
              "display": {
                "type": "string",
                "enum": [
                  "internal",
                  "external"
                ],
                "description": "Display to capture (internal or external). Default depends on device type."
              },
              "mask": {
                "type": "string",
                "enum": [
                  "ignored",
                  "alpha",
                  "black"
                ],
                "description": "For non-rectangular displays, handle the mask by policy (ignored, alpha, or black)"
              }
            },
            "required": [
              "output_path"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "record_video",
          "description": "Records a video of the iOS Simulator using simctl directly",
          "input_schema": {
            "type": "object",
            "properties": {
              "output_path": {
                "type": "string",
                "description": "Optional output path (defaults to ~/Downloads/simulator_recording_$DATE.mp4)"
              },
              "codec": {
                "type": "string",
                "enum": [
                  "h264",
                  "hevc"
                ],
                "description": "Specifies the codec type: \"h264\" or \"hevc\". Default is \"hevc\"."
              },
              "display": {
                "type": "string",
                "enum": [
                  "internal",
                  "external"
                ],
                "description": "Display to capture: \"internal\" or \"external\". Default depends on device type."
              },
              "mask": {
                "type": "string",
                "enum": [
                  "ignored",
                  "alpha",
                  "black"
                ],
                "description": "For non-rectangular displays, handle the mask by policy: \"ignored\", \"alpha\", or \"black\"."
              },
              "force": {
                "type": "boolean",
                "description": "Force the output file to be written to, even if the file already exists."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "stop_recording",
          "description": "Stops the simulator video recording using killall",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 9,
      "tool_names": [
        "get_booted_sim_id",
        "ui_describe_all",
        "ui_tap",
        "ui_type",
        "ui_swipe",
        "ui_describe_point",
        "screenshot",
        "record_video",
        "stop_recording"
      ]
    },
    "server_info_crawled": {
      "id": 626,
      "name": "iOS Simulator",
      "author": "@joshuayoes/ios-simulator-mcp",
      "overview": "Interact with iOS simulators to validate UI elements, control interactions, and inspect screens. Ensure quality assurance in your applications by automating UI tests and capturing screenshots seamlessly.",
      "repository_url": "https://github.com/joshuayoes/ios-simulator-mcp",
      "homepage": "https://smithery.ai/server/@joshuayoes/ios-simulator-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "15",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@joshuayoes_ios-simulator-mcp.json",
      "tools_count": 9,
      "tools": [
        {
          "name": "get_booted_sim_id",
          "description": "Get the ID of the currently booted iOS simulator",
          "input_schema": {
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "ui_describe_all",
          "description": "Describes accessibility information for the entire screen in the iOS Simulator",
          "input_schema": {
            "type": "object",
            "properties": {
              "udid": {
                "type": "string",
                "description": "Udid of target, can also be set with the IDB_UDID env var"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "ui_tap",
          "description": "Tap on the screen in the iOS Simulator",
          "input_schema": {
            "type": "object",
            "properties": {
              "duration": {
                "type": "string",
                "description": "Press duration"
              },
              "udid": {
                "type": "string",
                "description": "Udid of target, can also be set with the IDB_UDID env var"
              },
              "x": {
                "type": "number",
                "description": "The x-coordinate"
              },
              "y": {
                "type": "number",
                "description": "The x-coordinate"
              }
            },
            "required": [
              "x",
              "y"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "ui_type",
          "description": "Input text into the iOS Simulator",
          "input_schema": {
            "type": "object",
            "properties": {
              "udid": {
                "type": "string",
                "description": "Udid of target, can also be set with the IDB_UDID env var"
              },
              "text": {
                "type": "string",
                "description": "Text to input"
              }
            },
            "required": [
              "text"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "ui_swipe",
          "description": "Swipe on the screen in the iOS Simulator",
          "input_schema": {
            "type": "object",
            "properties": {
              "udid": {
                "type": "string",
                "description": "Udid of target, can also be set with the IDB_UDID env var"
              },
              "x_start": {
                "type": "number",
                "description": "The starting x-coordinate"
              },
              "y_start": {
                "type": "number",
                "description": "The starting y-coordinate"
              },
              "x_end": {
                "type": "number",
                "description": "The ending x-coordinate"
              },
              "y_end": {
                "type": "number",
                "description": "The ending y-coordinate"
              },
              "delta": {
                "type": "number",
                "description": "The size of each step in the swipe (default is 1)",
                "default": 1
              }
            },
            "required": [
              "x_start",
              "y_start",
              "x_end",
              "y_end"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "ui_describe_point",
          "description": "Returns the accessibility element at given co-ordinates on the iOS Simulator's screen",
          "input_schema": {
            "type": "object",
            "properties": {
              "udid": {
                "type": "string",
                "description": "Udid of target, can also be set with the IDB_UDID env var"
              },
              "x": {
                "type": "number",
                "description": "The x-coordinate"
              },
              "y": {
                "type": "number",
                "description": "The y-coordinate"
              }
            },
            "required": [
              "x",
              "y"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "screenshot",
          "description": "Takes a screenshot of the iOS Simulator",
          "input_schema": {
            "type": "object",
            "properties": {
              "udid": {
                "type": "string",
                "description": "Udid of target, can also be set with the IDB_UDID env var"
              },
              "output_path": {
                "type": "string",
                "description": "File path where the screenshot will be saved (if relative, ~/Downloads will be used as base directory)"
              },
              "type": {
                "type": "string",
                "enum": [
                  "png",
                  "tiff",
                  "bmp",
                  "gif",
                  "jpeg"
                ],
                "description": "Image format (png, tiff, bmp, gif, or jpeg). Default is png."
              },
              "display": {
                "type": "string",
                "enum": [
                  "internal",
                  "external"
                ],
                "description": "Display to capture (internal or external). Default depends on device type."
              },
              "mask": {
                "type": "string",
                "enum": [
                  "ignored",
                  "alpha",
                  "black"
                ],
                "description": "For non-rectangular displays, handle the mask by policy (ignored, alpha, or black)"
              }
            },
            "required": [
              "output_path"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "record_video",
          "description": "Records a video of the iOS Simulator using simctl directly",
          "input_schema": {
            "type": "object",
            "properties": {
              "output_path": {
                "type": "string",
                "description": "Optional output path (defaults to ~/Downloads/simulator_recording_$DATE.mp4)"
              },
              "codec": {
                "type": "string",
                "enum": [
                  "h264",
                  "hevc"
                ],
                "description": "Specifies the codec type: \"h264\" or \"hevc\". Default is \"hevc\"."
              },
              "display": {
                "type": "string",
                "enum": [
                  "internal",
                  "external"
                ],
                "description": "Display to capture: \"internal\" or \"external\". Default depends on device type."
              },
              "mask": {
                "type": "string",
                "enum": [
                  "ignored",
                  "alpha",
                  "black"
                ],
                "description": "For non-rectangular displays, handle the mask by policy: \"ignored\", \"alpha\", or \"black\"."
              },
              "force": {
                "type": "boolean",
                "description": "Force the output file to be written to, even if the file already exists."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "stop_recording",
          "description": "Stops the simulator video recording using killall",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"filteredTools\": []\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@joshuayoes/ios-simulator-mcp/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"filteredTools\": []\n}",
      "python_sdk_url": "https://server.smithery.ai/@joshuayoes/ios-simulator-mcp/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "0627.@joshuayoes_ios-simulator-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 612
  }
}