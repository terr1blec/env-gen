{
  "labels": {
    "analysis": "The MCP Server is designed to integrate Salesforce CLI commands into AI workflows, allowing users to execute Salesforce-specific operations such as clearing/refreshing caches, detecting/setting project directories, and listing project roots. Its core functionality revolves around managing and interacting with Salesforce projects programmatically, effectively acting as a bridge for Salesforce developers working within AI-powered environments.",
    "reasoning": "The primary label \"Development Tools\" was chosen because the server facilitates code and project management tasks specific to Salesforce development. The secondary label \"File Management\" is relevant due to its directory manipulation capabilities, while \"Database Operations\" is included because Salesforce projects typically involve interacting with data structures.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "File Management",
      "Database Operations"
    ],
    "custom_label": "Salesforce CLI Integration",
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 978,
    "server_name": "Salesforce CLI MCP Server",
    "rank_by_usage": 979,
    "usage_count": "3",
    "original_file": "../crawler/smithery/@codefriar_sf-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@codefriar/sf-mcp/mcp?config=eyJwcm9qZWN0Um9vdHMiOiBbXX0=&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "sf_cache_clear",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "sf_cache_refresh",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "sf_detect_project_directory",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "sf_set_project_directory",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "directory": {
                "type": "string",
                "description": "The absolute path to a directory containing an sfdx-project.json file"
              },
              "name": {
                "type": "string",
                "description": "Optional name for this project root"
              },
              "description": {
                "type": "string",
                "description": "Optional description for this project root"
              },
              "isDefault": {
                "type": "boolean",
                "description": "Set this root as the default for command execution"
              }
            },
            "required": [
              "directory"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "sf_list_roots",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 5,
      "tool_names": [
        "sf_cache_clear",
        "sf_cache_refresh",
        "sf_detect_project_directory",
        "sf_set_project_directory",
        "sf_list_roots"
      ]
    },
    "server_info_crawled": {
      "id": 978,
      "name": "Salesforce CLI MCP Server",
      "author": "@codefriar/sf-mcp",
      "overview": "Leverage Salesforce CLI commands seamlessly in your AI workflows. Execute commands, view help information, and manage Salesforce projects directly from LLM tools. Enhance your productivity by integrating Salesforce capabilities into your applications.",
      "repository_url": "https://github.com/codefriar/sf-mcp",
      "homepage": "https://smithery.ai/server/@codefriar/sf-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "3",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@codefriar_sf-mcp.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "sf_cache_clear",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "sf_cache_refresh",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "sf_detect_project_directory",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "sf_set_project_directory",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "directory": {
                "type": "string",
                "description": "The absolute path to a directory containing an sfdx-project.json file"
              },
              "name": {
                "type": "string",
                "description": "Optional name for this project root"
              },
              "description": {
                "type": "string",
                "description": "Optional description for this project root"
              },
              "isDefault": {
                "type": "boolean",
                "description": "Set this root as the default for command execution"
              }
            },
            "required": [
              "directory"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "sf_list_roots",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"projectRoots\": []\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@codefriar/sf-mcp/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"projectRoots\": []\n}",
      "python_sdk_url": "https://server.smithery.ai/@codefriar/sf-mcp/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "0979.@codefriar_sf-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 957
  }
}