{
  "labels": {
    "analysis": "The MCP Server \"Yellhorn\" is primarily designed to enhance software development workflows by automating tasks related to work planning, code reviews, and issue management. It integrates with GitHub to create detailed work plans, review pull requests, and generate structured feedback based on codebase context. The tools provided focus on automating issue creation, code reviews, and providing implementation plans, making it a specialized tool for software development teams aiming to improve collaboration and efficiency.",
    "reasoning": "The primary label \"Development Tools\" was chosen because the server's core functionality revolves around automating tasks that are critical in the software development lifecycle, such as code reviews, issue management, and work planning. The secondary label \"GitHub Integration\" was selected to highlight the server's specific integration with GitHub, which is central to its operation. The additional label was chosen because it captures the server's unique capability to generate and manage work plans and code reviews, which is not fully covered by the predefined labels.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "API Integration",
      "Browser Automation"
    ],
    "custom_label": "Code Review Automation",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2042,
    "server_name": "Yellhorn",
    "rank_by_usage": 2043,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@msnidal_yellhorn-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@msnidal/yellhorn-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2042,
      "name": "Yellhorn",
      "author": "@msnidal/yellhorn-mcp",
      "overview": "Generate detailed work plans and review pull requests seamlessly with GitHub integration. Enhance your software development tasks by automating issue creation and code reviews based on your codebase context. Streamline your workflow and improve collaboration with detailed feedback and implementation plans.",
      "repository_url": "https://github.com/msnidal/yellhorn-mcp",
      "homepage": "https://smithery.ai/server/@msnidal/yellhorn-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@msnidal_yellhorn-mcp.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "create_workplan",
          "description": "Deploy Server Claim Server @msnidal/yellhorn-mcp Try in Playground create_workplan",
          "parameters": [
            {
              "name": "create_workplan",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_workplan",
          "description": "Retrieves the workplan content (GitHub issue body) associated with a specified issue number.",
          "parameters": [
            {
              "name": "get_workplan",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "curate_context",
          "description": "Analyzes the codebase and creates a .yellhorncontext file listing directories to be included in AI context.",
          "parameters": [
            {
              "name": "ignore_file_path",
              "required": false,
              "type": "string"
            },
            {
              "name": "codebase_reasoning",
              "required": false,
              "type": "string"
            },
            {
              "name": "disable_search_grounding",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "judge_workplan",
          "description": "Triggers an asynchronous code judgement comparing two git refs (branches or commits) against a workplan described in a GitHub issue. Creates a GitHub sub-issue with the judgement asynchronously after running (in the background). Control context with 'codebase_reasoning' ('full', 'lsp', 'file_structure', or 'none'). Respects .yellhorncontext and .yellhornignore for file filtering. Set debug=True to see the full prompt. Any URLs mentioned in the issue will be included as references in the judgement.",
          "parameters": [
            {
              "name": "judge_workplan",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@msnidal/yellhorn-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "geminiApiKey",
          "required": true,
          "description": "Your Gemini API key"
        },
        {
          "name": "openaiApiKey",
          "required": true,
          "description": "Your OpenAI API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@msnidal/yellhorn-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2043.@msnidal_yellhorn-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1780
  }
}