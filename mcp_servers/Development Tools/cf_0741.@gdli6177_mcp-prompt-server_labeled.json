{
  "labels": {
    "analysis": "The MCP Server is primarily designed to assist developers by providing preset prompt templates for various coding-related tasks. Its core functionality includes generating API documentation, refactoring code, conducting code reviews, and creating prompt templates. The server supports dynamic parameter replacement and integrates with code editors like Cursor and Windsurf, optimizing the workflow for developers. The available tools are geared towards software development processes, enhancing productivity and automating repetitive tasks.",
    "reasoning": "The primary label \"Development Tools\" is chosen because the server's primary focus is on assisting developers with coding tasks such as code review, refactoring, and documentation. The secondary labels \"Content Creation\" (for writing-related tasks like prompt templates) and \"API Integration\" (for generating API documentation) complement the server's functionality. The server's integration with development environments and its emphasis on code-related tasks make it a strong fit for the \"Development Tools\" category.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Content Creation",
      "API Integration"
    ],
    "custom_label": "Prompt-Based Development Automation",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 740,
    "server_name": "Prompt Server",
    "rank_by_usage": 741,
    "usage_count": "9",
    "original_file": "../crawler/smithery/@gdli6177_mcp-prompt-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@gdli6177/mcp-prompt-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "Connection timeout (20 seconds)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 740,
      "name": "Prompt Server",
      "author": "@gdli6177/mcp-prompt-server",
      "overview": "Provide preset prompt templates as tools to help users efficiently perform various tasks such as code review, API documentation generation, and code refactoring. Enable dynamic parameter replacement for flexible prompt usage and allow developers to easily add or modify prompt templates. Optimize integration with editors like Cursor and Windsurf for a seamless user experience.",
      "repository_url": "https://github.com/gdli6177/mcp-prompt-server",
      "homepage": "https://smithery.ai/server/@gdli6177/mcp-prompt-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "9",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@gdli6177_mcp-prompt-server.json",
      "tools_count": 10,
      "tools": [
        {
          "name": "api_documentation",
          "description": "Deploy Server Prompt Server Claim Server @gdli6177/mcp-prompt-server Try in Playground api_documentation",
          "parameters": [
            {
              "name": "api_documentation",
              "required": false,
              "type": "string"
            },
            {
              "name": "code",
              "required": true,
              "type": "string"
            },
            {
              "name": "format",
              "required": true,
              "type": "string"
            },
            {
              "name": "language",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "build_mcp_server",
          "description": "Description not available",
          "parameters": [
            {
              "name": "build_mcp_server",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "code_refactoring",
          "description": "Description not available",
          "parameters": [
            {
              "name": "code_refactoring",
              "required": false,
              "type": "string"
            },
            {
              "name": "code",
              "required": true,
              "type": "string"
            },
            {
              "name": "language",
              "required": true,
              "type": "string"
            },
            {
              "name": "focus_areas",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "code_review",
          "description": "Description not available",
          "parameters": [
            {
              "name": "code_review",
              "required": false,
              "type": "string"
            },
            {
              "name": "code",
              "required": true,
              "type": "string"
            },
            {
              "name": "language",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "project_architecture",
          "description": "Description not available",
          "parameters": [
            {
              "name": "project_architecture",
              "required": false,
              "type": "string"
            },
            {
              "name": "features",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_type",
              "required": true,
              "type": "string"
            },
            {
              "name": "technologies",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "prompt_template_generator",
          "description": "Description not available",
          "parameters": [
            {
              "name": "prompt_template_generator",
              "required": false,
              "type": "string"
            },
            {
              "name": "task_type",
              "required": true,
              "type": "string"
            },
            {
              "name": "prompt_name",
              "required": true,
              "type": "string"
            },
            {
              "name": "prompt_description",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "test_case_generator",
          "description": "Description not available",
          "parameters": [
            {
              "name": "test_case_generator",
              "required": false,
              "type": "string"
            },
            {
              "name": "code",
              "required": true,
              "type": "string"
            },
            {
              "name": "language",
              "required": true,
              "type": "string"
            },
            {
              "name": "test_framework",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "writing_assistant",
          "description": "Description not available",
          "parameters": [
            {
              "name": "writing_assistant",
              "required": false,
              "type": "string"
            },
            {
              "name": "draft",
              "required": true,
              "type": "string"
            },
            {
              "name": "platform",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "reload_prompts",
          "description": "Description not available",
          "parameters": [
            {
              "name": "reload_prompts",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_prompt_names",
          "description": "Description not available",
          "parameters": [
            {
              "name": "get_prompt_names",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@gdli6177/mcp-prompt-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@gdli6177/mcp-prompt-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0741.@gdli6177_mcp-prompt-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 723
  }
}