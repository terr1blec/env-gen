{
  "labels": {
    "analysis": "The MCP Server described as \"MasterGo Magic\" appears to be a specialized tool designed for integrating MasterGo design tools with AI models. It retrieves Domain-Specific Language (DSL) data from design files and facilitates frontend code generation based on component documentation data. The server operates independently, with Node.js as the only external dependency, focusing on enhancing AI workflows by providing direct access to design content. The available tools (mcp__getDsl and mcp__getComponentLink) are geared toward data retrieval and processing within design contexts.",
    "reasoning": "The primary label reflects the server's core functionality of extracting and processing design data to aid in generating frontend code. Operation System is chosen as a secondary label because the server can be deployed as a standalone service. Custom Label is used to highlight the specialized nature of the tool, which merges design tools with AI for workflow optimization.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Operating System"
    ],
    "custom_label": "Design Integration with AI",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1331,
    "server_name": "MasterGo Magic",
    "rank_by_usage": 1332,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@eDramas_mastergo-magic-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@eDramas/mastergo-magic-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1331,
      "name": "MasterGo Magic",
      "author": "@eDramas/mastergo-magic-mcp",
      "overview": "Connect MasterGo design tools with AI models to directly retrieve DSL data from design files. Simplify integration by running as a standalone service with no external dependencies beyond Node.js. Enhance AI workflows with seamless access to MasterGo design content.",
      "repository_url": "https://github.com/eDramas/mastergo-magic-mcp",
      "homepage": "https://smithery.ai/server/@eDramas/mastergo-magic-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@eDramas_mastergo-magic-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "mcp__getDsl",
          "description": "Deploy Server MasterGo Magic @eDramas/mastergo-magic-mcp Try in Playground mcp__getDsl",
          "parameters": []
        },
        {
          "name": "mcp__getComponentLink",
          "description": "When the data returned by mcp__getDsl contains a non-empty componentDocumentLinks array, this tool is used to sequentially retrieve URLs from the componentDocumentLinks array and then obtain component documentation data. The returned document data is used for you to generate frontend code based on components.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@eDramas/mastergo-magic-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "token",
          "required": true,
          "description": "The MasterGo API token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@eDramas/mastergo-magic-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1332.@eDramas_mastergo-magic-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1260
  }
}