{
  "labels": {
    "analysis": "The MCP Server is designed to analyze and understand code structures through function call graphs and dependency analysis. It provides tools to initialize, explore, and analyze dependencies in Python repositories, which helps developers gain contextually aware insights into their codebase. The server can generate call graphs for specific functions, analyze module or file dependencies, and assess the impact of changing a function, making it useful for code navigation, debugging, and maintenance.",
    "reasoning": "The primary functionality of the server revolves around code analysis and dependency management, which aligns with \"Development Tools\" as it aids in code understanding and debugging. A secondary label of \"Memory Management\" is appropriate due to the tool's ability to initialize and switch between repositories, functioning as a form of knowledge storage for code analysis. The server's unique focus on function call graphs and dependency analysis justifies a custom label like \"Code Structure Analysis.\"",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Memory Management"
    ],
    "custom_label": "Code Structure Analysis",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1360,
    "server_name": "Nuanced MCP Server",
    "rank_by_usage": 1361,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@MattMorgis_nuanced-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@MattMorgis/nuanced-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "initialize_graph",
          "description": "Initialize a code graph for the given repository path.\n\nArgs:\n    repo_path: Path to the repository to analyze\n\nReturns:\n    Success message with information about the initialized graph\n",
          "input_schema": {
            "properties": {
              "repo_path": {
                "title": "Repo Path",
                "type": "string"
              }
            },
            "required": [
              "repo_path"
            ],
            "title": "initialize_graphArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "switch_repository",
          "description": "Switch to a different initialized repository.\n\nArgs:\n    repo_path: Path to the repository to switch to\n\nReturns:\n    Success message or error\n",
          "input_schema": {
            "properties": {
              "repo_path": {
                "title": "Repo Path",
                "type": "string"
              }
            },
            "required": [
              "repo_path"
            ],
            "title": "switch_repositoryArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "list_repositories",
          "description": "List all initialized repositories.\n\nReturns:\n    List of initialized repositories\n",
          "input_schema": {
            "properties": {},
            "title": "list_repositoriesArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_function_call_graph",
          "description": "Get the call graph for a specific function.\n\nArgs:\n    file_path: Path to the file containing the function\n    function_name: Name of the function to analyze\n    repo_path: Optional repository path (uses active repository if not specified)\n\nReturns:\n    Information about the function's call graph\n",
          "input_schema": {
            "properties": {
              "file_path": {
                "title": "File Path",
                "type": "string"
              },
              "function_name": {
                "title": "Function Name",
                "type": "string"
              },
              "repo_path": {
                "default": null,
                "title": "Repo Path",
                "type": "string"
              }
            },
            "required": [
              "file_path",
              "function_name"
            ],
            "title": "get_function_call_graphArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "analyze_dependencies",
          "description": "Find all module or file dependencies in the codebase.\n\nIdentifies all function dependencies for a file or module\nin the active repository. This identifies all modules that\ndepend on the specified module or file.\n\nArgs:\n    file_path: Path to a specific file to analyze dependencies for\n    module_name: Name of a module to analyze dependencies for\n                (e.g., 'auth' will match 'app.auth', 'auth.users', etc.)\n\nReturns:\n    A list of all functions and files that depend on the specified module\n",
          "input_schema": {
            "properties": {
              "file_path": {
                "default": null,
                "title": "File Path",
                "type": "string"
              },
              "module_name": {
                "default": null,
                "title": "Module Name",
                "type": "string"
              }
            },
            "title": "analyze_dependenciesArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "analyze_change_impact",
          "description": "Analyze the impact of changing a specific function.\n\nThis tool performs a comprehensive impact analysis to help understand\nwhat would be affected if you modify the specified function.\n\nArgs:\n    file_path: Path to the file containing the function\n    function_name: Name of the function to analyze\n\nReturns:\n    A detailed analysis of the potential impact of changing the function\n",
          "input_schema": {
            "properties": {
              "file_path": {
                "title": "File Path",
                "type": "string"
              },
              "function_name": {
                "title": "Function Name",
                "type": "string"
              }
            },
            "required": [
              "file_path",
              "function_name"
            ],
            "title": "analyze_change_impactArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 6,
      "tool_names": [
        "initialize_graph",
        "switch_repository",
        "list_repositories",
        "get_function_call_graph",
        "analyze_dependencies",
        "analyze_change_impact"
      ]
    },
    "server_info_crawled": {
      "id": 1360,
      "name": "Nuanced MCP Server",
      "author": "@MattMorgis/nuanced-mcp",
      "overview": "Enable LLMs to analyze and understand code structures through function call graphs. Initialize, explore, and analyze dependencies in Python repositories for enhanced code assistance. Leverage standardized tools to provide contextually aware insights into your codebase.",
      "repository_url": "https://github.com/MattMorgis/nuanced-mcp",
      "homepage": "https://smithery.ai/server/@MattMorgis/nuanced-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@MattMorgis_nuanced-mcp.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "initialize_graph",
          "description": "Initialize a code graph for the given repository path.\n\nArgs:\n    repo_path: Path to the repository to analyze\n\nReturns:\n    Success message with information about the initialized graph\n",
          "input_schema": {
            "properties": {
              "repo_path": {
                "title": "Repo Path",
                "type": "string"
              }
            },
            "required": [
              "repo_path"
            ],
            "title": "initialize_graphArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "switch_repository",
          "description": "Switch to a different initialized repository.\n\nArgs:\n    repo_path: Path to the repository to switch to\n\nReturns:\n    Success message or error\n",
          "input_schema": {
            "properties": {
              "repo_path": {
                "title": "Repo Path",
                "type": "string"
              }
            },
            "required": [
              "repo_path"
            ],
            "title": "switch_repositoryArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "list_repositories",
          "description": "List all initialized repositories.\n\nReturns:\n    List of initialized repositories\n",
          "input_schema": {
            "properties": {},
            "title": "list_repositoriesArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_function_call_graph",
          "description": "Get the call graph for a specific function.\n\nArgs:\n    file_path: Path to the file containing the function\n    function_name: Name of the function to analyze\n    repo_path: Optional repository path (uses active repository if not specified)\n\nReturns:\n    Information about the function's call graph\n",
          "input_schema": {
            "properties": {
              "file_path": {
                "title": "File Path",
                "type": "string"
              },
              "function_name": {
                "title": "Function Name",
                "type": "string"
              },
              "repo_path": {
                "default": null,
                "title": "Repo Path",
                "type": "string"
              }
            },
            "required": [
              "file_path",
              "function_name"
            ],
            "title": "get_function_call_graphArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "analyze_dependencies",
          "description": "Find all module or file dependencies in the codebase.\n\nIdentifies all function dependencies for a file or module\nin the active repository. This identifies all modules that\ndepend on the specified module or file.\n\nArgs:\n    file_path: Path to a specific file to analyze dependencies for\n    module_name: Name of a module to analyze dependencies for\n                (e.g., 'auth' will match 'app.auth', 'auth.users', etc.)\n\nReturns:\n    A list of all functions and files that depend on the specified module\n",
          "input_schema": {
            "properties": {
              "file_path": {
                "default": null,
                "title": "File Path",
                "type": "string"
              },
              "module_name": {
                "default": null,
                "title": "Module Name",
                "type": "string"
              }
            },
            "title": "analyze_dependenciesArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "analyze_change_impact",
          "description": "Analyze the impact of changing a specific function.\n\nThis tool performs a comprehensive impact analysis to help understand\nwhat would be affected if you modify the specified function.\n\nArgs:\n    file_path: Path to the file containing the function\n    function_name: Name of the function to analyze\n\nReturns:\n    A detailed analysis of the potential impact of changing the function\n",
          "input_schema": {
            "properties": {
              "file_path": {
                "title": "File Path",
                "type": "string"
              },
              "function_name": {
                "title": "Function Name",
                "type": "string"
              }
            },
            "required": [
              "file_path",
              "function_name"
            ],
            "title": "analyze_change_impactArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@MattMorgis/nuanced-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@MattMorgis/nuanced-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1361.@MattMorgis_nuanced-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1281
  }
}