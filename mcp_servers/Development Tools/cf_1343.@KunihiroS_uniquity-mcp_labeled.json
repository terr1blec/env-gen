{
  "labels": {
    "analysis": "The MCP Server is designed to enable AI agents to perform similarity analysis on GitHub repositories using the UniquityReporter tool. It dynamically generates detailed Markdown reports by integrating with GitHub, OpenAI, and Tavily APIs, making it a powerful tool for code analysis and repository comparison. The server also emphasizes extensibility and maintainability through a standardized protocol, suggesting it is geared towards developers and researchers who need sophisticated repository analysis capabilities.",
    "reasoning": "The primary label \"Development Tools\" was chosen because the server's core functionality revolves around analyzing and comparing code repositories, which is a key task for developers. The secondary label \"Code Analysis\" is highly relevant, as the server specializes in repository similarity analysis and report generation. The secondary label \"API Integration\" is also appropriate, as the server leverages multiple APIs to perform its tasks. Given the nature of the tools and the problem it solves, no custom label is required as the predefined categories effectively cover its functionality.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Data Analysis & Processing",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1342,
    "server_name": "Uniquity Reporter Server",
    "rank_by_usage": 1343,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@KunihiroS_uniquity-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@KunihiroS/uniquity-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1342,
      "name": "Uniquity Reporter Server",
      "author": "@KunihiroS/uniquity-mcp",
      "overview": "Enable AI agents and external tools to perform similarity analysis on GitHub repositories using UniquityReporter. Generate detailed Markdown reports dynamically by leveraging GitHub, OpenAI, and Tavily APIs. Integrate seamlessly with various clients through a standardized protocol for enhanced maintainability and extensibility.",
      "repository_url": "https://github.com/KunihiroS/Uniquity-mcp",
      "homepage": "https://smithery.ai/server/@KunihiroS/uniquity-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@KunihiroS_uniquity-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "analyze_repository",
          "description": "Deploy Server Uniquity Reporter Server @KunihiroS/uniquity-mcp Try in Playground analyze_repository",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@KunihiroS/uniquity-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "githubToken",
          "required": true,
          "description": "GitHub API token"
        },
        {
          "name": "openaiApiKey",
          "required": true,
          "description": "OpenAI API key"
        },
        {
          "name": "tavilyApiKey",
          "required": true,
          "description": "Tavily API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@KunihiroS/uniquity-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1343.@KunihiroS_uniquity-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1267
  }
}