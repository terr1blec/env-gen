{
  "labels": {
    "analysis": "The MCP Server described is specifically designed to manage and operate GitHub Actions workflows. It provides tools for listing, triggering, canceling, and analyzing workflow runs, which are integral to continuous integration/continuous deployment (CI/CD) processes. The server enhances automation capabilities by interacting with the GitHub Actions API, offering robust error handling and flexible type validation. These functions are primarily geared toward software development and automation workflows within GitHub's ecosystem.",
    "reasoning": "The primary label \"Development Tools\" is chosen because managing GitHub Actions workflows is a core aspect of software development and CI/CD processes. The secondary label \"API Integration\" is selected due to the server's reliance on the GitHub Actions API for its operations. The secondary label \"Operating System\" is also relevant because the server helps manage processes and workflows, which aligns with system operations. No custom label is necessary as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "API Integration",
      "Operating System"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1714,
    "server_name": "GitHub Actions MCP Server",
    "rank_by_usage": 1715,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@ko1ynnky_github-actions-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ko1ynnky/github-actions-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1714,
      "name": "GitHub Actions MCP Server",
      "author": "@ko1ynnky/github-actions-mcp-server",
      "overview": "Manage and operate GitHub Actions workflows seamlessly. Trigger, cancel, and analyze workflows with ease, enhancing your automation capabilities. Experience robust error handling and flexible type validation for a smooth integration with GitHub Actions API.",
      "repository_url": "https://github.com/ko1ynnky/github-actions-mcp-server",
      "homepage": "https://smithery.ai/server/@ko1ynnky/github-actions-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ko1ynnky_github-actions-mcp-server.json",
      "tools_count": 9,
      "tools": [
        {
          "name": "list_workflows",
          "description": "Deploy Server GitHub Actions MCP Server @ko1ynnky/github-actions-mcp-server Try in Playground list_workflows",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "perPage",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_workflow",
          "description": "Description not available",
          "parameters": [
            {
              "name": "get_workflow",
              "required": false,
              "type": "string"
            },
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "workflowId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_workflow_usage",
          "description": "Description not available",
          "parameters": [
            {
              "name": "get_workflow_usage",
              "required": false,
              "type": "string"
            },
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "workflowId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_workflow_runs",
          "description": "Description not available",
          "parameters": [
            {
              "name": "workflowId",
              "required": false,
              "type": "string"
            },
            {
              "name": "checkSuiteId",
              "required": false,
              "type": "string"
            },
            {
              "name": "excludePullRequests",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_workflow_run",
          "description": "Description not available",
          "parameters": [
            {
              "name": "get_workflow_run",
              "required": false,
              "type": "string"
            },
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_workflow_run_jobs",
          "description": "Description not available",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "required": true,
              "type": "string"
            },
            {
              "name": "filter",
              "required": false,
              "type": "string"
            },
            {
              "name": "perPage",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "trigger_workflow",
          "description": "Description not available",
          "parameters": [
            {
              "name": "ref",
              "required": true,
              "type": "string"
            },
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "inputs",
              "required": false,
              "type": "string"
            },
            {
              "name": "workflowId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "cancel_workflow_run",
          "description": "Description not available",
          "parameters": [
            {
              "name": "cancel_workflow_run",
              "required": false,
              "type": "string"
            },
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "rerun_workflow",
          "description": "Description not available",
          "parameters": [
            {
              "name": "rerun_workflow",
              "required": false,
              "type": "string"
            },
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ko1ynnky/github-actions-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "githubPersonalAccessToken",
          "required": true,
          "description": "GitHub Personal Access Token for API access"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ko1ynnky/github-actions-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1715.@ko1ynnky_github-actions-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1544
  }
}