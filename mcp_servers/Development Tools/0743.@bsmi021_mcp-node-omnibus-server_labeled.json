{
  "labels": {
    "analysis": "The MCP Server described as \"Node Omnibus Server\" is primarily focused on automating and enhancing Node.js development workflows. Its core functionality includes project setup, package management, component generation, and configuration automation for modern web development frameworks like React and Next.js, with strong TypeScript integration. The tools provided aim to reduce manual configurations and repetitive tasks, allowing developers to focus on application development.",
    "reasoning": "The primary label \"Development Tools\" was chosen because the server's main purpose is to provide utilities that streamline the development process, particularly for JavaScript/TypeScript applications. Secondary labels \"Browser Automation\" and \"File Management\" were selected because some tools relate to web development (React/Next.js) and project file operations. No custom label is needed as predefined labels adequately cover the server's functionality.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Browser Automation",
      "File Management"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 742,
    "server_name": "Node Omnibus Server",
    "rank_by_usage": 743,
    "usage_count": "9",
    "original_file": "../crawler/smithery/@bsmi021_mcp-node-omnibus-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@bsmi021/mcp-node-omnibus-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "create_project",
          "description": "Create a new Node.js project with enhanced configuration",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Project name"
              },
              "type": {
                "type": "string",
                "enum": [
                  "react",
                  "node",
                  "next",
                  "express",
                  "fastify"
                ],
                "description": "Project type"
              },
              "path": {
                "type": "string",
                "description": "Project directory path"
              },
              "typescript": {
                "type": "boolean",
                "description": "Enable TypeScript support",
                "default": true
              }
            },
            "required": [
              "name",
              "type",
              "path"
            ]
          },
          "annotations": null
        },
        {
          "name": "install_packages",
          "description": "Install npm packages with version management",
          "input_schema": {
            "type": "object",
            "properties": {
              "packages": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Package names to install"
              },
              "path": {
                "type": "string",
                "description": "Project directory path"
              },
              "dev": {
                "type": "boolean",
                "description": "Install as dev dependency",
                "default": false
              }
            },
            "required": [
              "packages",
              "path"
            ]
          },
          "annotations": null
        },
        {
          "name": "generate_component",
          "description": "Generate a new React component with TypeScript support",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Component name"
              },
              "path": {
                "type": "string",
                "description": "Component directory path"
              },
              "type": {
                "type": "string",
                "enum": [
                  "functional",
                  "class"
                ],
                "description": "Component type"
              },
              "props": {
                "type": "object",
                "description": "Component props with types",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "required": [
              "name",
              "path",
              "type"
            ]
          },
          "annotations": null
        },
        {
          "name": "create_type_definition",
          "description": "Create TypeScript type definitions or interfaces",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Type name"
              },
              "path": {
                "type": "string",
                "description": "File path"
              },
              "properties": {
                "type": "object",
                "description": "Type properties and their types",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "required": [
              "name",
              "path",
              "properties"
            ]
          },
          "annotations": null
        },
        {
          "name": "add_script",
          "description": "Add a new npm script to package.json",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "Project directory path"
              },
              "name": {
                "type": "string",
                "description": "Script name"
              },
              "command": {
                "type": "string",
                "description": "Script command"
              }
            },
            "required": [
              "path",
              "name",
              "command"
            ]
          },
          "annotations": null
        },
        {
          "name": "update_tsconfig",
          "description": "Update TypeScript configuration",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "Project directory path"
              },
              "options": {
                "type": "object",
                "description": "TypeScript compiler options",
                "additionalProperties": true
              }
            },
            "required": [
              "path",
              "options"
            ]
          },
          "annotations": null
        },
        {
          "name": "create_documentation",
          "description": "Generate project documentation",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "Project directory path"
              },
              "type": {
                "type": "string",
                "enum": [
                  "readme",
                  "api",
                  "component"
                ],
                "description": "Documentation type"
              },
              "name": {
                "type": "string",
                "description": "Component or API name for specific documentation"
              }
            },
            "required": [
              "path",
              "type"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 7,
      "tool_names": [
        "create_project",
        "install_packages",
        "generate_component",
        "create_type_definition",
        "add_script",
        "update_tsconfig",
        "create_documentation"
      ]
    },
    "server_info_crawled": {
      "id": 742,
      "name": "Node Omnibus Server",
      "author": "@bsmi021/mcp-node-omnibus-server",
      "overview": "Streamline your Node.js development with automated project setup, component generation, and AI-powered assistance. Enhance your workflow by leveraging advanced tooling for React, Next.js, and more, all while ensuring seamless TypeScript integration. Focus on building great applications without the hassle of manual configurations and repetitive tasks.",
      "repository_url": "https://github.com/bsmi021/mcp-node-omnibus-server",
      "homepage": "https://smithery.ai/server/@bsmi021/mcp-node-omnibus-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "9",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@bsmi021_mcp-node-omnibus-server.json",
      "tools_count": 7,
      "tools": [
        {
          "name": "create_project",
          "description": "Create a new Node.js project with enhanced configuration",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Project name"
              },
              "type": {
                "type": "string",
                "enum": [
                  "react",
                  "node",
                  "next",
                  "express",
                  "fastify"
                ],
                "description": "Project type"
              },
              "path": {
                "type": "string",
                "description": "Project directory path"
              },
              "typescript": {
                "type": "boolean",
                "description": "Enable TypeScript support",
                "default": true
              }
            },
            "required": [
              "name",
              "type",
              "path"
            ]
          },
          "annotations": null
        },
        {
          "name": "install_packages",
          "description": "Install npm packages with version management",
          "input_schema": {
            "type": "object",
            "properties": {
              "packages": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Package names to install"
              },
              "path": {
                "type": "string",
                "description": "Project directory path"
              },
              "dev": {
                "type": "boolean",
                "description": "Install as dev dependency",
                "default": false
              }
            },
            "required": [
              "packages",
              "path"
            ]
          },
          "annotations": null
        },
        {
          "name": "generate_component",
          "description": "Generate a new React component with TypeScript support",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Component name"
              },
              "path": {
                "type": "string",
                "description": "Component directory path"
              },
              "type": {
                "type": "string",
                "enum": [
                  "functional",
                  "class"
                ],
                "description": "Component type"
              },
              "props": {
                "type": "object",
                "description": "Component props with types",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "required": [
              "name",
              "path",
              "type"
            ]
          },
          "annotations": null
        },
        {
          "name": "create_type_definition",
          "description": "Create TypeScript type definitions or interfaces",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Type name"
              },
              "path": {
                "type": "string",
                "description": "File path"
              },
              "properties": {
                "type": "object",
                "description": "Type properties and their types",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "required": [
              "name",
              "path",
              "properties"
            ]
          },
          "annotations": null
        },
        {
          "name": "add_script",
          "description": "Add a new npm script to package.json",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "Project directory path"
              },
              "name": {
                "type": "string",
                "description": "Script name"
              },
              "command": {
                "type": "string",
                "description": "Script command"
              }
            },
            "required": [
              "path",
              "name",
              "command"
            ]
          },
          "annotations": null
        },
        {
          "name": "update_tsconfig",
          "description": "Update TypeScript configuration",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "Project directory path"
              },
              "options": {
                "type": "object",
                "description": "TypeScript compiler options",
                "additionalProperties": true
              }
            },
            "required": [
              "path",
              "options"
            ]
          },
          "annotations": null
        },
        {
          "name": "create_documentation",
          "description": "Generate project documentation",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "Project directory path"
              },
              "type": {
                "type": "string",
                "enum": [
                  "readme",
                  "api",
                  "component"
                ],
                "description": "Documentation type"
              },
              "name": {
                "type": "string",
                "description": "Component or API name for specific documentation"
              }
            },
            "required": [
              "path",
              "type"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@bsmi021/mcp-node-omnibus-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@bsmi021/mcp-node-omnibus-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0743.@bsmi021_mcp-node-omnibus-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 725
  }
}