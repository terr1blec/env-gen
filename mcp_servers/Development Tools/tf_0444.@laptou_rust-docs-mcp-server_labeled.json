{
  "labels": {
    "analysis": "The Rust Docs Server provides tools for retrieving and searching Rust-related documentation, crates, type information, source code, and feature flags from docs.rs. Its core functionality is centered around accessing and interacting with Rust programming documentation and development resources, making it an essential tool for Rust developers.",
    "reasoning": "The primary label \"Development Tools\" is chosen because the server's primary use case is aiding Rust developers with documentation, querying crate information, and accessing source code, which are core development-related tasks. The secondary label \"Programming Language Support\" is added for specificity, as the server's functionality is tailored specifically for Rust developers. A custom label is not necessary as the predefined categories sufficiently cover the server's functionality.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Development Tools",
      "Web Search & Research"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 443,
    "server_name": "Rust Docs Server",
    "rank_by_usage": 444,
    "usage_count": "45",
    "original_file": "../crawler/smithery/@laptou_rust-docs-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@laptou/rust-docs-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "search_crates",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "minLength": 1,
                "description": "Search query for crates"
              },
              "page": {
                "type": "number",
                "description": "Page number (starts at 1)"
              },
              "perPage": {
                "type": "number",
                "description": "Results per page"
              }
            },
            "required": [
              "query"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_crate_documentation",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "crateName": {
                "type": "string",
                "minLength": 1,
                "description": "Name of the crate"
              },
              "version": {
                "type": "string",
                "description": "Specific version (defaults to latest)"
              }
            },
            "required": [
              "crateName"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_type_info",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "crateName": {
                "type": "string",
                "minLength": 1,
                "description": "Name of the crate"
              },
              "path": {
                "type": "string",
                "minLength": 1,
                "description": "Path to the type (e.g., \"std/vec/struct.Vec.html\")"
              },
              "version": {
                "type": "string",
                "description": "Specific version (defaults to latest)"
              }
            },
            "required": [
              "crateName",
              "path"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_feature_flags",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "crateName": {
                "type": "string",
                "minLength": 1,
                "description": "Name of the crate"
              },
              "version": {
                "type": "string",
                "description": "Specific version (defaults to latest)"
              }
            },
            "required": [
              "crateName"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_crate_versions",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "crateName": {
                "type": "string",
                "minLength": 1,
                "description": "Name of the crate"
              }
            },
            "required": [
              "crateName"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_source_code",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "crateName": {
                "type": "string",
                "minLength": 1,
                "description": "Name of the crate"
              },
              "path": {
                "type": "string",
                "minLength": 1,
                "description": "Path to the source file"
              },
              "version": {
                "type": "string",
                "description": "Specific version (defaults to latest)"
              }
            },
            "required": [
              "crateName",
              "path"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "search_symbols",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "crateName": {
                "type": "string",
                "minLength": 1,
                "description": "Name of the crate"
              },
              "query": {
                "type": "string",
                "minLength": 1,
                "description": "Search query for symbols"
              },
              "version": {
                "type": "string",
                "description": "Specific version (defaults to latest)"
              }
            },
            "required": [
              "crateName",
              "query"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 7,
      "tool_names": [
        "search_crates",
        "get_crate_documentation",
        "get_type_info",
        "get_feature_flags",
        "get_crate_versions",
        "get_source_code",
        "search_symbols"
      ]
    },
    "server_info_crawled": {
      "id": 443,
      "name": "Rust Docs Server",
      "author": "@laptou/rust-docs-mcp-server",
      "overview": "Access comprehensive Rust documentation effortlessly. Search for crates, retrieve type information, and explore source code directly from docs.rs, enhancing your development experience with instant access to vital information.",
      "repository_url": "https://github.com/laptou/rust-docs-mcp-server",
      "homepage": "https://smithery.ai/server/@laptou/rust-docs-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "45",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@laptou_rust-docs-mcp-server.json",
      "tools_count": 7,
      "tools": [
        {
          "name": "search_crates",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "minLength": 1,
                "description": "Search query for crates"
              },
              "page": {
                "type": "number",
                "description": "Page number (starts at 1)"
              },
              "perPage": {
                "type": "number",
                "description": "Results per page"
              }
            },
            "required": [
              "query"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_crate_documentation",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "crateName": {
                "type": "string",
                "minLength": 1,
                "description": "Name of the crate"
              },
              "version": {
                "type": "string",
                "description": "Specific version (defaults to latest)"
              }
            },
            "required": [
              "crateName"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_type_info",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "crateName": {
                "type": "string",
                "minLength": 1,
                "description": "Name of the crate"
              },
              "path": {
                "type": "string",
                "minLength": 1,
                "description": "Path to the type (e.g., \"std/vec/struct.Vec.html\")"
              },
              "version": {
                "type": "string",
                "description": "Specific version (defaults to latest)"
              }
            },
            "required": [
              "crateName",
              "path"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_feature_flags",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "crateName": {
                "type": "string",
                "minLength": 1,
                "description": "Name of the crate"
              },
              "version": {
                "type": "string",
                "description": "Specific version (defaults to latest)"
              }
            },
            "required": [
              "crateName"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_crate_versions",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "crateName": {
                "type": "string",
                "minLength": 1,
                "description": "Name of the crate"
              }
            },
            "required": [
              "crateName"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_source_code",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "crateName": {
                "type": "string",
                "minLength": 1,
                "description": "Name of the crate"
              },
              "path": {
                "type": "string",
                "minLength": 1,
                "description": "Path to the source file"
              },
              "version": {
                "type": "string",
                "description": "Specific version (defaults to latest)"
              }
            },
            "required": [
              "crateName",
              "path"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "search_symbols",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "crateName": {
                "type": "string",
                "minLength": 1,
                "description": "Name of the crate"
              },
              "query": {
                "type": "string",
                "minLength": 1,
                "description": "Search query for symbols"
              },
              "version": {
                "type": "string",
                "description": "Specific version (defaults to latest)"
              }
            },
            "required": [
              "crateName",
              "query"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@laptou/rust-docs-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@laptou/rust-docs-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0444.@laptou_rust-docs-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 436
  }
}