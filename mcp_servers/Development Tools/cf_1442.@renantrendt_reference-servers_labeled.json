{
  "labels": {
    "analysis": "The MCP Server is designed to interact with GitHub's API, providing tools to manage repositories, issues, pull requests, and files. It automates and simplifies common development workflows, such as creating and updating files, managing issues and pull requests, and searching through repositories. The core functionality revolves around repository and collaboration management within GitHub.",
    "reasoning": "The primary label \"Development Tools\" was chosen because the server's tools are primarily aimed at software developers working with GitHub repositories, automating tasks related to code management, issue tracking, and collaboration. Secondary labels \"API Integration\" and \"Version Control\" were selected because the server heavily relies on GitHub's API for its operations and deals with Git-based version control tasks.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "API Integration",
      "Development Tools"
    ],
    "custom_label": "GitHub Operations",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1441,
    "server_name": "GitHub API MCP Server",
    "rank_by_usage": 1442,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@renantrendt_reference-servers.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@renantrendt/reference-servers/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1441,
      "name": "GitHub API MCP Server",
      "author": "@renantrendt/reference-servers",
      "overview": "Manage your GitHub repositories effortlessly. Create, update, and search files, issues, and pull requests with ease, all while preserving your Git history. Streamline your development workflow by automating repository management tasks.",
      "repository_url": "https://github.com/renantrendt/reference-servers",
      "homepage": "https://smithery.ai/server/@renantrendt/reference-servers",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@renantrendt_reference-servers.json",
      "tools_count": 17,
      "tools": [
        {
          "name": "create_or_update_file",
          "description": "Deploy Server GitHub API MCP Server @renantrendt/reference-servers Try in Playground create_or_update_file",
          "parameters": [
            {
              "name": "create_or_update_file",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_repositories",
          "description": "Search for GitHub repositories",
          "parameters": [
            {
              "name": "Search",
              "required": false,
              "type": "string"
            },
            {
              "name": "for",
              "required": false,
              "type": "string"
            },
            {
              "name": "GitHub",
              "required": false,
              "type": "string"
            },
            {
              "name": "repositories",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "perPage",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_repository",
          "description": "Create a new GitHub repository in your account",
          "parameters": [
            {
              "name": "create_repository",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_file_contents",
          "description": "Get the contents of a file or directory from a GitHub repository",
          "parameters": [
            {
              "name": "get_file_contents",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "push_files",
          "description": "Push multiple files to a GitHub repository in a single commit",
          "parameters": [
            {
              "name": "files",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "branch",
              "required": true,
              "type": "string"
            },
            {
              "name": "message",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_issue",
          "description": "Create a new issue in a GitHub repository",
          "parameters": [
            {
              "name": "labels",
              "required": false,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "assignees",
              "required": false,
              "type": "string"
            },
            {
              "name": "milestone",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_pull_request",
          "description": "Create a new pull request in a GitHub repository",
          "parameters": [
            {
              "name": "create_pull_request",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "fork_repository",
          "description": "Fork a GitHub repository to your account or specified organization",
          "parameters": [
            {
              "name": "fork_repository",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_branch",
          "description": "Create a new branch in a GitHub repository",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "branch",
              "required": true,
              "type": "string"
            },
            {
              "name": "from_branch",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_commits",
          "description": "Get list of commits of a branch in a GitHub repository",
          "parameters": [
            {
              "name": "list_commits",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_issues",
          "description": "List issues in a GitHub repository with filtering options",
          "parameters": [
            {
              "name": "list_issues",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_issue",
          "description": "Update an existing issue in a GitHub repository",
          "parameters": [
            {
              "name": "update_issue",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_issue_comment",
          "description": "Add a comment to an existing issue",
          "parameters": [
            {
              "name": "body",
              "required": true,
              "type": "string"
            },
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "issue_number",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_code",
          "description": "Search for code across GitHub repositories",
          "parameters": [
            {
              "name": "q",
              "required": true,
              "type": "string"
            },
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "order",
              "required": false,
              "type": "string"
            },
            {
              "name": "per_page",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_issues",
          "description": "Search for issues and pull requests across GitHub repositories",
          "parameters": [
            {
              "name": "search_issues",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_users",
          "description": "Search for users on GitHub",
          "parameters": [
            {
              "name": "q",
              "required": true,
              "type": "string"
            },
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "sort",
              "required": false,
              "type": "string"
            },
            {
              "name": "order",
              "required": false,
              "type": "string"
            },
            {
              "name": "per_page",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_issue",
          "description": "Get details of a specific issue in a GitHub repository.",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "issue_number",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@renantrendt/reference-servers/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "githubPersonalAccessToken",
          "required": true,
          "description": "The personal access token for accessing the GitHub API."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@renantrendt/reference-servers/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1442.@renantrendt_reference-servers_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1339
  }
}