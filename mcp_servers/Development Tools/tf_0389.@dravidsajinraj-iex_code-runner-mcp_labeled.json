{
  "labels": {
    "analysis": "The MCP Server, labeled as \"Code Runner,\" is primarily designed to execute JavaScript and Python code in secure, isolated environments. It emphasizes security by protecting against dangerous operations, infinite loops, and resource exhaustion, while capturing detailed execution outputs and errors. The server offers tools for secure code execution, validation, and dynamic variable integration, making it suitable for tasks that require safe and controlled code execution.",
    "reasoning": "The primary label \"Development Tools\" is chosen because the MCP Server is fundamentally a tool for executing, validating, and managing code, which aligns closely with development workflows. \"Security & Authentication\" is a secondary label due to the server's focus on securing code execution. No custom label is needed as the predefined categories adequately capture the server's functionality.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Security & Authentication"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 388,
    "server_name": "Code Runner",
    "rank_by_usage": 389,
    "usage_count": "65",
    "original_file": "../crawler/smithery/@dravidsajinraj-iex_code-runner-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@dravidsajinraj-iex/code-runner-mcp/mcp?config=eyJkZWJ1ZyI6IGZhbHNlLCAibWF4TWVtb3J5VXNhZ2UiOiAxMjgsICJlbmFibGVOZXR3b3JraW5nIjogZmFsc2UsICJtYXhFeGVjdXRpb25UaW1lIjogMTAwMDB9&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "execute_code",
          "description": "Execute JavaScript or Python code securely with comprehensive error handling and security measures",
          "input_schema": {
            "type": "object",
            "properties": {
              "language": {
                "type": "string",
                "enum": [
                  "javascript",
                  "python"
                ],
                "description": "Programming language to execute"
              },
              "code": {
                "type": "string",
                "description": "Code to execute"
              },
              "input": {
                "type": "string",
                "description": "Input data for the program (stdin)"
              },
              "timeout": {
                "type": "number",
                "description": "Execution timeout in milliseconds (max 60000)"
              },
              "memoryLimit": {
                "type": "number",
                "description": "Memory limit in MB (max 512)"
              },
              "enableNetworking": {
                "type": "boolean",
                "description": "Enable network access for this execution"
              }
            },
            "required": [
              "language",
              "code"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "execute_code_with_variables",
          "description": "Execute JavaScript or Python code with dynamic input variables that can be defined and passed as key-value pairs",
          "input_schema": {
            "type": "object",
            "properties": {
              "language": {
                "type": "string",
                "enum": [
                  "javascript",
                  "python"
                ],
                "description": "Programming language to execute"
              },
              "code": {
                "type": "string",
                "description": "Code to execute"
              },
              "variables": {
                "anyOf": [
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "Dynamic input variables as key-value pairs. Can be a JSON object or a JSON string (e.g., {\"name\": \"John\", \"age\": 25, \"items\": [1,2,3]} or \"{\\\"name\\\": \\\"John\\\", \\\"age\\\": 25}\")"
              },
              "input": {
                "type": "string",
                "description": "Additional input data for the program (stdin)"
              },
              "timeout": {
                "type": "number",
                "description": "Execution timeout in milliseconds (max 60000)"
              },
              "memoryLimit": {
                "type": "number",
                "description": "Memory limit in MB (max 512)"
              },
              "enableNetworking": {
                "type": "boolean",
                "description": "Enable network access for this execution"
              }
            },
            "required": [
              "language",
              "code"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_capabilities",
          "description": "Get information about supported languages and execution capabilities",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "validate_code",
          "description": "Validate code for security and syntax issues without executing it",
          "input_schema": {
            "type": "object",
            "properties": {
              "language": {
                "type": "string",
                "enum": [
                  "javascript",
                  "python"
                ],
                "description": "Programming language"
              },
              "code": {
                "type": "string",
                "description": "Code to validate"
              }
            },
            "required": [
              "language",
              "code"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 4,
      "tool_names": [
        "execute_code",
        "execute_code_with_variables",
        "get_capabilities",
        "validate_code"
      ]
    },
    "server_info_crawled": {
      "id": 388,
      "name": "Code Runner",
      "author": "@dravidsajinraj-iex/code-runner-mcp",
      "overview": "Execute JavaScript and Python code securely in isolated environments with comprehensive security restrictions. Protect against dangerous operations, infinite loops, and resource exhaustion while capturing detailed execution output and errors. Benefit from multi-language support with configurable timeouts and memory monitoring for safe code execution.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@dravidsajinraj-iex/code-runner-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "65",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@dravidsajinraj-iex_code-runner-mcp.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "execute_code",
          "description": "Execute JavaScript or Python code securely with comprehensive error handling and security measures",
          "input_schema": {
            "type": "object",
            "properties": {
              "language": {
                "type": "string",
                "enum": [
                  "javascript",
                  "python"
                ],
                "description": "Programming language to execute"
              },
              "code": {
                "type": "string",
                "description": "Code to execute"
              },
              "input": {
                "type": "string",
                "description": "Input data for the program (stdin)"
              },
              "timeout": {
                "type": "number",
                "description": "Execution timeout in milliseconds (max 60000)"
              },
              "memoryLimit": {
                "type": "number",
                "description": "Memory limit in MB (max 512)"
              },
              "enableNetworking": {
                "type": "boolean",
                "description": "Enable network access for this execution"
              }
            },
            "required": [
              "language",
              "code"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "execute_code_with_variables",
          "description": "Execute JavaScript or Python code with dynamic input variables that can be defined and passed as key-value pairs",
          "input_schema": {
            "type": "object",
            "properties": {
              "language": {
                "type": "string",
                "enum": [
                  "javascript",
                  "python"
                ],
                "description": "Programming language to execute"
              },
              "code": {
                "type": "string",
                "description": "Code to execute"
              },
              "variables": {
                "anyOf": [
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "Dynamic input variables as key-value pairs. Can be a JSON object or a JSON string (e.g., {\"name\": \"John\", \"age\": 25, \"items\": [1,2,3]} or \"{\\\"name\\\": \\\"John\\\", \\\"age\\\": 25}\")"
              },
              "input": {
                "type": "string",
                "description": "Additional input data for the program (stdin)"
              },
              "timeout": {
                "type": "number",
                "description": "Execution timeout in milliseconds (max 60000)"
              },
              "memoryLimit": {
                "type": "number",
                "description": "Memory limit in MB (max 512)"
              },
              "enableNetworking": {
                "type": "boolean",
                "description": "Enable network access for this execution"
              }
            },
            "required": [
              "language",
              "code"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_capabilities",
          "description": "Get information about supported languages and execution capabilities",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "validate_code",
          "description": "Validate code for security and syntax issues without executing it",
          "input_schema": {
            "type": "object",
            "properties": {
              "language": {
                "type": "string",
                "enum": [
                  "javascript",
                  "python"
                ],
                "description": "Programming language"
              },
              "code": {
                "type": "string",
                "description": "Code to validate"
              }
            },
            "required": [
              "language",
              "code"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"debug\": false,\n  \"maxMemoryUsage\": 128,\n  \"enableNetworking\": false,\n  \"maxExecutionTime\": 10000\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@dravidsajinraj-iex/code-runner-mcp/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"debug\": false,\n  \"maxMemoryUsage\": 128,\n  \"enableNetworking\": false,\n  \"maxExecutionTime\": 10000\n}",
      "python_sdk_url": "https://server.smithery.ai/@dravidsajinraj-iex/code-runner-mcp/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "0389.@dravidsajinraj-iex_code-runner-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 383
  }
}