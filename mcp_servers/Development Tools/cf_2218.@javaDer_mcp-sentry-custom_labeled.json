{
  "labels": {
    "analysis": "The MCP Server \"Sentry Issue Analyzer\" is designed to retrieve and analyze issues from Sentry accounts, a popular error tracking and monitoring platform. Its primary functionality revolves around inspecting error reports, stack traces, and debugging information to improve application reliability. The available tools allow users to fetch specific issues or lists of issues, providing detailed insights into error patterns, frequencies, and timestamps. This server streamlines the debugging process by consolidating Sentry-related data in an accessible format.",
    "reasoning": "The primary label \"Development Tools\" was chosen because the server's core functionality is heavily tied to debugging and error analysis, which are essential tasks in software development. The secondary label \"Database Operations\" is included because it involves querying and retrieving structured error data from Sentry, which can be treated as database-like operations. There is no need for a custom label as the predefined categories adequately describe the server's functionality.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Database Operations"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2217,
    "server_name": "Sentry Issue Analyzer",
    "rank_by_usage": 2218,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@javaDer_mcp-sentry-custom.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@javaDer/mcp-sentry-custom/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2217,
      "name": "Sentry Issue Analyzer",
      "author": "@javaDer/mcp-sentry-custom",
      "overview": "Retrieve and analyze issues from your Sentry account effortlessly. Inspect error reports, stack traces, and debugging information to enhance your application's reliability. Streamline your debugging process with easy access to detailed issue insights.",
      "repository_url": "https://github.com/javaDer/mcp-sentry-custom",
      "homepage": "https://smithery.ai/server/@javaDer/mcp-sentry-custom",
      "remote_or_local": "Remote",
      "license": "https://smithery.ai/server/@qianniuspace/mcp-sentry",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@javaDer_mcp-sentry-custom.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "get_sentry_issue",
          "description": "Deploy Server Sentry Issue Analyzer @javaDer/mcp-sentry-custom Try in Playground get_sentry_issue",
          "parameters": []
        },
        {
          "name": "get_list_issues",
          "description": "Retrieve and analyze Sentry issues by project slug. Use this tool when you need to:\n                - Investigate production errors and crashes\n                - Access detailed stacktraces from Sentry\n                - Analyze error patterns and frequencies\n                - Get information about when issues first/last occurred\n                - Review error counts and status",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@javaDer/mcp-sentry-custom/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "authToken",
          "required": true,
          "description": "Your Sentry authentication token."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@javaDer/mcp-sentry-custom/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2218.@javaDer_mcp-sentry-custom_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1913
  }
}