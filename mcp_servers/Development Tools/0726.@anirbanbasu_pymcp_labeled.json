{
  "labels": {
    "analysis": "The MCP Server \"PyMCP\" provides a Python framework for developing MCP-compliant servers, focusing on ease of development and testing. It includes tools for basic interactions (greeting), password generation (security), combinatorial calculations (mathematical processing), text summarization (content creation), and random number generation (statistical/distribution modeling). The primary purpose is to serve as a template and testing environment for creating extensible MCP servers.",
    "reasoning": "The primary label \"Development Tools\" was chosen because the server is fundamentally a framework for building other tools and serves as a template for server development. Secondary labels \"Security & Authentication\" and \"Data Analysis & Processing\" were selected for the password generation and statistical functions, respectively. These labels reflect the core use cases of the server's available tools while acknowledging its broader development support role.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Security & Authentication",
      "Data Analysis & Processing"
    ],
    "custom_label": "MCP Framework Development",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 725,
    "server_name": "PyMCP",
    "rank_by_usage": 726,
    "usage_count": "10",
    "original_file": "../crawler/smithery/@anirbanbasu_pymcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@anirbanbasu/pymcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "greet",
          "description": "Greet the caller with a quintessential Hello World message.",
          "input_schema": {
            "properties": {
              "name": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The optional name to be greeted.",
                "title": "Name"
              }
            },
            "type": "object"
          },
          "annotations": {
            "title": null,
            "readOnlyHint": true,
            "destructiveHint": null,
            "idempotentHint": null,
            "openWorldHint": null
          }
        },
        {
          "name": "generate_password",
          "description": "Generate a random password with specified length, optionally including special characters.\nThe password will meet the complexity requirements of at least one lowercase letter, one uppercase letter, and two digits.\nIf special characters are included, it will also contain at least one such character.\nUntil the password meets these requirements, it will keep regenerating.\nThis is a simple example of a tool that can be used to generate passwords. It is not intended for production use.",
          "input_schema": {
            "properties": {
              "length": {
                "default": 12,
                "description": "The length of the password to generate (between 8 and 64 characters).",
                "maximum": 64,
                "minimum": 8,
                "title": "Length",
                "type": "integer"
              },
              "use_special_chars": {
                "default": false,
                "description": "Include special characters in the password.",
                "title": "Use Special Chars",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "annotations": {
            "title": null,
            "readOnlyHint": true,
            "destructiveHint": null,
            "idempotentHint": null,
            "openWorldHint": null
          }
        },
        {
          "name": "permutations",
          "description": "Calculate the number of ways to choose k items from n items without repetition and with order.\nIf k is not provided, it defaults to n.",
          "input_schema": {
            "properties": {
              "n": {
                "description": "The number of items to choose from.",
                "minimum": 1,
                "title": "N",
                "type": "integer"
              },
              "k": {
                "anyOf": [
                  {
                    "minimum": 1,
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The optional number of items to choose.",
                "title": "K"
              }
            },
            "required": [
              "n"
            ],
            "type": "object"
          },
          "annotations": {
            "title": null,
            "readOnlyHint": true,
            "destructiveHint": null,
            "idempotentHint": null,
            "openWorldHint": null
          }
        },
        {
          "name": "pirate_summary",
          "description": "Summarise the given text in a pirate style.\nThis is an example of a tool that can use LLM sampling to generate a summary.",
          "input_schema": {
            "properties": {
              "text": {
                "title": "Text",
                "type": "string"
              }
            },
            "required": [
              "text"
            ],
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "vonmises_random",
          "description": "Generate a random number from the von Mises distribution.\nThis is an example of a tool that uses elicitation to obtain the required parameter kappa (κ).",
          "input_schema": {
            "properties": {
              "mu": {
                "description": "The mean angle mu (μ), expressed in radians between 0 and 2π",
                "maximum": 6.283185307179586,
                "minimum": 0,
                "title": "Mu",
                "type": "number"
              }
            },
            "required": [
              "mu"
            ],
            "type": "object"
          },
          "annotations": {}
        }
      ],
      "tool_count": 5,
      "tool_names": [
        "greet",
        "generate_password",
        "permutations",
        "pirate_summary",
        "vonmises_random"
      ]
    },
    "server_info_crawled": {
      "id": 725,
      "name": "PyMCP",
      "author": "@anirbanbasu/pymcp",
      "overview": "Provide a Python-based template for developing MCP servers, enabling easy creation and testing of MCP-compliant servers. Facilitate integration with tools like Claude Desktop and Visual Studio Code through stdio transport. Simplify MCP server development with FastMCP framework support and comprehensive testing via the MCP Inspector.",
      "repository_url": "https://github.com/anirbanbasu/pymcp",
      "homepage": "https://smithery.ai/server/@anirbanbasu/pymcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "10",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@anirbanbasu_pymcp.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "greet",
          "description": "Greet the caller with a quintessential Hello World message.",
          "input_schema": {
            "properties": {
              "name": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The optional name to be greeted.",
                "title": "Name"
              }
            },
            "type": "object"
          },
          "annotations": {
            "title": null,
            "readOnlyHint": true,
            "destructiveHint": null,
            "idempotentHint": null,
            "openWorldHint": null
          }
        },
        {
          "name": "generate_password",
          "description": "Generate a random password with specified length, optionally including special characters.\nThe password will meet the complexity requirements of at least one lowercase letter, one uppercase letter, and two digits.\nIf special characters are included, it will also contain at least one such character.\nUntil the password meets these requirements, it will keep regenerating.\nThis is a simple example of a tool that can be used to generate passwords. It is not intended for production use.",
          "input_schema": {
            "properties": {
              "length": {
                "default": 12,
                "description": "The length of the password to generate (between 8 and 64 characters).",
                "maximum": 64,
                "minimum": 8,
                "title": "Length",
                "type": "integer"
              },
              "use_special_chars": {
                "default": false,
                "description": "Include special characters in the password.",
                "title": "Use Special Chars",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "annotations": {
            "title": null,
            "readOnlyHint": true,
            "destructiveHint": null,
            "idempotentHint": null,
            "openWorldHint": null
          }
        },
        {
          "name": "permutations",
          "description": "Calculate the number of ways to choose k items from n items without repetition and with order.\nIf k is not provided, it defaults to n.",
          "input_schema": {
            "properties": {
              "n": {
                "description": "The number of items to choose from.",
                "minimum": 1,
                "title": "N",
                "type": "integer"
              },
              "k": {
                "anyOf": [
                  {
                    "minimum": 1,
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The optional number of items to choose.",
                "title": "K"
              }
            },
            "required": [
              "n"
            ],
            "type": "object"
          },
          "annotations": {
            "title": null,
            "readOnlyHint": true,
            "destructiveHint": null,
            "idempotentHint": null,
            "openWorldHint": null
          }
        },
        {
          "name": "pirate_summary",
          "description": "Summarise the given text in a pirate style.\nThis is an example of a tool that can use LLM sampling to generate a summary.",
          "input_schema": {
            "properties": {
              "text": {
                "title": "Text",
                "type": "string"
              }
            },
            "required": [
              "text"
            ],
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "vonmises_random",
          "description": "Generate a random number from the von Mises distribution.\nThis is an example of a tool that uses elicitation to obtain the required parameter kappa (κ).",
          "input_schema": {
            "properties": {
              "mu": {
                "description": "The mean angle mu (μ), expressed in radians between 0 and 2π",
                "maximum": 6.283185307179586,
                "minimum": 0,
                "title": "Mu",
                "type": "number"
              }
            },
            "required": [
              "mu"
            ],
            "type": "object"
          },
          "annotations": {}
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@anirbanbasu/pymcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@anirbanbasu/pymcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0726.@anirbanbasu_pymcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 709
  }
}