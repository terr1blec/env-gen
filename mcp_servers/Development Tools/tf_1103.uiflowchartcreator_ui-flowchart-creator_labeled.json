{
  "labels": {
    "analysis": "The MCP Server focuses on generating visual representations of user interfaces by analyzing front-end codebases (React/Angular). Its primary functionality is to create UI flowcharts that visualize component structures and relationships within web applications. This solves the problem of understanding complex UI architectures without manual documentation.",
    "reasoning": "The Primary Label \"Development Tools\" is chosen because the server aids in software development by automating UI visualization from code. \"Web Development\" could also apply, but it's represented by the secondary label \"Browser Automation\" due to its code scanning capabilities. No custom label is needed as predefined categories cover the core functionality well.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Development Tools",
      "Browser Automation"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1102,
    "server_name": "UI Flowchart Creator",
    "rank_by_usage": 1103,
    "usage_count": "1",
    "original_file": "../crawler/smithery/uiflowchartcreator_ui-flowchart-creator.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/uiflowchartcreator/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "generate_ui_flow",
          "description": "Generate a UI flow diagram by analyzing React/Angular repositories. This tool scans the codebase to identify components, their relationships, and the overall UI structure.",
          "input_schema": {
            "type": "object",
            "properties": {
              "repoPath": {
                "type": "string",
                "description": "Path to local repository or empty string for GitHub repos"
              },
              "isLocal": {
                "type": "boolean",
                "description": "Whether to analyze a local repository (true) or GitHub repository (false)"
              },
              "owner": {
                "type": "string",
                "description": "GitHub repository owner (required if isLocal is false)"
              },
              "repo": {
                "type": "string",
                "description": "GitHub repository name (required if isLocal is false)"
              },
              "fileExtensions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of file extensions to analyze (e.g., ['js', 'jsx', 'ts', 'tsx'] for React, ['ts', 'html'] for Angular)",
                "default": [
                  "js",
                  "jsx",
                  "ts",
                  "tsx"
                ]
              }
            },
            "required": [
              "repoPath",
              "isLocal"
            ],
            "additionalProperties": false
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "generate_ui_flow"
      ]
    },
    "server_info_crawled": {
      "id": 1102,
      "name": "UI Flowchart Creator",
      "author": "uiflowchartcreator",
      "overview": "Create UI flowcharts and visualize user interfaces.",
      "repository_url": "https://github.com/umshere/uiflowchartcreator",
      "homepage": "https://smithery.ai/server/uiflowchartcreator",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "1",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/uiflowchartcreator_ui-flowchart-creator.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "generate_ui_flow",
          "description": "Generate a UI flow diagram by analyzing React/Angular repositories. This tool scans the codebase to identify components, their relationships, and the overall UI structure.",
          "input_schema": {
            "type": "object",
            "properties": {
              "repoPath": {
                "type": "string",
                "description": "Path to local repository or empty string for GitHub repos"
              },
              "isLocal": {
                "type": "boolean",
                "description": "Whether to analyze a local repository (true) or GitHub repository (false)"
              },
              "owner": {
                "type": "string",
                "description": "GitHub repository owner (required if isLocal is false)"
              },
              "repo": {
                "type": "string",
                "description": "GitHub repository name (required if isLocal is false)"
              },
              "fileExtensions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of file extensions to analyze (e.g., ['js', 'jsx', 'ts', 'tsx'] for React, ['ts', 'html'] for Angular)",
                "default": [
                  "js",
                  "jsx",
                  "ts",
                  "tsx"
                ]
              }
            },
            "required": [
              "repoPath",
              "isLocal"
            ],
            "additionalProperties": false
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/uiflowchartcreator/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/uiflowchartcreator/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1103.uiflowchartcreator_ui-flowchart-creator_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1080
  }
}