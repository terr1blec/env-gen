{
  "labels": {
    "analysis": "The MCP Server Template for Cursor IDE is designed to create custom tools specifically for enhancing the Cursor IDE coding experience. It provides structured coding assistance and code templates, which suggests its primary focus is on improving developer productivity and workflow within an IDE environment. The mention of deploying on Heroku or running locally with Docker indicates flexibility in deployment options.",
    "reasoning": "The primary functionality of the MCP Server is clearly tied to development tools, as it enhances coding experiences and provides templates for Cursor IDE. While it has some flexibility in deployment, this doesn't change the core purpose. No secondary labels are particularly relevant as the server is very focused on developer tools. There's no unique functionality that warrants a custom label.",
    "primary_label": "Development Tools",
    "secondary_labels": [],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1516,
    "server_name": "MCP Server Template for Cursor IDE",
    "rank_by_usage": 1517,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@jankowtf_mcp-hitchcode.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@jankowtf/mcp-hitchcode/mcp?config=eyJkZWJ1ZyI6IGZhbHNlLCAibWNwU2VydmVySG9zdCI6ICIwLjAuMC4wIiwgIm1jcFNlcnZlclBvcnQiOiA4MDAwfQ==&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "Connection timeout (20 seconds)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1516,
      "name": "MCP Server Template for Cursor IDE",
      "author": "@jankowtf/mcp-hitchcode",
      "overview": "Create custom tools for Cursor IDE using this template. Enhance your coding experience with structured vibe coding assistance and code templates. Deploy easily on Heroku or run locally with Docker.",
      "repository_url": "https://github.com/jankowtf/mcp-hitchcode",
      "homepage": "https://smithery.ai/server/@jankowtf/mcp-hitchcode",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@jankowtf_mcp-hitchcode.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "Optional Settings",
          "description": "Access and manage servers by signing in.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"debug\": false,\n  \"mcpServerHost\": \"0.0.0.0\",\n  \"mcpServerPort\": 8000\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@jankowtf/mcp-hitchcode/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"debug\": false,\n  \"mcpServerHost\": \"0.0.0.0\",\n  \"mcpServerPort\": 8000\n}",
      "python_sdk_url": "https://server.smithery.ai/@jankowtf/mcp-hitchcode/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "cf_1517.@jankowtf_mcp-hitchcode_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1396
  }
}