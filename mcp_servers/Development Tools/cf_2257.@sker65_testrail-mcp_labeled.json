{
  "labels": {
    "analysis": "The MCP Server for TestRail provides tools for interacting with TestRail's core entities, including projects, test cases, test runs, test results, and datasets. It enables authentication and programmatic access to these entities, allowing users to create, read, update, and delete them. The primary functionality revolves around test management and automation, making it particularly useful for quality assurance and software testing workflows.",
    "reasoning": "The primary label \"Software Testing & QA\" (custom) is chosen because the server's core functionality is centered around test management within TestRail, which is a test management tool. The secondary label \"Database Operations\" is included because the tools heavily interact with TestRail's database-like structure for managing test assets. No predefined category perfectly matches the server's functionality, hence the need for a custom primary label.",
    "primary_label": "Development Tools",
    "secondary_labels": [],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2256,
    "server_name": "TestRail Server",
    "rank_by_usage": 2257,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@sker65_testrail-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@sker65/testrail-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2256,
      "name": "TestRail Server",
      "author": "@sker65/testrail-mcp",
      "overview": "Enable seamless interaction with TestRail's core entities through a standardized protocol. Authenticate and access projects, cases, runs, results, and datasets directly from your MCP client. Integrate TestRail functionality into your workflows with ease and full MCP compatibility.",
      "repository_url": "https://github.com/sker65/testrail-mcp",
      "homepage": "https://smithery.ai/server/@sker65/testrail-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@sker65_testrail-mcp.json",
      "tools_count": 23,
      "tools": [
        {
          "name": "Get a project by ID",
          "description": "Deploy Server TestRail Server @sker65/testrail-mcp Try in Playground Get a project by ID",
          "parameters": [
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "Get all projects",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Get",
              "required": false,
              "type": "string"
            },
            {
              "name": "all",
              "required": false,
              "type": "string"
            },
            {
              "name": "projects",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "Add a new project",
          "description": "Add a new project. Args: name: The name of the project announcement: The announcement of the project (optional) show_announcement: Whether to show the announcement (optional) suite_mode: The suite mode: 1 for single suite mode, 2 for single suite + baselines, 3 for multiple suites (optional)",
          "parameters": []
        },
        {
          "name": "Update an existing project",
          "description": "Update an existing project. Args: project_id: The ID of the project name: The name of the project (optional) announcement: The announcement of the project (optional) show_announcement: Whether to show the announcement (optional) is_completed: Whether the project is completed (optional)",
          "parameters": []
        },
        {
          "name": "Delete a project",
          "description": "Delete a project.\n            \n            Args:\n                project_id: The ID of the project",
          "parameters": [
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "Get a test case by ID",
          "description": "Get a test case by ID. Args: case_id: The ID of the test case",
          "parameters": []
        },
        {
          "name": "Get all test cases for a project/suite",
          "description": "Get all test cases for a project/suite. Args: project_id: The ID of the project suite_id: The ID of the test suite (optional)",
          "parameters": []
        },
        {
          "name": "Add a new test case",
          "description": "Add a new test case. Args: section_id: The ID of the section title: The title of the test case type_id: The ID of the case type (optional) priority_id: The ID of the priority (optional) estimate: The estimate, e.g. '30s' or '1m 45s' (optional) milestone_id: The ID of the milestone (optional) refs: A comma-separated list of references (optional)",
          "parameters": []
        },
        {
          "name": "Update an existing test case",
          "description": "Update an existing test case. Args: case_id: The ID of the test case title: The title of the test case (optional) type_id: The ID of the case type (optional) priority_id: The ID of the priority (optional) estimate: The estimate, e.g. '30s' or '1m 45s' (optional) milestone_id: The ID of the milestone (optional) refs: A comma-separated list of references (optional)",
          "parameters": []
        },
        {
          "name": "Delete a test case",
          "description": "Delete a test case.\n            \n            Args:\n                case_id: The ID of the test case",
          "parameters": [
            {
              "name": "case_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "Get a test run by ID",
          "description": "Get a test run by ID.\n            \n            Args:\n                run_id: The ID of the test run",
          "parameters": [
            {
              "name": "run_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "Get all test runs for a project",
          "description": "Get all test runs for a project. Args: project_id: The ID of the project",
          "parameters": []
        },
        {
          "name": "Add a new test run",
          "description": "Add a new test run. Args: project_id: The ID of the project suite_id: The ID of the test suite name: The name of the test run description: The description of the test run (optional) milestone_id: The ID of the milestone (optional) assignedto_id: The ID of the user the test run should be assigned to (optional) include_all: True for including all test cases of the test suite and false for a custom case selection (default: true) (optional) case_ids: An array of case IDs for the custom case selection (optional)",
          "parameters": []
        },
        {
          "name": "Update an existing test run",
          "description": "Update an existing test run. Args: run_id: The ID of the test run name: The name of the test run (optional) description: The description of the test run (optional) milestone_id: The ID of the milestone (optional) assignedto_id: The ID of the user the test run should be assigned to (optional) include_all: True for including all test cases of the test suite and false for a custom case selection (default: true) (optional) case_ids: An array of case IDs for the custom case selection (optional)",
          "parameters": []
        },
        {
          "name": "Close an existing test run",
          "description": "Close an existing test run. Args: run_id: The ID of the test run",
          "parameters": []
        },
        {
          "name": "Delete a test run",
          "description": "Delete a test run.\n            \n            Args:\n                run_id: The ID of the test run",
          "parameters": [
            {
              "name": "run_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "Get all test results for a test",
          "description": "Get all test results for a test. Args: test_id: The ID of the test",
          "parameters": []
        },
        {
          "name": "Add a new test result",
          "description": "Add a new test result. Args: test_id: The ID of the test status_id: The ID of the test status comment: The comment / description for the test result (optional) version: The version or build you tested against (optional) elapsed: The time it took to execute the test, e.g. '30s' or '1m 45s' (optional) defects: A comma-separated list of defects to link to the test result (optional) assignedto_id: The ID of a user the test should be assigned to (optional)",
          "parameters": []
        },
        {
          "name": "Get a dataset by ID",
          "description": "Get a dataset by ID. Args: dataset_id: The ID of the dataset",
          "parameters": []
        },
        {
          "name": "Get all datasets for a project",
          "description": "Get all datasets for a project. Args: project_id: The ID of the project",
          "parameters": []
        },
        {
          "name": "Add a new dataset",
          "description": "Add a new dataset. Args: project_id: The ID of the project name: The name of the dataset description: The description of the dataset (optional)",
          "parameters": []
        },
        {
          "name": "Update an existing dataset",
          "description": "Update an existing dataset. Args: dataset_id: The ID of the dataset name: The name of the dataset (optional) description: The description of the dataset (optional)",
          "parameters": []
        },
        {
          "name": "Delete a dataset",
          "description": "Delete a dataset.\n            \n            Args:\n                dataset_id: The ID of the dataset",
          "parameters": [
            {
              "name": "dataset_id",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@sker65/testrail-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "testRailApiKey",
          "required": true,
          "description": "Your TestRail API key."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@sker65/testrail-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2257.@sker65_testrail-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1942
  }
}