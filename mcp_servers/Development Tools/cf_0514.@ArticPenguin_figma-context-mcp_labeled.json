{
  "labels": {
    "analysis": "The MCP Server is designed to integrate Figma design files with AI-powered coding tools, enabling seamless translation of design elements into code. It primarily focuses on fetching metadata from Figma files and downloading images (SVG/PNG) used in those files. This functionality enhances the design-to-code workflow, making it more efficient and accurate. The server is particularly useful for developers and designers working with AI-assisted development environments like Cursor's composer.",
    "reasoning": "The primary label is \"Development Tools\" because the server's core functionality revolves around integrating design (Figma) with coding tools, which is a fundamental aspect of the development process. The secondary label \"Content Creation\" is added because the server deals with design assets (images, icons) that are part of content creation workflows. The tertiary label \"File Management\" is included because of the tool's capability to download and manage images and assets from Figma.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Content Creation",
      "File Management"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 513,
    "server_name": "Figma MCP Server",
    "rank_by_usage": 514,
    "usage_count": "30",
    "original_file": "../crawler/smithery/@ArticPenguin_figma-context-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ArticPenguin/figma-context-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 513,
      "name": "Figma MCP Server",
      "author": "@ArticPenguin/figma-context-mcp",
      "overview": "Integrate your Figma design files with AI-powered coding tools to enhance design accuracy and efficiency. Fetch relevant metadata from Figma to streamline the coding process and implement designs seamlessly. Start using your Figma designs in Cursor's composer for improved AI interactions.",
      "repository_url": "https://github.com/ArticPenguin/Figma-Context-MCP",
      "homepage": "https://smithery.ai/server/@ArticPenguin/figma-context-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "30",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ArticPenguin_figma-context-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "get_figma_data",
          "description": "Deploy Server Figma MCP Server @ArticPenguin/figma-context-mcp Try in Playground get_figma_data",
          "parameters": []
        },
        {
          "name": "download_figma_images",
          "description": "Download SVG and PNG images used in a Figma file based on the IDs of image or icon nodes",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ArticPenguin/figma-context-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "figmaApiKey",
          "required": true,
          "description": "Your Figma API access token."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ArticPenguin/figma-context-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0514.@ArticPenguin_figma-context-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 503
  }
}