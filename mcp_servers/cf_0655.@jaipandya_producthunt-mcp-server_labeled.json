{
  "labels": {
    "analysis": "The MCP Server is designed to interact with Product Hunt's API, allowing users to retrieve detailed information about posts, comments, collections, topics, and users. Its primary functionality revolves around data retrieval and integration with AI assistants or automation tools. The available tools focus on fetching structured data from Product Hunt, making it highly relevant for applications that require access to product launches, user feedback, and community insights.",
    "reasoning": "The primary label is \"API Integration\" because the server's core functionality is based on connecting to and retrieving data from Product Hunt's API. The secondary label \"Web Search & Research\" is appropriate as the tool can be used for gathering product information and market research. The secondary label \"Daily Productivity\" fits due to its potential use in enhancing workflows for AI assistants or automation tools.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Web Search & Research",
      "Daily Productivity"
    ],
    "custom_label": "Product Hunt Data Retrieval",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 654,
    "server_name": "Product Hunt Server",
    "rank_by_usage": 655,
    "usage_count": "14",
    "original_file": "../crawler/smithery/@jaipandya_producthunt-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@jaipandya/producthunt-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 654,
      "name": "Product Hunt Server",
      "author": "@jaipandya/producthunt-mcp-server",
      "overview": "Connect to Product Hunt's API seamlessly from any LLM or agent supporting MCP. Retrieve detailed posts, comments, collections, topics, and user data to power AI assistants, chatbots, or automations. Easily integrate with clients like Claude Desktop or Cursor for enhanced AI workflows.",
      "repository_url": "https://github.com/jaipandya/producthunt-mcp-server",
      "homepage": "https://smithery.ai/server/@jaipandya/producthunt-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "14",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@jaipandya_producthunt-mcp-server.json",
      "tools_count": 11,
      "tools": [
        {
          "name": "check_server_status",
          "description": "Deploy Server Product Hunt Server Claim Server @jaipandya/producthunt-mcp-server Try in Playground check_server_status",
          "parameters": []
        },
        {
          "name": "get_post_details",
          "description": "Retrieve detailed information about a specific Product Hunt post by ID or slug.",
          "parameters": []
        },
        {
          "name": "get_posts",
          "description": "Retrieve a list of Product Hunt posts with various filtering and sorting options.",
          "parameters": []
        },
        {
          "name": "get_comment",
          "description": "Retrieve detailed information about a specific comment by ID.",
          "parameters": []
        },
        {
          "name": "get_post_comments",
          "description": "Retrieve comments for a specific post by post ID or slug, with optional sorting and pagination.",
          "parameters": []
        },
        {
          "name": "get_collection",
          "description": "Retrieve detailed information about a specific collection by ID or slug.",
          "parameters": [
            {
              "name": "id",
              "required": false,
              "type": "string"
            },
            {
              "name": "slug",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_collections",
          "description": "Retrieve a list of collections with optional filters.",
          "parameters": []
        },
        {
          "name": "get_topic",
          "description": "Retrieve detailed information about a specific topic by ID or slug.",
          "parameters": []
        },
        {
          "name": "search_topics",
          "description": "Search for topics by name or filter by user following, with optional sorting and pagination.",
          "parameters": []
        },
        {
          "name": "get_user",
          "description": "Retrieve user information by ID or username, with optional retrieval of their posts.",
          "parameters": []
        },
        {
          "name": "get_viewer",
          "description": "Retrieve information about the currently authenticated user.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@jaipandya/producthunt-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "productHuntToken",
          "required": true,
          "description": "Product Hunt API token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@jaipandya/producthunt-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0655.@jaipandya_producthunt-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 640
  }
}