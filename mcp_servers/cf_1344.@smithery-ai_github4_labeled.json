{
  "labels": {
    "analysis": "The MCP Server focuses primarily on interacting with GitHub's API, allowing users to perform a wide range of operations related to repositories, issues, pull requests, code, and users. It provides tools for searching, reading, creating, updating, and managing GitHub content programmatically. The server enhances workflows by streamlining GitHub operations that would otherwise require direct API calls or manual actions on the GitHub platform.",
    "reasoning": "The primary functionality revolves around GitHub operations, making the \"Development Tools\" category the most appropriate primary label, as it aligns with code management and developer workflows. \"API Integration\" is a strong secondary label due to the server's focus on interacting with GitHub's API. \"File Management\" is also relevant given the tools for file manipulation within repositories.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "API Integration",
      "File Management"
    ],
    "custom_label": "GitHub Automation",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1343,
    "server_name": "GitHub Tools",
    "rank_by_usage": 1344,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@smithery-ai_github4.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@smithery-ai/github4/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1343,
      "name": "GitHub Tools",
      "author": "@smithery-ai/github4",
      "overview": "Enable seamless interaction with GitHub repositories, issues, pull requests, and search capabilities through a unified interface. Manage repository content, track issues, and handle pull requests efficiently. Enhance your workflow by integrating GitHub operations directly into your applications or agents.",
      "repository_url": "https://github.com/smithery-ai/mcp-servers",
      "homepage": "https://smithery.ai/server/@smithery-ai/github4",
      "remote_or_local": "Remote",
      "license": "Not specified",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@smithery-ai_github4.json",
      "tools_count": 31,
      "tools": [
        {
          "name": "search_repositories",
          "description": "Deploy Server GitHub Tools @smithery-ai/github4 Try in Playground search_repositories",
          "parameters": [
            {
              "name": "search_repositories",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_code",
          "description": "Search for code across GitHub repositories. Returns a concise list with file paths and repositories. Use 'get_file_contents' for full file content.",
          "parameters": [
            {
              "name": "search_code",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_users",
          "description": "Search for GitHub users.",
          "parameters": [
            {
              "name": "q",
              "required": true,
              "type": "string"
            },
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "sort",
              "required": false,
              "type": "string"
            },
            {
              "name": "order",
              "required": false,
              "type": "string"
            },
            {
              "name": "per_page",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_issue",
          "description": "Get details of a specific issue in a GitHub repository.",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "issue_number",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_issue_comment",
          "description": "Add a comment to a specific issue in a GitHub repository.",
          "parameters": [
            {
              "name": "body",
              "required": true,
              "type": "string"
            },
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "issue_number",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_issues",
          "description": "Search for issues in GitHub repositories.",
          "parameters": [
            {
              "name": "q",
              "required": true,
              "type": "string"
            },
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "sort",
              "required": false,
              "type": "string"
            },
            {
              "name": "order",
              "required": false,
              "type": "string"
            },
            {
              "name": "per_page",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_issue",
          "description": "Create a new issue in a GitHub repository.",
          "parameters": [
            {
              "name": "create_issue",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_issues",
          "description": "List issues in a GitHub repository.",
          "parameters": [
            {
              "name": "list_issues",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_issue",
          "description": "Update an existing issue in a GitHub repository.",
          "parameters": [
            {
              "name": "update_issue",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_issue_comments",
          "description": "Get comments for a specific issue in a GitHub repository.",
          "parameters": [
            {
              "name": "get_issue_comments",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_repository",
          "description": "Get detailed information about a GitHub repository including README and file structure",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "per_page",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_commit",
          "description": "Get details for a commit from a GitHub repository",
          "parameters": [
            {
              "name": "sha",
              "required": true,
              "type": "string"
            },
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_commits",
          "description": "Get list of commits of a branch in a GitHub repository",
          "parameters": [
            {
              "name": "list_commits",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_branches",
          "description": "List branches in a GitHub repository",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "per_page",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_or_update_file",
          "description": "Create or update a single file in a GitHub repository. If updating an existing file, you must provide the current SHA of the file (the full 40-character SHA, not a shortened version).",
          "parameters": [
            {
              "name": "create_or_update_file",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_repository",
          "description": "Create a new GitHub repository in your account",
          "parameters": [
            {
              "name": "create_repository",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_file_contents",
          "description": "Get the contents of a file from a GitHub repository",
          "parameters": []
        },
        {
          "name": "fork_repository",
          "description": "Fork a GitHub repository to your account or specified organization",
          "parameters": [
            {
              "name": "fork_repository",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_branch",
          "description": "Create a new branch in a GitHub repository",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "branch",
              "required": true,
              "type": "string"
            },
            {
              "name": "from_branch",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_tags",
          "description": "List git tags in a GitHub repository",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "per_page",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_tag",
          "description": "Get details about a specific git tag in a GitHub repository",
          "parameters": [
            {
              "name": "tag",
              "required": true,
              "type": "string"
            },
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "push_files",
          "description": "Push multiple files to a GitHub repository in a single commit",
          "parameters": [
            {
              "name": "push_files",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_pull_request",
          "description": "Get details of a specific pull request in a GitHub repository.",
          "parameters": [
            {
              "name": "get_pull_request",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_pull_request",
          "description": "Update an existing pull request in a GitHub repository.",
          "parameters": [
            {
              "name": "update_pull_request",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_pull_requests",
          "description": "List pull requests in a GitHub repository.",
          "parameters": [
            {
              "name": "list_pull_requests",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "merge_pull_request",
          "description": "Merge a pull request in a GitHub repository.",
          "parameters": [
            {
              "name": "merge_pull_request",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_pull_request_files",
          "description": "Get the files changed in a specific pull request.",
          "parameters": [
            {
              "name": "get_pull_request_files",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_pull_request_status",
          "description": "Get the status of a specific pull request.",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullNumber",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_pull_request_branch",
          "description": "Update the branch of a pull request with the latest changes from the base branch (not implemented)",
          "parameters": [
            {
              "name": "update_pull_request_branch",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_pull_request_comments",
          "description": "Get comments for a specific pull request",
          "parameters": [
            {
              "name": "get_pull_request_comments",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_pull_request",
          "description": "Create a new pull request in a GitHub repository.",
          "parameters": [
            {
              "name": "create_pull_request",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@smithery-ai/github4/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "githubPersonalAccessToken",
          "required": true,
          "description": ""
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@smithery-ai/github4/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1344.@smithery-ai_github4_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1268
  }
}