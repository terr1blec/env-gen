{
  "labels": {
    "analysis": "The MCP Elasticsearch Server enables users to interact with Elasticsearch data through natural language conversations. It provides tools for listing indices, retrieving field mappings, performing searches, and getting shard information. This server acts as a bridge between human-like queries and Elasticsearch operations, making complex database interactions more accessible through an intuitive interface.",
    "reasoning": "The primary label \"Database Operations\" was chosen because the server's core functionality revolves around querying and managing Elasticsearch data, which is a type of database. The secondary label \"API Integration\" is relevant as it connects clients to the Elasticsearch data through a server interface. The secondary label \"AI/ML Tools\" is included because the natural language interaction aspect suggests some level of AI integration.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "API Integration",
      "AI/ML Tools"
    ],
    "custom_label": "Elasticsearch Interaction Engine",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2410,
    "server_name": "Elasticsearch Server",
    "rank_by_usage": 2411,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@Delacrobix_mcp-server-elasticsearch.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Delacrobix/mcp-server-elasticsearch/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2410,
      "name": "Elasticsearch Server",
      "author": "@Delacrobix/mcp-server-elasticsearch",
      "overview": "Connect to your Elasticsearch data directly from any MCP Client using natural language conversations. Query indices, retrieve mappings, and perform searches seamlessly through an intuitive interface. Empower your agents to interact with Elasticsearch data effortlessly and securely.",
      "repository_url": "https://github.com/Delacrobix/mcp-server-elasticsearch",
      "homepage": "https://smithery.ai/server/@Delacrobix/mcp-server-elasticsearch",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Delacrobix_mcp-server-elasticsearch.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "list_indices",
          "description": "Deploy Server Elasticsearch Server @Delacrobix/mcp-server-elasticsearch Try in Playground list_indices",
          "parameters": [
            {
              "name": "list_indices",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_mappings",
          "description": "Get field mappings for a specific Elasticsearch index",
          "parameters": [
            {
              "name": "get_mappings",
              "required": false,
              "type": "string"
            },
            {
              "name": "index",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "search",
          "description": "Deploy Server Elasticsearch Server @Delacrobix/mcp-server-elasticsearch Try in Playground list_indices",
          "parameters": [
            {
              "name": "Tools",
              "required": false,
              "type": "string"
            },
            {
              "name": "list_indices",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_shards",
          "description": "Get shard information for all or specific indices",
          "parameters": [
            {
              "name": "get_shards",
              "required": false,
              "type": "string"
            },
            {
              "name": "index",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Delacrobix/mcp-server-elasticsearch/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Delacrobix/mcp-server-elasticsearch/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2411.@Delacrobix_mcp-server-elasticsearch_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 2061
  }
}