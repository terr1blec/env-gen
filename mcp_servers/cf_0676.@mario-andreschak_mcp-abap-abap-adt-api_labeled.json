{
  "labels": {
    "analysis": "The MCP Server is a wrapper for ABAP-ADT-API that provides tools for interacting with SAP systems at a granular level. It offers capabilities for authentication, object manipulation (creation, deletion, activation), source code management, transport request handling, syntax validation, and code analysis. The primary purpose is to facilitate ABAP development workflows by automating common tasks in the SAP ecosystem.",
    "reasoning": "The primary role of this server is clearly centered around ABAP development and SAP system interactions, which aligns most closely with 'Development Tools'. Secondary relevance includes 'Operating System' for file/object operations and 'API Integration' for managing transport requests and system connectivity. The unique SAP/ABAP focus suggests the custom label 'SAP Development Automation'.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Operating System",
      "API Integration"
    ],
    "custom_label": "SAP Development Automation",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 675,
    "server_name": "ABAP-ADT-API MCP-Server",
    "rank_by_usage": 676,
    "usage_count": "12",
    "original_file": "../crawler/smithery/@mario-andreschak_mcp-abap-abap-adt-api.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@mario-andreschak/mcp-abap-abap-adt-api/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 675,
      "name": "ABAP-ADT-API MCP-Server",
      "author": "@mario-andreschak/mcp-abap-abap-adt-api",
      "overview": "1:1 wrapping of abap-adt-api into a MCP server.",
      "repository_url": "https://github.com/mario-andreschak/mcp-abap-abap-adt-api",
      "homepage": "https://smithery.ai/server/@mario-andreschak/mcp-abap-abap-adt-api",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "12",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@mario-andreschak_mcp-abap-abap-adt-api.json",
      "tools_count": 27,
      "tools": [
        {
          "name": "login",
          "description": "Authenticate with ABAP system",
          "parameters": []
        },
        {
          "name": "logout",
          "description": "Terminate ABAP session",
          "parameters": []
        },
        {
          "name": "dropSession",
          "description": "Clear local session cache",
          "parameters": []
        },
        {
          "name": "transportInfo",
          "description": "Get transport information for an object source",
          "parameters": []
        },
        {
          "name": "createTransport",
          "description": "Create a new transport request",
          "parameters": []
        },
        {
          "name": "hasTransportConfig",
          "description": "Check if transport configuration exists",
          "parameters": []
        },
        {
          "name": "objectStructure",
          "description": "Get object structure details",
          "parameters": []
        },
        {
          "name": "searchObject",
          "description": "Tool description not accessible via automated extraction",
          "parameters": []
        },
        {
          "name": "findObjectPath",
          "description": "Find path for an object",
          "parameters": []
        },
        {
          "name": "classIncludes",
          "description": "Get class includes structure",
          "parameters": []
        },
        {
          "name": "classComponents",
          "description": "List class components",
          "parameters": []
        },
        {
          "name": "createTestInclude",
          "description": "Create test include for class",
          "parameters": []
        },
        {
          "name": "syntaxCheck",
          "description": "Perform ABAP syntax check",
          "parameters": []
        },
        {
          "name": "codeCompletion",
          "description": "Get code completion suggestions",
          "parameters": []
        },
        {
          "name": "findDefinition",
          "description": "Find symbol definition",
          "parameters": []
        },
        {
          "name": "usageReferences",
          "description": "Find symbol references",
          "parameters": []
        },
        {
          "name": "lock",
          "description": "Tool description not accessible via automated extraction",
          "parameters": []
        },
        {
          "name": "unLock",
          "description": "Tool description not accessible via automated extraction",
          "parameters": []
        },
        {
          "name": "getObjectSource",
          "description": "Retrieves source code for ABAP objects",
          "parameters": []
        },
        {
          "name": "setObjectSource",
          "description": "Sets source code for ABAP objects",
          "parameters": []
        },
        {
          "name": "deleteObject",
          "description": "Deletes an ABAP object from the system",
          "parameters": []
        },
        {
          "name": "activate",
          "description": "Activate ABAP objects",
          "parameters": []
        },
        {
          "name": "inactiveObjects",
          "description": "Get list of inactive objects",
          "parameters": []
        },
        {
          "name": "objectRegistrationInfo",
          "description": "Get registration information for an ABAP object",
          "parameters": []
        },
        {
          "name": "validateNewObject",
          "description": "Validate parameters for a new ABAP object",
          "parameters": []
        },
        {
          "name": "createObject",
          "description": "Create a new ABAP object",
          "parameters": []
        },
        {
          "name": "healthcheck",
          "description": "Check server health and connectivity",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@mario-andreschak/mcp-abap-abap-adt-api/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@mario-andreschak/mcp-abap-abap-adt-api/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0676.@mario-andreschak_mcp-abap-abap-adt-api_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 660
  }
}