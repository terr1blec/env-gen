{
  "labels": {
    "analysis": "The MCP Server is designed primarily for interacting with MySQL databases. It allows users to execute SQL queries directly through an AI interface, retrieve formatted results, and simplify database operations with intuitive commands. The core functionality revolves around database operations, specifically querying and retrieving data from MySQL databases.",
    "reasoning": "The primary label \"Database Operations\" is chosen because the server's main functionality is centered around executing SQL queries and retrieving data, which falls under database management. There are no additional predefined categories that are a close secondary fit, but the tool could also be related to \"Development Tools\" if used by developers for debugging or \"API Integration\" if the queries are part of a larger system integration. No custom label is needed as the predefined categories cover the functionality adequately.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Development Tools"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 216,
    "server_name": "Database Tools",
    "rank_by_usage": 217,
    "usage_count": "207",
    "original_file": "../crawler/smithery/@elber-code_database-tools.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@elber-code/database-tools/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "mysql",
          "description": "Execute a query in MySQL",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "SQL query to execute"
              }
            },
            "required": [
              "query"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "mysql"
      ]
    },
    "server_info_crawled": {
      "id": 216,
      "name": "Database Tools",
      "author": "@elber-code/database-tools",
      "overview": "Query MySQL databases directly through Claude AI. Execute SQL queries and retrieve formatted results for easy reading. Simplify your database interactions with intuitive commands and seamless integration.",
      "repository_url": "https://github.com/elber-code/database-tools",
      "homepage": "https://smithery.ai/server/@elber-code/database-tools",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "207",
      "success_rate": "98.85%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@elber-code_database-tools.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "mysql",
          "description": "Execute a query in MySQL",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "SQL query to execute"
              }
            },
            "required": [
              "query"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@elber-code/database-tools/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@elber-code/database-tools/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0217.@elber-code_database-tools_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 213
  }
}