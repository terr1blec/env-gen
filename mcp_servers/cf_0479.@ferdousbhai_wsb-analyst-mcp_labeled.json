{
  "labels": {
    "analysis": "The MCP Server \"WSB Analyst\" is designed to provide real-time analysis of WallStreetBets (WSB) data by extracting and processing trending stocks, posts, and comments. It focuses on market research by leveraging Reddit data, particularly from the WallStreetBets community, and offers tools to fetch detailed post information, filter trending tickers, and gather external links. The server emphasizes efficient data collection, caching, and filtering to support market insights and research.",
    "reasoning": "The primary functionality revolves around analyzing and extracting financial market data from social media (specifically Reddit's WallStreetBets), making \"Financial Services\" the most appropriate predefined category. The server also revolves around collecting and processing unstructured data from social media, which aligns with the \"Data Analysis & Processing\" category. While \"Web Search & Research\" and \"Browser Automation\" are somewhat relevant, they are broader categories that don't capture the financial analysis aspect as well. The custom label \"Financial Social Media Analysis\" is added to highlight the specific focus on extracting market insights from social media platforms like Reddit.",
    "primary_label": "Financial Services",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": "Financial Social Media Analysis",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 478,
    "server_name": "WSB Analyst",
    "rank_by_usage": 479,
    "usage_count": "37",
    "original_file": "../crawler/smithery/@ferdousbhai_wsb-analyst-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ferdousbhai/wsb-analyst-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 478,
      "name": "WSB Analyst",
      "author": "@ferdousbhai/wsb-analyst-mcp",
      "overview": "Provide real-time WallStreetBets data analysis to discover trending stocks, analyze posts, and gather external resources. Use ready-to-use prompt templates and tools to gain market insights directly within your LLM client. Enhance your market research with detailed post and comment extraction, plus progress reporting during data collection.",
      "repository_url": "https://github.com/ferdousbhai/wsb-analyst-mcp",
      "homepage": "https://smithery.ai/server/@ferdousbhai/wsb-analyst-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "37",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ferdousbhai_wsb-analyst-mcp.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "find_top_posts",
          "description": "Deploy Server WSB Analyst Claim Server @ferdousbhai/wsb-analyst-mcp Try in Playground find_top_posts",
          "parameters": []
        },
        {
          "name": "fetch_post_details",
          "description": "Fetch detailed information about a specific WSB post including top comments. Caches results for 5 minutes. Args: post_id: Reddit post ID Returns: Detailed post data including comments and extracted links",
          "parameters": []
        },
        {
          "name": "fetch_batch_post_details",
          "description": "Fetch details for multiple posts efficiently. Args: post_ids: List of Reddit post IDs Returns: Dictionary with details for all requested posts",
          "parameters": []
        },
        {
          "name": "fetch_detailed_wsb_posts",
          "description": "Fetch and filter WSB posts, then get detailed information including top comments and links for each. Args: min_score: Minimum score (upvotes) required min_comments: Minimum number of comments required limit: Maximum number of posts to return excluded_flairs: List of post flairs to exclude. Defaults to [\"Meme\", \"Shitpost\", \"Gain\", \"Loss\"]. Returns: A dictionary with detailed data for the filtered posts.",
          "parameters": []
        },
        {
          "name": "get_top_trending_tickers",
          "description": "Fetch top trending stock tickers from ApeWisdom, filtered by valid NASDAQ symbols. Args: num_stocks: Number of top stocks to consider based on upvotes and mentions. Defaults to 20. filter: ApeWisdom filter category (e.g., 'wallstreetbets', 'all'). Defaults to 'wallstreetbets'. Returns: A list of valid, trending tickers.",
          "parameters": []
        },
        {
          "name": "get_external_links",
          "description": "Get all external links from top WSB posts. Args: min_score: Minimum score (upvotes) required min_comments: Minimum number of comments required limit: Maximum number of posts to scan Returns: Dictionary with all unique external links found",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ferdousbhai/wsb-analyst-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "redditClientSecret",
          "required": true,
          "description": "Reddit API client secret"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ferdousbhai/wsb-analyst-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0479.@ferdousbhai_wsb-analyst-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 469
  }
}