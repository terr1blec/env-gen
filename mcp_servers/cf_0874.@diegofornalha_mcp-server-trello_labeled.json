{
  "labels": {
    "analysis": "The MCP Trello Integration Server is primarily designed to provide seamless interaction with Trello boards through its API. It allows users to automate task management by fetching, updating, and managing Trello cards and lists. The available tools enable users to perform various operations such as retrieving cards and lists, adding new cards/lists, updating card details, and archiving items. The server respects Trello's API limits and ensures type safety, making it suitable for productive task automation and integration with other applications.",
    "reasoning": "The primary label **Daily Productivity** was chosen because the server's core functionality revolves around task management and automation, which aligns with productivity tools. The secondary label **API Integration** is relevant due to its specific use of Trello's API and the nature of the operations it performs. The third secondary label **File Management** could be relevant if the server handles file attachments, but based on the tools listed, it's not as directly applicable. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Daily Productivity",
    "secondary_labels": [
      "API Integration",
      "Browser Automation"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 873,
    "server_name": "Trello Integration Server",
    "rank_by_usage": 874,
    "usage_count": "5",
    "original_file": "../crawler/smithery/@diegofornalha_mcp-server-trello.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@diegofornalha/mcp-server-trello/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 873,
      "name": "Trello Integration Server",
      "author": "@diegofornalha/mcp-server-trello",
      "overview": "Interact seamlessly with Trello boards and automate your task management. Fetch, update, and manage cards and lists while respecting Trello's API limits and ensuring type safety. Enhance your productivity by integrating Trello's capabilities into your applications effortlessly.",
      "repository_url": "https://github.com/diegofornalha/mcp-server-trello",
      "homepage": "https://smithery.ai/server/@diegofornalha/mcp-server-trello",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "5",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@diegofornalha_mcp-server-trello.json",
      "tools_count": 9,
      "tools": [
        {
          "name": "get_cards_by_list_id",
          "description": "Deploy Server Trello Integration Server @diegofornalha/mcp-server-trello Try in Playground get_cards_by_list_id",
          "parameters": [
            {
              "name": "get_cards_by_list_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "listId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_lists",
          "description": "Retrieve all lists from the specified board",
          "parameters": [
            {
              "name": "get_lists",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_recent_activity",
          "description": "Fetch recent activity on the Trello board",
          "parameters": [
            {
              "name": "get_recent_activity",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_card_to_list",
          "description": "Add a new card to a specified list",
          "parameters": [
            {
              "name": "add_card_to_list",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_card_details",
          "description": "Update an existing card's details",
          "parameters": [
            {
              "name": "update_card_details",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "archive_card",
          "description": "Send a card to the archive",
          "parameters": [
            {
              "name": "archive_card",
              "required": false,
              "type": "string"
            },
            {
              "name": "cardId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_list_to_board",
          "description": "Add a new list to the board",
          "parameters": [
            {
              "name": "add_list_to_board",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "archive_list",
          "description": "Send a list to the archive",
          "parameters": [
            {
              "name": "archive_list",
              "required": false,
              "type": "string"
            },
            {
              "name": "listId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_my_cards",
          "description": "Fetch all cards assigned to the current user",
          "parameters": [
            {
              "name": "get_my_cards",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@diegofornalha/mcp-server-trello/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "trelloToken",
          "required": true,
          "description": "Your Trello token generated using your API key"
        },
        {
          "name": "trelloApiKey",
          "required": true,
          "description": "Your Trello API key from https://trello.com/app-key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@diegofornalha/mcp-server-trello/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0874.@diegofornalha_mcp-server-trello_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 855
  }
}