{
  "labels": {
    "analysis": "Poke-MCP is a specialized server designed to provide Pokémon-related information through a standardized protocol. It primarily acts as a data retrieval service, fetching Pokémon details from the PokeAPI and making them accessible to MCP-compatible clients via various query tools. The server's core functionality revolves around organizing and delivering Pokémon data in a structured and accessible way, with tools that allow users to fetch random Pokémon, filter by region or type, or ask natural language queries about Pokémon.",
    "reasoning": "The primary label \"Data Analysis & Processing\" is chosen because the server primarily functions as an intermediary that processes and retrieves Pokémon data from an external API. The secondary label \"Content Creation\" is appropriate because it enables the generation of Pokémon-related queries and information. No custom label is needed as the functionality is well-covered by the predefined categories.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "Content Creation"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": true
  },
  "metadata": {
    "server_id": 161,
    "server_name": "Pokémcp",
    "rank_by_usage": 162,
    "usage_count": "328",
    "original_file": "../crawler/smithery/@NaveenBandarage_poke-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@NaveenBandarage/poke-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "random-pokemon",
          "description": "Get a random Pokémon",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "random-pokemon-from-region",
          "description": "Get a random Pokémon from a specific region",
          "input_schema": {
            "type": "object",
            "properties": {
              "region": {
                "type": "string",
                "description": "The Pokémon region (e.g., kanto, johto, hoenn, etc.)"
              }
            },
            "required": [
              "region"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "random-pokemon-by-type",
          "description": "Get a random Pokémon of a specific type",
          "input_schema": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "The Pokémon type (e.g., fire, water, grass, etc.)"
              }
            },
            "required": [
              "type"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "pokemon-query",
          "description": "Answer natural language Pokémon queries",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "A natural language query about Pokémon"
              }
            },
            "required": [
              "query"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 4,
      "tool_names": [
        "random-pokemon",
        "random-pokemon-from-region",
        "random-pokemon-by-type",
        "pokemon-query"
      ]
    },
    "server_info_crawled": {
      "id": 161,
      "name": "Pokémcp",
      "author": "@NaveenBandarage/poke-mcp",
      "overview": "Poke-MCP is a Model Context Protocol (MCP) server that provides Pokémon information through a standardized interface. It connects to the PokeAPI to fetch Pokémon data and exposes it through MCP tools that can be used by any MCP-compatible client, such as Claude Desktop App, Continue, Cline, and others.",
      "repository_url": "https://github.com/NaveenBandarage/poke-mcp",
      "homepage": "https://smithery.ai/server/@NaveenBandarage/poke-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "328",
      "success_rate": "99.84%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@NaveenBandarage_poke-mcp.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "random-pokemon",
          "description": "Get a random Pokémon",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "random-pokemon-from-region",
          "description": "Get a random Pokémon from a specific region",
          "input_schema": {
            "type": "object",
            "properties": {
              "region": {
                "type": "string",
                "description": "The Pokémon region (e.g., kanto, johto, hoenn, etc.)"
              }
            },
            "required": [
              "region"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "random-pokemon-by-type",
          "description": "Get a random Pokémon of a specific type",
          "input_schema": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "The Pokémon type (e.g., fire, water, grass, etc.)"
              }
            },
            "required": [
              "type"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "pokemon-query",
          "description": "Answer natural language Pokémon queries",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "A natural language query about Pokémon"
              }
            },
            "required": [
              "query"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@NaveenBandarage/poke-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@NaveenBandarage/poke-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0162.@NaveenBandarage_poke-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 159
  }
}