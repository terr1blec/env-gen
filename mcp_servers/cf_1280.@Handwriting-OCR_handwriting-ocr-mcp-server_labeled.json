{
  "labels": {
    "analysis": "This MCP Server specializes in Optical Character Recognition (OCR) for handwritten documents. It provides automated processing to extract text from images and PDFs, returning the results in Markdown format. The primary function is to facilitate text extraction from handwritten content, enhancing document digitization workflows.",
    "reasoning": "The primary label \"Data Analysis & Processing\" was chosen because the server's core functionality involves transforming unstructured handwritten content into machine-readable text, which is a key aspect of data processing. The secondary label \"File Management\" is included because the tools explicitly handle document uploads and text retrieval. While \"AI/ML Tools\" could also be relevant due to the nature of OCR, it is less descriptive of the server's primary use case.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "File Management"
    ],
    "custom_label": "OCR Services",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1279,
    "server_name": "Handwriting OCR",
    "rank_by_usage": 1280,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@Handwriting-OCR_handwriting-ocr-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Handwriting-OCR/handwriting-ocr-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1279,
      "name": "Handwriting OCR",
      "author": "@Handwriting-OCR/handwriting-ocr-mcp-server",
      "overview": "Integrate your applications with the Handwriting OCR service to effortlessly upload documents, check their processing status, and retrieve OCR results in Markdown format. Enhance your workflows by automating text extraction from images and PDFs with ease.",
      "repository_url": "https://github.com/Handwriting-OCR/handwriting-ocr-mcp-server",
      "homepage": "https://smithery.ai/server/@Handwriting-OCR/handwriting-ocr-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Handwriting-OCR_handwriting-ocr-mcp-server.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "upload_document",
          "description": "Deploy Server Handwriting OCR @Handwriting-OCR/handwriting-ocr-mcp-server Try in Playground upload_document",
          "parameters": [
            {
              "name": "upload_document",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "check_status",
          "description": "Check the status of a document",
          "parameters": [
            {
              "name": "check_status",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_text",
          "description": "Retrieve the transcribed text from a document",
          "parameters": [
            {
              "name": "get_text",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Handwriting-OCR/handwriting-ocr-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "apiToken",
          "required": true,
          "description": "Your Handwriting OCR API token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Handwriting-OCR/handwriting-ocr-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1280.@Handwriting-OCR_handwriting-ocr-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1220
  }
}