{
  "labels": {
    "analysis": "The MCP Server provides dictionary lookup capabilities, allowing agents to fetch definitions and related information for words. Its primary functionality is centered around language understanding and assistance, enabling users to access accurate dictionary data seamlessly. The core tool available is \"get_definitions,\" which directly addresses the need for word definitions in various language-related workflows.",
    "reasoning": "The primary label is \"Web Search & Research\" because the server facilitates information retrieval (dictionary definitions), which is fundamentally a research or lookup task. While it could also be considered for \"AI/ML Tools\" due to its integration with LLM workflows, the primary use case is more aligned with traditional search/research functionalities. The secondary label \"Language Tools\" is a custom label to emphasize its specialized role in language processing, though no predefined category exactly matches this niche.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [],
    "custom_label": "Language Tools",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 811,
    "server_name": "Dictionary MCP Server",
    "rank_by_usage": 812,
    "usage_count": "6",
    "original_file": "../crawler/smithery/@akifsilan_dictionary-mcp-main.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@akifsilan/dictionary-mcp-main/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_definitions",
          "description": "\n    Get definitions for a word.\n    ",
          "input_schema": {
            "properties": {
              "word": {
                "title": "Word",
                "type": "string"
              }
            },
            "required": [
              "word"
            ],
            "title": "get_definitionsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get_definitions"
      ]
    },
    "server_info_crawled": {
      "id": 811,
      "name": "Dictionary MCP Server",
      "author": "@akifsilan/dictionary-mcp-main",
      "overview": "Provide dictionary lookup capabilities to your agents by exposing word definitions and related information. Enable seamless integration of dictionary data into LLM workflows for enhanced language understanding and assistance. Improve user interactions by delivering accurate and contextually relevant dictionary content on demand.",
      "repository_url": "https://github.com/akifsilan/dictionary-mcp-main",
      "homepage": "https://smithery.ai/server/@akifsilan/dictionary-mcp-main",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "6",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@akifsilan_dictionary-mcp-main.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_definitions",
          "description": "\n    Get definitions for a word.\n    ",
          "input_schema": {
            "properties": {
              "word": {
                "title": "Word",
                "type": "string"
              }
            },
            "required": [
              "word"
            ],
            "title": "get_definitionsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@akifsilan/dictionary-mcp-main/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@akifsilan/dictionary-mcp-main/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0812.@akifsilan_dictionary-mcp-main_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 793
  }
}