{
  "labels": {
    "analysis": "The VideoDB Director MCP Server is designed to act as an orchestrator for multimedia and video-related operations within the VideoDB ecosystem. Its tools enable a wide range of functionalities, including video upload/download, indexing/search, summarization, subtitling, dubbing, video editing, audio generation, image generation, meeting recording, and web search for videos. The server also provides code generation for VideoDB SDK and pricing/usage information. Its primary purpose is to integrate VideoDB capabilities with AI agents and LLM applications, making video processing and management more accessible.",
    "reasoning": "The primary label is chosen because the server's core functionality revolves around video and multimedia operations, which are central to handling and processing video content. The secondary labels indicate its ability to automate tasks (browser automation) and integrate with other tools for video searches and processing (API integration). No custom label is necessary as the predefined categories sufficiently cover its functionality.",
    "primary_label": "Operating System",
    "secondary_labels": [
      "Browser Automation",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 794,
    "server_name": "VideoDB Director MCP Server",
    "rank_by_usage": 795,
    "usage_count": "7",
    "original_file": "../crawler/smithery/@samihalawa_video-agent-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@samihalawa/video-agent-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 794,
      "name": "VideoDB Director MCP Server",
      "author": "@samihalawa/video-agent-mcp",
      "overview": "Provide seamless integration of VideoDB context and capabilities to AI agents and LLM-powered applications. Enable automated context generation, maintenance, and discoverability for enhanced AI-driven workflows. Simplify access to VideoDB features through a standardized MCP interface.",
      "repository_url": "https://github.com/samihalawa/agent-toolkit",
      "homepage": "https://smithery.ai/server/@samihalawa/video-agent-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "7",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@samihalawa_video-agent-mcp.json",
      "tools_count": 24,
      "tools": [
        {
          "name": "doc_assistant",
          "description": "Deploy Server VideoDB Director MCP Server @samihalawa/video-agent-mcp Try in Playground doc_assistant",
          "parameters": [
            {
              "name": "doc_assistant",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "code_assistant",
          "description": "Will give you data related to VideoDB SDK which allows developers to use videodb in python. IMPORTANT: Whenever user wants to write code related to videos, youtube videos or VideoDB specifically, always call this tool.",
          "parameters": [
            {
              "name": "code_assistant",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "play_video",
          "description": "Play the video of the given stream link",
          "parameters": [
            {
              "name": "play_video",
              "required": false,
              "type": "string"
            },
            {
              "name": "stream_link",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "call_director",
          "description": "The Director tool orchestrates specialized agents within the VideoDB server, efficiently handling multimedia and video-related queries. Clients should send queries that Director can interpret clearly, specifying tasks in natural language. Director will then delegate these queries to appropriate agents for optimized results, utilizing defaults and contextual information if explicit parameters are not provided. Director handles queries such as: - Uploading & Downloading: - Upload media from URLs or local paths (supported media: video, audio, image) - Download the VideoDB generated video streams. - Indexing & Search: - Index spoken words or scenes in videos (spoken_words, scene indexing; scene indexing supports shot or time-based type) - Search VideoDB collections semantically or by keyword (semantic, keyword search; indexing types: spoken_word, scene) - Summarization & Subtitles: - Summarize video content based on custom prompts - Add subtitles in various languages - Dubbing: - Dub videos into target languages - Creating Videos: - Generate videos using specific models or engines (Fal, StabilityAI; job types: text_to_video, image_to_video) - Compare multiple video generation models (video_generation_comparison) - Audio Generation & Editing: - Generate speech, sound effects, or background music (engines: ElevenLabs for speech/sound effects, Beatoven for music) - Clone voices from audio sources or overlay cloned voices onto videos - Censor the video on given prompt - Image and Frame Generation: - Generate static image frames from videos at specified timestamps - Create or enhance images using GenAI models (job types: text_to_image, image_to_image using Fal, Replicate) - Video Editing & Clip Generation: - Edit or combine multiple videos and audio files - Generate targeted video clips from user prompts - Streaming & Web Search: - Stream videos by video ID or URL - Search for relevant online videos (engine: Serp) - Transcription: - Generate transcripts for videos - Pricing & Usage Information: - Provide detailed cost information and usage estimates Clients should provide queries clearly aligned with Director's capabilities, allowing Director to use contextual defaults when explicit parameters like IDs or collection details are not specified. IMPORTANT: if you have a previous response of this method with an appropriate session_id, please provide that session_id in the next request to continue the conversation. IMPORTANT: It is MANDATORY to send the `session_id` param if any earlier response from this method exists with a `session_id` in its output",
          "parameters": []
        },
        {
          "name": "summarize_video",
          "description": "Generate a summary of a video using VideoDB",
          "parameters": [
            {
              "name": "prompt",
              "required": false,
              "type": "string"
            },
            {
              "name": "video_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "collection_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "upload",
          "description": "Upload media content (video, audio, or image) to VideoDB",
          "parameters": [
            {
              "name": "name",
              "required": false,
              "type": "string"
            },
            {
              "name": "source",
              "required": true,
              "type": "string"
            },
            {
              "name": "media_type",
              "required": false,
              "type": "string"
            },
            {
              "name": "source_type",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "index",
          "description": "Index a video for search purposes (spoken words or scenes)",
          "parameters": [
            {
              "name": "index",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search",
          "description": "Search for content within videos using semantic or keyword search",
          "parameters": []
        },
        {
          "name": "prompt_clip",
          "description": "Create clips from a video based on prompts",
          "parameters": [
            {
              "name": "prompt_clip",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "frame",
          "description": "Extract a single frame from a video",
          "parameters": [
            {
              "name": "video_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "timestamp",
              "required": false,
              "type": "string"
            },
            {
              "name": "collection_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "stream_video",
          "description": "Get streaming URL for a video",
          "parameters": [
            {
              "name": "video_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "collection_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "download",
          "description": "Get download URL for a video",
          "parameters": [
            {
              "name": "name",
              "required": false,
              "type": "string"
            },
            {
              "name": "stream_link",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "subtitle",
          "description": "Add subtitles to a video in a specified language",
          "parameters": [
            {
              "name": "subtitle",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "transcription",
          "description": "Get transcription of a video",
          "parameters": [
            {
              "name": "transcription",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "dubbing",
          "description": "Dub a video into another language",
          "parameters": [
            {
              "name": "dubbing",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "editing",
          "description": "Edit or combine videos in a collection",
          "parameters": [
            {
              "name": "instructions",
              "required": true,
              "type": "string"
            },
            {
              "name": "collection_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "censor",
          "description": "Censor profanities or specified content in a video",
          "parameters": [
            {
              "name": "censor",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "video_generation",
          "description": "Generate videos from text or images",
          "parameters": [
            {
              "name": "video_generation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "audio_generation",
          "description": "Generate speech, sound effects, or music",
          "parameters": [
            {
              "name": "audio_generation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "image_generation",
          "description": "Generate or enhance images",
          "parameters": [
            {
              "name": "config",
              "required": false,
              "type": "string"
            },
            {
              "name": "prompt",
              "required": true,
              "type": "string"
            },
            {
              "name": "collection_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "generation_type",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "meeting_recorder",
          "description": "Record meetings from Google Meet or MS Teams",
          "parameters": [
            {
              "name": "title",
              "required": false,
              "type": "string"
            },
            {
              "name": "password",
              "required": false,
              "type": "string"
            },
            {
              "name": "meeting_url",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "web_search",
          "description": "Search for videos on the web",
          "parameters": [
            {
              "name": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "num_results",
              "required": false,
              "type": "string"
            },
            {
              "name": "duration_filter",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pricing",
          "description": "Get pricing or usage information for VideoDB services",
          "parameters": [
            {
              "name": "pricing",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "code_generator",
          "description": "Generate VideoDB-related code from natural language",
          "parameters": [
            {
              "name": "prompt",
              "required": true,
              "type": "string"
            },
            {
              "name": "language",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@samihalawa/video-agent-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "apiKey",
          "required": true,
          "description": "VideoDB API key to authorize the MCP server and access all individual agents"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@samihalawa/video-agent-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0795.@samihalawa_video-agent-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 777
  }
}