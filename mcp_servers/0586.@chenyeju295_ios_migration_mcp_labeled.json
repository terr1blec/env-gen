{
  "labels": {
    "analysis": "The MCP Server is designed to assist with iOS code migration and optimization. It provides tools to scan iOS projects, generate migration plans, and enforce code standards, particularly for Swift and Objective-C. The server integrates with Cursor AI to automate refactoring and ensure compliance with Apple's review guidelines. It focuses on intelligent analysis, guided refactoring, and progress tracking for iOS code modernization.",
    "reasoning": "The primary functionality revolves around optimizing and migrating iOS code, which aligns closely with development tools, particularly those focused on code analysis and refactoring. Integration with Cursor AI for automated tasks further supports this focus. Additional functionalities like project scanning and quality evaluation span into project management and shell scripting, making these secondary relevant categories.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Database Operations",
      "Cloud Services"
    ],
    "custom_label": "iOS Code Refactoring",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 585,
    "server_name": "iOS Code Migration Optimization Tool",
    "rank_by_usage": 586,
    "usage_count": "19",
    "original_file": "../crawler/smithery/@chenyeju295_ios_migration_mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@chenyeju295/ios_migration_mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "ios_scan_project",
          "description": "扫描iOS项目，返回简单的文件列表\n\nArgs:\n    project_path: iOS项目根目录路径\n    include_tests: 是否包含测试文件\n\nReturns:\n    JSON格式的项目扫描结果",
          "input_schema": {
            "properties": {
              "project_path": {
                "title": "Project Path",
                "type": "string"
              },
              "include_tests": {
                "default": false,
                "title": "Include Tests",
                "type": "boolean"
              }
            },
            "required": [
              "project_path"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "ios_setup_cursor_rules",
          "description": "在指定的Cursor项目根目录中注入cursor rules配置文件\n\nArgs:\n    project_path: 目标iOS项目路径（用于生成规则内容）\n    cursor_project_root: 当前Cursor项目根目录绝对路径\n    app_theme: App项目主题\n    include_optimization_strategies: 是否包含优化策略规则\n    include_code_creation_rules: 是否包含代码创建规则\n\nReturns:\n    JSON格式的注入结果",
          "input_schema": {
            "properties": {
              "project_path": {
                "title": "Project Path",
                "type": "string"
              },
              "cursor_project_root": {
                "title": "Cursor Project Root",
                "type": "string"
              },
              "app_theme": {
                "default": "",
                "title": "App Theme",
                "type": "string"
              },
              "include_optimization_strategies": {
                "default": true,
                "title": "Include Optimization Strategies",
                "type": "boolean"
              },
              "include_code_creation_rules": {
                "default": true,
                "title": "Include Code Creation Rules",
                "type": "boolean"
              }
            },
            "required": [
              "project_path",
              "cursor_project_root"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "ios_update_progress",
          "description": "更新项目改造进度\n\nArgs:\n    project_path: 项目根目录路径\n    completed_files: 已完成改造的文件列表\n    notes: 改造备注\n\nReturns:\n    JSON格式的更新结果",
          "input_schema": {
            "properties": {
              "project_path": {
                "title": "Project Path",
                "type": "string"
              },
              "completed_files": {
                "items": {
                  "type": "string"
                },
                "title": "Completed Files",
                "type": "array"
              },
              "notes": {
                "default": "",
                "title": "Notes",
                "type": "string"
              }
            },
            "required": [
              "project_path",
              "completed_files"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "ios_get_progress_statistics",
          "description": "获取完整的改造进度统计信息\n\nArgs:\n    project_path: 项目根目录路径\n\nReturns:\n    JSON格式的详细统计信息",
          "input_schema": {
            "properties": {
              "project_path": {
                "title": "Project Path",
                "type": "string"
              }
            },
            "required": [
              "project_path"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "ios_analyze_file",
          "description": "分析单个iOS代码文件的基本信息\n\nArgs:\n    file_path: 文件路径\n    file_content: 文件内容\n\nReturns:\n    JSON格式的文件分析结果",
          "input_schema": {
            "properties": {
              "file_path": {
                "title": "File Path",
                "type": "string"
              },
              "file_content": {
                "title": "File Content",
                "type": "string"
              }
            },
            "required": [
              "file_path",
              "file_content"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "ios_generate_cursor_instructions",
          "description": "为特定文件生成简单的Cursor改造指令\n\nArgs:\n    file_path: 要改造的文件路径\n    strategy: 改造策略 (flexible/progressive/extension)\n\nReturns:\n    JSON格式的Cursor指令",
          "input_schema": {
            "properties": {
              "file_path": {
                "title": "File Path",
                "type": "string"
              },
              "strategy": {
                "default": "flexible",
                "title": "Strategy",
                "type": "string"
              }
            },
            "required": [
              "file_path"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "ios_evaluate_project_quality",
          "description": "简单的项目质量评估\n\nArgs:\n    project_path: 项目根目录路径\n\nReturns:\n    JSON格式的质量评估报告",
          "input_schema": {
            "properties": {
              "project_path": {
                "title": "Project Path",
                "type": "string"
              }
            },
            "required": [
              "project_path"
            ],
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 7,
      "tool_names": [
        "ios_scan_project",
        "ios_setup_cursor_rules",
        "ios_update_progress",
        "ios_get_progress_statistics",
        "ios_analyze_file",
        "ios_generate_cursor_instructions",
        "ios_evaluate_project_quality"
      ]
    },
    "server_info_crawled": {
      "id": 585,
      "name": "iOS Code Migration Optimization Tool",
      "author": "@chenyeju295/ios_migration_mcp",
      "overview": "Optimize and migrate your iOS projects by automatically scanning Swift and Objective-C code, generating detailed migration plans, and providing step-by-step transformation instructions. Integrate seamlessly with Cursor AI to enforce code standards and ensure compliance with Apple review guidelines. Accelerate your iOS code modernization with intelligent analysis and guided refactoring strategies.",
      "repository_url": "https://github.com/chenyeju295/ios_migration_mcp",
      "homepage": "https://smithery.ai/server/@chenyeju295/ios_migration_mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "19",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@chenyeju295_ios_migration_mcp.json",
      "tools_count": 7,
      "tools": [
        {
          "name": "ios_scan_project",
          "description": "扫描iOS项目，返回简单的文件列表\n\nArgs:\n    project_path: iOS项目根目录路径\n    include_tests: 是否包含测试文件\n\nReturns:\n    JSON格式的项目扫描结果",
          "input_schema": {
            "properties": {
              "project_path": {
                "title": "Project Path",
                "type": "string"
              },
              "include_tests": {
                "default": false,
                "title": "Include Tests",
                "type": "boolean"
              }
            },
            "required": [
              "project_path"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "ios_setup_cursor_rules",
          "description": "在指定的Cursor项目根目录中注入cursor rules配置文件\n\nArgs:\n    project_path: 目标iOS项目路径（用于生成规则内容）\n    cursor_project_root: 当前Cursor项目根目录绝对路径\n    app_theme: App项目主题\n    include_optimization_strategies: 是否包含优化策略规则\n    include_code_creation_rules: 是否包含代码创建规则\n\nReturns:\n    JSON格式的注入结果",
          "input_schema": {
            "properties": {
              "project_path": {
                "title": "Project Path",
                "type": "string"
              },
              "cursor_project_root": {
                "title": "Cursor Project Root",
                "type": "string"
              },
              "app_theme": {
                "default": "",
                "title": "App Theme",
                "type": "string"
              },
              "include_optimization_strategies": {
                "default": true,
                "title": "Include Optimization Strategies",
                "type": "boolean"
              },
              "include_code_creation_rules": {
                "default": true,
                "title": "Include Code Creation Rules",
                "type": "boolean"
              }
            },
            "required": [
              "project_path",
              "cursor_project_root"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "ios_update_progress",
          "description": "更新项目改造进度\n\nArgs:\n    project_path: 项目根目录路径\n    completed_files: 已完成改造的文件列表\n    notes: 改造备注\n\nReturns:\n    JSON格式的更新结果",
          "input_schema": {
            "properties": {
              "project_path": {
                "title": "Project Path",
                "type": "string"
              },
              "completed_files": {
                "items": {
                  "type": "string"
                },
                "title": "Completed Files",
                "type": "array"
              },
              "notes": {
                "default": "",
                "title": "Notes",
                "type": "string"
              }
            },
            "required": [
              "project_path",
              "completed_files"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "ios_get_progress_statistics",
          "description": "获取完整的改造进度统计信息\n\nArgs:\n    project_path: 项目根目录路径\n\nReturns:\n    JSON格式的详细统计信息",
          "input_schema": {
            "properties": {
              "project_path": {
                "title": "Project Path",
                "type": "string"
              }
            },
            "required": [
              "project_path"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "ios_analyze_file",
          "description": "分析单个iOS代码文件的基本信息\n\nArgs:\n    file_path: 文件路径\n    file_content: 文件内容\n\nReturns:\n    JSON格式的文件分析结果",
          "input_schema": {
            "properties": {
              "file_path": {
                "title": "File Path",
                "type": "string"
              },
              "file_content": {
                "title": "File Content",
                "type": "string"
              }
            },
            "required": [
              "file_path",
              "file_content"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "ios_generate_cursor_instructions",
          "description": "为特定文件生成简单的Cursor改造指令\n\nArgs:\n    file_path: 要改造的文件路径\n    strategy: 改造策略 (flexible/progressive/extension)\n\nReturns:\n    JSON格式的Cursor指令",
          "input_schema": {
            "properties": {
              "file_path": {
                "title": "File Path",
                "type": "string"
              },
              "strategy": {
                "default": "flexible",
                "title": "Strategy",
                "type": "string"
              }
            },
            "required": [
              "file_path"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "ios_evaluate_project_quality",
          "description": "简单的项目质量评估\n\nArgs:\n    project_path: 项目根目录路径\n\nReturns:\n    JSON格式的质量评估报告",
          "input_schema": {
            "properties": {
              "project_path": {
                "title": "Project Path",
                "type": "string"
              }
            },
            "required": [
              "project_path"
            ],
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@chenyeju295/ios_migration_mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@chenyeju295/ios_migration_mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0586.@chenyeju295_ios_migration_mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 572
  }
}