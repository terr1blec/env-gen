{
  "labels": {
    "analysis": "The MCP Server \"Railway Infrastructure Manager\" is designed to manage Railway.app infrastructure through natural language commands. It provides a comprehensive set of tools to deploy services, manage environment variables, monitor deployments, and configure various aspects of cloud-based projects and services. The tools cover project and service management, database deployment, domain and TCP proxy configuration, environment variable handling, and persistent storage management. The primary focus is on facilitating cloud infrastructure operations and automation.",
    "reasoning": "The primary label \"Cloud Services\" was chosen because the server's core functionality revolves around managing cloud-based infrastructure on Railway.app. Secondary labels like \"Database Operations\" and \"API Integration\" were selected because the server provides tools for both database deployment and API interactions. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Cloud Services",
    "secondary_labels": [
      "Database Operations",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1532,
    "server_name": "Railway Infrastructure Manager",
    "rank_by_usage": 1533,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@Kruglyak_railway-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Kruglyak/railway-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1532,
      "name": "Railway Infrastructure Manager",
      "author": "@Kruglyak/railway-mcp",
      "overview": "Manage your Railway.app infrastructure effortlessly through natural language commands. Deploy services, manage environment variables, and monitor deployments seamlessly. Enhance your productivity by integrating Railway operations directly into your AI workflows.",
      "repository_url": "https://github.com/Kruglyak/railway-mcp",
      "homepage": "https://smithery.ai/server/@Kruglyak/railway-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Kruglyak_railway-mcp.json",
      "tools_count": 36,
      "tools": [
        {
          "name": "database_list_types",
          "description": "Deploy Server Railway Infrastructure Manager @Kruglyak/railway-mcp Try in Playground database_list_types",
          "parameters": [
            {
              "name": "Next",
              "required": false,
              "type": "string"
            },
            {
              "name": "database_deploy",
              "required": false,
              "type": "string"
            },
            {
              "name": "service_create_from_image",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "database_deploy_from_template",
          "description": "[WORKFLOW] Deploy a pre-configured database using Railway's official templates and best practices ⚡️ Best for: ✓ Standard database deployments ✓ Quick setup with security defaults ✓ Common database types (PostgreSQL, MongoDB, Redis) ⚠️ Not for: × Custom database versions × Complex configurations × Unsupported database types → Prerequisites: database_list_types → Alternatives: service_create_from_image → Next steps: variable_list, service_info → Related: volume_create, service_update",
          "parameters": [
            {
              "name": "service_update",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "deployment_list",
          "description": "[API] List recent deployments for a service in a specific environment ⚡️ Best for: ✓ Viewing deployment history ✓ Monitoring service updates → Prerequisites: service_list → Next steps: deployment_logs, deployment_trigger → Related: service_info, service_restart",
          "parameters": [
            {
              "name": "service_restart",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "deployment_trigger",
          "description": "⚠️ Not for: × Updating environment variables (use variable_set) × Restarting services (use service_restart) × Triggering new deployments (use deployment_trigger)",
          "parameters": [
            {
              "name": "deployment_trigger",
              "required": false,
              "type": "string"
            },
            {
              "name": "service_restart",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "deployment_logs",
          "description": "[API] Get logs for a specific deployment\n\n⚡️ Best for:\n  ✓ Debugging deployment issues\n  ✓ Monitoring deployment progress\n  ✓ Checking build output\n\n⚠️ Not for:\n  × Service runtime logs\n  × Database logs\n\n→ Prerequisites: deployment_list\n\n→ Next steps: deployment_status\n\n→ Related: service_info, deployment_trigger",
          "parameters": [
            {
              "name": "deployment_trigger",
              "required": false,
              "type": "string"
            },
            {
              "name": "service_restart",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "deployment_status",
          "description": "[API] Check the current status of a deployment\n\n⚡️ Best for:\n  ✓ Monitoring deployment progress\n  ✓ Verifying successful deployments\n  ✓ Checking for deployment failures\n\n⚠️ Not for:\n  × Service runtime logs\n  × Database logs\n\n→ Prerequisites: deployment_list, deployment_trigger\n\n→ Next steps: deployment_logs\n\n→ Related: service_info, service_restart, deployment_wait",
          "parameters": [
            {
              "name": "deployment_status",
              "required": false,
              "type": "string"
            },
            {
              "name": "service_update",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "domain_list",
          "description": "[API] List all domains (both service and custom) for a service ⚡️ Best for: ✓ Viewing service endpoints ✓ Managing domain configurations ✓ Auditing domain settings → Prerequisites: service_list → Next steps: domain_create, domain_update → Related: service_info, tcp_proxy_list",
          "parameters": [
            {
              "name": "tcp_proxy_list",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "domain_create",
          "description": "[API] Create a new domain for a service\n\n⚡️ Best for:\n  ✓ Setting up custom domains\n  ✓ Configuring service endpoints\n  ✓ Adding HTTPS endpoints\n\n⚠️ Not for:\n  × TCP proxy setup (use tcp_proxy_create)\n  × Internal service communication\n\n→ Prerequisites: service_list, domain_check\n\n→ Alternatives: tcp_proxy_create\n\n→ Next steps: domain_update\n\n→ Related: service_info, domain_list",
          "parameters": [
            {
              "name": "domain_update",
              "required": false,
              "type": "string"
            },
            {
              "name": "tcp_proxy_list",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "domain_check",
          "description": "[API] Check if a domain is available for use\n\n⚡️ Best for:\n  ✓ Validating domain availability\n  ✓ Pre-deployment checks\n  ✓ Domain planning\n\n→ Next steps: domain_create\n\n→ Related: domain_list",
          "parameters": [
            {
              "name": "Next",
              "required": false,
              "type": "string"
            },
            {
              "name": "domain_update",
              "required": false,
              "type": "string"
            },
            {
              "name": "domain_list",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "domain_update",
          "description": "[API] Update a domain's configuration\n\n⚡️ Best for:\n  ✓ Changing target ports\n  ✓ Updating domain settings\n  ✓ Reconfiguring endpoints\n\n⚠️ Not for:\n  × Changing domain names (delete and recreate instead)\n  × TCP proxy configuration\n\n→ Prerequisites: domain_list\n\n→ Next steps: domain_list\n\n→ Related: service_update",
          "parameters": [
            {
              "name": "domain_update",
              "required": false,
              "type": "string"
            },
            {
              "name": "tcp_proxy_list",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "domain_delete",
          "description": "[API] Delete a domain from a service ⚡️ Best for: ✓ Removing unused domains ✓ Cleaning up configurations ✓ Domain management ⚠️ Not for: × Temporary domain disabling × Port updates (use domain_update) → Prerequisites: domain_list → Alternatives: domain_update → Related: service_update",
          "parameters": [
            {
              "name": "domain_update",
              "required": false,
              "type": "string"
            },
            {
              "name": "service_update",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "project_list",
          "description": "[API] List all projects in your Railway account ⚡️ Best for: ✓ Getting an overview of all projects ✓ Finding project IDs ✓ Project discovery and management → Next steps: project_info, service_list → Related: project_create, project_delete",
          "parameters": [
            {
              "name": "project_delete",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "project_info",
          "description": "[API] Get detailed information about a specific Railway project\n\n⚡️ Best for:\n  ✓ Viewing project details and status\n  ✓ Checking environments and services\n  ✓ Project configuration review\n\n→ Prerequisites: project_list\n\n→ Next steps: service_list, variable_list\n\n→ Related: project_update, project_delete",
          "parameters": [
            {
              "name": "service_list",
              "required": false,
              "type": "string"
            },
            {
              "name": "project_delete",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "project_create",
          "description": "[API] Create a new Railway project\n\n⚡️ Best for:\n  ✓ Starting new applications\n  ✓ Setting up development environments\n  ✓ Creating project spaces\n\n⚠️ Not for:\n  × Duplicating existing projects\n\n→ Next steps: service_create_from_repo, service_create_from_image, database_deploy\n\n→ Related: project_delete, project_update",
          "parameters": [
            {
              "name": "project_delete",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "project_delete",
          "description": "[API] Delete a Railway project and all its resources\n\n⚡️ Best for:\n  ✓ Removing unused projects\n  ✓ Cleaning up test projects\n\n⚠️ Not for:\n  × Temporary project deactivation\n  × Service-level cleanup (use service_delete)\n\n→ Prerequisites: project_list, project_info\n\n→ Alternatives: service_delete\n\n→ Related: project_create",
          "parameters": [
            {
              "name": "project_delete",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "project_environments",
          "description": "List all environments in a project",
          "parameters": [
            {
              "name": "project_environments",
              "required": false,
              "type": "string"
            },
            {
              "name": "projectId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "service_list",
          "description": "[API] List all services in a specific Railway project\n\n⚡️ Best for:\n  ✓ Getting an overview of a project's services\n  ✓ Finding service IDs\n  ✓ Checking service status\n\n→ Prerequisites: project_list\n\n→ Next steps: service_info, deployment_list\n\n→ Related: project_info, variable_list",
          "parameters": [
            {
              "name": "service_restart",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "service_info",
          "description": "[API] Get detailed information about a specific service\n\n⚡️ Best for:\n  ✓ Viewing service configuration and status\n  ✓ Checking deployment details\n  ✓ Monitoring service health\n\n→ Prerequisites: service_list\n\n→ Next steps: deployment_list, variable_list\n\n→ Related: service_update, deployment_trigger",
          "parameters": [
            {
              "name": "service_info",
              "required": false,
              "type": "string"
            },
            {
              "name": "service_update",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "service_create_from_repo",
          "description": "⚠️ Not for: × Standard database deployments (use database_deploy) × GitHub repository deployments (use service_create_from_repo) × Services needing build process",
          "parameters": [
            {
              "name": "database_deploy",
              "required": false,
              "type": "string"
            },
            {
              "name": "project_update",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "service_create_from_image",
          "description": "⚠️ Not for: × Pre-built Docker images (use service_create_from_image) × Database deployments (use database_deploy) × Static file hosting",
          "parameters": [
            {
              "name": "Next",
              "required": false,
              "type": "string"
            },
            {
              "name": "database_deploy",
              "required": false,
              "type": "string"
            },
            {
              "name": "service_create_from_image",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "service_update",
          "description": "⚠️ Not for: × Restarting services (use service_restart) × Updating service config (use service_update) × Database changes",
          "parameters": [
            {
              "name": "service_update",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "service_delete",
          "description": "⚠️ Not for: × Deploying new code (use deployment_trigger) × Updating service config (use service_update) × Long-term service stoppage (use service_delete)",
          "parameters": [
            {
              "name": "service_delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "project_create",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "service_restart",
          "description": "⚠️ Not for: × Restarting services (use service_restart) × Updating service config (use service_update) × Database changes",
          "parameters": [
            {
              "name": "service_restart",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "tcp_proxy_list",
          "description": "[API] List all TCP proxies for a service in a specific environment\n\n⚡️ Best for:\n  ✓ Viewing TCP proxy configurations\n  ✓ Managing external access\n  ✓ Auditing service endpoints\n\n→ Prerequisites: service_list\n\n→ Next steps: tcp_proxy_create\n\n→ Related: domain_list, service_info",
          "parameters": [
            {
              "name": "tcp_proxy_list",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "tcp_proxy_create",
          "description": "[API] Create a new TCP proxy for a service\n\n⚡️ Best for:\n  ✓ Setting up database access\n  ✓ Configuring external connections\n  ✓ Exposing TCP services\n\n⚠️ Not for:\n  × HTTP/HTTPS endpoints (use domain_create)\n  × Internal service communication\n\n→ Prerequisites: service_list\n\n→ Alternatives: domain_create\n\n→ Next steps: tcp_proxy_list\n\n→ Related: service_info, service_update",
          "parameters": [
            {
              "name": "Next",
              "required": false,
              "type": "string"
            },
            {
              "name": "domain_update",
              "required": false,
              "type": "string"
            },
            {
              "name": "domain_list",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "tcp_proxy_delete",
          "description": "[API] Delete a TCP proxy ⚡️ Best for: ✓ Removing unused proxies ✓ Security management ✓ Endpoint cleanup ⚠️ Not for: × Temporary proxy disabling × Port updates → Prerequisites: tcp_proxy_list → Related: service_update",
          "parameters": [
            {
              "name": "tcp_proxy_list",
              "required": false,
              "type": "string"
            },
            {
              "name": "service_update",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_service_variables",
          "description": "[API] List all environment variables for a service ⚡️ Best for: ✓ Viewing service configuration ✓ Auditing environment variables ✓ Checking connection strings → Prerequisites: service_list → Next steps: variable_set, variable_delete → Related: service_info, variable_bulk_set",
          "parameters": [
            {
              "name": "variable_bulk_set",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "variable_set",
          "description": "⚠️ Not for: × Updating environment variables (use variable_set) × Restarting services (use service_restart) × Triggering new deployments (use deployment_trigger)",
          "parameters": [
            {
              "name": "service_update",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "variable_delete",
          "description": "[API] Delete a variable for a service in a specific environment\n\n⚡️ Best for:\n  ✓ Removing unused configuration\n  ✓ Security cleanup\n  ✓ Configuration management\n\n⚠️ Not for:\n  × Temporary variable disabling\n  × Bulk variable removal\n\n→ Prerequisites: service_list\n\n→ Next steps: deployment_trigger, service_restart\n\n→ Related: variable_list, variable_set",
          "parameters": [
            {
              "name": "variable_delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "variable_bulk_set",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "variable_bulk_set",
          "description": "[WORKFLOW] Create or update multiple environment variables at once\n\n⚡️ Best for:\n  ✓ Migrating configuration between services\n  ✓ Initial service setup\n  ✓ Bulk configuration updates\n\n⚠️ Not for:\n  × Single variable updates (use variable_set)\n  × Temporary configuration changes\n\n→ Prerequisites: service_list\n\n→ Alternatives: variable_set\n\n→ Next steps: deployment_trigger, service_restart\n\n→ Related: variable_list, service_update",
          "parameters": [
            {
              "name": "variable_bulk_set",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "variable_copy",
          "description": "[WORKFLOW] Copy variables from one environment to another ⚡️ Best for: ✓ Environment migration ✓ Configuration sharing ✓ Environment duplication ⚠️ Not for: × Single variable updates (use variable_set) × Temporary configuration changes → Prerequisites: service_list → Alternatives: variable_set → Next steps: deployment_trigger, service_restart → Related: variable_list, service_update",
          "parameters": [
            {
              "name": "service_update",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "configure_api_token",
          "description": "[UTILITY] Configure the Railway API token for authentication (only needed if not set in environment variables) ⚡️ Best for: ✓ Initial setup ✓ Token updates ✓ Authentication configuration ⚠️ Not for: × Project configuration × Service settings × Environment variables → Next steps: project_list, service_list → Related: project_create",
          "parameters": [
            {
              "name": "project_create",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "volume_list",
          "description": "[API] List all volumes in a project ⚡️ Best for: ✓ Viewing persistent storage configurations ✓ Managing data volumes ✓ Auditing storage usage → Prerequisites: project_list → Next steps: volume_create → Related: service_info, database_deploy",
          "parameters": [
            {
              "name": "Next",
              "required": false,
              "type": "string"
            },
            {
              "name": "volume_create",
              "required": false,
              "type": "string"
            },
            {
              "name": "database_deploy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "volume_create",
          "description": "[API] Create a new persistent volume for a service\n\n⚡️ Best for:\n  ✓ Setting up database storage\n  ✓ Configuring persistent data\n  ✓ Adding file storage\n\n⚠️ Not for:\n  × Temporary storage needs\n  × Static file hosting\n  × Memory caching\n\n→ Prerequisites: service_list\n\n→ Next steps: volume_list\n\n→ Related: service_update, database_deploy",
          "parameters": [
            {
              "name": "service_update",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "volume_update",
          "description": "Update a volume's properties",
          "parameters": [
            {
              "name": "Update",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "properties",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "volumeId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "volume_delete",
          "description": "[API] Delete a volume from a service ⚡️ Best for: ✓ Removing unused storage ✓ Storage cleanup ✓ Resource management ⚠️ Not for: × Temporary data removal × Data backup (use volume_backup first) → Prerequisites: volume_list → Related: service_update",
          "parameters": [
            {
              "name": "volume_list",
              "required": false,
              "type": "string"
            },
            {
              "name": "service_update",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Kruglyak/railway-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "railwayApiToken",
          "required": true,
          "description": "Your Railway API token for authentication. If not provided here, ensure it's available in the environment."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Kruglyak/railway-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1533.@Kruglyak_railway-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1409
  }
}