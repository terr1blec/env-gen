{
  "labels": {
    "analysis": "The MCP Server \"Brave Search Server\" is primarily focused on enabling AI assistants to perform web and local business searches using Brave Search. It integrates search capabilities into AI workflows, providing real-time search results for both general web content and local business/place information. The available tools allow querying for search results with customizable parameters like location terms and result count.",
    "reasoning": "The primary functionality is clearly in the realm of web search, making \"Web Search & Research\" the most appropriate primary label. The secondary labels \"Local Business Search\" and \"Real-time Data\" are custom labels created to capture the specific search capabilities of local businesses and places, as well as the real-time nature of the search results. These labels accurately represent the unique aspects of the server's functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Web Search & Research",
      "Database Operations"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1701,
    "server_name": "Brave Search Server",
    "rank_by_usage": 1702,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@thomasvan_mcp-brave-search.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@thomasvan/mcp-brave-search/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1701,
      "name": "Brave Search Server",
      "author": "@thomasvan/mcp-brave-search",
      "overview": "Enable AI assistants to perform web and local business searches using Brave Search. Integrate seamless search capabilities into your MCP-compatible AI workflows. Access real-time search results and local place information effortlessly.",
      "repository_url": "https://github.com/thomasvan/mcp-brave-search",
      "homepage": "https://smithery.ai/server/@thomasvan/mcp-brave-search",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@thomasvan_mcp-brave-search.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "brave_web_search",
          "description": "Deploy Server Brave Search Server @thomasvan/mcp-brave-search Try in Playground brave_web_search",
          "parameters": []
        },
        {
          "name": "brave_local_search",
          "description": "Search for local businesses and places\n\nArgs:\n    query: Location terms\n    count: Desired number of results (10-20)",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@thomasvan/mcp-brave-search/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "braveApiKey",
          "required": true,
          "description": "The API key for the Brave Search server."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@thomasvan/mcp-brave-search/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1702.@thomasvan_mcp-brave-search_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1533
  }
}