{
  "labels": {
    "analysis": "The MCP Server fetches and interacts with data from Hacker News, a popular technology and startup-related newsaggregator. It provides tools to retrieve stories, comments, user information, and search stories. The core functionality revolves around querying and retrieving structured data from Hacker News, making it primarily a web research and data-fetching tool.",
    "reasoning": "The primary label \"Web Search & Research\" was chosen because the server's main functionality is to fetch information from Hacker News, which aligns with web research activities. The secondary label \"Database Operations\" is included because the tools interact with and retrieve structured data from what is essentially a database of Hacker News content. No custom label is needed as the predefined labels adequately cover the server's functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Database Operations"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 242,
    "server_name": "Hacker News",
    "rank_by_usage": 243,
    "usage_count": "171",
    "original_file": "../crawler/smithery/mcp-hn_hacker-news.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/mcp-hn/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_stories",
          "description": "Get stories from Hacker News. The options are `top`, `new`, `ask_hn`, `show_hn` for types of stories. This doesn't include the comments. Use `get_story_info` to get the comments.",
          "input_schema": {
            "type": "object",
            "properties": {
              "story_type": {
                "type": "string",
                "description": "Type of stories to get, one of: `top`, `new`, `ask_hn`, `show_hn`"
              },
              "num_stories": {
                "type": "integer",
                "description": "Number of stories to get"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "get_user_info",
          "description": "Get user info from Hacker News, including the stories they've submitted",
          "input_schema": {
            "type": "object",
            "properties": {
              "user_name": {
                "type": "string",
                "description": "Username of the user"
              },
              "num_stories": {
                "type": "integer",
                "description": "Number of stories to get, defaults to 10"
              }
            },
            "required": [
              "user_name"
            ]
          },
          "annotations": null
        },
        {
          "name": "search_stories",
          "description": "Search stories from Hacker News. It is generally recommended to use simpler queries to get a broader set of results (less than 5 words). Very targetted queries may not return any results.",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Search query"
              },
              "search_by_date": {
                "type": "boolean",
                "description": "Search by date, defaults to False. If this is False, then we search by relevance, then points, then number of comments."
              },
              "num_results": {
                "type": "integer",
                "description": "Number of results to get, defaults to 10"
              }
            },
            "required": [
              "query"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_story_info",
          "description": "Get detailed story info from Hacker News, including the comments",
          "input_schema": {
            "type": "object",
            "properties": {
              "story_id": {
                "type": "integer",
                "description": "Story ID"
              }
            }
          },
          "annotations": null
        }
      ],
      "tool_count": 4,
      "tool_names": [
        "get_stories",
        "get_user_info",
        "search_stories",
        "get_story_info"
      ]
    },
    "server_info_crawled": {
      "id": 242,
      "name": "Hacker News",
      "author": "mcp-hn",
      "overview": "Fetch stories, comments, and user info from Hacker News.",
      "repository_url": "https://github.com/erithwik/mcp-hn",
      "homepage": "https://smithery.ai/server/mcp-hn",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "171",
      "success_rate": "99.18%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/mcp-hn_hacker-news.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "get_stories",
          "description": "Get stories from Hacker News. The options are `top`, `new`, `ask_hn`, `show_hn` for types of stories. This doesn't include the comments. Use `get_story_info` to get the comments.",
          "input_schema": {
            "type": "object",
            "properties": {
              "story_type": {
                "type": "string",
                "description": "Type of stories to get, one of: `top`, `new`, `ask_hn`, `show_hn`"
              },
              "num_stories": {
                "type": "integer",
                "description": "Number of stories to get"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "get_user_info",
          "description": "Get user info from Hacker News, including the stories they've submitted",
          "input_schema": {
            "type": "object",
            "properties": {
              "user_name": {
                "type": "string",
                "description": "Username of the user"
              },
              "num_stories": {
                "type": "integer",
                "description": "Number of stories to get, defaults to 10"
              }
            },
            "required": [
              "user_name"
            ]
          },
          "annotations": null
        },
        {
          "name": "search_stories",
          "description": "Search stories from Hacker News. It is generally recommended to use simpler queries to get a broader set of results (less than 5 words). Very targetted queries may not return any results.",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Search query"
              },
              "search_by_date": {
                "type": "boolean",
                "description": "Search by date, defaults to False. If this is False, then we search by relevance, then points, then number of comments."
              },
              "num_results": {
                "type": "integer",
                "description": "Number of results to get, defaults to 10"
              }
            },
            "required": [
              "query"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_story_info",
          "description": "Get detailed story info from Hacker News, including the comments",
          "input_schema": {
            "type": "object",
            "properties": {
              "story_id": {
                "type": "integer",
                "description": "Story ID"
              }
            }
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/mcp-hn/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/mcp-hn/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0243.mcp-hn_hacker-news_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 239
  }
}