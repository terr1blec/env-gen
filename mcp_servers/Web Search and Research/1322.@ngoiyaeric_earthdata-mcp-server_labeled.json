{
  "labels": {
    "analysis": "The Earthdata MCP Server primarily facilitates geospatial data discovery and retrieval from NASA Earth Data. It enables users to search for datasets and data granules with optional filters like temporal range and geographic bounding box. This functionality is tailored for researchers, analysts, and professionals working with Earth observation data, emphasizing seamless interaction with NASA's geospatial assets for data-driven projects.",
    "reasoning": "The **Web Search & Research** label is chosen as the primary label because the server's core functionality revolves around searching and retrieving Earth data, which aligns with web-based research activities. **Data Analysis & Processing** is a secondary label due to the tools' capability to support analysis by filtering data granules and datasets. There is no need for additional secondary or custom labels, as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1321,
    "server_name": "Earthdata MCP Server",
    "rank_by_usage": 1322,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@ngoiyaeric_earthdata-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ngoiyaeric/earthdata-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "search_earth_datasets",
          "description": "\n    Search for datasets on NASA Earthdata.\n    \n    Args:\n    search_keywords: Keywords to search for in the dataset titles.\n    count: Number of datasets to return.\n    temporal: (Optional) Temporal range in the format (date_from, date_to).\n    bounding_box: (Optional) Bounding box in the format (lower_left_lon, lower_left_lat, upper_right_lon, upper_right_lat).\n        \n    Returns:\n    list\n        List of dataset abstracts.\n    ",
          "input_schema": {
            "properties": {
              "search_keywords": {
                "title": "Search Keywords",
                "type": "string"
              },
              "count": {
                "title": "Count",
                "type": "integer"
              },
              "temporal": {
                "anyOf": [
                  {
                    "items": {},
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Temporal"
              },
              "bounding_box": {
                "anyOf": [
                  {
                    "items": {},
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Bounding Box"
              }
            },
            "required": [
              "search_keywords",
              "count",
              "temporal",
              "bounding_box"
            ],
            "title": "search_earth_datasetsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_earth_datagranules",
          "description": "\n    Search for data granules on NASA Earthdata.\n    \n    Args:\n    short_name: Short name of the dataset.\n    count: Number of data granules to return.\n    temporal: (Optional) Temporal range in the format (date_from, date_to).\n    bounding_box: (Optional) Bounding box in the format (lower_left_lon, lower_left_lat, upper_right_lon, upper_right_lat).\n        \n    Returns:\n    list\n        List of data granules.\n    ",
          "input_schema": {
            "properties": {
              "short_name": {
                "title": "Short Name",
                "type": "string"
              },
              "count": {
                "title": "Count",
                "type": "integer"
              },
              "temporal": {
                "anyOf": [
                  {
                    "items": {},
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Temporal"
              },
              "bounding_box": {
                "anyOf": [
                  {
                    "items": {},
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Bounding Box"
              }
            },
            "required": [
              "short_name",
              "count",
              "temporal",
              "bounding_box"
            ],
            "title": "search_earth_datagranulesArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 2,
      "tool_names": [
        "search_earth_datasets",
        "search_earth_datagranules"
      ]
    },
    "server_info_crawled": {
      "id": 1321,
      "name": "Earthdata MCP Server",
      "author": "@ngoiyaeric/earthdata-mcp-server",
      "overview": "Enable efficient dataset discovery and retrieval for geospatial analysis using NASA Earth Data. Interact seamlessly with datasets and data granules to enhance your data-driven projects. Leverage powerful tools to search and analyze Earth data effortlessly.",
      "repository_url": "https://github.com/ngoiyaeric/earthdata-mcp-server",
      "homepage": "https://smithery.ai/server/@ngoiyaeric/earthdata-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ngoiyaeric_earthdata-mcp-server.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "search_earth_datasets",
          "description": "\n    Search for datasets on NASA Earthdata.\n    \n    Args:\n    search_keywords: Keywords to search for in the dataset titles.\n    count: Number of datasets to return.\n    temporal: (Optional) Temporal range in the format (date_from, date_to).\n    bounding_box: (Optional) Bounding box in the format (lower_left_lon, lower_left_lat, upper_right_lon, upper_right_lat).\n        \n    Returns:\n    list\n        List of dataset abstracts.\n    ",
          "input_schema": {
            "properties": {
              "search_keywords": {
                "title": "Search Keywords",
                "type": "string"
              },
              "count": {
                "title": "Count",
                "type": "integer"
              },
              "temporal": {
                "anyOf": [
                  {
                    "items": {},
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Temporal"
              },
              "bounding_box": {
                "anyOf": [
                  {
                    "items": {},
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Bounding Box"
              }
            },
            "required": [
              "search_keywords",
              "count",
              "temporal",
              "bounding_box"
            ],
            "title": "search_earth_datasetsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_earth_datagranules",
          "description": "\n    Search for data granules on NASA Earthdata.\n    \n    Args:\n    short_name: Short name of the dataset.\n    count: Number of data granules to return.\n    temporal: (Optional) Temporal range in the format (date_from, date_to).\n    bounding_box: (Optional) Bounding box in the format (lower_left_lon, lower_left_lat, upper_right_lon, upper_right_lat).\n        \n    Returns:\n    list\n        List of data granules.\n    ",
          "input_schema": {
            "properties": {
              "short_name": {
                "title": "Short Name",
                "type": "string"
              },
              "count": {
                "title": "Count",
                "type": "integer"
              },
              "temporal": {
                "anyOf": [
                  {
                    "items": {},
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Temporal"
              },
              "bounding_box": {
                "anyOf": [
                  {
                    "items": {},
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Bounding Box"
              }
            },
            "required": [
              "short_name",
              "count",
              "temporal",
              "bounding_box"
            ],
            "title": "search_earth_datagranulesArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ngoiyaeric/earthdata-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ngoiyaeric/earthdata-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1322.@ngoiyaeric_earthdata-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1251
  }
}