{
  "labels": {
    "analysis": "The MCP Server is designed to facilitate academic research by enabling AI assistants to search and retrieve scholarly articles, metadata, and author information from Google Scholar. It supports both keyword and advanced searches, making it a valuable tool for researchers, students, and AI applications focused on academia. The server's core functionality revolves around accessing and processing academic literature efficiently.",
    "reasoning": "The primary label is \"Web Search & Research\" because the server's main purpose is to search and retrieve scholarly information from the web. The secondary label \"Database Operations\" is chosen due to the structured querying of academic metadata. The secondary label \"API Integration\" is relevant because the server acts as an intermediary between AI applications and Google Scholar, enabling seamless data flow. No custom label is needed as the predefined labels adequately cover the server's functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Database Operations",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 61,
    "server_name": "Google Scholar Search Server",
    "rank_by_usage": 62,
    "usage_count": "1,417",
    "original_file": "../crawler/smithery/@DeadWaveWave_google-scholar-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751937975,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@DeadWaveWave/google-scholar-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "search_google_scholar_key_words",
          "description": "",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "num_results": {
                "default": 5,
                "title": "Num Results",
                "type": "integer"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_google_scholar_key_wordsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_google_scholar_advanced",
          "description": "",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "author": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Author"
              },
              "year_range": {
                "anyOf": [
                  {
                    "items": {},
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Year Range"
              },
              "num_results": {
                "default": 5,
                "title": "Num Results",
                "type": "integer"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_google_scholar_advancedArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_author_info",
          "description": "",
          "input_schema": {
            "properties": {
              "author_name": {
                "title": "Author Name",
                "type": "string"
              }
            },
            "required": [
              "author_name"
            ],
            "title": "get_author_infoArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 3,
      "tool_names": [
        "search_google_scholar_key_words",
        "search_google_scholar_advanced",
        "get_author_info"
      ]
    },
    "server_info_crawled": {
      "id": 61,
      "name": "Google Scholar Search Server",
      "author": "@DeadWaveWave/google-scholar-mcp-server",
      "overview": "Enable AI assistants to search and access academic papers from Google Scholar through a simple MCP interface. Perform keyword and advanced searches, retrieve paper metadata, and get detailed author information to support academic research and analysis. Integrate seamlessly with AI applications to enhance research capabilities.",
      "repository_url": "https://github.com/DeadWaveWave/Google-Scholar-MCP-Server",
      "homepage": "https://smithery.ai/server/@DeadWaveWave/google-scholar-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "1,417",
      "success_rate": "99.87%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@DeadWaveWave_google-scholar-mcp-server.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "search_google_scholar_key_words",
          "description": "",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "num_results": {
                "default": 5,
                "title": "Num Results",
                "type": "integer"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_google_scholar_key_wordsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_google_scholar_advanced",
          "description": "",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "author": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Author"
              },
              "year_range": {
                "anyOf": [
                  {
                    "items": {},
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Year Range"
              },
              "num_results": {
                "default": 5,
                "title": "Num Results",
                "type": "integer"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_google_scholar_advancedArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_author_info",
          "description": "",
          "input_schema": {
            "properties": {
              "author_name": {
                "title": "Author Name",
                "type": "string"
              }
            },
            "required": [
              "author_name"
            ],
            "title": "get_author_infoArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@DeadWaveWave/google-scholar-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@DeadWaveWave/google-scholar-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0062.@DeadWaveWave_google-scholar-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 61
  }
}