{
  "labels": {
    "analysis": "The MCP Server primarily provides access to DuckDuckGo's search capabilities across multiple content types (text, images, news, videos) while also offering an AI chat functionality for generating insights from queries. The core focus is on enabling web searches with a particular emphasis on privacy, as DuckDuckGo is known for not tracking users. The tools suggest a broad range of search applications, from general information retrieval to multimedia content discovery.",
    "reasoning": "The primary label \"Web Search & Research\" is chosen because the server's core functionality revolves around search operations across different media types. The AI chat tool, while advanced, is accessed through and supplements the search capabilities rather than standing alone. Additional secondary labels like \"AI/ML Tools\" and \"Content Creation\" are included because the AI-assisted chat can generate insights (AI relevance) and the search tools can assist in content discovery (Content Creation). No custom label is needed as the predefined categories sufficiently cover all aspects.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "AI/ML Tools",
      "Content Creation"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1064,
    "server_name": "DuckDuckGo Search API",
    "rank_by_usage": 1065,
    "usage_count": "1",
    "original_file": "../crawler/smithery/@misanthropic-ai_ddg-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@misanthropic-ai/ddg-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "ddg-text-search",
          "description": "Search the web for text results using DuckDuckGo",
          "input_schema": {
            "type": "object",
            "properties": {
              "keywords": {
                "type": "string",
                "description": "Search query keywords"
              },
              "region": {
                "type": "string",
                "description": "Region code (e.g., wt-wt, us-en, uk-en)",
                "default": "wt-wt"
              },
              "safesearch": {
                "type": "string",
                "enum": [
                  "on",
                  "moderate",
                  "off"
                ],
                "description": "Safe search level",
                "default": "moderate"
              },
              "timelimit": {
                "type": "string",
                "enum": [
                  "d",
                  "w",
                  "m",
                  "y"
                ],
                "description": "Time limit (d=day, w=week, m=month, y=year)"
              },
              "max_results": {
                "type": "integer",
                "description": "Maximum number of results to return",
                "default": 10
              }
            },
            "required": [
              "keywords"
            ]
          },
          "annotations": null
        },
        {
          "name": "ddg-image-search",
          "description": "Search the web for images using DuckDuckGo",
          "input_schema": {
            "type": "object",
            "properties": {
              "keywords": {
                "type": "string",
                "description": "Search query keywords"
              },
              "region": {
                "type": "string",
                "description": "Region code (e.g., wt-wt, us-en, uk-en)",
                "default": "wt-wt"
              },
              "safesearch": {
                "type": "string",
                "enum": [
                  "on",
                  "moderate",
                  "off"
                ],
                "description": "Safe search level",
                "default": "moderate"
              },
              "timelimit": {
                "type": "string",
                "enum": [
                  "d",
                  "w",
                  "m",
                  "y"
                ],
                "description": "Time limit (d=day, w=week, m=month, y=year)"
              },
              "size": {
                "type": "string",
                "enum": [
                  "Small",
                  "Medium",
                  "Large",
                  "Wallpaper"
                ],
                "description": "Image size"
              },
              "color": {
                "type": "string",
                "enum": [
                  "color",
                  "Monochrome",
                  "Red",
                  "Orange",
                  "Yellow",
                  "Green",
                  "Blue",
                  "Purple",
                  "Pink",
                  "Brown",
                  "Black",
                  "Gray",
                  "Teal",
                  "White"
                ],
                "description": "Image color"
              },
              "type_image": {
                "type": "string",
                "enum": [
                  "photo",
                  "clipart",
                  "gif",
                  "transparent",
                  "line"
                ],
                "description": "Image type"
              },
              "layout": {
                "type": "string",
                "enum": [
                  "Square",
                  "Tall",
                  "Wide"
                ],
                "description": "Image layout"
              },
              "license_image": {
                "type": "string",
                "enum": [
                  "any",
                  "Public",
                  "Share",
                  "ShareCommercially",
                  "Modify",
                  "ModifyCommercially"
                ],
                "description": "Image license type"
              },
              "max_results": {
                "type": "integer",
                "description": "Maximum number of results to return",
                "default": 10
              }
            },
            "required": [
              "keywords"
            ]
          },
          "annotations": null
        },
        {
          "name": "ddg-news-search",
          "description": "Search for news articles using DuckDuckGo",
          "input_schema": {
            "type": "object",
            "properties": {
              "keywords": {
                "type": "string",
                "description": "Search query keywords"
              },
              "region": {
                "type": "string",
                "description": "Region code (e.g., wt-wt, us-en, uk-en)",
                "default": "wt-wt"
              },
              "safesearch": {
                "type": "string",
                "enum": [
                  "on",
                  "moderate",
                  "off"
                ],
                "description": "Safe search level",
                "default": "moderate"
              },
              "timelimit": {
                "type": "string",
                "enum": [
                  "d",
                  "w",
                  "m"
                ],
                "description": "Time limit (d=day, w=week, m=month)"
              },
              "max_results": {
                "type": "integer",
                "description": "Maximum number of results to return",
                "default": 10
              }
            },
            "required": [
              "keywords"
            ]
          },
          "annotations": null
        },
        {
          "name": "ddg-video-search",
          "description": "Search for videos using DuckDuckGo",
          "input_schema": {
            "type": "object",
            "properties": {
              "keywords": {
                "type": "string",
                "description": "Search query keywords"
              },
              "region": {
                "type": "string",
                "description": "Region code (e.g., wt-wt, us-en, uk-en)",
                "default": "wt-wt"
              },
              "safesearch": {
                "type": "string",
                "enum": [
                  "on",
                  "moderate",
                  "off"
                ],
                "description": "Safe search level",
                "default": "moderate"
              },
              "timelimit": {
                "type": "string",
                "enum": [
                  "d",
                  "w",
                  "m"
                ],
                "description": "Time limit (d=day, w=week, m=month)"
              },
              "resolution": {
                "type": "string",
                "enum": [
                  "high",
                  "standard"
                ],
                "description": "Video resolution"
              },
              "duration": {
                "type": "string",
                "enum": [
                  "short",
                  "medium",
                  "long"
                ],
                "description": "Video duration"
              },
              "license_videos": {
                "type": "string",
                "enum": [
                  "creativeCommon",
                  "youtube"
                ],
                "description": "Video license type"
              },
              "max_results": {
                "type": "integer",
                "description": "Maximum number of results to return",
                "default": 10
              }
            },
            "required": [
              "keywords"
            ]
          },
          "annotations": null
        },
        {
          "name": "ddg-ai-chat",
          "description": "Chat with DuckDuckGo AI",
          "input_schema": {
            "type": "object",
            "properties": {
              "keywords": {
                "type": "string",
                "description": "Message or question to send to the AI"
              },
              "model": {
                "type": "string",
                "enum": [
                  "gpt-4o-mini",
                  "llama-3.3-70b",
                  "claude-3-haiku",
                  "o3-mini",
                  "mistral-small-3"
                ],
                "description": "AI model to use",
                "default": "gpt-4o-mini"
              }
            },
            "required": [
              "keywords"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 5,
      "tool_names": [
        "ddg-text-search",
        "ddg-image-search",
        "ddg-news-search",
        "ddg-video-search",
        "ddg-ai-chat"
      ]
    },
    "server_info_crawled": {
      "id": 1064,
      "name": "DuckDuckGo Search API",
      "author": "@misanthropic-ai/ddg-mcp",
      "overview": "Leverage DuckDuckGo's search capabilities to find text, images, news, and videos seamlessly. Engage with AI chat for instant answers and insights based on your queries. Enhance your applications with powerful search functionalities while maintaining user privacy.",
      "repository_url": "https://github.com/misanthropic-ai/ddg-mcp",
      "homepage": "https://smithery.ai/server/@misanthropic-ai/ddg-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "1",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@misanthropic-ai_ddg-mcp.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "ddg-text-search",
          "description": "Search the web for text results using DuckDuckGo",
          "input_schema": {
            "type": "object",
            "properties": {
              "keywords": {
                "type": "string",
                "description": "Search query keywords"
              },
              "region": {
                "type": "string",
                "description": "Region code (e.g., wt-wt, us-en, uk-en)",
                "default": "wt-wt"
              },
              "safesearch": {
                "type": "string",
                "enum": [
                  "on",
                  "moderate",
                  "off"
                ],
                "description": "Safe search level",
                "default": "moderate"
              },
              "timelimit": {
                "type": "string",
                "enum": [
                  "d",
                  "w",
                  "m",
                  "y"
                ],
                "description": "Time limit (d=day, w=week, m=month, y=year)"
              },
              "max_results": {
                "type": "integer",
                "description": "Maximum number of results to return",
                "default": 10
              }
            },
            "required": [
              "keywords"
            ]
          },
          "annotations": null
        },
        {
          "name": "ddg-image-search",
          "description": "Search the web for images using DuckDuckGo",
          "input_schema": {
            "type": "object",
            "properties": {
              "keywords": {
                "type": "string",
                "description": "Search query keywords"
              },
              "region": {
                "type": "string",
                "description": "Region code (e.g., wt-wt, us-en, uk-en)",
                "default": "wt-wt"
              },
              "safesearch": {
                "type": "string",
                "enum": [
                  "on",
                  "moderate",
                  "off"
                ],
                "description": "Safe search level",
                "default": "moderate"
              },
              "timelimit": {
                "type": "string",
                "enum": [
                  "d",
                  "w",
                  "m",
                  "y"
                ],
                "description": "Time limit (d=day, w=week, m=month, y=year)"
              },
              "size": {
                "type": "string",
                "enum": [
                  "Small",
                  "Medium",
                  "Large",
                  "Wallpaper"
                ],
                "description": "Image size"
              },
              "color": {
                "type": "string",
                "enum": [
                  "color",
                  "Monochrome",
                  "Red",
                  "Orange",
                  "Yellow",
                  "Green",
                  "Blue",
                  "Purple",
                  "Pink",
                  "Brown",
                  "Black",
                  "Gray",
                  "Teal",
                  "White"
                ],
                "description": "Image color"
              },
              "type_image": {
                "type": "string",
                "enum": [
                  "photo",
                  "clipart",
                  "gif",
                  "transparent",
                  "line"
                ],
                "description": "Image type"
              },
              "layout": {
                "type": "string",
                "enum": [
                  "Square",
                  "Tall",
                  "Wide"
                ],
                "description": "Image layout"
              },
              "license_image": {
                "type": "string",
                "enum": [
                  "any",
                  "Public",
                  "Share",
                  "ShareCommercially",
                  "Modify",
                  "ModifyCommercially"
                ],
                "description": "Image license type"
              },
              "max_results": {
                "type": "integer",
                "description": "Maximum number of results to return",
                "default": 10
              }
            },
            "required": [
              "keywords"
            ]
          },
          "annotations": null
        },
        {
          "name": "ddg-news-search",
          "description": "Search for news articles using DuckDuckGo",
          "input_schema": {
            "type": "object",
            "properties": {
              "keywords": {
                "type": "string",
                "description": "Search query keywords"
              },
              "region": {
                "type": "string",
                "description": "Region code (e.g., wt-wt, us-en, uk-en)",
                "default": "wt-wt"
              },
              "safesearch": {
                "type": "string",
                "enum": [
                  "on",
                  "moderate",
                  "off"
                ],
                "description": "Safe search level",
                "default": "moderate"
              },
              "timelimit": {
                "type": "string",
                "enum": [
                  "d",
                  "w",
                  "m"
                ],
                "description": "Time limit (d=day, w=week, m=month)"
              },
              "max_results": {
                "type": "integer",
                "description": "Maximum number of results to return",
                "default": 10
              }
            },
            "required": [
              "keywords"
            ]
          },
          "annotations": null
        },
        {
          "name": "ddg-video-search",
          "description": "Search for videos using DuckDuckGo",
          "input_schema": {
            "type": "object",
            "properties": {
              "keywords": {
                "type": "string",
                "description": "Search query keywords"
              },
              "region": {
                "type": "string",
                "description": "Region code (e.g., wt-wt, us-en, uk-en)",
                "default": "wt-wt"
              },
              "safesearch": {
                "type": "string",
                "enum": [
                  "on",
                  "moderate",
                  "off"
                ],
                "description": "Safe search level",
                "default": "moderate"
              },
              "timelimit": {
                "type": "string",
                "enum": [
                  "d",
                  "w",
                  "m"
                ],
                "description": "Time limit (d=day, w=week, m=month)"
              },
              "resolution": {
                "type": "string",
                "enum": [
                  "high",
                  "standard"
                ],
                "description": "Video resolution"
              },
              "duration": {
                "type": "string",
                "enum": [
                  "short",
                  "medium",
                  "long"
                ],
                "description": "Video duration"
              },
              "license_videos": {
                "type": "string",
                "enum": [
                  "creativeCommon",
                  "youtube"
                ],
                "description": "Video license type"
              },
              "max_results": {
                "type": "integer",
                "description": "Maximum number of results to return",
                "default": 10
              }
            },
            "required": [
              "keywords"
            ]
          },
          "annotations": null
        },
        {
          "name": "ddg-ai-chat",
          "description": "Chat with DuckDuckGo AI",
          "input_schema": {
            "type": "object",
            "properties": {
              "keywords": {
                "type": "string",
                "description": "Message or question to send to the AI"
              },
              "model": {
                "type": "string",
                "enum": [
                  "gpt-4o-mini",
                  "llama-3.3-70b",
                  "claude-3-haiku",
                  "o3-mini",
                  "mistral-small-3"
                ],
                "description": "AI model to use",
                "default": "gpt-4o-mini"
              }
            },
            "required": [
              "keywords"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@misanthropic-ai/ddg-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@misanthropic-ai/ddg-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1065.@misanthropic-ai_ddg-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1043
  }
}