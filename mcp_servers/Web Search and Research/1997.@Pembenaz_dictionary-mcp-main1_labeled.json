{
  "labels": {
    "analysis": "The Dictionary MCP Server is designed to provide dictionary lookup capabilities, allowing users to retrieve word definitions. It integrates dictionary data into LLM workflows to enhance language understanding and context enrichment. The primary tool, get_definitions, enables users to fetch definitions for words, which can be used for a variety of language-related tasks.",
    "reasoning": "The primary label is \"Web Search & Research\" because the server's core function is to provide dictionary definitions, which is a form of research tool. While it could also fit under \"Language Processing\" or \"Content Creation,\" Web Search & Research is the most broadly applicable category. No secondary labels are necessary as the functionality is tightly focused on dictionary lookups. No custom label is needed as the predefined category adequately covers the use case.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [],
    "custom_label": "None",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1996,
    "server_name": "Dictionary MCP Server",
    "rank_by_usage": 1997,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@Pembenaz_dictionary-mcp-main1.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Pembenaz/dictionary-mcp-main1/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_definitions",
          "description": "\n    Get definitions for a word.\n    ",
          "input_schema": {
            "properties": {
              "word": {
                "title": "Word",
                "type": "string"
              }
            },
            "required": [
              "word"
            ],
            "title": "get_definitionsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get_definitions"
      ]
    },
    "server_info_crawled": {
      "id": 1996,
      "name": "Dictionary MCP Server",
      "author": "@Pembenaz/dictionary-mcp-main1",
      "overview": "Provide dictionary lookup capabilities to your agents by exposing word definitions and related information. Enable seamless integration of dictionary data into LLM workflows for enhanced language understanding and context enrichment. Simplify access to lexical resources through standardized MCP interfaces.",
      "repository_url": "https://github.com/Pembenaz/dictionary-mcp-main1",
      "homepage": "https://smithery.ai/server/@Pembenaz/dictionary-mcp-main1",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Pembenaz_dictionary-mcp-main1.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_definitions",
          "description": "\n    Get definitions for a word.\n    ",
          "input_schema": {
            "properties": {
              "word": {
                "title": "Word",
                "type": "string"
              }
            },
            "required": [
              "word"
            ],
            "title": "get_definitionsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Pembenaz/dictionary-mcp-main1/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Pembenaz/dictionary-mcp-main1/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1997.@Pembenaz_dictionary-mcp-main1_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1742
  }
}