{
  "labels": {
    "analysis": "The MCP Server specializes in LinkedIn profile data mining, offering tools to search, extract, enrich, and manage professional profiles. It leverages AI for query expansion, validates contact information through Apollo API, and provides export/management features. The primary use cases are recruitment, business development, and market research.",
    "reasoning": "The primary label \"Web Search & Research\" is chosen because the server's core function is mining LinkedIn profiles for professional data, which aligns with research and data gathering. \"Browser Automation\" is a secondary label due to the scraping/extraction capabilities, while \"Memory Management\" fits the CSV export and persistent storage features. No custom label is needed as predefined categories adequately cover the functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Browser Automation",
      "Memory Management"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 803,
    "server_name": "LinkedIn Profile Data Mining Server",
    "rank_by_usage": 804,
    "usage_count": "7",
    "original_file": "../crawler/smithery/@amankale376_profile-researcher.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@amankale376/profile-researcher/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 803,
      "name": "LinkedIn Profile Data Mining Server",
      "author": "@amankale376/profile-researcher",
      "overview": "Enable advanced LinkedIn profile search, extraction, and contact information enrichment through a powerful MCP server. Leverage AI-powered query expansion, smart filtering, and multiple data sources to obtain comprehensive and validated professional profiles. Export and manage data efficiently with built-in CSV support and persistent storage.",
      "repository_url": "https://github.com/amankale376/profile-researcher",
      "homepage": "https://smithery.ai/server/@amankale376/profile-researcher",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "7",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@amankale376_profile-researcher.json",
      "tools_count": 12,
      "tools": [
        {
          "name": "search_linkedin_profiles",
          "description": "Deploy Server LinkedIn Profile Data Mining Server @amankale376/profile-researcher Try in Playground search_linkedin_profiles",
          "parameters": [
            {
              "name": "keywords",
              "required": true,
              "type": "string"
            },
            {
              "name": "num_results",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "extract_profile_data",
          "description": "Extract detailed profile data from LinkedIn URLs",
          "parameters": [
            {
              "name": "extract_profile_data",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "mine_linkedin_data",
          "description": "Comprehensive LinkedIn data mining: search, extract, and enrich profile data",
          "parameters": [
            {
              "name": "mine_linkedin_data",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_contact_info",
          "description": "Get contact information for a person using Apollo API",
          "parameters": [
            {
              "name": "get_contact_info",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "export_to_csv",
          "description": "Export all stored profile data to CSV file",
          "parameters": [
            {
              "name": "export_to_csv",
              "required": false,
              "type": "string"
            },
            {
              "name": "filename",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_stored_profiles",
          "description": "Retrieve all profiles stored in the database",
          "parameters": [
            {
              "name": "get_stored_profiles",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "generate_search_queries",
          "description": "Generate additional search queries for LinkedIn profile mining using AI",
          "parameters": [
            {
              "name": "generate_search_queries",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "enrich_contact_info",
          "description": "Enrich existing profiles with contact information using Apollo API",
          "parameters": [
            {
              "name": "enrich_contact_info",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_profile_details",
          "description": "Get detailed information for specific LinkedIn profiles",
          "parameters": [
            {
              "name": "get_profile_details",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_profiles_by_criteria",
          "description": "Search stored profiles by specific criteria (company, job title, etc.)",
          "parameters": [
            {
              "name": "search_profiles_by_criteria",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_search_statistics",
          "description": "Get statistics about stored profiles and search performance",
          "parameters": [
            {
              "name": "get_search_statistics",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "clear_database",
          "description": "Clear all stored profile data from the database",
          "parameters": [
            {
              "name": "confirm",
              "required": true,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@amankale376/profile-researcher/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "apolloApiKey",
          "required": true,
          "description": "Apollo.io API key"
        },
        {
          "name": "geminiApiKey",
          "required": true,
          "description": "Google Gemini API key"
        },
        {
          "name": "nubelaApiKey",
          "required": true,
          "description": "Nubela Proxycurl API key"
        },
        {
          "name": "openaiApiKey",
          "required": true,
          "description": "OpenAI API key"
        },
        {
          "name": "openrouterApiKey",
          "required": true,
          "description": "OpenRouter API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@amankale376/profile-researcher/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0804.@amankale376_profile-researcher_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 785
  }
}