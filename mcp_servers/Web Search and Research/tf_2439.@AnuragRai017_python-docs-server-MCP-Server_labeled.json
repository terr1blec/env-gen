{
  "labels": {
    "analysis": "The MCP Server is a specialized documentation helper that fetches Python documentation using the Brave Search API. Its primary function is to provide quick access to relevant Python documentation based on user queries, making it particularly useful for developers and programmers who need to reference documentation while coding. The tool enhances productivity by automating the search for documentation.",
    "reasoning": "The primary label \"Web Search & Research\" is chosen because the server's core functionality involves searching for and retrieving documentation online. The secondary label \"Development Tools\" is selected because the server is specifically tailored to assist developers with Python documentation. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Development Tools"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2438,
    "server_name": "Python Documentation Server",
    "rank_by_usage": 2439,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@AnuragRai017_python-docs-server-MCP-Server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@AnuragRai017/python-docs-server-MCP-Server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_python_docs",
          "description": "Get Python documentation for a given query",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "The search query for Python documentation"
              }
            },
            "required": [
              "query"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get_python_docs"
      ]
    },
    "server_info_crawled": {
      "id": 2438,
      "name": "Python Documentation Server",
      "author": "@AnuragRai017/python-docs-server-MCP-Server",
      "overview": "Fetch Python documentation effortlessly using the Brave Search API. Get relevant documentation links based on your queries to enhance your coding experience. Simplify your search for Python resources with this dedicated server.",
      "repository_url": "https://github.com/AnuragRai017/python-docs-server-MCP-Server",
      "homepage": "https://smithery.ai/server/@AnuragRai017/python-docs-server-MCP-Server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@AnuragRai017_python-docs-server-MCP-Server.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_python_docs",
          "description": "Get Python documentation for a given query",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "The search query for Python documentation"
              }
            },
            "required": [
              "query"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@AnuragRai017/python-docs-server-MCP-Server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@AnuragRai017/python-docs-server-MCP-Server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "2439.@AnuragRai017_python-docs-server-MCP-Server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 2080
  }
}