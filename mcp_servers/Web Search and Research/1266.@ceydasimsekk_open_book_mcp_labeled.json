{
  "labels": {
    "analysis": "The MCP Server \"Open Book\" is designed to enhance LLM applications by providing dynamic access to external data and tools through a standardized protocol. Its core functionality revolves around integrating external resources (such as book search capabilities) to allow language models to interact with real-world context. The primary tool, \"search_books_tool,\" focuses on book searches based on user queries, indicating a strong emphasis on information retrieval and research support.",
    "reasoning": "The primary functionality of the server aligns closely with \"Web Search & Research\" due to its focus on retrieving book-related information, a common use case for research and academic purposes. While it could also fall under \"Browser Automation\" since it enables automated searching, the emphasis on information retrieval for research makes \"Web Search & Research\" the more apt primary label. No unique functionality is evident that would require a custom label.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Browser Automation"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1265,
    "server_name": "Open Book",
    "rank_by_usage": 1266,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@ceydasimsekk_open_book_mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ceydasimsekk/open_book_mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "search_books_tool",
          "description": "\n    Kullanıcıdan gelen sorguyla kitap araması yapar.\n    ",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_books_toolArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "search_books_tool"
      ]
    },
    "server_info_crawled": {
      "id": 1265,
      "name": "Open Book",
      "author": "@ceydasimsekk/open_book_mcp",
      "overview": "Provide a flexible MCP server that integrates external data and tools to enhance LLM applications. Enable dynamic access to resources and execution of actions through a standardized protocol. Facilitate seamless interaction between language models and real-world context for improved AI workflows.",
      "repository_url": "https://github.com/ceydasimsekk/open_book_mcp",
      "homepage": "https://smithery.ai/server/@ceydasimsekk/open_book_mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ceydasimsekk_open_book_mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "search_books_tool",
          "description": "\n    Kullanıcıdan gelen sorguyla kitap araması yapar.\n    ",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_books_toolArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ceydasimsekk/open_book_mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ceydasimsekk/open_book_mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1266.@ceydasimsekk_open_book_mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1209
  }
}