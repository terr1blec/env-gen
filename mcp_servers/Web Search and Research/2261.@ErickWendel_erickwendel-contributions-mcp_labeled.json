{
  "labels": {
    "analysis": "The MCP Server is designed to aggregate and query Erick Wendel's contributions across various platforms, focusing on talks, posts, and videos. Its core functionality involves retrieving and filtering content from multiple sources, essentially serving as a curated knowledge base or archive of his work. The available tools emphasize content retrieval with pagination and filtering, making it suitable for research, analysis, or personal reference.",
    "reasoning": "The primary label \"Web Search & Research\" was chosen because the server facilitates information retrieval from multiple sources, which aligns with research and discovery use cases. The secondary label \"Memory Management\" is relevant due to its role as a curated repository of content, similar to a knowledge base. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Memory Management"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2260,
    "server_name": "Erick Wendel Contributions",
    "rank_by_usage": 2261,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@ErickWendel_erickwendel-contributions-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ErickWendel/erickwendel-contributions-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_talks",
          "description": "Get a list of talks with optional filtering and pagination.",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Filter talks by ID"
              },
              "title": {
                "type": "string",
                "description": "Filter talks by title"
              },
              "language": {
                "type": "string",
                "description": "Filter talks by language (e.g., 'spanish', 'english', 'portuguese' or direct codes like 'es', 'en', 'pt-br')"
              },
              "city": {
                "type": "string",
                "description": "Filter talks by city"
              },
              "country": {
                "type": "string",
                "description": "Filter talks by country"
              },
              "year": {
                "type": "number",
                "description": "Filter talks by year"
              },
              "skip": {
                "type": "number",
                "default": 0,
                "description": "Number of talks to skip"
              },
              "limit": {
                "type": "number",
                "default": 10,
                "description": "Maximum number of talks to return"
              },
              "count_only": {
                "type": "boolean",
                "default": false,
                "description": "If true, returns only the count without talk details"
              },
              "group_by": {
                "type": "string",
                "description": "Group counts by a specific field (language, country, city)"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_posts",
          "description": "Get a list of posts with optional filtering and pagination.",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Filter posts by ID"
              },
              "title": {
                "type": "string",
                "description": "Filter posts by title"
              },
              "language": {
                "type": "string",
                "description": "Filter posts by language"
              },
              "portal": {
                "type": "string",
                "description": "Filter posts by portal"
              },
              "skip": {
                "type": "number",
                "default": 0,
                "description": "Number of posts to skip"
              },
              "limit": {
                "type": "number",
                "default": 10,
                "description": "Maximum number of posts to return"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_videos",
          "description": "Get a list of videos with optional filtering and pagination.",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Filter videos by ID"
              },
              "title": {
                "type": "string",
                "description": "Filter videos by title"
              },
              "language": {
                "type": "string",
                "description": "Filter videos by language"
              },
              "skip": {
                "type": "number",
                "default": 0,
                "description": "Number of videos to skip"
              },
              "limit": {
                "type": "number",
                "default": 10,
                "description": "Maximum number of videos to return"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "check_status",
          "description": "Check if the API is alive and responding.",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 4,
      "tool_names": [
        "get_talks",
        "get_posts",
        "get_videos",
        "check_status"
      ]
    },
    "server_info_crawled": {
      "id": 2260,
      "name": "Erick Wendel Contributions",
      "author": "@ErickWendel/erickwendel-contributions-mcp",
      "overview": "A Model Context Protocol (MCP) server that provides tools to query Erick Wendel's contributions across different platforms.\n\nSee full docs in the repo for examples and more!",
      "repository_url": "https://github.com/ErickWendel/erickwendel-contributions-mcp",
      "homepage": "https://smithery.ai/server/@ErickWendel/erickwendel-contributions-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ErickWendel_erickwendel-contributions-mcp.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "get_talks",
          "description": "Get a list of talks with optional filtering and pagination.",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Filter talks by ID"
              },
              "title": {
                "type": "string",
                "description": "Filter talks by title"
              },
              "language": {
                "type": "string",
                "description": "Filter talks by language (e.g., 'spanish', 'english', 'portuguese' or direct codes like 'es', 'en', 'pt-br')"
              },
              "city": {
                "type": "string",
                "description": "Filter talks by city"
              },
              "country": {
                "type": "string",
                "description": "Filter talks by country"
              },
              "year": {
                "type": "number",
                "description": "Filter talks by year"
              },
              "skip": {
                "type": "number",
                "default": 0,
                "description": "Number of talks to skip"
              },
              "limit": {
                "type": "number",
                "default": 10,
                "description": "Maximum number of talks to return"
              },
              "count_only": {
                "type": "boolean",
                "default": false,
                "description": "If true, returns only the count without talk details"
              },
              "group_by": {
                "type": "string",
                "description": "Group counts by a specific field (language, country, city)"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_posts",
          "description": "Get a list of posts with optional filtering and pagination.",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Filter posts by ID"
              },
              "title": {
                "type": "string",
                "description": "Filter posts by title"
              },
              "language": {
                "type": "string",
                "description": "Filter posts by language"
              },
              "portal": {
                "type": "string",
                "description": "Filter posts by portal"
              },
              "skip": {
                "type": "number",
                "default": 0,
                "description": "Number of posts to skip"
              },
              "limit": {
                "type": "number",
                "default": 10,
                "description": "Maximum number of posts to return"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_videos",
          "description": "Get a list of videos with optional filtering and pagination.",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Filter videos by ID"
              },
              "title": {
                "type": "string",
                "description": "Filter videos by title"
              },
              "language": {
                "type": "string",
                "description": "Filter videos by language"
              },
              "skip": {
                "type": "number",
                "default": 0,
                "description": "Number of videos to skip"
              },
              "limit": {
                "type": "number",
                "default": 10,
                "description": "Maximum number of videos to return"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "check_status",
          "description": "Check if the API is alive and responding.",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ErickWendel/erickwendel-contributions-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ErickWendel/erickwendel-contributions-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "2261.@ErickWendel_erickwendel-contributions-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1945
  }
}