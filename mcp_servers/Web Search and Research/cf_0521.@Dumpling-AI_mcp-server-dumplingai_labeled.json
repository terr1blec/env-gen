{
  "labels": {
    "analysis": "The MCP Server primarily focuses on data acquisition, processing, and AI integration. Its tools enable web scraping (Google searches, maps, news, YouTube transcripts), document and media processing (PDF conversion, video trimming, image extraction), and AI-assisted functionality (text generation, image creation, code execution). The server serves as a versatile hub for gathering, transforming, and analyzing web and document-based data.",
    "reasoning": "The primary label \"Web Search & Research\" was chosen because the server's core functionality revolves around acquiring information from web sources (Google, maps, news, YouTube). \"Browser Automation\" is a secondary label due to its scraping, crawling, and screenshot capabilities. \"Content Creation\" is included due to its document conversion, image generation, and AI text completion tools. No custom label is needed as predefined categories adequately cover its functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Browser Automation",
      "Content Creation"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 520,
    "server_name": "Dumpling AI MCP Server",
    "rank_by_usage": 521,
    "usage_count": "29",
    "original_file": "../crawler/smithery/@Dumpling-AI_mcp-server-dumplingai.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Dumpling-AI/mcp-server-dumplingai/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 520,
      "name": "Dumpling AI MCP Server",
      "author": "@Dumpling-AI/mcp-server-dumplingai",
      "overview": "Integrate powerful data scraping, content processing, and AI capabilities into your applications. Leverage a wide range of tools for document conversion, web scraping, and knowledge management to enhance your workflows. Execute code securely and access various data APIs to enrich your projects with real-time information.",
      "repository_url": "https://github.com/Dumpling-AI/mcp-server-dumplingai",
      "homepage": "https://smithery.ai/server/@Dumpling-AI/mcp-server-dumplingai",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "29",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Dumpling-AI_mcp-server-dumplingai.json",
      "tools_count": 27,
      "tools": [
        {
          "name": "get-youtube-transcript",
          "description": "Deploy Server Dumpling AI MCP Server @Dumpling-AI/mcp-server-dumplingai Try in Playground get-youtube-transcript",
          "parameters": []
        },
        {
          "name": "search",
          "description": "Perform Google web searches with customizable parameters.",
          "parameters": [
            {
              "name": "search",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-autocomplete",
          "description": "Retrieve Google autocomplete suggestions for a query.",
          "parameters": []
        },
        {
          "name": "search-maps",
          "description": "Search Google Maps for locations and businesses.",
          "parameters": []
        },
        {
          "name": "search-places",
          "description": "Search for places with detailed business information.",
          "parameters": []
        },
        {
          "name": "search-news",
          "description": "Search for news articles across multiple sources.",
          "parameters": [
            {
              "name": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "country",
              "required": false,
              "type": "string"
            },
            {
              "name": "language",
              "required": false,
              "type": "string"
            },
            {
              "name": "location",
              "required": false,
              "type": "string"
            },
            {
              "name": "dateRange",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-google-reviews",
          "description": "Retrieve Google reviews for businesses or places.",
          "parameters": []
        },
        {
          "name": "scrape",
          "description": "Extract and parse content from any web page.",
          "parameters": [
            {
              "name": "scrape",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "crawl",
          "description": "Recursively crawl websites and extract content.",
          "parameters": [
            {
              "name": "url",
              "required": true,
              "type": "string"
            },
            {
              "name": "depth",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "format",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "extract",
          "description": "get-youtube-transcript Extract transcripts from YouTube videos with optional parameters for timestamps and language preferences.",
          "parameters": [
            {
              "name": "extract",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "screenshot",
          "description": "Capture screenshots of web pages with customizable settings.",
          "parameters": [
            {
              "name": "screenshot",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "doc-to-text",
          "description": "Convert various document formats to plain text.",
          "parameters": [
            {
              "name": "file",
              "required": true,
              "type": "string"
            },
            {
              "name": "pages",
              "required": false,
              "type": "string"
            },
            {
              "name": "inputMethod",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "convert-to-pdf",
          "description": "Convert various file formats to PDF.",
          "parameters": [
            {
              "name": "file",
              "required": true,
              "type": "string"
            },
            {
              "name": "inputMethod",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "merge-pdfs",
          "description": "Combine multiple PDF files into a single document.",
          "parameters": []
        },
        {
          "name": "trim-video",
          "description": "Trim videos to a specific duration.",
          "parameters": [
            {
              "name": "videoUrl",
              "required": true,
              "type": "string"
            },
            {
              "name": "endTimestamp",
              "required": true,
              "type": "string"
            },
            {
              "name": "startTimestamp",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "extract-document",
          "description": "Extract structured data from documents based on a prompt.",
          "parameters": []
        },
        {
          "name": "extract-image",
          "description": "Extract structured data from images based on a prompt.",
          "parameters": []
        },
        {
          "name": "extract-audio",
          "description": "Extract structured data from audio files based on a prompt.",
          "parameters": []
        },
        {
          "name": "extract-video",
          "description": "Extract structured data from videos based on a prompt.",
          "parameters": []
        },
        {
          "name": "read-pdf-metadata",
          "description": "Extract metadata from PDF files.",
          "parameters": [
            {
              "name": "files",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "inputMethod",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestSource",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "write-pdf-metadata",
          "description": "Write metadata to PDF files.",
          "parameters": [
            {
              "name": "files",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "metadata",
              "required": true,
              "type": "string"
            },
            {
              "name": "inputMethod",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "generate-agent-completion",
          "description": "Generate AI text completions with customizable parameters.",
          "parameters": []
        },
        {
          "name": "search-knowledge-base",
          "description": "Search a knowledge base for relevant information.",
          "parameters": []
        },
        {
          "name": "add-to-knowledge-base",
          "description": "Add new text resources to a knowledge base.",
          "parameters": []
        },
        {
          "name": "generate-ai-image",
          "description": "Generate AI images from text prompts.",
          "parameters": [
            {
              "name": "input",
              "required": true,
              "type": "string"
            },
            {
              "name": "model",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "run-js-code",
          "description": "Execute JavaScript code in a sandbox.",
          "parameters": []
        },
        {
          "name": "run-python-code",
          "description": "Execute Python code in a sandbox.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Dumpling-AI/mcp-server-dumplingai/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "dumplingApiKey",
          "required": true,
          "description": "Your Dumpling AI API key for authentication."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Dumpling-AI/mcp-server-dumplingai/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0521.@Dumpling-AI_mcp-server-dumplingai_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 510
  }
}