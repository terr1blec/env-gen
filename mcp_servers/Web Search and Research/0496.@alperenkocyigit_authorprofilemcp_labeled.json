{
  "labels": {
    "analysis": "The MCP Server, named \"Academic Author Network,\" specializes in analyzing academic author networks and research collaborations. It enables users to discover co-authors, extract research keywords, and explore second-degree connections by aggregating data from multiple academic APIs. The available tools focus on retrieving co-authors' information and identifying research keywords, enhancing academic research understanding through efficient, cached, and rate-limited API interactions.",
    "reasoning": "The primary functionality of collecting and analyzing academic co-authorship and research keyword data aligns closely with the \"Web Search & Research\" category, as it supports gathering information crucial for academic research. Additionally, the server involves interaction with third-party APIs, justifying the inclusion of \"API Integration\" as a secondary label. No custom label is required as the functionality is well-covered by predefined categories.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 495,
    "server_name": "Academic Author Network",
    "rank_by_usage": 496,
    "usage_count": "33",
    "original_file": "../crawler/smithery/@alperenkocyigit_authorprofilemcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@alperenkocyigit/authorprofilemcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_coauthors",
          "description": "\n    Get all co-authors for a given author.\n    \n    Args:\n        name: Author's first name\n        surname: Author's last name\n        institution: Optional institution affiliation\n        field: Optional research field\n    \n    Returns:\n        Dictionary containing co-authors list with their information\n    ",
          "input_schema": {
            "properties": {
              "name": {
                "title": "Name",
                "type": "string"
              },
              "surname": {
                "title": "Surname",
                "type": "string"
              },
              "institution": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Institution"
              },
              "field": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Field"
              }
            },
            "required": [
              "name",
              "surname"
            ],
            "title": "get_coauthorsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_author_keywords",
          "description": "\n    Get research keywords/areas for a given author from Google Scholar.\n    \n    Args:\n        name: Author's first name\n        surname: Author's last name\n        institution: Optional institution affiliation\n    \n    Returns:\n        Dictionary containing keywords extracted from Google Scholar\n    ",
          "input_schema": {
            "properties": {
              "name": {
                "title": "Name",
                "type": "string"
              },
              "surname": {
                "title": "Surname",
                "type": "string"
              },
              "institution": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Institution"
              }
            },
            "required": [
              "name",
              "surname"
            ],
            "title": "get_author_keywordsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 2,
      "tool_names": [
        "get_coauthors",
        "get_author_keywords"
      ]
    },
    "server_info_crawled": {
      "id": 495,
      "name": "Academic Author Network",
      "author": "@alperenkocyigit/authorprofilemcp",
      "overview": "Analyze academic author networks and research collaborations to discover co-authors, extract research keywords, and explore second-degree connections. Aggregate data from multiple academic APIs to provide comprehensive insights. Enhance research understanding with efficient, cached, and rate-limited API interactions.",
      "repository_url": "https://github.com/alperenkocyigit/AuthorProfileMCP",
      "homepage": "https://smithery.ai/server/@alperenkocyigit/authorprofilemcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "33",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@alperenkocyigit_authorprofilemcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "get_coauthors",
          "description": "\n    Get all co-authors for a given author.\n    \n    Args:\n        name: Author's first name\n        surname: Author's last name\n        institution: Optional institution affiliation\n        field: Optional research field\n    \n    Returns:\n        Dictionary containing co-authors list with their information\n    ",
          "input_schema": {
            "properties": {
              "name": {
                "title": "Name",
                "type": "string"
              },
              "surname": {
                "title": "Surname",
                "type": "string"
              },
              "institution": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Institution"
              },
              "field": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Field"
              }
            },
            "required": [
              "name",
              "surname"
            ],
            "title": "get_coauthorsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_author_keywords",
          "description": "\n    Get research keywords/areas for a given author from Google Scholar.\n    \n    Args:\n        name: Author's first name\n        surname: Author's last name\n        institution: Optional institution affiliation\n    \n    Returns:\n        Dictionary containing keywords extracted from Google Scholar\n    ",
          "input_schema": {
            "properties": {
              "name": {
                "title": "Name",
                "type": "string"
              },
              "surname": {
                "title": "Surname",
                "type": "string"
              },
              "institution": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Institution"
              }
            },
            "required": [
              "name",
              "surname"
            ],
            "title": "get_author_keywordsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@alperenkocyigit/authorprofilemcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@alperenkocyigit/authorprofilemcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0496.@alperenkocyigit_authorprofilemcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 486
  }
}