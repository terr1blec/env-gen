{
  "labels": {
    "analysis": "The MCP Server described is focused on enabling natural language interaction with Yelp's business data. Users can search for businesses, read reviews, explore categories, and find events through conversational queries. The primary functionality revolves around accessing and navigating Yelp's wealth of local business information in an AI-assisted manner. The available tool (Optional Settings) suggests integration with other services but is secondary to the main purpose of Yelp data interaction.",
    "reasoning": "The primary label \"Web Search & Research\" is chosen because the server's core functionality is centered around searching for and retrieving detailed business information from Yelp, which aligns with information gathering and research. While it could also be categorized under \"Browser Automation\" due to the ability to interact with web data programmatically, the main activity is more aligned with research rather than automation. The secondary label \"API Integration\" is selected because the server interacts with Yelp's AI API to deliver responses. No custom label is needed as the predefined categories adequately capture the server's functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2107,
    "server_name": "Yelp Fusion Server",
    "rank_by_usage": 2108,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@waldzellai_yelp-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@waldzellai/yelp-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2107,
      "name": "Yelp Fusion Server",
      "author": "@waldzellai/yelp-mcp-server",
      "overview": "Enable natural language interaction with Yelp's business data through Claude Desktop. Search for businesses, read reviews, find events, and explore categories using simple conversational queries. Receive rich, formatted responses powered by Yelp's AI API for comprehensive local business insights.",
      "repository_url": "https://github.com/waldzellai/waldzell-mcp",
      "homepage": "https://smithery.ai/server/@waldzellai/yelp-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@waldzellai_yelp-mcp-server.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "Optional Settings",
          "description": "Access and manage servers by signing in.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@waldzellai/yelp-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "YELP_API_KEY",
          "required": true,
          "description": "API key for the Yelp Fusion API"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@waldzellai/yelp-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2108.@waldzellai_yelp-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1832
  }
}