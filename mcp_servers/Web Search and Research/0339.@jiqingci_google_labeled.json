{
  "labels": {
    "analysis": "The MCP Server is designed to facilitate academic research by providing tools to search Google Scholar for academic papers, author information, and metadata. Its core functionality revolves around web search and research, specifically in the academic domain. The available tools allow for keyword and advanced searches, as well as retrieval of detailed author information, which are essential for conducting comprehensive academic research.",
    "reasoning": "The server's primary purpose is to enable academic research through web search, making \"Web Search & Research\" the most applicable primary label. The tools provided are specialized for academic research, which aligns with the predefined category. No secondary labels are necessary as the server's functionality is narrowly focused on this specific use case. No custom label is required as the predefined category sufficiently describes the server's purpose.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [],
    "custom_label": "Not applicable in this case",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 338,
    "server_name": "Google Scholar Search Server",
    "rank_by_usage": 339,
    "usage_count": "92",
    "original_file": "../crawler/smithery/@jiqingci_google.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@jiqingci/google/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "search_google_scholar_key_words",
          "description": "",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "num_results": {
                "default": 5000,
                "title": "Num Results",
                "type": "integer"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_google_scholar_key_wordsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_google_scholar_advanced",
          "description": "",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "author": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Author"
              },
              "year_range": {
                "anyOf": [
                  {
                    "items": {},
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Year Range"
              },
              "num_results": {
                "default": 5000,
                "title": "Num Results",
                "type": "integer"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_google_scholar_advancedArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_author_info",
          "description": "",
          "input_schema": {
            "properties": {
              "author_name": {
                "title": "Author Name",
                "type": "string"
              }
            },
            "required": [
              "author_name"
            ],
            "title": "get_author_infoArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 3,
      "tool_names": [
        "search_google_scholar_key_words",
        "search_google_scholar_advanced",
        "get_author_info"
      ]
    },
    "server_info_crawled": {
      "id": 338,
      "name": "Google Scholar Search Server",
      "author": "@jiqingci/google",
      "overview": "Enable AI assistants to search and access academic papers from Google Scholar through a simple MCP interface. Perform keyword and advanced searches, retrieve paper metadata, and obtain detailed author information to support academic research and analysis. Integrate seamlessly with AI applications to enhance research capabilities.",
      "repository_url": "https://github.com/jiqingci/google",
      "homepage": "https://smithery.ai/server/@jiqingci/google",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "92",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@jiqingci_google.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "search_google_scholar_key_words",
          "description": "",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "num_results": {
                "default": 5000,
                "title": "Num Results",
                "type": "integer"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_google_scholar_key_wordsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_google_scholar_advanced",
          "description": "",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "author": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Author"
              },
              "year_range": {
                "anyOf": [
                  {
                    "items": {},
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Year Range"
              },
              "num_results": {
                "default": 5000,
                "title": "Num Results",
                "type": "integer"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_google_scholar_advancedArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_author_info",
          "description": "",
          "input_schema": {
            "properties": {
              "author_name": {
                "title": "Author Name",
                "type": "string"
              }
            },
            "required": [
              "author_name"
            ],
            "title": "get_author_infoArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@jiqingci/google/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@jiqingci/google/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0339.@jiqingci_google_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 335
  }
}