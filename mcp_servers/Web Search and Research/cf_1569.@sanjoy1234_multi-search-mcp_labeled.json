{
  "labels": {
    "analysis": "The MCP Server specializes in aggregating search results from multiple search engines and data sources through a unified interface. It simplifies complex search workflows by consolidating results from providers like Google, Brave, and DuckDuckGo. The core functionality is focused on web information retrieval and enhancing user search capabilities by enabling cross-engine search in one place.",
    "reasoning": "The primary label reflects the server's main purpose of enhancing web search capabilities. The secondary label of API Integration is included because the server interacts with various search engine APIs. Browser Automation is also relevant due to the potential for automated search result processing. No custom labels are needed since the server's functionality aligns well with predefined categories.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "API Integration",
      "Browser Automation"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1568,
    "server_name": "Multi-Search MCP Server",
    "rank_by_usage": 1569,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@sanjoy1234_multi-search-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@sanjoy1234/multi-search-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1568,
      "name": "Multi-Search MCP Server",
      "author": "@sanjoy1234/multi-search-mcp",
      "overview": "Enable multi-source search capabilities through a unified interface. Integrate various search engines and data sources seamlessly to enhance information retrieval. Simplify complex search workflows by consolidating results from multiple providers.",
      "repository_url": "https://github.com/sanjoy1234/multi-search-mcp",
      "homepage": "https://smithery.ai/server/@sanjoy1234/multi-search-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@sanjoy1234_multi-search-mcp.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "google_search",
          "description": "Deploy Server Multi-Search MCP Server @sanjoy1234/multi-search-mcp Try in Playground google_search",
          "parameters": [
            {
              "name": "google_search",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "brave_search",
          "description": "Fetch search results from Brave News API.",
          "parameters": [
            {
              "name": "brave_search",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "duck_search",
          "description": "Query DuckDuckGo Instant Answer API (no key required).",
          "parameters": [
            {
              "name": "duck_search",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@sanjoy1234/multi-search-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "braveApiKey",
          "required": true,
          "description": "Your Brave News API token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@sanjoy1234/multi-search-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1569.@sanjoy1234_multi-search-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1434
  }
}