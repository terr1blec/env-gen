{
  "labels": {
    "analysis": "The MCP Server is primarily designed to facilitate integration of language models with external tools, focusing on dynamic interaction with data and actions. Its key functionality revolves around news search and analysis, with tools that enable retrieving news articles, comparing perspectives from different sources, and extracting article content. This suggests a strong orientation toward information gathering, research, and comparative analysis, particularly in the domain of news and media.",
    "reasoning": "The primary label \"News & Media\" was chosen because the server's tools are explicitly focused on news search and analysis. The secondary labels \"Web Search & Research\" and \"Data Analysis & Processing\" were selected because the server enables research-oriented tasks and comparative analysis of news perspectives. No custom label is needed as the predefined categories sufficiently cover the server's functionality.",
    "primary_label": "News & Media",
    "secondary_labels": [
      "Web Search & Research",
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2272,
    "server_name": "Google Workshop MCP Server",
    "rank_by_usage": 2273,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@1282saa_news_sum.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@1282saa/news_sum/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "simple_test",
          "description": "간단한 테스트 도구: 입력 텍스트를 그대로 반환합니다.",
          "input_schema": {
            "properties": {
              "text": {
                "title": "Text",
                "type": "string"
              }
            },
            "required": [
              "text"
            ],
            "title": "simple_testArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_news",
          "description": "\n    키워드로 뉴스 검색하기\n    \n    Args:\n        keyword: 검색할 키워드\n    \n    Returns:\n        검색된 뉴스 목록 (언론사, 제목, 시간, 링크 포함)\n    ",
          "input_schema": {
            "properties": {
              "keyword": {
                "title": "Keyword",
                "type": "string"
              }
            },
            "required": [
              "keyword"
            ],
            "title": "search_newsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_news_with_content",
          "description": "\n    키워드로 뉴스 검색 및 첫 번째 기사 내용 가져오기\n    \n    Args:\n        keyword: 검색할 키워드\n    \n    Returns:\n        검색된 뉴스 제목 및 첫 번째 기사 내용\n    ",
          "input_schema": {
            "properties": {
              "keyword": {
                "title": "Keyword",
                "type": "string"
              }
            },
            "required": [
              "keyword"
            ],
            "title": "search_news_with_contentArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "compare_news_perspectives",
          "description": "\n    키워드 관련 뉴스의 다양한 관점 비교 분석\n    \n    Args:\n        keyword: 검색할 키워드\n    \n    Returns:\n        다양한 언론사의 관점 비교 분석\n    ",
          "input_schema": {
            "properties": {
              "keyword": {
                "title": "Keyword",
                "type": "string"
              }
            },
            "required": [
              "keyword"
            ],
            "title": "compare_news_perspectivesArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 4,
      "tool_names": [
        "simple_test",
        "search_news",
        "search_news_with_content",
        "compare_news_perspectives"
      ]
    },
    "server_info_crawled": {
      "id": 2272,
      "name": "Google Workshop MCP Server",
      "author": "@1282saa/news_sum",
      "overview": "Provide a simple MCP server implementation to enable integration of language models with external tools and resources. Facilitate dynamic interaction with data and actions through a standardized protocol. Enhance LLM applications by exposing customizable capabilities and content.",
      "repository_url": "https://github.com/1282saa/news_sum",
      "homepage": "https://smithery.ai/server/@1282saa/news_sum",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@1282saa_news_sum.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "simple_test",
          "description": "간단한 테스트 도구: 입력 텍스트를 그대로 반환합니다.",
          "input_schema": {
            "properties": {
              "text": {
                "title": "Text",
                "type": "string"
              }
            },
            "required": [
              "text"
            ],
            "title": "simple_testArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_news",
          "description": "\n    키워드로 뉴스 검색하기\n    \n    Args:\n        keyword: 검색할 키워드\n    \n    Returns:\n        검색된 뉴스 목록 (언론사, 제목, 시간, 링크 포함)\n    ",
          "input_schema": {
            "properties": {
              "keyword": {
                "title": "Keyword",
                "type": "string"
              }
            },
            "required": [
              "keyword"
            ],
            "title": "search_newsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_news_with_content",
          "description": "\n    키워드로 뉴스 검색 및 첫 번째 기사 내용 가져오기\n    \n    Args:\n        keyword: 검색할 키워드\n    \n    Returns:\n        검색된 뉴스 제목 및 첫 번째 기사 내용\n    ",
          "input_schema": {
            "properties": {
              "keyword": {
                "title": "Keyword",
                "type": "string"
              }
            },
            "required": [
              "keyword"
            ],
            "title": "search_news_with_contentArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "compare_news_perspectives",
          "description": "\n    키워드 관련 뉴스의 다양한 관점 비교 분석\n    \n    Args:\n        keyword: 검색할 키워드\n    \n    Returns:\n        다양한 언론사의 관점 비교 분석\n    ",
          "input_schema": {
            "properties": {
              "keyword": {
                "title": "Keyword",
                "type": "string"
              }
            },
            "required": [
              "keyword"
            ],
            "title": "compare_news_perspectivesArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@1282saa/news_sum/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@1282saa/news_sum/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "2273.@1282saa_news_sum_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1955
  }
}