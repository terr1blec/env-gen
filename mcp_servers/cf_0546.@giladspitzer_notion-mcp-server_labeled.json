{
  "labels": {
    "analysis": "The MCP Server described appears to be a specialized interface for interacting with the Notion API, enabling users to manage and retrieve data from Notion workspaces programmatically. Core functionalities include retrieving user information, managing pages, blocks, databases, and comments within Notion. The tools focus on CRUD operations (Create, Read, Update, Delete) for Notion entities, making it a powerful assistant for users who need to automate workflows or integrate Notion data into other applications.",
    "reasoning": "The primary label \"API Integration\" was chosen because the server's main purpose is to provide access to the Notion API, facilitating automated interactions with Notion's data structures. \"Database Operations\" is a secondary label because many tools interact with Notion databases and pages, performing operations similar to traditional database management. \"Daily Productivity\" is also relevant as the server aims to enhance productivity by automating Notion-related tasks. No custom label is needed as the functionality fits well within the predefined categories.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Database Operations",
      "Daily Productivity"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 545,
    "server_name": "Notion API Server",
    "rank_by_usage": 546,
    "usage_count": "24",
    "original_file": "../crawler/smithery/@giladspitzer_notion-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@giladspitzer/notion-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 545,
      "name": "Notion API Server",
      "author": "@giladspitzer/notion-mcp-server",
      "overview": "Enable seamless interaction with your Notion workspace through natural language commands. Automate content retrieval, page creation, and commenting by leveraging the Notion API via an MCP server. Enhance productivity by integrating Notion data and actions directly into your AI workflows.",
      "repository_url": "https://github.com/giladspitzer/notion-mcp-server",
      "homepage": "https://smithery.ai/server/@giladspitzer/notion-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "24",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@giladspitzer_notion-mcp-server.json",
      "tools_count": 19,
      "tools": [
        {
          "name": "API-get-user",
          "description": "Deploy Server Notion API Server @giladspitzer/notion-mcp-server Try in Playground API-get-user",
          "parameters": [
            {
              "name": "Retrieve",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "user",
              "required": false,
              "type": "string"
            },
            {
              "name": "user_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "API-get-users",
          "description": "List all users\nError Responses:\n400: 400",
          "parameters": [
            {
              "name": "page_size",
              "required": false,
              "type": "string"
            },
            {
              "name": "start_cursor",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "API-get-self",
          "description": "Retrieve your token's bot user",
          "parameters": []
        },
        {
          "name": "API-post-database-query",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Query",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "database",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "API-post-search",
          "description": "Description not available",
          "parameters": [
            {
              "name": "sort",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "filter",
              "required": false,
              "type": "string"
            },
            {
              "name": "page_size",
              "required": false,
              "type": "string"
            },
            {
              "name": "start_cursor",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "API-get-block-children",
          "description": "Retrieve block children",
          "parameters": [
            {
              "name": "Retrieve",
              "required": false,
              "type": "string"
            },
            {
              "name": "block",
              "required": false,
              "type": "string"
            },
            {
              "name": "children",
              "required": false,
              "type": "string"
            },
            {
              "name": "block_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "page_size",
              "required": false,
              "type": "string"
            },
            {
              "name": "start_cursor",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "API-patch-block-children",
          "description": "Append block children",
          "parameters": [
            {
              "name": "after",
              "required": false,
              "type": "string"
            },
            {
              "name": "block_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "children",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "API-retrieve-a-block",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Retrieve",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "block",
              "required": false,
              "type": "string"
            },
            {
              "name": "block_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "API-update-a-block",
          "description": "Description not available",
          "parameters": [
            {
              "name": "type",
              "required": false,
              "type": "string"
            },
            {
              "name": "archived",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "block_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "API-delete-a-block",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "block",
              "required": false,
              "type": "string"
            },
            {
              "name": "block_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "API-retrieve-a-page",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Retrieve",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "page_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "filter_properties",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "API-patch-page",
          "description": "Update page properties",
          "parameters": [
            {
              "name": "Update",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "properties",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "API-post-page",
          "description": "Description not available",
          "parameters": [
            {
              "name": "cover",
              "required": false,
              "type": "string"
            },
            {
              "name": "parent",
              "required": true,
              "type": "string"
            },
            {
              "name": "children",
              "required": false,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "properties",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "API-create-a-database",
          "description": "Description not available",
          "parameters": [
            {
              "name": "title",
              "required": false,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "parent",
              "required": true,
              "type": "string"
            },
            {
              "name": "properties",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "API-update-a-database",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Update",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "database",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "API-retrieve-a-database",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Retrieve",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "database",
              "required": false,
              "type": "string"
            },
            {
              "name": "database_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "API-retrieve-a-page-property",
          "description": "Retrieve a page property item",
          "parameters": []
        },
        {
          "name": "API-retrieve-a-comment",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Retrieve",
              "required": false,
              "type": "string"
            },
            {
              "name": "comments",
              "required": false,
              "type": "string"
            },
            {
              "name": "block_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "page_size",
              "required": false,
              "type": "string"
            },
            {
              "name": "start_cursor",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "API-create-a-comment",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Create",
              "required": false,
              "type": "string"
            },
            {
              "name": "comment",
              "required": false,
              "type": "string"
            },
            {
              "name": "parent",
              "required": true,
              "type": "string"
            },
            {
              "name": "rich_text",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@giladspitzer/notion-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@giladspitzer/notion-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0546.@giladspitzer_notion-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 534
  }
}