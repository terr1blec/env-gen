{
  "labels": {
    "analysis": "The MCP Server named \"Overseerr MCP\" is primarily designed to manage movie and TV show requests through the Overseerr API. It provides tools to check the status of requests and retrieve lists of pending requests for both movies and TV shows. The core functionality revolves around simplifying the process of request management and monitoring media library activity.",
    "reasoning": "The primary functionality of monitoring and managing media requests aligns well with the \"Daily Productivity\" category, as it helps users organize and track their media requests efficiently. Since the server interacts with Overseerr, which is a media management system, \"Content Creation & Media Management\" is a fitting secondary label. The tools provided are specific to media requests, so no custom label is needed beyond the predefined categories.",
    "primary_label": "Daily Productivity",
    "secondary_labels": [
      "Content Creation"
    ],
    "custom_label": "Media Content Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 919,
    "server_name": "Overseerr MCP",
    "rank_by_usage": 920,
    "usage_count": "4",
    "original_file": "../crawler/smithery/@jgarciaga_overseerr-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@jgarciaga/overseerr-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 919,
      "name": "Overseerr MCP",
      "author": "@jgarciaga/overseerr-mcp",
      "overview": "Manage your movie and TV show requests effortlessly. Interact with the Overseerr API to get real-time status updates and request management. Streamline your media library experience with easy access to pending requests and availability updates.",
      "repository_url": "https://github.com/jgarciaga/overseerr-mcp",
      "homepage": "https://smithery.ai/server/@jgarciaga/overseerr-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "4",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@jgarciaga_overseerr-mcp.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "overseerr_status",
          "description": "Deploy Server Overseerr MCP Claim Server @jgarciaga/overseerr-mcp Try in Playground overseerr_status",
          "parameters": [
            {
              "name": "overseerr_status",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "overseerr_movie_requests",
          "description": "Get the list of all movie requests that satisfies the filter arguments.",
          "parameters": []
        },
        {
          "name": "overseerr_tv_requests",
          "description": "Get the list of all TV requests that satisfies the filter arguments.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@jgarciaga/overseerr-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "apiKey",
          "required": true,
          "description": "Overseerr API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@jgarciaga/overseerr-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0920.@jgarciaga_overseerr-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 900
  }
}