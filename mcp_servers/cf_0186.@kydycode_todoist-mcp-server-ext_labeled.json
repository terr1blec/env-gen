{
  "labels": {
    "analysis": "The Todoist Extended MCP Server primarily focuses on integrating and enhancing Todoist's task and project management capabilities through Claude. It provides comprehensive tools for creating, updating, moving, searching, and organizing tasks, projects, and sections within Todoist. The functionality includes natural language quick add, bulk operations, commenting, and detailed filtering and pagination features for efficient task management.",
    "reasoning": "The primary label, Daily Productivity, is chosen because the core functionality revolves around task and project management, which are key aspects of productivity. The secondary label, Communication Tools, is selected due to the commenting features that facilitate collaboration. The custom label, \"Task Automation & Organization,\" is added to highlight the advanced automation and organization capabilities specific to this server.",
    "primary_label": "Daily Productivity",
    "secondary_labels": [
      "Communication Tools"
    ],
    "custom_label": "Task Automation & Organization",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 185,
    "server_name": "Todoist Extended MCP Server",
    "rank_by_usage": 186,
    "usage_count": "257",
    "original_file": "../crawler/smithery/@kydycode_todoist-mcp-server-ext.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@kydycode/todoist-mcp-server-ext/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 185,
      "name": "Todoist Extended MCP Server",
      "author": "@kydycode/todoist-mcp-server-ext",
      "overview": "Integrate your Todoist task and project management seamlessly with Claude using this extended MCP server. Create, update, search, and organize tasks, projects, and sections with enhanced features like natural language quick add, direct ID operations, and comprehensive filtering. Boost your productivity by managing your Todoist data efficiently through a powerful and user-friendly interface.",
      "repository_url": "https://github.com/kydycode/todoist-mcp-server-ext",
      "homepage": "https://smithery.ai/server/@kydycode/todoist-mcp-server-ext",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "257",
      "success_rate": "99.15%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@kydycode_todoist-mcp-server-ext.json",
      "tools_count": 30,
      "tools": [
        {
          "name": "todoist_create_task",
          "description": "Deploy Server Todoist Extended MCP Server @kydycode/todoist-mcp-server-ext Try in Playground todoist_create_task",
          "parameters": [
            {
              "name": "todoist_create_task",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_quick_add_task",
          "description": "Create a task using Todoist's Quick Add feature with natural language parsing",
          "parameters": [
            {
              "name": "todoist_quick_add_task",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_get_tasks",
          "description": "Get tasks with comprehensive filtering and pagination support Add Item",
          "parameters": [
            {
              "name": "todoist_get_tasks",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_get_task",
          "description": "Get a specific task by its ID",
          "parameters": [
            {
              "name": "todoist_get_tasks",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_update_task",
          "description": "Update an existing task by its ID",
          "parameters": [
            {
              "name": "taskId",
              "required": true,
              "type": "string"
            },
            {
              "name": "content",
              "required": false,
              "type": "string"
            },
            {
              "name": "priority",
              "required": false,
              "type": "string"
            },
            {
              "name": "dueString",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_delete_task",
          "description": "Delete a task by its ID",
          "parameters": [
            {
              "name": "todoist_delete_task",
              "required": false,
              "type": "string"
            },
            {
              "name": "taskId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_complete_task",
          "description": "Mark a task as complete by its ID",
          "parameters": [
            {
              "name": "todoist_complete_task",
              "required": false,
              "type": "string"
            },
            {
              "name": "taskId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_reopen_task",
          "description": "Reopen a completed task by its ID",
          "parameters": [
            {
              "name": "todoist_reopen_task",
              "required": false,
              "type": "string"
            },
            {
              "name": "taskId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_search_tasks",
          "description": "Search for tasks by content/name (fallback for when ID is not known)",
          "parameters": [
            {
              "name": "todoist_search_tasks",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_move_task",
          "description": "Move a single task (and its subtasks, if any) to a different project, section, or make it a subtask of another task. Provide the taskId and exactly one of: projectId, sectionId, or parentId.",
          "parameters": [
            {
              "name": "todoist_move_task",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_bulk_move_tasks",
          "description": "Move multiple tasks (and their respective subtasks, if any; e.g., up to 10-20 parent tasks for best performance) to a different project, section, or make them subtasks of another task. Provide an array of taskIds and exactly one destination (projectId, sectionId, or parentId).",
          "parameters": [
            {
              "name": "todoist_bulk_move_tasks",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_get_projects",
          "description": "Get all active projects with pagination support",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "cursor",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_get_project",
          "description": "Get a specific project by its ID",
          "parameters": [
            {
              "name": "todoist_get_projects",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_create_project",
          "description": "Description not available",
          "parameters": [
            {
              "name": "todoist_create_project",
              "required": false,
              "type": "string"
            },
            {
              "name": "Create",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "new",
              "required": false,
              "type": "string"
            },
            {
              "name": "project",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_update_project",
          "description": "Update an existing project",
          "parameters": [
            {
              "name": "todoist_update_project",
              "required": false,
              "type": "string"
            },
            {
              "name": "Update",
              "required": false,
              "type": "string"
            },
            {
              "name": "an",
              "required": false,
              "type": "string"
            },
            {
              "name": "existing",
              "required": false,
              "type": "string"
            },
            {
              "name": "project",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_delete_project",
          "description": "Delete a project by its ID",
          "parameters": [
            {
              "name": "todoist_delete_project",
              "required": false,
              "type": "string"
            },
            {
              "name": "projectId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_get_sections",
          "description": "Get all sections, or sections for a specific project. Supports pagination.",
          "parameters": [
            {
              "name": "todoist_get_sections",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_create_section",
          "description": "Create a new section in a project",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "order",
              "required": false,
              "type": "string"
            },
            {
              "name": "projectId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_update_section",
          "description": "Update an existing section",
          "parameters": [
            {
              "name": "Update",
              "required": false,
              "type": "string"
            },
            {
              "name": "an",
              "required": false,
              "type": "string"
            },
            {
              "name": "existing",
              "required": false,
              "type": "string"
            },
            {
              "name": "section",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "sectionId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_delete_section",
          "description": "Delete a section by its ID",
          "parameters": [
            {
              "name": "todoist_delete_section",
              "required": false,
              "type": "string"
            },
            {
              "name": "sectionId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_create_label",
          "description": "Description not available",
          "parameters": [
            {
              "name": "color",
              "required": false,
              "type": "string"
            },
            {
              "name": "order",
              "required": false,
              "type": "string"
            },
            {
              "name": "isFavorite",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_get_label",
          "description": "Get a specific label by its ID.",
          "parameters": [
            {
              "name": "todoist_get_label",
              "required": false,
              "type": "string"
            },
            {
              "name": "labelId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_get_labels",
          "description": "Get all labels. Supports pagination.",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "cursor",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_update_label",
          "description": "Update an existing label by its ID.",
          "parameters": [
            {
              "name": "todoist_update_label",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_delete_label",
          "description": "Delete a label by its ID.",
          "parameters": [
            {
              "name": "todoist_delete_label",
              "required": false,
              "type": "string"
            },
            {
              "name": "labelId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_create_comment",
          "description": "Create a new comment on a task or project",
          "parameters": [
            {
              "name": "todoist_create_comment",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_get_comment",
          "description": "Get a specific comment by its ID",
          "parameters": [
            {
              "name": "todoist_get_comment",
              "required": false,
              "type": "string"
            },
            {
              "name": "commentId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_get_comments",
          "description": "Get comments for a task or project with pagination support",
          "parameters": [
            {
              "name": "todoist_get_comments",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_update_comment",
          "description": "Update an existing comment by its ID",
          "parameters": [
            {
              "name": "content",
              "required": true,
              "type": "string"
            },
            {
              "name": "commentId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "todoist_delete_comment",
          "description": "Delete a comment by its ID",
          "parameters": [
            {
              "name": "todoist_delete_comment",
              "required": false,
              "type": "string"
            },
            {
              "name": "commentId",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@kydycode/todoist-mcp-server-ext/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "todoistApiToken",
          "required": true,
          "description": "Your Todoist API token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@kydycode/todoist-mcp-server-ext/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0186.@kydycode_todoist-mcp-server-ext_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 182
  }
}