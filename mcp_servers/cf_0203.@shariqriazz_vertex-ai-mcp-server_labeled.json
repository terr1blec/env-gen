{
  "labels": {
    "analysis": "The Vertex AI Server primarily provides access to Google Cloud's Vertex AI Gemini models for answering queries, explaining technical topics, generating documentation, and performing file operations. It combines AI-powered query responses (both direct and web-search-enhanced) with workspace file management capabilities. The tools are designed for developers and technical users who need coding assistance, documentation synthesis, and project infrastructure management.",
    "reasoning": "The primary label \"AI/ML Tools\" reflects the server's core functionality of interacting with advanced Vertex AI models for query answering and documentation generation. The secondary labels \"Web Search & Research\" and \"File Management\" are selected because the server frequently uses web search for enhanced responses and provides robust file operations within a workspace. While \"Development Tools\" could also apply, it's less central to the server's core purpose than the chosen labels.",
    "primary_label": "AI/ML Tools",
    "secondary_labels": [
      "Web Search & Research",
      "File Management"
    ],
    "custom_label": "Vertex AI Integration",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 202,
    "server_name": "Vertex AI Server",
    "rank_by_usage": 203,
    "usage_count": "228",
    "original_file": "../crawler/smithery/@shariqriazz_vertex-ai-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@shariqriazz/vertex-ai-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 202,
      "name": "Vertex AI Server",
      "author": "@shariqriazz/vertex-ai-mcp-server",
      "overview": "Provide seamless access to Google Cloud's Vertex AI Gemini models for coding assistance and general query answering. Enable enhanced query responses grounded in web search, direct knowledge, or official documentation. Configure and use a variety of tools to interact with Vertex AI models efficiently and reliably.",
      "repository_url": "https://github.com/shariqriazz/vertex-ai-mcp-server",
      "homepage": "https://smithery.ai/server/@shariqriazz/vertex-ai-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "228",
      "success_rate": "73.86%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@shariqriazz_vertex-ai-mcp-server.json",
      "tools_count": 20,
      "tools": [
        {
          "name": "answer_query_websearch",
          "description": "Deploy Server Vertex AI Server @shariqriazz/vertex-ai-mcp-server Try in Playground answer_query_websearch",
          "parameters": [
            {
              "name": "answer_query_websearch",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "answer_query_direct",
          "description": "Answers a natural language query using only the internal knowledge of the configured Vertex AI model (gemini-1.5-pro-latest). Does not use web search. Requires a 'query' string.",
          "parameters": [
            {
              "name": "answer_query_direct",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "explain_topic_with_docs",
          "description": "Provides a detailed explanation for a query about a specific software topic by synthesizing information primarily from official documentation found via web search. Focuses on comprehensive answers, context, and adherence to documented details. Uses the configured Vertex AI model (gemini-1.5-pro-latest) with Google Search. Requires 'topic' and 'query'.",
          "parameters": [
            {
              "name": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "topic",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_doc_snippets",
          "description": "Provides precise, authoritative code snippets or concise answers for technical queries by searching official documentation. Focuses on delivering exact solutions without unnecessary explanation. Uses the configured Vertex AI model (gemini-1.5-pro-latest) with Google Search. Requires 'topic' and 'query'.",
          "parameters": [
            {
              "name": "get_doc_snippets",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "generate_project_guidelines",
          "description": "Generates a structured project guidelines document (e.g., Markdown) based on a specified list of technologies and versions (tech stack). Uses web search to find the latest official documentation, style guides, and best practices for each component and synthesizes them into actionable rules and recommendations. Uses the configured Vertex AI model (gemini-1.5-pro-latest) with Google Search. Requires 'tech_stack'.",
          "parameters": [
            {
              "name": "generate_project_guidelines",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "read_file_content",
          "description": "Read the complete contents of a file from the workspace filesystem. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file within the workspace.",
          "parameters": [
            {
              "name": "read_file_content",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "read_multiple_files_content",
          "description": "Read the contents of multiple files simultaneously from the workspace filesystem. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation.",
          "parameters": [
            {
              "name": "read_multiple_files_content",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "write_file_content",
          "description": "Create a new file or completely overwrite an existing file in the workspace filesystem with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding.",
          "parameters": [
            {
              "name": "write_file_content",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edit_file_content",
          "description": "Make line-based edits to a text file in the workspace filesystem. Each edit attempts to replace an exact match of 'oldText' with 'newText'. If no exact match is found, it attempts a line-by-line match ignoring leading/trailing whitespace. Indentation of the first line is preserved, and relative indentation of subsequent lines is attempted. Returns a git-style diff showing the changes made (or previewed if dryRun is true).",
          "parameters": [
            {
              "name": "edit_file_content",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_directory",
          "description": "Create a new directory or ensure a directory exists in the workspace filesystem. Can create multiple nested directories in one operation (like mkdir -p). If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects.",
          "parameters": [
            {
              "name": "create_directory",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_directory_contents",
          "description": "Get a detailed listing of all files and directories directly within a specified path in the workspace filesystem. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Does not list recursively.",
          "parameters": [
            {
              "name": "list_directory_contents",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_directory_tree",
          "description": "Get a recursive tree view of files and directories within the workspace filesystem as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' (an array) for directories. Files have no 'children' array. The output is formatted JSON text. Useful for understanding the complete structure of a project directory.",
          "parameters": [
            {
              "name": "get_directory_tree",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "move_file_or_directory",
          "description": "Move or rename files and directories within the workspace filesystem. Can move items between directories and rename them in a single operation. If the destination path already exists, the operation will likely fail (OS-dependent).",
          "parameters": [
            {
              "name": "move_file_or_directory",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_filesystem",
          "description": "Recursively search for files and directories within the workspace filesystem matching a pattern in their name. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths (relative to workspace) to all matching items. Supports excluding paths using glob patterns.",
          "parameters": [
            {
              "name": "search_filesystem",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_filesystem_info",
          "description": "Retrieve detailed metadata about a file or directory within the workspace filesystem. Returns comprehensive information including size (bytes), creation time, last modified time, last accessed time, type (file/directory), and permissions (octal string). This tool is perfect for understanding file characteristics without reading the actual content.",
          "parameters": [
            {
              "name": "get_filesystem_info",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "save_generate_project_guidelines",
          "description": "Generates comprehensive project guidelines based on a tech stack using web search and saves the result to a specified file path. Uses the configured Vertex AI model (gemini-1.5-pro-latest). Requires 'tech_stack' and 'output_path'.",
          "parameters": [
            {
              "name": "save_generate_project_guidelines",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "save_doc_snippet",
          "description": "Provides precise code snippets or concise answers for technical queries by searching official documentation and saves the result to a file. Uses the configured Vertex AI model (gemini-1.5-pro-latest) with Google Search. Requires 'topic', 'query', and 'output_path'.",
          "parameters": [
            {
              "name": "save_doc_snippet",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "save_topic_explanation",
          "description": "Provides a detailed explanation for a query about a specific software topic using official documentation found via web search and saves the result to a file. Uses the configured Vertex AI model (gemini-1.5-pro-latest). Requires 'topic', 'query', and 'output_path'.",
          "parameters": [
            {
              "name": "save_topic_explanation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "save_answer_query_direct",
          "description": "Answers a natural language query using only the internal knowledge of the configured Vertex AI model (gemini-1.5-pro-latest), does not use web search, and saves the answer to a file. Requires 'query' and 'output_path'.",
          "parameters": [
            {
              "name": "save_answer_query_direct",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "save_answer_query_websearch",
          "description": "Answers a natural language query using Google Search results and saves the answer to a file. Uses the configured Vertex AI model (gemini-1.5-pro-latest). Requires 'query' and 'output_path'.",
          "parameters": [
            {
              "name": "save_answer_query_websearch",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@shariqriazz/vertex-ai-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@shariqriazz/vertex-ai-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0203.@shariqriazz_vertex-ai-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 199
  }
}