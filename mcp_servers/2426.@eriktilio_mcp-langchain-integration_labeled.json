{
  "labels": {
    "analysis": "The MCP Server described is designed to integrate LangChain with Google's Gemini model to process natural language inputs (specifically mathematical expressions) and execute calculations. The single available tool, \"calculate_expression,\" suggests the server's primary use case is evaluating mathematical expressions in a secure manner. This functionality supports AI workflows by allowing dynamic tool invocation for computational tasks.",
    "reasoning": "The primary label \"Data Analysis & Processing\" was chosen because the server's core functionality involves processing and evaluating mathematical expressions, which falls under data computation and analysis. The secondary label \"AI/ML Tools\" was selected due to its integration with the Gemini model and LangChain, which are AI/ML frameworks. There is no need for a custom label as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "AI/ML Tools"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2425,
    "server_name": "LangChain Gemini Tool Server",
    "rank_by_usage": 2426,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@eriktilio_mcp-langchain-integration.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@eriktilio/mcp-langchain-integration/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "calculate_expression",
          "description": "Avalia expressões matemáticas simples de forma segura.",
          "input_schema": {
            "properties": {
              "expr": {
                "title": "Expr",
                "type": "string"
              }
            },
            "required": [
              "expr"
            ],
            "title": "calculate_expressionArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "calculate_expression"
      ]
    },
    "server_info_crawled": {
      "id": 2425,
      "name": "LangChain Gemini Tool Server",
      "author": "@eriktilio/mcp-langchain-integration",
      "overview": "Enable natural language interpretation and mathematical expression calculation by integrating LangChain with Google's Gemini model and custom tools via MCP. Run a local tool server that processes math expressions and connects seamlessly with your chain. Enhance your AI workflows with dynamic tool invocation and computation capabilities.",
      "repository_url": "https://github.com/eriktilio/mcp-langchain-integration",
      "homepage": "https://smithery.ai/server/@eriktilio/mcp-langchain-integration",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@eriktilio_mcp-langchain-integration.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "calculate_expression",
          "description": "Avalia expressões matemáticas simples de forma segura.",
          "input_schema": {
            "properties": {
              "expr": {
                "title": "Expr",
                "type": "string"
              }
            },
            "required": [
              "expr"
            ],
            "title": "calculate_expressionArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@eriktilio/mcp-langchain-integration/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@eriktilio/mcp-langchain-integration/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "2426.@eriktilio_mcp-langchain-integration_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 2072
  }
}