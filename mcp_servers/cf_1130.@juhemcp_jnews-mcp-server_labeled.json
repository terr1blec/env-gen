{
  "labels": {
    "analysis": "The Juhe News Server is primarily designed to fetch and provide access to trending news headlines and detailed content across various categories such as recommendations, domestic, technology, and sports. The available tools suggest its core functionality is centered around retrieving news data in a format that can be easily integrated into applications or services. This server solves the problem of gathering real-time news updates without manual effort, making it ideal for applications requiring news data.",
    "reasoning": "The **News & Media** category is the most fitting primary label as the server's primary purpose is to deliver news content. The secondary label **API Integration** is chosen because the server provides tools for easy integration into other applications, and **Web Search & Research** is included due to its role in gathering and organizing news data. No custom label is needed as the predefined labels adequately cover the server's functionality.",
    "primary_label": "News & Media",
    "secondary_labels": [
      "API Integration",
      "Web Search & Research"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1129,
    "server_name": "Juhe News Server",
    "rank_by_usage": 1130,
    "usage_count": "1",
    "original_file": "../crawler/smithery/@juhemcp_jnews-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@juhemcp/jnews-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1129,
      "name": "Juhe News Server",
      "author": "@juhemcp/jnews-mcp-server",
      "overview": "Fetch the latest trending news headlines and detailed content effortlessly. Access a variety of news categories including recommendations, domestic, technology, and sports. Enhance your applications with real-time news updates using our easy-to-integrate server.",
      "repository_url": "https://github.com/juhemcp/jnews-mcp-server",
      "homepage": "https://smithery.ai/server/@juhemcp/jnews-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "1",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@juhemcp_jnews-mcp-server.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "get_news_list",
          "description": "Deploy Server Juhe News Server Claim Server @juhemcp/jnews-mcp-server Try in Playground get_news_list",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "type",
              "required": false,
              "type": "string"
            },
            {
              "name": "page_size",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_news_content",
          "description": "Description not available",
          "parameters": [
            {
              "name": "get_news_content",
              "required": false,
              "type": "string"
            },
            {
              "name": "uniquekey",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@juhemcp/jnews-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "juheNewsApiKey",
          "required": true,
          "description": "聚合数据 API Key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@juhemcp/jnews-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1130.@juhemcp_jnews-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1107
  }
}