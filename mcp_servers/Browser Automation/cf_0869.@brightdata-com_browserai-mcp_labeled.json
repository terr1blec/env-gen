{
  "labels": {
    "analysis": "The MCP Server, \"Browserai Web Data Access Server,\" is primarily designed to enable AI agents to access, interact with, and extract data from the web in real time. It provides tools for bypassing geo-restrictions and bot detection, allowing for seamless web navigation and data retrieval. The available tools focus on session management, web interaction, and data extraction, indicating a strong emphasis on automated web browsing and content retrieval.",
    "reasoning": "The primary label \"Browser Automation\" is chosen because the server's core functionality revolves around interacting with web pages, extracting data, and managing browser sessionsâ€”all key aspects of web automation. The secondary label \"Web Search & Research\" is added due to the server's capability to retrieve up-to-date information from the web, supporting research and data gathering. The secondary label \"API Integration\" is included because the server integrates with MCP-compliant AI assistants, suggesting it can be part of larger workflows involving other tools or services.",
    "primary_label": "Browser Automation",
    "secondary_labels": [
      "Web Search & Research",
      "API Integration"
    ],
    "custom_label": "Web Data Extraction",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 868,
    "server_name": "Browserai Web Data Access Server",
    "rank_by_usage": 869,
    "usage_count": "5",
    "original_file": "../crawler/smithery/@brightdata-com_browserai-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@brightdata-com/browserai-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 868,
      "name": "Browserai Web Data Access Server",
      "author": "@brightdata-com/browserai-mcp",
      "overview": "Enable AI agents to access and extract real-time web data seamlessly. Bypass geo-restrictions and bot detection to retrieve up-to-date information from the internet. Integrate effortlessly with MCP-compliant AI assistants for enhanced web navigation and data retrieval capabilities.",
      "repository_url": "https://github.com/brightdata-com/browserai-mcp",
      "homepage": "https://smithery.ai/server/@brightdata-com/browserai-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "5",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@brightdata-com_browserai-mcp.json",
      "tools_count": 9,
      "tools": [
        {
          "name": "start_new_session",
          "description": "Deploy Server Browserai Web Data Access Server @brightdata-com/browserai-mcp Try in Playground start_new_session",
          "parameters": [
            {
              "name": "start_new_session",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "interact_and_extract_in_session",
          "description": "Interact with elements in an existing browser session. Provide an array of instructions like [\"Click the login button\", \"Fill email field with test@example.com\", \"Scroll down\"]. Returns updated page data after the interactions.",
          "parameters": [
            {
              "name": "interact_and_extract_in_session",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "extract_from_session",
          "description": "Extract specific data from the current page in a browser session. Provide an array of extraction instructions, e.g., [\"Extract all product names and prices as JSON array\", \"Get the page title and meta description\"].",
          "parameters": [
            {
              "name": "executionId",
              "required": true,
              "type": "string"
            },
            {
              "name": "instruction",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_session_status",
          "description": "Check the current status and information of a browser session. Useful for debugging or verifying session state.",
          "parameters": [
            {
              "name": "get_session_status",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "wait_for_element",
          "description": "Wait for a specific element to appear on the page before proceeding. Useful for dynamic content that loads after page load. Provide element selector or description to wait for.",
          "parameters": [
            {
              "name": "wait_for_element",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "navigate_to_url",
          "description": "Navigate to a specific URL in an existing browser session. Useful for moving between pages while maintaining session state.",
          "parameters": [
            {
              "name": "navigate_to_url",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_page_info",
          "description": "Get comprehensive information about the current page including title, URL, meta tags, and page structure. Useful for understanding page context before interactions.",
          "parameters": [
            {
              "name": "get_page_info",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "batch_actions",
          "description": "Execute multiple actions in sequence within a single browser session. Provide an array of actions to perform one after another. Useful for complex workflows like login -> navigate -> extract data.",
          "parameters": [
            {
              "name": "batch_actions",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_active_sessions",
          "description": "List all currently active browser sessions with their status and basic information. Useful for session management and debugging.",
          "parameters": [
            {
              "name": "list_active_sessions",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@brightdata-com/browserai-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "apiToken",
          "required": true,
          "description": "BrowserAI API token, available in your BrowserAI dashboard"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@brightdata-com/browserai-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0869.@brightdata-com_browserai-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 850
  }
}