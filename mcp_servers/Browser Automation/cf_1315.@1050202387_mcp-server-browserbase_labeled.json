{
  "labels": {
    "analysis": "The MCP Server described is focused on automating interactions within a cloud-based browser, enabling AI applications to perform tasks like web navigation, form filling, text extraction, and screenshot capture. Its core functionality revolves around browser automation, screenshot capture, and data extraction from web pages, with a specific emphasis on seamless integration with AI workflows.",
    "reasoning": "The primary label reflects the server's primary use case: browser automation (including web scraping, navigation, and interaction). The secondary label aligns with the data extraction capabilities, which are core to the server's functionality. No custom label is necessary as the predefined labels adequately cover the server's use cases.",
    "primary_label": "Browser Automation",
    "secondary_labels": [
      "Web Search & Research",
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1314,
    "server_name": "Browserbase MCP Server",
    "rank_by_usage": 1315,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@1050202387_mcp-server-browserbase.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@1050202387/mcp-server-browserbase/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "Connection timeout (20 seconds)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1314,
      "name": "Browserbase MCP Server",
      "author": "@1050202387/mcp-server-browserbase",
      "overview": "Automate cloud browser interactions and extract data seamlessly. Enhance your AI applications with capabilities like web navigation, screenshot capture, and JavaScript execution in a cloud environment.",
      "repository_url": "https://github.com/1050202387/mcp-server-browserbase",
      "homepage": "https://smithery.ai/server/@1050202387/mcp-server-browserbase",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@1050202387_mcp-server-browserbase.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "browserbase_create_session",
          "description": "Deploy Server Browserbase MCP Server @1050202387/mcp-server-browserbase Try in Playground browserbase_create_session",
          "parameters": [
            {
              "name": "browserbase_create_session",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "browserbase_navigate",
          "description": "Description not available",
          "parameters": [
            {
              "name": "browserbase_navigate",
              "required": false,
              "type": "string"
            },
            {
              "name": "Navigate",
              "required": false,
              "type": "string"
            },
            {
              "name": "to",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "URL",
              "required": false,
              "type": "string"
            },
            {
              "name": "url",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "browserbase_screenshot",
          "description": "Takes a screenshot of the current page. Use this tool to learn where you are on the page when controlling the browser with Stagehand. Only use this tool when the other tools are not sufficient to get the information you need.",
          "parameters": [
            {
              "name": "browserbase_screenshot",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "browserbase_click",
          "description": "Click an element on the page",
          "parameters": [
            {
              "name": "browserbase_click",
              "required": false,
              "type": "string"
            },
            {
              "name": "selector",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "browserbase_fill",
          "description": "Fill out an input field",
          "parameters": [
            {
              "name": "value",
              "required": true,
              "type": "string"
            },
            {
              "name": "selector",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "browserbase_get_text",
          "description": "Extract all text content from the current page",
          "parameters": [
            {
              "name": "browserbase_get_text",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@1050202387/mcp-server-browserbase/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "browserbaseApiKey",
          "required": true,
          "description": "API key for Browserbase"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@1050202387/mcp-server-browserbase/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1315.@1050202387_mcp-server-browserbase_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1247
  }
}