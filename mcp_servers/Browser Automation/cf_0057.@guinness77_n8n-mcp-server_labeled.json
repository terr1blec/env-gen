{
  "labels": {
    "analysis": "The MCP Server for n8n Workflow Integration provides a comprehensive set of tools to manage, execute, and secure n8n automation workflows. Its core functionality revolves around workflow lifecycle management, credential handling, project and variable management (for enterprise features), and security auditing. The server enables seamless interaction with n8n workflows through a standardized protocol, making it particularly useful for streamlining automation processes and integrating them with enterprise systems.",
    "reasoning": "The primary label is \"Workflow Automation\" as it describes the server's core purpose of managing and executing n8n workflows. Secondary labels include \"API Integration\" for its interaction with n8n's API and \"Security & Authentication\" for credential and audit tools. A custom label \"Workflow Orchestration\" was added to describe the server's advanced capabilities in managing workflows and enterprise features.",
    "primary_label": "Browser Automation",
    "secondary_labels": [
      "API Integration",
      "Security & Authentication"
    ],
    "custom_label": "Workflow Orchestration",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 56,
    "server_name": "n8n Workflow Integration Server",
    "rank_by_usage": 57,
    "usage_count": "1,699",
    "original_file": "../crawler/smithery/@guinness77_n8n-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@guinness77/n8n-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 56,
      "name": "n8n Workflow Integration Server",
      "author": "@guinness77/n8n-mcp-server",
      "overview": "Enable seamless interaction with your n8n automation workflows, executions, and credentials through a standardized protocol. Manage and execute workflows, handle credentials, and perform security audits directly from your LLM environment. Enhance your automation capabilities with enterprise features like project and variable management when licensed.",
      "repository_url": "https://github.com/guinness77/n8n-mcp-server",
      "homepage": "https://smithery.ai/server/@guinness77/n8n-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "1,699",
      "success_rate": "98.43%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@guinness77_n8n-mcp-server.json",
      "tools_count": 33,
      "tools": [
        {
          "name": "init-n8n",
          "description": "Deploy Server n8n Workflow Integration Server @guinness77/n8n-mcp-server Try in Playground",
          "parameters": []
        },
        {
          "name": "list-workflows",
          "description": "List all workflows from n8n. Use after init-n8n to see available workflows. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines.",
          "parameters": []
        },
        {
          "name": "get-workflow",
          "description": "Retrieve a workflow by ID. Use after list-workflows to get detailed information about a specific workflow. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines.",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "clientId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create-workflow",
          "description": "Create a new workflow in n8n. Use to set up a new workflow with optional nodes and connections. IMPORTANT: 1) Arguments must be provided as compact, single-line JSON without whitespace or newlines. 2) Must provide full workflow structure including nodes and connections arrays, even if empty. The 'active' property should not be included as it is read-only.",
          "parameters": []
        },
        {
          "name": "update-workflow",
          "description": "Update an existing workflow in n8n. Use after get-workflow to modify a workflow's properties, nodes, or connections. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines.",
          "parameters": []
        },
        {
          "name": "delete-workflow",
          "description": "Delete a workflow by ID. This action cannot be undone. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines.",
          "parameters": []
        },
        {
          "name": "activate-workflow",
          "description": "Activate a workflow by ID. This will enable the workflow to run. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines.",
          "parameters": []
        },
        {
          "name": "deactivate-workflow",
          "description": "Deactivate a workflow by ID. This will prevent the workflow from running. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines.",
          "parameters": []
        },
        {
          "name": "list-projects",
          "description": "List all projects from n8n. NOTE: Requires n8n Enterprise license with project management features enabled. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines.",
          "parameters": []
        },
        {
          "name": "create-project",
          "description": "Create a new project in n8n. NOTE: Requires n8n Enterprise license with project management features enabled. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines.",
          "parameters": []
        },
        {
          "name": "delete-project",
          "description": "Delete a project by ID. NOTE: Requires n8n Enterprise license with project management features enabled. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines.",
          "parameters": []
        },
        {
          "name": "update-project",
          "description": "Update a project's name. NOTE: Requires n8n Enterprise license with project management features enabled. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines.",
          "parameters": []
        },
        {
          "name": "list-users",
          "description": "Retrieve all users from your instance. Only available for the instance owner.",
          "parameters": []
        },
        {
          "name": "create-users",
          "description": "Create one or more users in your instance.",
          "parameters": [
            {
              "name": "users",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-user",
          "description": "Get user by ID or email address.",
          "parameters": [
            {
              "name": "clientId",
              "required": true,
              "type": "string"
            },
            {
              "name": "idOrEmail",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete-user",
          "description": "Delete a user from your instance.",
          "parameters": [
            {
              "name": "clientId",
              "required": true,
              "type": "string"
            },
            {
              "name": "idOrEmail",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list-variables",
          "description": "List all variables from n8n. NOTE: Requires n8n Enterprise license with variable management features enabled. Use after init-n8n to see available variables. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines.",
          "parameters": []
        },
        {
          "name": "create-variable",
          "description": "Create a new variable in n8n. NOTE: Requires n8n Enterprise license with variable management features enabled. Variables can be used across workflows to store and share data. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines.",
          "parameters": []
        },
        {
          "name": "delete-variable",
          "description": "Delete a variable by ID. NOTE: Requires n8n Enterprise license with variable management features enabled. Use after list-variables to get the ID of the variable to delete. This action cannot be undone. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines.",
          "parameters": []
        },
        {
          "name": "create-credential",
          "description": "Create a credential that can be used by nodes of the specified type. The credential type name can be found in the n8n UI when creating credentials (e.g., 'cloudflareApi', 'githubApi', 'slackOAuth2Api'). Use get-credential-schema first to see what fields are required for the credential type you want to create.",
          "parameters": []
        },
        {
          "name": "delete-credential",
          "description": "Delete a credential by ID. You must be the owner of the credentials.",
          "parameters": []
        },
        {
          "name": "get-credential-schema",
          "description": "Show credential data schema for a specific credential type. The credential type name can be found in the n8n UI when creating credentials (e.g., 'cloudflareApi', 'githubApi', 'slackOAuth2Api'). This will show you what fields are required for creating credentials of this type.",
          "parameters": []
        },
        {
          "name": "list-executions",
          "description": "Retrieve all executions from your instance with optional filtering.",
          "parameters": []
        },
        {
          "name": "get-execution",
          "description": "Retrieve a specific execution by ID.",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "clientId",
              "required": true,
              "type": "string"
            },
            {
              "name": "includeData",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete-execution",
          "description": "Delete a specific execution by ID.",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "clientId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create-tag",
          "description": "Create a new tag in your instance.",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "clientId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list-tags",
          "description": "Retrieve all tags from your instance.",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-tag",
          "description": "Retrieve a specific tag by ID.",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "clientId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "update-tag",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Update",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "clientId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete-tag",
          "description": "Description not available",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "clientId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-workflow-tags",
          "description": "Get tags associated with a workflow.",
          "parameters": [
            {
              "name": "clientId",
              "required": true,
              "type": "string"
            },
            {
              "name": "workflowId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "update-workflow-tags",
          "description": "Update tags associated with a workflow.",
          "parameters": []
        },
        {
          "name": "generate-audit",
          "description": "Generate a security audit for your n8n instance.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@guinness77/n8n-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "n8nApiKey",
          "required": true,
          "description": "Your n8n API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@guinness77/n8n-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0057.@guinness77_n8n-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 56
  }
}