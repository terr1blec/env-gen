{
  "labels": {
    "analysis": "The MCP Server described is primarily focused on browser interaction and automation. It allows users to execute commands directly from the server to manipulate the browser, such as retrieving the current page URL, extracting markdown content, modifying page styles, and searching browser history. This functionality enhances the browsing experience by providing a programmatic way to interact with the browser, making it particularly useful for tasks like web scraping, content extraction, and user interface customization.",
    "reasoning": "The primary label \"Browser Automation\" is chosen because the server's tools are geared toward automating and interacting with browser tasks (retrieving URLs, modifying styles, searching history). The secondary label \"Web Search & Research\" is included as the tools facilitate data extraction and content retrieval, which are common in research and information-gathering tasks. No custom label is needed as the predefined labels adequately cover the server's functionality.",
    "primary_label": "Browser Automation",
    "secondary_labels": [
      "Web Search & Research"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 891,
    "server_name": "Browser Extension and MCP Server",
    "rank_by_usage": 892,
    "usage_count": "4",
    "original_file": "../crawler/smithery/@djyde_browser-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@djyde/browser-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_current_page_url",
          "description": "Get the URL from current browser browsing tab",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "get_current_page_markdown",
          "description": "Get the markdown from current browser browsing page",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "append_style",
          "description": "Append a css style to the current browser browsing page",
          "input_schema": {
            "type": "object",
            "properties": {
              "css_string": {
                "type": "string",
                "description": "The css style to append to the current browser browsing page"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "history_search",
          "description": "Search the browser history",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "A free-text query to the history service. Leave this empty to retrieve all pages."
              }
            }
          },
          "annotations": null
        }
      ],
      "tool_count": 4,
      "tool_names": [
        "get_current_page_url",
        "get_current_page_markdown",
        "append_style",
        "history_search"
      ]
    },
    "server_info_crawled": {
      "id": 891,
      "name": "Browser Extension and MCP Server",
      "author": "@djyde/browser-mcp",
      "overview": "Interact with your browser seamlessly. Enhance your browsing experience by executing commands, modifying styles, and accessing your history directly from the MCP server.",
      "repository_url": "https://github.com/djyde/browser-mcp",
      "homepage": "https://smithery.ai/server/@djyde/browser-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "4",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@djyde_browser-mcp.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "get_current_page_url",
          "description": "Get the URL from current browser browsing tab",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "get_current_page_markdown",
          "description": "Get the markdown from current browser browsing page",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "append_style",
          "description": "Append a css style to the current browser browsing page",
          "input_schema": {
            "type": "object",
            "properties": {
              "css_string": {
                "type": "string",
                "description": "The css style to append to the current browser browsing page"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "history_search",
          "description": "Search the browser history",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "A free-text query to the history service. Leave this empty to retrieve all pages."
              }
            }
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@djyde/browser-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@djyde/browser-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0892.@djyde_browser-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 873
  }
}