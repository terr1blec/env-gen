{
  "labels": {
    "analysis": "The MCP Server is designed to enable AI-driven control of remote macOS systems. It provides tools for screen capture, mouse movement, clicks, scrolling, and keyboard input, allowing for full remote interaction with a macOS environment. This is useful for automation, remote system management, or tasks requiring direct interaction with a macOS interface without physical or software access barriers.",
    "reasoning": "The primary functionality of this server is to enable remote control and automation of macOS systems, which aligns with the \"Browser Automation\" category due to its capability to automate input and interaction. The secondary label \"Operating System\" is relevant because it manipulates system-level inputs. No custom label is needed as the predefined categories adequately cover its functionality.",
    "primary_label": "Browser Automation",
    "secondary_labels": [
      "Operating System"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 802,
    "server_name": "Remote MacOs Use",
    "rank_by_usage": 803,
    "usage_count": "7",
    "original_file": "../crawler/smithery/@baryhuang_mcp-remote-macos-use.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@baryhuang/mcp-remote-macos-use/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 802,
      "name": "Remote MacOs Use",
      "author": "@baryhuang/mcp-remote-macos-use",
      "overview": "Enable AI to fully control remote macOS systems effortlessly. Experience a native macOS environment without additional software installations, allowing your AI to operate seamlessly. Enjoy universal compatibility and minimal setup for instant productivity.",
      "repository_url": "https://github.com/baryhuang/mcp-remote-macos-use",
      "homepage": "https://smithery.ai/server/@baryhuang/mcp-remote-macos-use",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "7",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@baryhuang_mcp-remote-macos-use.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "remote_macos_get_screen",
          "description": "Deploy Server Remote MacOs Use @baryhuang/mcp-remote-macos-use Try in Playground remote_macos_get_screen",
          "parameters": [
            {
              "name": "remote_macos_get_screen",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "remote_macos_mouse_scroll",
          "description": "Perform a mouse scroll at specified coordinates on a remote MacOs machine, with automatic coordinate scaling. Uses environment variables for connection details.",
          "parameters": [
            {
              "name": "remote_macos_mouse_scroll",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "remote_macos_send_keys",
          "description": "Send keyboard input to a remote MacOs machine. Uses environment variables for connection details.",
          "parameters": [
            {
              "name": "text",
              "required": false,
              "type": "string"
            },
            {
              "name": "special_key",
              "required": false,
              "type": "string"
            },
            {
              "name": "key_combination",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "remote_macos_mouse_move",
          "description": "Move the mouse cursor to specified coordinates on a remote MacOs machine, with automatic coordinate scaling. Uses environment variables for connection details.",
          "parameters": [
            {
              "name": "remote_macos_mouse_move",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "remote_macos_mouse_click",
          "description": "Perform a mouse click at specified coordinates on a remote MacOs machine, with automatic coordinate scaling. Uses environment variables for connection details.",
          "parameters": [
            {
              "name": "remote_macos_mouse_click",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "remote_macos_mouse_double_click",
          "description": "Perform a mouse double-click at specified coordinates on a remote MacOs machine, with automatic coordinate scaling. Uses environment variables for connection details.",
          "parameters": [
            {
              "name": "remote_macos_mouse_double_click",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@baryhuang/mcp-remote-macos-use/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@baryhuang/mcp-remote-macos-use/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0803.@baryhuang_mcp-remote-macos-use_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 784
  }
}