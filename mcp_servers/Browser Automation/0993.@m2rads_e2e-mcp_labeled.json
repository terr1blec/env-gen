{
  "labels": {
    "analysis": "The MCP Server is designed for automating end-to-end testing of web applications. It provides a suite of tools for interacting with web pages, simulating user actions, and capturing validation data without relying on vision models. The focus is on deterministic testing using Playwright, enabling users to ensure application reliability through scripted interactions.",
    "reasoning": "The primary functionality revolves around automating browser interactions, which aligns strongly with browser automation. Secondary relevance to web search & research exists due to the navigation and data capture capabilities, though the core purpose is testing. No custom label is needed as the predefined categories adequately cover the functionality.",
    "primary_label": "Browser Automation",
    "secondary_labels": [
      "Web Search & Research"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 992,
    "server_name": "End to End Testing Server",
    "rank_by_usage": 993,
    "usage_count": "2",
    "original_file": "../crawler/smithery/@m2rads_e2e-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@m2rads/e2e-mcp/mcp?config=eyJlbmR0b2VuZCI6IGZhbHNlfQ==&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "browser_navigate",
          "description": "Navigate to a URL",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "The URL to navigate to"
              }
            },
            "required": [
              "url"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_go_back",
          "description": "Go back to the previous page",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_go_forward",
          "description": "Go forward to the next page",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_choose_file",
          "description": "Choose one or multiple files to upload",
          "input_schema": {
            "type": "object",
            "properties": {
              "paths": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The absolute paths to the files to upload. Can be a single file or multiple files."
              }
            },
            "required": [
              "paths"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_snapshot",
          "description": "Capture accessibility snapshot of the current page, this is better than screenshot",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_click",
          "description": "Perform click on a web page",
          "input_schema": {
            "type": "object",
            "properties": {
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to interact with the element"
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              }
            },
            "required": [
              "element",
              "ref"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_drag",
          "description": "Perform drag and drop between two elements",
          "input_schema": {
            "type": "object",
            "properties": {
              "startElement": {
                "type": "string",
                "description": "Human-readable source element description used to obtain the permission to interact with the element"
              },
              "startRef": {
                "type": "string",
                "description": "Exact source element reference from the page snapshot"
              },
              "endElement": {
                "type": "string",
                "description": "Human-readable target element description used to obtain the permission to interact with the element"
              },
              "endRef": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              }
            },
            "required": [
              "startElement",
              "startRef",
              "endElement",
              "endRef"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_hover",
          "description": "Hover over element on page",
          "input_schema": {
            "type": "object",
            "properties": {
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to interact with the element"
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              }
            },
            "required": [
              "element",
              "ref"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_type",
          "description": "Type text into editable element",
          "input_schema": {
            "type": "object",
            "properties": {
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to interact with the element"
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              },
              "text": {
                "type": "string",
                "description": "Text to type into the element"
              },
              "submit": {
                "type": "boolean",
                "description": "Whether to submit entered text (press Enter after)"
              }
            },
            "required": [
              "element",
              "ref",
              "text",
              "submit"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_select_option",
          "description": "Select an option in a dropdown",
          "input_schema": {
            "type": "object",
            "properties": {
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to interact with the element"
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              },
              "values": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of values to select in the dropdown. This can be a single value or multiple values."
              }
            },
            "required": [
              "element",
              "ref",
              "values"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_take_screenshot",
          "description": "Take a screenshot of the current page. You can't perform actions based on the screenshot, use browser_snapshot for actions.",
          "input_schema": {
            "type": "object",
            "properties": {
              "raw": {
                "type": "boolean",
                "description": "Whether to return without compression (in PNG format). Default is false, which returns a JPEG image."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_batch",
          "description": "TOOL CALL REQUIREMENT: MUST CALL browser_navigate TOOL FIRST IN THE TARGET URLS BEFORE CALLING THIS TOOL TO GET THE CORRECT ARIA REFS. This tool runs a bunch of steps at once.",
          "input_schema": {
            "type": "object",
            "properties": {
              "input": {
                "type": "object",
                "properties": {
                  "test_cases": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "definition": {
                          "type": "string"
                        },
                        "steps": {
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "const": "browser_navigate"
                                      },
                                      "params": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "description": "The URL to navigate to"
                                          }
                                        },
                                        "required": [
                                          "url"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "params"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "const": "browser_press_key"
                                      },
                                      "params": {
                                        "type": "object",
                                        "properties": {
                                          "key": {
                                            "type": "string",
                                            "description": "Name of the key to press or a character to generate, such as `ArrowLeft` or `a`"
                                          }
                                        },
                                        "required": [
                                          "key"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "params"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "const": "browser_wait"
                                      },
                                      "params": {
                                        "type": "object",
                                        "properties": {
                                          "time": {
                                            "type": "number",
                                            "description": "The time to wait in seconds"
                                          }
                                        },
                                        "required": [
                                          "time"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "params"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "const": "browser_save_as_pdf"
                                      },
                                      "params": {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "params"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "const": "browser_close"
                                      },
                                      "params": {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "params"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "const": "browser_go_back"
                                      },
                                      "params": {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "params"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "const": "browser_go_forward"
                                      },
                                      "params": {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "params"
                                    ],
                                    "additionalProperties": false
                                  }
                                ]
                              },
                              {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "const": "browser_drag"
                                      },
                                      "params": {
                                        "type": "object",
                                        "properties": {
                                          "startElement": {
                                            "type": "string",
                                            "description": "Human-readable source element description used to obtain the permission to interact with the element"
                                          },
                                          "startRef": {
                                            "type": "string",
                                            "description": "Exact source element reference from the page snapshot"
                                          },
                                          "endElement": {
                                            "type": "string",
                                            "description": "Human-readable target element description used to obtain the permission to interact with the element"
                                          },
                                          "endRef": {
                                            "type": "string",
                                            "description": "Exact target element reference from the page snapshot"
                                          }
                                        },
                                        "required": [
                                          "startElement",
                                          "startRef",
                                          "endElement",
                                          "endRef"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "params"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "const": "browser_click"
                                      },
                                      "params": {
                                        "type": "object",
                                        "properties": {
                                          "element": {
                                            "type": "string",
                                            "description": "Human-readable element description used to obtain permission to interact with the element"
                                          },
                                          "ref": {
                                            "type": "string",
                                            "description": "Exact target element reference from the page snapshot"
                                          }
                                        },
                                        "required": [
                                          "element",
                                          "ref"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "params"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "const": "browser_hover"
                                      },
                                      "params": {
                                        "$ref": "#/properties/input/properties/test_cases/items/properties/steps/items/anyOf/1/anyOf/1/properties/params"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "params"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "const": "browser_type"
                                      },
                                      "params": {
                                        "type": "object",
                                        "properties": {
                                          "element": {
                                            "$ref": "#/properties/input/properties/test_cases/items/properties/steps/items/anyOf/1/anyOf/1/properties/params/properties/element"
                                          },
                                          "ref": {
                                            "$ref": "#/properties/input/properties/test_cases/items/properties/steps/items/anyOf/1/anyOf/1/properties/params/properties/ref"
                                          },
                                          "text": {
                                            "type": "string",
                                            "description": "Text to type into the element"
                                          },
                                          "submit": {
                                            "type": "boolean",
                                            "description": "Whether to submit entered text (press Enter after)"
                                          }
                                        },
                                        "required": [
                                          "element",
                                          "ref",
                                          "text",
                                          "submit"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "params"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "const": "browser_select_option"
                                      },
                                      "params": {
                                        "type": "object",
                                        "properties": {
                                          "element": {
                                            "$ref": "#/properties/input/properties/test_cases/items/properties/steps/items/anyOf/1/anyOf/1/properties/params/properties/element"
                                          },
                                          "ref": {
                                            "$ref": "#/properties/input/properties/test_cases/items/properties/steps/items/anyOf/1/anyOf/1/properties/params/properties/ref"
                                          },
                                          "values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            },
                                            "description": "Array of values to select in the dropdown. This can be a single value or multiple values."
                                          }
                                        },
                                        "required": [
                                          "element",
                                          "ref",
                                          "values"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "params"
                                    ],
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "definition",
                        "steps"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                "required": [
                  "test_cases"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "input"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_press_key",
          "description": "Press a key on the keyboard",
          "input_schema": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "Name of the key to press or a character to generate, such as `ArrowLeft` or `a`"
              }
            },
            "required": [
              "key"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_wait",
          "description": "Wait for a specified time in seconds",
          "input_schema": {
            "type": "object",
            "properties": {
              "time": {
                "type": "number",
                "description": "The time to wait in seconds"
              }
            },
            "required": [
              "time"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_save_as_pdf",
          "description": "Save page as PDF",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_close",
          "description": "Close the page",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 16,
      "tool_names": [
        "browser_navigate",
        "browser_go_back",
        "browser_go_forward",
        "browser_choose_file",
        "browser_snapshot",
        "browser_click",
        "browser_drag",
        "browser_hover",
        "browser_type",
        "browser_select_option",
        "browser_take_screenshot",
        "browser_batch",
        "browser_press_key",
        "browser_wait",
        "browser_save_as_pdf",
        "browser_close"
      ]
    },
    "server_info_crawled": {
      "id": 992,
      "name": "End to End Testing Server",
      "author": "@m2rads/e2e-mcp",
      "overview": "Automate your testing processes with LLM-driven validation, ensuring your applications are robust and reliable. This server leverages Playwright for fast, lightweight, and deterministic testing without the need for vision models. Streamline your end-to-end testing and focus on delivering quality software efficiently.",
      "repository_url": "https://github.com/m2rads/e2e-mcp",
      "homepage": "https://smithery.ai/server/@m2rads/e2e-mcp",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "2",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@m2rads_e2e-mcp.json",
      "tools_count": 16,
      "tools": [
        {
          "name": "browser_navigate",
          "description": "Navigate to a URL",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "The URL to navigate to"
              }
            },
            "required": [
              "url"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_go_back",
          "description": "Go back to the previous page",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_go_forward",
          "description": "Go forward to the next page",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_choose_file",
          "description": "Choose one or multiple files to upload",
          "input_schema": {
            "type": "object",
            "properties": {
              "paths": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The absolute paths to the files to upload. Can be a single file or multiple files."
              }
            },
            "required": [
              "paths"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_snapshot",
          "description": "Capture accessibility snapshot of the current page, this is better than screenshot",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_click",
          "description": "Perform click on a web page",
          "input_schema": {
            "type": "object",
            "properties": {
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to interact with the element"
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              }
            },
            "required": [
              "element",
              "ref"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_drag",
          "description": "Perform drag and drop between two elements",
          "input_schema": {
            "type": "object",
            "properties": {
              "startElement": {
                "type": "string",
                "description": "Human-readable source element description used to obtain the permission to interact with the element"
              },
              "startRef": {
                "type": "string",
                "description": "Exact source element reference from the page snapshot"
              },
              "endElement": {
                "type": "string",
                "description": "Human-readable target element description used to obtain the permission to interact with the element"
              },
              "endRef": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              }
            },
            "required": [
              "startElement",
              "startRef",
              "endElement",
              "endRef"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_hover",
          "description": "Hover over element on page",
          "input_schema": {
            "type": "object",
            "properties": {
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to interact with the element"
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              }
            },
            "required": [
              "element",
              "ref"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_type",
          "description": "Type text into editable element",
          "input_schema": {
            "type": "object",
            "properties": {
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to interact with the element"
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              },
              "text": {
                "type": "string",
                "description": "Text to type into the element"
              },
              "submit": {
                "type": "boolean",
                "description": "Whether to submit entered text (press Enter after)"
              }
            },
            "required": [
              "element",
              "ref",
              "text",
              "submit"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_select_option",
          "description": "Select an option in a dropdown",
          "input_schema": {
            "type": "object",
            "properties": {
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to interact with the element"
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              },
              "values": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of values to select in the dropdown. This can be a single value or multiple values."
              }
            },
            "required": [
              "element",
              "ref",
              "values"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_take_screenshot",
          "description": "Take a screenshot of the current page. You can't perform actions based on the screenshot, use browser_snapshot for actions.",
          "input_schema": {
            "type": "object",
            "properties": {
              "raw": {
                "type": "boolean",
                "description": "Whether to return without compression (in PNG format). Default is false, which returns a JPEG image."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_batch",
          "description": "TOOL CALL REQUIREMENT: MUST CALL browser_navigate TOOL FIRST IN THE TARGET URLS BEFORE CALLING THIS TOOL TO GET THE CORRECT ARIA REFS. This tool runs a bunch of steps at once.",
          "input_schema": {
            "type": "object",
            "properties": {
              "input": {
                "type": "object",
                "properties": {
                  "test_cases": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "definition": {
                          "type": "string"
                        },
                        "steps": {
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "const": "browser_navigate"
                                      },
                                      "params": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "description": "The URL to navigate to"
                                          }
                                        },
                                        "required": [
                                          "url"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "params"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "const": "browser_press_key"
                                      },
                                      "params": {
                                        "type": "object",
                                        "properties": {
                                          "key": {
                                            "type": "string",
                                            "description": "Name of the key to press or a character to generate, such as `ArrowLeft` or `a`"
                                          }
                                        },
                                        "required": [
                                          "key"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "params"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "const": "browser_wait"
                                      },
                                      "params": {
                                        "type": "object",
                                        "properties": {
                                          "time": {
                                            "type": "number",
                                            "description": "The time to wait in seconds"
                                          }
                                        },
                                        "required": [
                                          "time"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "params"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "const": "browser_save_as_pdf"
                                      },
                                      "params": {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "params"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "const": "browser_close"
                                      },
                                      "params": {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "params"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "const": "browser_go_back"
                                      },
                                      "params": {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "params"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "const": "browser_go_forward"
                                      },
                                      "params": {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "params"
                                    ],
                                    "additionalProperties": false
                                  }
                                ]
                              },
                              {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "const": "browser_drag"
                                      },
                                      "params": {
                                        "type": "object",
                                        "properties": {
                                          "startElement": {
                                            "type": "string",
                                            "description": "Human-readable source element description used to obtain the permission to interact with the element"
                                          },
                                          "startRef": {
                                            "type": "string",
                                            "description": "Exact source element reference from the page snapshot"
                                          },
                                          "endElement": {
                                            "type": "string",
                                            "description": "Human-readable target element description used to obtain the permission to interact with the element"
                                          },
                                          "endRef": {
                                            "type": "string",
                                            "description": "Exact target element reference from the page snapshot"
                                          }
                                        },
                                        "required": [
                                          "startElement",
                                          "startRef",
                                          "endElement",
                                          "endRef"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "params"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "const": "browser_click"
                                      },
                                      "params": {
                                        "type": "object",
                                        "properties": {
                                          "element": {
                                            "type": "string",
                                            "description": "Human-readable element description used to obtain permission to interact with the element"
                                          },
                                          "ref": {
                                            "type": "string",
                                            "description": "Exact target element reference from the page snapshot"
                                          }
                                        },
                                        "required": [
                                          "element",
                                          "ref"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "params"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "const": "browser_hover"
                                      },
                                      "params": {
                                        "$ref": "#/properties/input/properties/test_cases/items/properties/steps/items/anyOf/1/anyOf/1/properties/params"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "params"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "const": "browser_type"
                                      },
                                      "params": {
                                        "type": "object",
                                        "properties": {
                                          "element": {
                                            "$ref": "#/properties/input/properties/test_cases/items/properties/steps/items/anyOf/1/anyOf/1/properties/params/properties/element"
                                          },
                                          "ref": {
                                            "$ref": "#/properties/input/properties/test_cases/items/properties/steps/items/anyOf/1/anyOf/1/properties/params/properties/ref"
                                          },
                                          "text": {
                                            "type": "string",
                                            "description": "Text to type into the element"
                                          },
                                          "submit": {
                                            "type": "boolean",
                                            "description": "Whether to submit entered text (press Enter after)"
                                          }
                                        },
                                        "required": [
                                          "element",
                                          "ref",
                                          "text",
                                          "submit"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "params"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "const": "browser_select_option"
                                      },
                                      "params": {
                                        "type": "object",
                                        "properties": {
                                          "element": {
                                            "$ref": "#/properties/input/properties/test_cases/items/properties/steps/items/anyOf/1/anyOf/1/properties/params/properties/element"
                                          },
                                          "ref": {
                                            "$ref": "#/properties/input/properties/test_cases/items/properties/steps/items/anyOf/1/anyOf/1/properties/params/properties/ref"
                                          },
                                          "values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            },
                                            "description": "Array of values to select in the dropdown. This can be a single value or multiple values."
                                          }
                                        },
                                        "required": [
                                          "element",
                                          "ref",
                                          "values"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "params"
                                    ],
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "definition",
                        "steps"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                "required": [
                  "test_cases"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "input"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_press_key",
          "description": "Press a key on the keyboard",
          "input_schema": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "Name of the key to press or a character to generate, such as `ArrowLeft` or `a`"
              }
            },
            "required": [
              "key"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_wait",
          "description": "Wait for a specified time in seconds",
          "input_schema": {
            "type": "object",
            "properties": {
              "time": {
                "type": "number",
                "description": "The time to wait in seconds"
              }
            },
            "required": [
              "time"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_save_as_pdf",
          "description": "Save page as PDF",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_close",
          "description": "Close the page",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"endtoend\": false\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@m2rads/e2e-mcp/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"endtoend\": false\n}",
      "python_sdk_url": "https://server.smithery.ai/@m2rads/e2e-mcp/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "0993.@m2rads_e2e-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 971
  }
}