{
  "labels": {
    "analysis": "The MCP Server's core functionality revolves around integrating and controlling Home Assistant smart home devices. It allows users to search for and manage Home Assistant entities using natural language commands, and directly control device properties like color and brightness. The server acts as an intermediary between AI assistants and Home Assistant, enabling efficient smart home management through simple, intuitive interactions.",
    "reasoning": "The primary label \"Home Automation\" is most appropriate as the server's focus is entirely on controlling and interacting with smart home devices. The secondary label \"API Integration\" is included because the server uses APIs to connect with Home Assistant. No custom label is needed as the server's functionality is well-covered by existing categories.",
    "primary_label": "Browser Automation",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 750,
    "server_name": "Home Assistant Integration",
    "rank_by_usage": 751,
    "usage_count": "9",
    "original_file": "../crawler/smithery/@hpohlmann_home-assistant-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@hpohlmann/home-assistant-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 750,
      "name": "Home Assistant Integration",
      "author": "@hpohlmann/home-assistant-mcp",
      "overview": "Control your Home Assistant devices effortlessly using AI assistants. Search for entities and manage devices with simple commands, enhancing your smart home experience. Streamline your interactions with Home Assistant through natural language processing.",
      "repository_url": "https://github.com/hpohlmann/home-assistant-mcp",
      "homepage": "https://smithery.ai/server/@hpohlmann/home-assistant-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "9",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@hpohlmann_home-assistant-mcp.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "control_device",
          "description": "Deploy Server Home Assistant Integration Claim Server @hpohlmann/home-assistant-mcp Try in Playground control_device",
          "parameters": []
        },
        {
          "name": "search_entities",
          "description": "Search for Home Assistant entities matching a natural language description. Args: description: Natural language description of the entity (e.g., \"office light\", \"kitchen fan\") Returns: A list of matching entity IDs with their friendly names, or an error message",
          "parameters": []
        },
        {
          "name": "set_device_color",
          "description": "Set the color and optionally brightness of a light entity. Args: entity_id: The Home Assistant entity ID to control (format: light.entity) red: Red component (0-255) green: Green component (0-255) blue: Blue component (0-255) brightness: Optional brightness level (0-255)",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@hpohlmann/home-assistant-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "homeAssistantToken",
          "required": true,
          "description": "Home Assistant Long-Lived Access Token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@hpohlmann/home-assistant-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0751.@hpohlmann_home-assistant-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 733
  }
}