{
  "labels": {
    "analysis": "The MCP Server described is primarily focused on automating web browsing tasks through AI-driven control. It allows users to navigate pages, fill forms, and interact with web elements via natural language commands, leveraging visual understanding and state persistence across sessions. The key functionality revolves around browser automation with an emphasis on AI-powered interaction and task automation. The optional server management feature indicates a minor aspect of user authentication but is not the core offering.",
    "reasoning": "The primary functionality of automating web browsing with AI-driven interactions clearly aligns with the Browser Automation category. The ability to navigate, fill forms, and interact with elements via natural language commands suggests a strong emphasis on automating repetitive browser-related tasks. While the optional server access could hint at API Integration (managing servers), this appears secondary to the main automation features. The AI-driven aspect could also relate to AI/ML Tools, but Browser Automation is the most direct fit based on user interaction and task automation.",
    "primary_label": "Browser Automation",
    "secondary_labels": [
      "AI/ML Tools",
      "API Integration"
    ],
    "custom_label": "Natural Language Browser Automation",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1138,
    "server_name": "Browser Use (used by Deploya.dev)",
    "rank_by_usage": 1139,
    "usage_count": "1",
    "original_file": "../crawler/smithery/@Deploya-labs_mcp-browser-use.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Deploya-labs/mcp-browser-use/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1138,
      "name": "Browser Use (used by Deploya.dev)",
      "author": "@Deploya-labs/mcp-browser-use",
      "overview": "Automate your web browsing tasks with AI-driven control. Navigate pages, fill forms, and interact with elements using natural language commands. Enhance your browsing experience with visual understanding and state persistence across sessions.",
      "repository_url": "https://github.com/Deploya-labs/mcp-browser-use",
      "homepage": "https://smithery.ai/server/@Deploya-labs/mcp-browser-use",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "1",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Deploya-labs_mcp-browser-use.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "Optional Settings",
          "description": "Access and manage servers by signing in.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Deploya-labs/mcp-browser-use/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "OPENROUTER_API_KEY",
          "required": true,
          "description": "The API key for OpenRouter."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Deploya-labs/mcp-browser-use/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1139.@Deploya-labs_mcp-browser-use_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1116
  }
}