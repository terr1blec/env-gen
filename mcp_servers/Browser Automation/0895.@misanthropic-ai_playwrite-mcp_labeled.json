{
  "labels": {
    "analysis": "The MCP Server is focused on browser automation, enabling clients to programmatically control web browsers. It provides tools for navigation, interaction, and content extraction from web pages, including clicking elements, typing text, retrieving text or HTML content, and taking screenshots. The server's primary function is to facilitate automated browser interactions, making it ideal for web scrapers, automated testing, and other tasks requiring browser control.",
    "reasoning": "The primary label \"Browser Automation\" is chosen because the server's core functionality revolves around automating web browser actions. The secondary label \"Web Search & Research\" is included because the tools enable web content extraction, which is often used for research purposes. No custom label is needed as the predefined labels sufficiently capture the server's functionality.",
    "primary_label": "Browser Automation",
    "secondary_labels": [
      "Web Search & Research"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 894,
    "server_name": "Playwright Browser Automation Server",
    "rank_by_usage": 895,
    "usage_count": "4",
    "original_file": "../crawler/smithery/@misanthropic-ai_playwrite-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@misanthropic-ai/playwrite-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "navigate",
          "description": "Navigate to a URL",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "page_id": {
                "type": "string"
              }
            },
            "required": [
              "url"
            ]
          },
          "annotations": null
        },
        {
          "name": "click",
          "description": "Click on an element by selector",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string"
              },
              "page_id": {
                "type": "string"
              }
            },
            "required": [
              "selector"
            ]
          },
          "annotations": null
        },
        {
          "name": "type",
          "description": "Type text into an input element",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string"
              },
              "text": {
                "type": "string"
              },
              "page_id": {
                "type": "string"
              }
            },
            "required": [
              "selector",
              "text"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_text",
          "description": "Get text content from an element",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string"
              },
              "page_id": {
                "type": "string"
              }
            },
            "required": [
              "selector"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_page_content",
          "description": "Get the current page HTML content",
          "input_schema": {
            "type": "object",
            "properties": {
              "page_id": {
                "type": "string"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "take_screenshot",
          "description": "Take a screenshot of the current page",
          "input_schema": {
            "type": "object",
            "properties": {
              "page_id": {
                "type": "string"
              },
              "selector": {
                "type": "string"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "new_page",
          "description": "Create a new browser page",
          "input_schema": {
            "type": "object",
            "properties": {
              "page_id": {
                "type": "string"
              }
            },
            "required": [
              "page_id"
            ]
          },
          "annotations": null
        },
        {
          "name": "switch_page",
          "description": "Switch to a different browser page",
          "input_schema": {
            "type": "object",
            "properties": {
              "page_id": {
                "type": "string"
              }
            },
            "required": [
              "page_id"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_pages",
          "description": "List all available browser pages",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "wait_for_selector",
          "description": "Wait for an element to be visible on the page",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string"
              },
              "page_id": {
                "type": "string"
              },
              "timeout": {
                "type": "number"
              }
            },
            "required": [
              "selector"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 10,
      "tool_names": [
        "navigate",
        "click",
        "type",
        "get_text",
        "get_page_content",
        "take_screenshot",
        "new_page",
        "switch_page",
        "get_pages",
        "wait_for_selector"
      ]
    },
    "server_info_crawled": {
      "id": 894,
      "name": "Playwright Browser Automation Server",
      "author": "@misanthropic-ai/playwrite-mcp",
      "overview": "Enable LLM-powered clients to control and automate web browsers through a comprehensive set of tools for navigation, interaction, and content extraction. Access browser screenshots as resources and use prompts to interpret web page content and structure. Streamline browser automation tasks with easy integration and powerful capabilities.",
      "repository_url": "https://github.com/misanthropic-ai/playwrite-mcp",
      "homepage": "https://smithery.ai/server/@misanthropic-ai/playwrite-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "4",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@misanthropic-ai_playwrite-mcp.json",
      "tools_count": 10,
      "tools": [
        {
          "name": "navigate",
          "description": "Navigate to a URL",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "page_id": {
                "type": "string"
              }
            },
            "required": [
              "url"
            ]
          },
          "annotations": null
        },
        {
          "name": "click",
          "description": "Click on an element by selector",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string"
              },
              "page_id": {
                "type": "string"
              }
            },
            "required": [
              "selector"
            ]
          },
          "annotations": null
        },
        {
          "name": "type",
          "description": "Type text into an input element",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string"
              },
              "text": {
                "type": "string"
              },
              "page_id": {
                "type": "string"
              }
            },
            "required": [
              "selector",
              "text"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_text",
          "description": "Get text content from an element",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string"
              },
              "page_id": {
                "type": "string"
              }
            },
            "required": [
              "selector"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_page_content",
          "description": "Get the current page HTML content",
          "input_schema": {
            "type": "object",
            "properties": {
              "page_id": {
                "type": "string"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "take_screenshot",
          "description": "Take a screenshot of the current page",
          "input_schema": {
            "type": "object",
            "properties": {
              "page_id": {
                "type": "string"
              },
              "selector": {
                "type": "string"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "new_page",
          "description": "Create a new browser page",
          "input_schema": {
            "type": "object",
            "properties": {
              "page_id": {
                "type": "string"
              }
            },
            "required": [
              "page_id"
            ]
          },
          "annotations": null
        },
        {
          "name": "switch_page",
          "description": "Switch to a different browser page",
          "input_schema": {
            "type": "object",
            "properties": {
              "page_id": {
                "type": "string"
              }
            },
            "required": [
              "page_id"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_pages",
          "description": "List all available browser pages",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "wait_for_selector",
          "description": "Wait for an element to be visible on the page",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string"
              },
              "page_id": {
                "type": "string"
              },
              "timeout": {
                "type": "number"
              }
            },
            "required": [
              "selector"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@misanthropic-ai/playwrite-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@misanthropic-ai/playwrite-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0895.@misanthropic-ai_playwrite-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 876
  }
}