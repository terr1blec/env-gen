{
  "labels": {
    "analysis": "The MCP Server enables browser automation through structured accessibility snapshots and API-driven interactions, allowing LLMs to perform web navigation, form filling, data extraction, and testing without relying on vision models. The provided tools cover a wide range of browser automation tasks, including navigation, element interaction, file handling, and test generation. The server supports both snapshot-based (accessibility-focused) and vision-based interaction modes, making it highly flexible for different automation needs.",
    "reasoning": "The server's core functionality revolves around browser automation, which directly aligns with the \"Browser Automation\" category. Given its extensive toolset for web scraping, form handling, and navigation, this is the most fitting primary label. Secondary labels include \"Web Search & Research\" (due to its data extraction capabilities) and \"Development Tools\" (given its testing and Playwright test generation features).",
    "primary_label": "Browser Automation",
    "secondary_labels": [
      "Web Search & Research",
      "Development Tools"
    ],
    "custom_label": "Accessibility-Driven Web Interaction",
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 843,
    "server_name": "Playwright Browser Automation Server",
    "rank_by_usage": 844,
    "usage_count": "5",
    "original_file": "../crawler/smithery/@PhamQuangVinh22022648_playwright-mcp2.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@PhamQuangVinh22022648/playwright-mcp2/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "browser_close",
          "description": "Close the page",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Close browser",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_resize",
          "description": "Resize the browser window",
          "input_schema": {
            "type": "object",
            "properties": {
              "width": {
                "type": "number",
                "description": "Width of the browser window"
              },
              "height": {
                "type": "number",
                "description": "Height of the browser window"
              }
            },
            "required": [
              "width",
              "height"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Resize browser window",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_console_messages",
          "description": "Returns all console messages",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Get console messages",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_handle_dialog",
          "description": "Handle a dialog",
          "input_schema": {
            "type": "object",
            "properties": {
              "accept": {
                "type": "boolean",
                "description": "Whether to accept the dialog."
              },
              "promptText": {
                "type": "string",
                "description": "The text of the prompt in case of a prompt dialog."
              }
            },
            "required": [
              "accept"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Handle a dialog",
            "readOnlyHint": false,
            "destructiveHint": true,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_file_upload",
          "description": "Upload one or multiple files",
          "input_schema": {
            "type": "object",
            "properties": {
              "paths": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The absolute paths to the files to upload. Can be a single file or multiple files."
              }
            },
            "required": [
              "paths"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Upload files",
            "readOnlyHint": false,
            "destructiveHint": true,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_install",
          "description": "Install the browser specified in the config. Call this if you get an error about the browser not being installed.",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Install the browser specified in the config",
            "readOnlyHint": false,
            "destructiveHint": true,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_press_key",
          "description": "Press a key on the keyboard",
          "input_schema": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "Name of the key to press or a character to generate, such as `ArrowLeft` or `a`"
              }
            },
            "required": [
              "key"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Press a key",
            "readOnlyHint": false,
            "destructiveHint": true,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_navigate",
          "description": "Navigate to a URL",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "The URL to navigate to"
              }
            },
            "required": [
              "url"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Navigate to a URL",
            "readOnlyHint": false,
            "destructiveHint": true,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_navigate_back",
          "description": "Go back to the previous page",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Go back",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_navigate_forward",
          "description": "Go forward to the next page",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Go forward",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_network_requests",
          "description": "Returns all network requests since loading the page",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "List network requests",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_pdf_save",
          "description": "Save page as PDF",
          "input_schema": {
            "type": "object",
            "properties": {
              "filename": {
                "type": "string",
                "description": "File name to save the pdf to. Defaults to `page-{timestamp}.pdf` if not specified."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Save as PDF",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_take_screenshot",
          "description": "Take a screenshot of the current page. You can't perform actions based on the screenshot, use browser_snapshot for actions.",
          "input_schema": {
            "type": "object",
            "properties": {
              "raw": {
                "type": "boolean",
                "description": "Whether to return without compression (in PNG format). Default is false, which returns a JPEG image."
              },
              "filename": {
                "type": "string",
                "description": "File name to save the screenshot to. Defaults to `page-{timestamp}.{png|jpeg}` if not specified."
              },
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to screenshot the element. If not provided, the screenshot will be taken of viewport. If element is provided, ref must be provided too."
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot. If not provided, the screenshot will be taken of viewport. If ref is provided, element must be provided too."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Take a screenshot",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_snapshot",
          "description": "Capture accessibility snapshot of the current page, this is better than screenshot",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Page snapshot",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_click",
          "description": "Perform click on a web page",
          "input_schema": {
            "type": "object",
            "properties": {
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to interact with the element"
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              }
            },
            "required": [
              "element",
              "ref"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Click",
            "readOnlyHint": false,
            "destructiveHint": true,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_drag",
          "description": "Perform drag and drop between two elements",
          "input_schema": {
            "type": "object",
            "properties": {
              "startElement": {
                "type": "string",
                "description": "Human-readable source element description used to obtain the permission to interact with the element"
              },
              "startRef": {
                "type": "string",
                "description": "Exact source element reference from the page snapshot"
              },
              "endElement": {
                "type": "string",
                "description": "Human-readable target element description used to obtain the permission to interact with the element"
              },
              "endRef": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              }
            },
            "required": [
              "startElement",
              "startRef",
              "endElement",
              "endRef"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Drag mouse",
            "readOnlyHint": false,
            "destructiveHint": true,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_hover",
          "description": "Hover over element on page",
          "input_schema": {
            "type": "object",
            "properties": {
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to interact with the element"
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              }
            },
            "required": [
              "element",
              "ref"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Hover mouse",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_type",
          "description": "Type text into editable element",
          "input_schema": {
            "type": "object",
            "properties": {
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to interact with the element"
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              },
              "text": {
                "type": "string",
                "description": "Text to type into the element"
              },
              "submit": {
                "type": "boolean",
                "description": "Whether to submit entered text (press Enter after)"
              },
              "slowly": {
                "type": "boolean",
                "description": "Whether to type one character at a time. Useful for triggering key handlers in the page. By default entire text is filled in at once."
              }
            },
            "required": [
              "element",
              "ref",
              "text"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Type text",
            "readOnlyHint": false,
            "destructiveHint": true,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_select_option",
          "description": "Select an option in a dropdown",
          "input_schema": {
            "type": "object",
            "properties": {
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to interact with the element"
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              },
              "values": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of values to select in the dropdown. This can be a single value or multiple values."
              }
            },
            "required": [
              "element",
              "ref",
              "values"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Select option",
            "readOnlyHint": false,
            "destructiveHint": true,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_tab_list",
          "description": "List browser tabs",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "List tabs",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_tab_new",
          "description": "Open a new tab",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "The URL to navigate to in the new tab. If not provided, the new tab will be blank."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Open a new tab",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_tab_select",
          "description": "Select a tab by index",
          "input_schema": {
            "type": "object",
            "properties": {
              "index": {
                "type": "number",
                "description": "The index of the tab to select"
              }
            },
            "required": [
              "index"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Select a tab",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_tab_close",
          "description": "Close a tab",
          "input_schema": {
            "type": "object",
            "properties": {
              "index": {
                "type": "number",
                "description": "The index of the tab to close. Closes current tab if not provided."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Close a tab",
            "readOnlyHint": false,
            "destructiveHint": true,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_generate_playwright_test",
          "description": "Generate a Playwright test for given scenario",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the test"
              },
              "description": {
                "type": "string",
                "description": "The description of the test"
              },
              "steps": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The steps of the test"
              }
            },
            "required": [
              "name",
              "description",
              "steps"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Generate a Playwright test",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_wait_for",
          "description": "Wait for text to appear or disappear or a specified time to pass",
          "input_schema": {
            "type": "object",
            "properties": {
              "time": {
                "type": "number",
                "description": "The time to wait in seconds"
              },
              "text": {
                "type": "string",
                "description": "The text to wait for"
              },
              "textGone": {
                "type": "string",
                "description": "The text to wait for to disappear"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Wait for",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        }
      ],
      "tool_count": 25,
      "tool_names": [
        "browser_close",
        "browser_resize",
        "browser_console_messages",
        "browser_handle_dialog",
        "browser_file_upload",
        "browser_install",
        "browser_press_key",
        "browser_navigate",
        "browser_navigate_back",
        "browser_navigate_forward",
        "browser_network_requests",
        "browser_pdf_save",
        "browser_take_screenshot",
        "browser_snapshot",
        "browser_click",
        "browser_drag",
        "browser_hover",
        "browser_type",
        "browser_select_option",
        "browser_tab_list",
        "browser_tab_new",
        "browser_tab_select",
        "browser_tab_close",
        "browser_generate_playwright_test",
        "browser_wait_for"
      ]
    },
    "server_info_crawled": {
      "id": 843,
      "name": "Playwright Browser Automation Server",
      "author": "@PhamQuangVinh22022648/playwright-mcp2",
      "overview": "Enable LLMs to interact with web pages through structured accessibility snapshots for fast, reliable browser automation without relying on vision models. Automate web navigation, form-filling, data extraction, and testing with deterministic tool application. Supports both snapshot-based and vision-based interaction modes for flexible browser control.",
      "repository_url": "https://github.com/PhamQuangVinh22022648/playwright-mcp",
      "homepage": "https://smithery.ai/server/@PhamQuangVinh22022648/playwright-mcp2",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "5",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@PhamQuangVinh22022648_playwright-mcp2.json",
      "tools_count": 25,
      "tools": [
        {
          "name": "browser_close",
          "description": "Close the page",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Close browser",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_resize",
          "description": "Resize the browser window",
          "input_schema": {
            "type": "object",
            "properties": {
              "width": {
                "type": "number",
                "description": "Width of the browser window"
              },
              "height": {
                "type": "number",
                "description": "Height of the browser window"
              }
            },
            "required": [
              "width",
              "height"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Resize browser window",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_console_messages",
          "description": "Returns all console messages",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Get console messages",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_handle_dialog",
          "description": "Handle a dialog",
          "input_schema": {
            "type": "object",
            "properties": {
              "accept": {
                "type": "boolean",
                "description": "Whether to accept the dialog."
              },
              "promptText": {
                "type": "string",
                "description": "The text of the prompt in case of a prompt dialog."
              }
            },
            "required": [
              "accept"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Handle a dialog",
            "readOnlyHint": false,
            "destructiveHint": true,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_file_upload",
          "description": "Upload one or multiple files",
          "input_schema": {
            "type": "object",
            "properties": {
              "paths": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The absolute paths to the files to upload. Can be a single file or multiple files."
              }
            },
            "required": [
              "paths"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Upload files",
            "readOnlyHint": false,
            "destructiveHint": true,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_install",
          "description": "Install the browser specified in the config. Call this if you get an error about the browser not being installed.",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Install the browser specified in the config",
            "readOnlyHint": false,
            "destructiveHint": true,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_press_key",
          "description": "Press a key on the keyboard",
          "input_schema": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "Name of the key to press or a character to generate, such as `ArrowLeft` or `a`"
              }
            },
            "required": [
              "key"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Press a key",
            "readOnlyHint": false,
            "destructiveHint": true,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_navigate",
          "description": "Navigate to a URL",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "The URL to navigate to"
              }
            },
            "required": [
              "url"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Navigate to a URL",
            "readOnlyHint": false,
            "destructiveHint": true,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_navigate_back",
          "description": "Go back to the previous page",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Go back",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_navigate_forward",
          "description": "Go forward to the next page",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Go forward",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_network_requests",
          "description": "Returns all network requests since loading the page",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "List network requests",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_pdf_save",
          "description": "Save page as PDF",
          "input_schema": {
            "type": "object",
            "properties": {
              "filename": {
                "type": "string",
                "description": "File name to save the pdf to. Defaults to `page-{timestamp}.pdf` if not specified."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Save as PDF",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_take_screenshot",
          "description": "Take a screenshot of the current page. You can't perform actions based on the screenshot, use browser_snapshot for actions.",
          "input_schema": {
            "type": "object",
            "properties": {
              "raw": {
                "type": "boolean",
                "description": "Whether to return without compression (in PNG format). Default is false, which returns a JPEG image."
              },
              "filename": {
                "type": "string",
                "description": "File name to save the screenshot to. Defaults to `page-{timestamp}.{png|jpeg}` if not specified."
              },
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to screenshot the element. If not provided, the screenshot will be taken of viewport. If element is provided, ref must be provided too."
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot. If not provided, the screenshot will be taken of viewport. If ref is provided, element must be provided too."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Take a screenshot",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_snapshot",
          "description": "Capture accessibility snapshot of the current page, this is better than screenshot",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Page snapshot",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_click",
          "description": "Perform click on a web page",
          "input_schema": {
            "type": "object",
            "properties": {
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to interact with the element"
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              }
            },
            "required": [
              "element",
              "ref"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Click",
            "readOnlyHint": false,
            "destructiveHint": true,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_drag",
          "description": "Perform drag and drop between two elements",
          "input_schema": {
            "type": "object",
            "properties": {
              "startElement": {
                "type": "string",
                "description": "Human-readable source element description used to obtain the permission to interact with the element"
              },
              "startRef": {
                "type": "string",
                "description": "Exact source element reference from the page snapshot"
              },
              "endElement": {
                "type": "string",
                "description": "Human-readable target element description used to obtain the permission to interact with the element"
              },
              "endRef": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              }
            },
            "required": [
              "startElement",
              "startRef",
              "endElement",
              "endRef"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Drag mouse",
            "readOnlyHint": false,
            "destructiveHint": true,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_hover",
          "description": "Hover over element on page",
          "input_schema": {
            "type": "object",
            "properties": {
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to interact with the element"
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              }
            },
            "required": [
              "element",
              "ref"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Hover mouse",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_type",
          "description": "Type text into editable element",
          "input_schema": {
            "type": "object",
            "properties": {
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to interact with the element"
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              },
              "text": {
                "type": "string",
                "description": "Text to type into the element"
              },
              "submit": {
                "type": "boolean",
                "description": "Whether to submit entered text (press Enter after)"
              },
              "slowly": {
                "type": "boolean",
                "description": "Whether to type one character at a time. Useful for triggering key handlers in the page. By default entire text is filled in at once."
              }
            },
            "required": [
              "element",
              "ref",
              "text"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Type text",
            "readOnlyHint": false,
            "destructiveHint": true,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_select_option",
          "description": "Select an option in a dropdown",
          "input_schema": {
            "type": "object",
            "properties": {
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to interact with the element"
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              },
              "values": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of values to select in the dropdown. This can be a single value or multiple values."
              }
            },
            "required": [
              "element",
              "ref",
              "values"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Select option",
            "readOnlyHint": false,
            "destructiveHint": true,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_tab_list",
          "description": "List browser tabs",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "List tabs",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_tab_new",
          "description": "Open a new tab",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "The URL to navigate to in the new tab. If not provided, the new tab will be blank."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Open a new tab",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_tab_select",
          "description": "Select a tab by index",
          "input_schema": {
            "type": "object",
            "properties": {
              "index": {
                "type": "number",
                "description": "The index of the tab to select"
              }
            },
            "required": [
              "index"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Select a tab",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_tab_close",
          "description": "Close a tab",
          "input_schema": {
            "type": "object",
            "properties": {
              "index": {
                "type": "number",
                "description": "The index of the tab to close. Closes current tab if not provided."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Close a tab",
            "readOnlyHint": false,
            "destructiveHint": true,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_generate_playwright_test",
          "description": "Generate a Playwright test for given scenario",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the test"
              },
              "description": {
                "type": "string",
                "description": "The description of the test"
              },
              "steps": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The steps of the test"
              }
            },
            "required": [
              "name",
              "description",
              "steps"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Generate a Playwright test",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        },
        {
          "name": "browser_wait_for",
          "description": "Wait for text to appear or disappear or a specified time to pass",
          "input_schema": {
            "type": "object",
            "properties": {
              "time": {
                "type": "number",
                "description": "The time to wait in seconds"
              },
              "text": {
                "type": "string",
                "description": "The text to wait for"
              },
              "textGone": {
                "type": "string",
                "description": "The text to wait for to disappear"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {
            "title": "Wait for",
            "readOnlyHint": true,
            "destructiveHint": false,
            "idempotentHint": null,
            "openWorldHint": true
          }
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@PhamQuangVinh22022648/playwright-mcp2/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@PhamQuangVinh22022648/playwright-mcp2/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0844.@PhamQuangVinh22022648_playwright-mcp2_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 825
  }
}