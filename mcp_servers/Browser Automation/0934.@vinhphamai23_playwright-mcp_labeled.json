{
  "labels": {
    "analysis": "The MCP Server described is a Playwright Browser Automation Server that enables LLMs to interact with web pages using structured accessibility snapshots for browser automation. It provides a wide range of tools for automating web navigation, form-filling, data extraction, and testing tasks. The tools are deterministic, meaning they rely on structured accessibility snapshots rather than vision models, ensuring reliable and fast interactions with web pages.",
    "reasoning": "The primary label is \"Browser Automation\" because the core functionality revolves around automating interactions within a browser, including navigation, form-filling, clicking, typing, and other user interactions. Additional relevant categories are \"Web Search & Research\" for data extraction purposes, and \"API Integration\" for potential integration with other tools or services. A custom label is not necessary as the predefined labels adequately cover the server's functionality.",
    "primary_label": "Browser Automation",
    "secondary_labels": [
      "Web Search & Research",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 933,
    "server_name": "Playwright Browser Automation Server",
    "rank_by_usage": 934,
    "usage_count": "3",
    "original_file": "../crawler/smithery/@vinhphamai23_playwright-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@vinhphamai23/playwright-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "browser_close",
          "description": "Close the page",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_wait",
          "description": "Wait for a specified time in seconds",
          "input_schema": {
            "type": "object",
            "properties": {
              "time": {
                "type": "number",
                "description": "The time to wait in seconds"
              }
            },
            "required": [
              "time"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_resize",
          "description": "Resize the browser window",
          "input_schema": {
            "type": "object",
            "properties": {
              "width": {
                "type": "number",
                "description": "Width of the browser window"
              },
              "height": {
                "type": "number",
                "description": "Height of the browser window"
              }
            },
            "required": [
              "width",
              "height"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_console_messages",
          "description": "Returns all console messages",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_handle_dialog",
          "description": "Handle a dialog",
          "input_schema": {
            "type": "object",
            "properties": {
              "accept": {
                "type": "boolean",
                "description": "Whether to accept the dialog."
              },
              "promptText": {
                "type": "string",
                "description": "The text of the prompt in case of a prompt dialog."
              }
            },
            "required": [
              "accept"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_file_upload",
          "description": "Upload one or multiple files",
          "input_schema": {
            "type": "object",
            "properties": {
              "paths": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The absolute paths to the files to upload. Can be a single file or multiple files."
              }
            },
            "required": [
              "paths"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_install",
          "description": "Install the browser specified in the config. Call this if you get an error about the browser not being installed.",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_press_key",
          "description": "Press a key on the keyboard",
          "input_schema": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "Name of the key to press or a character to generate, such as `ArrowLeft` or `a`"
              }
            },
            "required": [
              "key"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_navigate",
          "description": "Navigate to a URL",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "The URL to navigate to"
              }
            },
            "required": [
              "url"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_navigate_back",
          "description": "Go back to the previous page",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_navigate_forward",
          "description": "Go forward to the next page",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_pdf_save",
          "description": "Save page as PDF",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_snapshot",
          "description": "Capture accessibility snapshot of the current page, this is better than screenshot",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_click",
          "description": "Perform click on a web page",
          "input_schema": {
            "type": "object",
            "properties": {
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to interact with the element"
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              }
            },
            "required": [
              "element",
              "ref"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_drag",
          "description": "Perform drag and drop between two elements",
          "input_schema": {
            "type": "object",
            "properties": {
              "startElement": {
                "type": "string",
                "description": "Human-readable source element description used to obtain the permission to interact with the element"
              },
              "startRef": {
                "type": "string",
                "description": "Exact source element reference from the page snapshot"
              },
              "endElement": {
                "type": "string",
                "description": "Human-readable target element description used to obtain the permission to interact with the element"
              },
              "endRef": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              }
            },
            "required": [
              "startElement",
              "startRef",
              "endElement",
              "endRef"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_hover",
          "description": "Hover over element on page",
          "input_schema": {
            "type": "object",
            "properties": {
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to interact with the element"
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              }
            },
            "required": [
              "element",
              "ref"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_type",
          "description": "Type text into editable element",
          "input_schema": {
            "type": "object",
            "properties": {
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to interact with the element"
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              },
              "text": {
                "type": "string",
                "description": "Text to type into the element"
              },
              "submit": {
                "type": "boolean",
                "description": "Whether to submit entered text (press Enter after)"
              },
              "slowly": {
                "type": "boolean",
                "description": "Whether to type one character at a time. Useful for triggering key handlers in the page. By default entire text is filled in at once."
              }
            },
            "required": [
              "element",
              "ref",
              "text"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_select_option",
          "description": "Select an option in a dropdown",
          "input_schema": {
            "type": "object",
            "properties": {
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to interact with the element"
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              },
              "values": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of values to select in the dropdown. This can be a single value or multiple values."
              }
            },
            "required": [
              "element",
              "ref",
              "values"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_take_screenshot",
          "description": "Take a screenshot of the current page. You can't perform actions based on the screenshot, use browser_snapshot for actions.",
          "input_schema": {
            "type": "object",
            "properties": {
              "raw": {
                "type": "boolean",
                "description": "Whether to return without compression (in PNG format). Default is false, which returns a JPEG image."
              },
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to screenshot the element. If not provided, the screenshot will be taken of viewport. If element is provided, ref must be provided too."
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot. If not provided, the screenshot will be taken of viewport. If ref is provided, element must be provided too."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_tab_list",
          "description": "List browser tabs",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_tab_new",
          "description": "Open a new tab",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "The URL to navigate to in the new tab. If not provided, the new tab will be blank."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_tab_select",
          "description": "Select a tab by index",
          "input_schema": {
            "type": "object",
            "properties": {
              "index": {
                "type": "number",
                "description": "The index of the tab to select"
              }
            },
            "required": [
              "index"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_tab_close",
          "description": "Close a tab",
          "input_schema": {
            "type": "object",
            "properties": {
              "index": {
                "type": "number",
                "description": "The index of the tab to close. Closes current tab if not provided."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 23,
      "tool_names": [
        "browser_close",
        "browser_wait",
        "browser_resize",
        "browser_console_messages",
        "browser_handle_dialog",
        "browser_file_upload",
        "browser_install",
        "browser_press_key",
        "browser_navigate",
        "browser_navigate_back",
        "browser_navigate_forward",
        "browser_pdf_save",
        "browser_snapshot",
        "browser_click",
        "browser_drag",
        "browser_hover",
        "browser_type",
        "browser_select_option",
        "browser_take_screenshot",
        "browser_tab_list",
        "browser_tab_new",
        "browser_tab_select",
        "browser_tab_close"
      ]
    },
    "server_info_crawled": {
      "id": 933,
      "name": "Playwright Browser Automation Server",
      "author": "@vinhphamai23/playwright-mcp",
      "overview": "Enable LLMs to interact with web pages through structured accessibility snapshots for fast, reliable browser automation without relying on vision models. Automate web navigation, form-filling, data extraction, and testing with deterministic tool application. Supports both snapshot and vision modes for flexible interaction styles.",
      "repository_url": "https://github.com/vinhphamai23/playwright-mcp",
      "homepage": "https://smithery.ai/server/@vinhphamai23/playwright-mcp",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "3",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@vinhphamai23_playwright-mcp.json",
      "tools_count": 23,
      "tools": [
        {
          "name": "browser_close",
          "description": "Close the page",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_wait",
          "description": "Wait for a specified time in seconds",
          "input_schema": {
            "type": "object",
            "properties": {
              "time": {
                "type": "number",
                "description": "The time to wait in seconds"
              }
            },
            "required": [
              "time"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_resize",
          "description": "Resize the browser window",
          "input_schema": {
            "type": "object",
            "properties": {
              "width": {
                "type": "number",
                "description": "Width of the browser window"
              },
              "height": {
                "type": "number",
                "description": "Height of the browser window"
              }
            },
            "required": [
              "width",
              "height"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_console_messages",
          "description": "Returns all console messages",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_handle_dialog",
          "description": "Handle a dialog",
          "input_schema": {
            "type": "object",
            "properties": {
              "accept": {
                "type": "boolean",
                "description": "Whether to accept the dialog."
              },
              "promptText": {
                "type": "string",
                "description": "The text of the prompt in case of a prompt dialog."
              }
            },
            "required": [
              "accept"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_file_upload",
          "description": "Upload one or multiple files",
          "input_schema": {
            "type": "object",
            "properties": {
              "paths": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The absolute paths to the files to upload. Can be a single file or multiple files."
              }
            },
            "required": [
              "paths"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_install",
          "description": "Install the browser specified in the config. Call this if you get an error about the browser not being installed.",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_press_key",
          "description": "Press a key on the keyboard",
          "input_schema": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "Name of the key to press or a character to generate, such as `ArrowLeft` or `a`"
              }
            },
            "required": [
              "key"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_navigate",
          "description": "Navigate to a URL",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "The URL to navigate to"
              }
            },
            "required": [
              "url"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_navigate_back",
          "description": "Go back to the previous page",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_navigate_forward",
          "description": "Go forward to the next page",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_pdf_save",
          "description": "Save page as PDF",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_snapshot",
          "description": "Capture accessibility snapshot of the current page, this is better than screenshot",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_click",
          "description": "Perform click on a web page",
          "input_schema": {
            "type": "object",
            "properties": {
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to interact with the element"
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              }
            },
            "required": [
              "element",
              "ref"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_drag",
          "description": "Perform drag and drop between two elements",
          "input_schema": {
            "type": "object",
            "properties": {
              "startElement": {
                "type": "string",
                "description": "Human-readable source element description used to obtain the permission to interact with the element"
              },
              "startRef": {
                "type": "string",
                "description": "Exact source element reference from the page snapshot"
              },
              "endElement": {
                "type": "string",
                "description": "Human-readable target element description used to obtain the permission to interact with the element"
              },
              "endRef": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              }
            },
            "required": [
              "startElement",
              "startRef",
              "endElement",
              "endRef"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_hover",
          "description": "Hover over element on page",
          "input_schema": {
            "type": "object",
            "properties": {
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to interact with the element"
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              }
            },
            "required": [
              "element",
              "ref"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_type",
          "description": "Type text into editable element",
          "input_schema": {
            "type": "object",
            "properties": {
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to interact with the element"
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              },
              "text": {
                "type": "string",
                "description": "Text to type into the element"
              },
              "submit": {
                "type": "boolean",
                "description": "Whether to submit entered text (press Enter after)"
              },
              "slowly": {
                "type": "boolean",
                "description": "Whether to type one character at a time. Useful for triggering key handlers in the page. By default entire text is filled in at once."
              }
            },
            "required": [
              "element",
              "ref",
              "text"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_select_option",
          "description": "Select an option in a dropdown",
          "input_schema": {
            "type": "object",
            "properties": {
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to interact with the element"
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot"
              },
              "values": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of values to select in the dropdown. This can be a single value or multiple values."
              }
            },
            "required": [
              "element",
              "ref",
              "values"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_take_screenshot",
          "description": "Take a screenshot of the current page. You can't perform actions based on the screenshot, use browser_snapshot for actions.",
          "input_schema": {
            "type": "object",
            "properties": {
              "raw": {
                "type": "boolean",
                "description": "Whether to return without compression (in PNG format). Default is false, which returns a JPEG image."
              },
              "element": {
                "type": "string",
                "description": "Human-readable element description used to obtain permission to screenshot the element. If not provided, the screenshot will be taken of viewport. If element is provided, ref must be provided too."
              },
              "ref": {
                "type": "string",
                "description": "Exact target element reference from the page snapshot. If not provided, the screenshot will be taken of viewport. If ref is provided, element must be provided too."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_tab_list",
          "description": "List browser tabs",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_tab_new",
          "description": "Open a new tab",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "The URL to navigate to in the new tab. If not provided, the new tab will be blank."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_tab_select",
          "description": "Select a tab by index",
          "input_schema": {
            "type": "object",
            "properties": {
              "index": {
                "type": "number",
                "description": "The index of the tab to select"
              }
            },
            "required": [
              "index"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "browser_tab_close",
          "description": "Close a tab",
          "input_schema": {
            "type": "object",
            "properties": {
              "index": {
                "type": "number",
                "description": "The index of the tab to close. Closes current tab if not provided."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@vinhphamai23/playwright-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@vinhphamai23/playwright-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0934.@vinhphamai23_playwright-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 913
  }
}