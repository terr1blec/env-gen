{
  "labels": {
    "analysis": "The Vite MCP Server is primarily designed to enhance web development workflows by providing real-time code modification and live updates through a Vite development server. Its available tools facilitate browser automation, debugging, and testing by allowing developers to interact with elements, capture screenshots, monitor network requests, and execute browser commands. The server acts as a bridge between Cursor agents and the Vite dev server, enabling automated integration and visual feedback during development.",
    "reasoning": "The primary label \"Browser Automation\" is chosen because the server's core functionality involves automating browser interactions, such as clicking elements, typing text, monitoring network requests, and capturing screenshots. The secondary labels \"Web Search & Research\" and \"Development Tools\" are selected because the server aids in debugging and testing, which are integral parts of the development process, and it provides tools for executing browser commands that can assist in research tasks. The custom label \"Live Reinforcement Learning\" is added to highlight the server's unique capability to provide real-time updates and feedback, which is particularly useful in a development environment.",
    "primary_label": "Browser Automation",
    "secondary_labels": [
      "Web Search & Research",
      "Development Tools"
    ],
    "custom_label": "Live Reinforcement Learning",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 801,
    "server_name": "Vite MCP Server",
    "rank_by_usage": 802,
    "usage_count": "7",
    "original_file": "../crawler/smithery/@ESnark_vite-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ESnark/vite-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "how-to-use",
          "description": "Description of how to use the server",
          "input_schema": {
            "type": "object",
            "properties": {
              "section": {
                "type": "string",
                "enum": [
                  "checkpoint",
                  "hmr"
                ],
                "description": "Section to describe"
              }
            },
            "required": [
              "section"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-hmr-events",
          "description": "Retrieves recent HMR events",
          "input_schema": {
            "type": "object",
            "properties": {
              "limit": {
                "type": "number",
                "description": "Maximum number of events to return"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "start-browser",
          "description": "Launches a browser instance and navigates to the Vite dev server",
          "input_schema": {
            "type": "object",
            "properties": {
              "viteServerUrl": {
                "type": "string",
                "description": "URL of the Vite dev server (default: http://localhost:5173)"
              },
              "headless": {
                "type": "boolean",
                "description": "Run browser in headless mode"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "capture-screenshot",
          "description": "Captures a screenshot of the current page or a specific element.\nThis feature is for MCP Clients that do not support MCP Resource and image content type.\nIf the image is successfully saved, you should request the user to provide the image.",
          "input_schema": {
            "type": "object",
            "properties": {
              "projectRoot": {
                "type": "string",
                "description": "Root directory path of the development project"
              },
              "selector": {
                "type": "string",
                "description": "CSS selector to capture (captures full page if not provided)"
              },
              "url": {
                "type": "string",
                "description": "URL to navigate to before capturing screenshot"
              }
            },
            "required": [
              "projectRoot"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-element-properties",
          "description": "Retrieves properties and state information of a specific element",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string",
                "description": "CSS selector of the element to inspect"
              },
              "properties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of property names to retrieve (e.g., ['value', 'checked', 'textContent'])"
              }
            },
            "required": [
              "selector",
              "properties"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-element-styles",
          "description": "Retrieves style information of a specific element",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string",
                "description": "CSS selector of the element to inspect"
              },
              "styleProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of style property names to retrieve (e.g., ['color', 'fontSize', 'backgroundColor'])"
              }
            },
            "required": [
              "selector",
              "styleProperties"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-element-dimensions",
          "description": "Retrieves dimension and position information of a specific element",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string",
                "description": "CSS selector of the element to inspect"
              }
            },
            "required": [
              "selector"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "monitor-network",
          "description": "Monitors network requests in the browser for a specified duration",
          "input_schema": {
            "type": "object",
            "properties": {
              "urlPattern": {
                "type": "string",
                "description": "URL pattern to filter (regex string)"
              },
              "duration": {
                "type": "number",
                "description": "Duration in milliseconds to monitor (default: 5000)"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-element-html",
          "description": "Retrieves the HTML content of a specific element and its children",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string",
                "description": "CSS selector of the element to inspect"
              },
              "includeOuter": {
                "type": "boolean",
                "description": "If true, includes the selected element's outer HTML; otherwise returns only inner HTML (default: false)"
              }
            },
            "required": [
              "selector"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-console-logs",
          "description": "Retrieves console logs from the development server",
          "input_schema": {
            "type": "object",
            "properties": {
              "checkpoint": {
                "type": "string",
                "description": "If specified, returns only logs recorded at this checkpoint"
              },
              "limit": {
                "type": "number",
                "description": "Number of logs to return, starting from the most recent log"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "execute-browser-commands",
          "description": "Executes a sequence of predefined browser commands safely. Available commands:\n\n- click: Clicks on an element matching the selector or at specified coordinates\n- type: Types text into an input element\n- wait: Waits for an element, a specified time period, or a condition\n- navigate: Navigates to a specified URL\n- select: Selects an option in a dropdown\n- check: Checks or unchecks a checkbox\n- hover: Hovers over an element\n- focus: Focuses an element\n- blur: Removes focus from an element\n- keypress: Simulates pressing a keyboard key\n- scroll: Scrolls the page or an element\n- getAttribute: Gets an attribute value from an element\n- getProperty: Gets a property value from an element\n- drag: Performs a drag operation from one position to another\n- refresh: Refreshes the current page\n\nNote on coordinates: For all mouse-related commands (click, drag, etc.), coordinates are relative to the browser viewport\nwhere (0,0) is the top-left corner. X increases to the right, Y increases downward.\n\nExamples are available in the schema definition.",
          "input_schema": {
            "type": "object",
            "properties": {
              "commands": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "click"
                        },
                        "selector": {
                          "type": "string",
                          "description": "CSS selector of element to click (required unless x,y coordinates are provided)"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "button": {
                              "type": "string",
                              "enum": [
                                "left",
                                "right",
                                "middle"
                              ],
                              "description": "Mouse button to use (default: left)"
                            },
                            "clickCount": {
                              "type": "number",
                              "description": "Number of clicks (default: 1)"
                            },
                            "delay": {
                              "type": "number",
                              "description": "Delay between mousedown and mouseup in ms (default: 0)"
                            },
                            "x": {
                              "type": "number",
                              "description": "X coordinate to click (used instead of selector)"
                            },
                            "y": {
                              "type": "number",
                              "description": "Y coordinate to click (used instead of selector)"
                            },
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "required": [
                            "y"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "type"
                        },
                        "selector": {
                          "type": "string",
                          "description": "CSS selector of input element to type into"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "text": {
                              "type": "string",
                              "description": "Text to type into the element"
                            },
                            "delay": {
                              "type": "number",
                              "description": "Delay between keystrokes in ms (default: 0)"
                            },
                            "clearFirst": {
                              "type": "boolean",
                              "description": "Whether to clear the input field before typing (default: false)"
                            },
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "required": [
                            "text"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command",
                        "selector"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "wait"
                        },
                        "selector": {
                          "type": "string",
                          "description": "CSS selector to wait for"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "time": {
                              "type": "number",
                              "description": "Time to wait in milliseconds (use this or selector)"
                            },
                            "visible": {
                              "type": "boolean",
                              "description": "Wait for element to be visible (default: true)"
                            },
                            "timeout": {
                              "type": "number",
                              "description": "Maximum time to wait in ms (default: 5000)"
                            },
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "navigate"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "URL to navigate to"
                            },
                            "waitUntil": {
                              "type": "string",
                              "enum": [
                                "load",
                                "domcontentloaded",
                                "networkidle0",
                                "networkidle2"
                              ],
                              "description": "Navigation wait condition (default: networkidle0)"
                            },
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command",
                        "args"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "drag"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "sourceX": {
                              "type": "number",
                              "description": "X coordinate to start the drag from (distance from left edge of viewport)"
                            },
                            "sourceY": {
                              "type": "number",
                              "description": "Y coordinate to start the drag from (distance from top edge of viewport)"
                            },
                            "offsetX": {
                              "type": "number",
                              "description": "Horizontal distance to drag (positive for right, negative for left)"
                            },
                            "offsetY": {
                              "type": "number",
                              "description": "Vertical distance to drag (positive for down, negative for up)"
                            },
                            "smoothDrag": {
                              "type": "boolean",
                              "description": "Whether to perform a smooth, gradual drag movement (default: false)"
                            },
                            "steps": {
                              "type": "number",
                              "description": "Number of intermediate steps for smooth drag (default: 10)"
                            },
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "required": [
                            "sourceX",
                            "sourceY",
                            "offsetX",
                            "offsetY"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command",
                        "args"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "select"
                        },
                        "selector": {
                          "type": "string",
                          "description": "CSS selector of select element"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "Value of the option to select"
                            },
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "required": [
                            "value"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command",
                        "selector",
                        "args"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "check"
                        },
                        "selector": {
                          "type": "string",
                          "description": "CSS selector of checkbox element"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "checked": {
                              "type": "boolean",
                              "description": "Whether to check or uncheck the box (default: true)"
                            },
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command",
                        "selector"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "hover"
                        },
                        "selector": {
                          "type": "string",
                          "description": "CSS selector of element to hover over"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command",
                        "selector"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "focus"
                        },
                        "selector": {
                          "type": "string",
                          "description": "CSS selector of element to focus"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command",
                        "selector"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "blur"
                        },
                        "selector": {
                          "type": "string",
                          "description": "CSS selector of element to blur"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command",
                        "selector"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "keypress"
                        },
                        "selector": {
                          "type": "string",
                          "description": "CSS selector of element to target (optional)"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Key to press (e.g., 'Enter', 'Tab', 'ArrowDown')"
                            },
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "required": [
                            "key"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command",
                        "args"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "scroll"
                        },
                        "selector": {
                          "type": "string",
                          "description": "CSS selector of element to scroll (scrolls page if not provided)"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "x": {
                              "type": "number",
                              "description": "Horizontal scroll amount in pixels (default: 0)"
                            },
                            "y": {
                              "type": "number",
                              "description": "Vertical scroll amount in pixels (default: 0)"
                            },
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "getAttribute"
                        },
                        "selector": {
                          "type": "string",
                          "description": "CSS selector of element"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the attribute to retrieve"
                            },
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command",
                        "selector",
                        "args"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "getProperty"
                        },
                        "selector": {
                          "type": "string",
                          "description": "CSS selector of element"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the property to retrieve"
                            },
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command",
                        "selector",
                        "args"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "refresh"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "waitUntil": {
                              "type": "string",
                              "enum": [
                                "load",
                                "domcontentloaded",
                                "networkidle0",
                                "networkidle2"
                              ],
                              "description": "Navigation wait condition (default: networkidle0)"
                            },
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command"
                      ],
                      "additionalProperties": false
                    }
                  ]
                },
                "description": "Array of commands to execute in sequence"
              },
              "timeout": {
                "type": "number",
                "description": "Overall timeout in milliseconds (default: 30000)"
              }
            },
            "required": [
              "commands"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 11,
      "tool_names": [
        "how-to-use",
        "get-hmr-events",
        "start-browser",
        "capture-screenshot",
        "get-element-properties",
        "get-element-styles",
        "get-element-dimensions",
        "monitor-network",
        "get-element-html",
        "get-console-logs",
        "execute-browser-commands"
      ]
    },
    "server_info_crawled": {
      "id": 801,
      "name": "Vite MCP Server",
      "author": "@ESnark/vite-mcp-server",
      "overview": "Connect your Cursor agents to a Vite development server for real-time code modification and live updates. Enhance your development workflow with automated browser integration and visual feedback, making debugging and testing more efficient.",
      "repository_url": "https://github.com/ESnark/vite-mcp-server",
      "homepage": "https://smithery.ai/server/@ESnark/vite-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "7",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ESnark_vite-mcp-server.json",
      "tools_count": 11,
      "tools": [
        {
          "name": "how-to-use",
          "description": "Description of how to use the server",
          "input_schema": {
            "type": "object",
            "properties": {
              "section": {
                "type": "string",
                "enum": [
                  "checkpoint",
                  "hmr"
                ],
                "description": "Section to describe"
              }
            },
            "required": [
              "section"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-hmr-events",
          "description": "Retrieves recent HMR events",
          "input_schema": {
            "type": "object",
            "properties": {
              "limit": {
                "type": "number",
                "description": "Maximum number of events to return"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "start-browser",
          "description": "Launches a browser instance and navigates to the Vite dev server",
          "input_schema": {
            "type": "object",
            "properties": {
              "viteServerUrl": {
                "type": "string",
                "description": "URL of the Vite dev server (default: http://localhost:5173)"
              },
              "headless": {
                "type": "boolean",
                "description": "Run browser in headless mode"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "capture-screenshot",
          "description": "Captures a screenshot of the current page or a specific element.\nThis feature is for MCP Clients that do not support MCP Resource and image content type.\nIf the image is successfully saved, you should request the user to provide the image.",
          "input_schema": {
            "type": "object",
            "properties": {
              "projectRoot": {
                "type": "string",
                "description": "Root directory path of the development project"
              },
              "selector": {
                "type": "string",
                "description": "CSS selector to capture (captures full page if not provided)"
              },
              "url": {
                "type": "string",
                "description": "URL to navigate to before capturing screenshot"
              }
            },
            "required": [
              "projectRoot"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-element-properties",
          "description": "Retrieves properties and state information of a specific element",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string",
                "description": "CSS selector of the element to inspect"
              },
              "properties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of property names to retrieve (e.g., ['value', 'checked', 'textContent'])"
              }
            },
            "required": [
              "selector",
              "properties"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-element-styles",
          "description": "Retrieves style information of a specific element",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string",
                "description": "CSS selector of the element to inspect"
              },
              "styleProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of style property names to retrieve (e.g., ['color', 'fontSize', 'backgroundColor'])"
              }
            },
            "required": [
              "selector",
              "styleProperties"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-element-dimensions",
          "description": "Retrieves dimension and position information of a specific element",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string",
                "description": "CSS selector of the element to inspect"
              }
            },
            "required": [
              "selector"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "monitor-network",
          "description": "Monitors network requests in the browser for a specified duration",
          "input_schema": {
            "type": "object",
            "properties": {
              "urlPattern": {
                "type": "string",
                "description": "URL pattern to filter (regex string)"
              },
              "duration": {
                "type": "number",
                "description": "Duration in milliseconds to monitor (default: 5000)"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-element-html",
          "description": "Retrieves the HTML content of a specific element and its children",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string",
                "description": "CSS selector of the element to inspect"
              },
              "includeOuter": {
                "type": "boolean",
                "description": "If true, includes the selected element's outer HTML; otherwise returns only inner HTML (default: false)"
              }
            },
            "required": [
              "selector"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-console-logs",
          "description": "Retrieves console logs from the development server",
          "input_schema": {
            "type": "object",
            "properties": {
              "checkpoint": {
                "type": "string",
                "description": "If specified, returns only logs recorded at this checkpoint"
              },
              "limit": {
                "type": "number",
                "description": "Number of logs to return, starting from the most recent log"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "execute-browser-commands",
          "description": "Executes a sequence of predefined browser commands safely. Available commands:\n\n- click: Clicks on an element matching the selector or at specified coordinates\n- type: Types text into an input element\n- wait: Waits for an element, a specified time period, or a condition\n- navigate: Navigates to a specified URL\n- select: Selects an option in a dropdown\n- check: Checks or unchecks a checkbox\n- hover: Hovers over an element\n- focus: Focuses an element\n- blur: Removes focus from an element\n- keypress: Simulates pressing a keyboard key\n- scroll: Scrolls the page or an element\n- getAttribute: Gets an attribute value from an element\n- getProperty: Gets a property value from an element\n- drag: Performs a drag operation from one position to another\n- refresh: Refreshes the current page\n\nNote on coordinates: For all mouse-related commands (click, drag, etc.), coordinates are relative to the browser viewport\nwhere (0,0) is the top-left corner. X increases to the right, Y increases downward.\n\nExamples are available in the schema definition.",
          "input_schema": {
            "type": "object",
            "properties": {
              "commands": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "click"
                        },
                        "selector": {
                          "type": "string",
                          "description": "CSS selector of element to click (required unless x,y coordinates are provided)"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "button": {
                              "type": "string",
                              "enum": [
                                "left",
                                "right",
                                "middle"
                              ],
                              "description": "Mouse button to use (default: left)"
                            },
                            "clickCount": {
                              "type": "number",
                              "description": "Number of clicks (default: 1)"
                            },
                            "delay": {
                              "type": "number",
                              "description": "Delay between mousedown and mouseup in ms (default: 0)"
                            },
                            "x": {
                              "type": "number",
                              "description": "X coordinate to click (used instead of selector)"
                            },
                            "y": {
                              "type": "number",
                              "description": "Y coordinate to click (used instead of selector)"
                            },
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "required": [
                            "y"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "type"
                        },
                        "selector": {
                          "type": "string",
                          "description": "CSS selector of input element to type into"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "text": {
                              "type": "string",
                              "description": "Text to type into the element"
                            },
                            "delay": {
                              "type": "number",
                              "description": "Delay between keystrokes in ms (default: 0)"
                            },
                            "clearFirst": {
                              "type": "boolean",
                              "description": "Whether to clear the input field before typing (default: false)"
                            },
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "required": [
                            "text"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command",
                        "selector"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "wait"
                        },
                        "selector": {
                          "type": "string",
                          "description": "CSS selector to wait for"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "time": {
                              "type": "number",
                              "description": "Time to wait in milliseconds (use this or selector)"
                            },
                            "visible": {
                              "type": "boolean",
                              "description": "Wait for element to be visible (default: true)"
                            },
                            "timeout": {
                              "type": "number",
                              "description": "Maximum time to wait in ms (default: 5000)"
                            },
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "navigate"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "URL to navigate to"
                            },
                            "waitUntil": {
                              "type": "string",
                              "enum": [
                                "load",
                                "domcontentloaded",
                                "networkidle0",
                                "networkidle2"
                              ],
                              "description": "Navigation wait condition (default: networkidle0)"
                            },
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command",
                        "args"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "drag"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "sourceX": {
                              "type": "number",
                              "description": "X coordinate to start the drag from (distance from left edge of viewport)"
                            },
                            "sourceY": {
                              "type": "number",
                              "description": "Y coordinate to start the drag from (distance from top edge of viewport)"
                            },
                            "offsetX": {
                              "type": "number",
                              "description": "Horizontal distance to drag (positive for right, negative for left)"
                            },
                            "offsetY": {
                              "type": "number",
                              "description": "Vertical distance to drag (positive for down, negative for up)"
                            },
                            "smoothDrag": {
                              "type": "boolean",
                              "description": "Whether to perform a smooth, gradual drag movement (default: false)"
                            },
                            "steps": {
                              "type": "number",
                              "description": "Number of intermediate steps for smooth drag (default: 10)"
                            },
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "required": [
                            "sourceX",
                            "sourceY",
                            "offsetX",
                            "offsetY"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command",
                        "args"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "select"
                        },
                        "selector": {
                          "type": "string",
                          "description": "CSS selector of select element"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "Value of the option to select"
                            },
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "required": [
                            "value"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command",
                        "selector",
                        "args"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "check"
                        },
                        "selector": {
                          "type": "string",
                          "description": "CSS selector of checkbox element"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "checked": {
                              "type": "boolean",
                              "description": "Whether to check or uncheck the box (default: true)"
                            },
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command",
                        "selector"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "hover"
                        },
                        "selector": {
                          "type": "string",
                          "description": "CSS selector of element to hover over"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command",
                        "selector"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "focus"
                        },
                        "selector": {
                          "type": "string",
                          "description": "CSS selector of element to focus"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command",
                        "selector"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "blur"
                        },
                        "selector": {
                          "type": "string",
                          "description": "CSS selector of element to blur"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command",
                        "selector"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "keypress"
                        },
                        "selector": {
                          "type": "string",
                          "description": "CSS selector of element to target (optional)"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Key to press (e.g., 'Enter', 'Tab', 'ArrowDown')"
                            },
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "required": [
                            "key"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command",
                        "args"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "scroll"
                        },
                        "selector": {
                          "type": "string",
                          "description": "CSS selector of element to scroll (scrolls page if not provided)"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "x": {
                              "type": "number",
                              "description": "Horizontal scroll amount in pixels (default: 0)"
                            },
                            "y": {
                              "type": "number",
                              "description": "Vertical scroll amount in pixels (default: 0)"
                            },
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "getAttribute"
                        },
                        "selector": {
                          "type": "string",
                          "description": "CSS selector of element"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the attribute to retrieve"
                            },
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command",
                        "selector",
                        "args"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "getProperty"
                        },
                        "selector": {
                          "type": "string",
                          "description": "CSS selector of element"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the property to retrieve"
                            },
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command",
                        "selector",
                        "args"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "string",
                          "const": "refresh"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of this command step"
                        },
                        "args": {
                          "type": "object",
                          "properties": {
                            "waitUntil": {
                              "type": "string",
                              "enum": [
                                "load",
                                "domcontentloaded",
                                "networkidle0",
                                "networkidle2"
                              ],
                              "description": "Navigation wait condition (default: networkidle0)"
                            },
                            "continueOnError": {
                              "type": "boolean",
                              "description": "Whether to continue executing commands if this command fails"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "command"
                      ],
                      "additionalProperties": false
                    }
                  ]
                },
                "description": "Array of commands to execute in sequence"
              },
              "timeout": {
                "type": "number",
                "description": "Overall timeout in milliseconds (default: 30000)"
              }
            },
            "required": [
              "commands"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ESnark/vite-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ESnark/vite-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0802.@ESnark_vite-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 783
  }
}