{
  "labels": {
    "analysis": "The MCP Server is designed to facilitate file transfer and management operations via FTP (File Transfer Protocol) servers. Its core functionality revolves around enabling users to interact with FTP servers through natural language commands, making it easier to perform common file operations such as listing directories, uploading or downloading files, creating, deleting files and directories. This server is primarily focused on file management and transfer tasks over an FTP protocol, addressing the needs of users who require seamless file operations for tasks like data backup, file synchronization, or remote server file management.",
    "reasoning": "The primary label \"File Management\" is chosen because the server's main functionality centers around file operations such as listing, uploading, downloading, creating, and deleting files and directories. The secondary label \"Network Operations\" is added because FTP is inherently a network protocol for file transfer, indicating the server's role in facilitating network-based file handling. The custom label \"FTP File Transfer\" is used to specifically highlight the server's tailored functionality for FTP operations, which is a more precise descriptor of its specialized use case.",
    "primary_label": "File Management",
    "secondary_labels": [],
    "custom_label": "FTP File Transfer",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 140,
    "server_name": "FTP Access Server",
    "rank_by_usage": 141,
    "usage_count": "414",
    "original_file": "../crawler/smithery/@alxspiker_mcp-server-ftp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@alxspiker/mcp-server-ftp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 140,
      "name": "FTP Access Server",
      "author": "@alxspiker/mcp-server-ftp",
      "overview": "Interact with FTP servers seamlessly. List directories, upload and download files, and manage your FTP resources effortlessly using natural language commands.",
      "repository_url": "https://github.com/alxspiker/mcp-server-ftp",
      "homepage": "https://smithery.ai/server/@alxspiker/mcp-server-ftp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "414",
      "success_rate": "99.68%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@alxspiker_mcp-server-ftp.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "list-directory",
          "description": "Deploy Server FTP Access Server @alxspiker/mcp-server-ftp Try in Playground list-directory",
          "parameters": [
            {
              "name": "remotePath",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "download-file",
          "description": "Download a file from the FTP server",
          "parameters": [
            {
              "name": "remotePath",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "upload-file",
          "description": "Upload a file to the FTP server",
          "parameters": [
            {
              "name": "content",
              "required": true,
              "type": "string"
            },
            {
              "name": "remotePath",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create-directory",
          "description": "Create a new directory on the FTP server",
          "parameters": [
            {
              "name": "remotePath",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete-file",
          "description": "Delete a file from the FTP server",
          "parameters": [
            {
              "name": "remotePath",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete-directory",
          "description": "Delete a directory from the FTP server",
          "parameters": [
            {
              "name": "remotePath",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@alxspiker/mcp-server-ftp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@alxspiker/mcp-server-ftp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0141.@alxspiker_mcp-server-ftp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 138
  }
}