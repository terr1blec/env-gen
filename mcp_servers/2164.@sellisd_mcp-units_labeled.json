{
  "labels": {
    "analysis": "The MCP Server is designed specifically for cooking-related unit conversions, offering tools to convert between volume, weight, and temperature units commonly used in recipes. It solves problems related to measurement inconsistencies across different culinary standards, helping users standardize their cooking processes. The available tools are focused on practical, real-time conversions needed in both home cooking and professional kitchen environments.",
    "reasoning": "The primary label \"Daily Productivity\" was chosen because the server enhances cooking workflows, which is a common daily activity. Secondary label \"Food & Cooking\" was added to explicitly highlight its culinary focus, as this isn't a predefined category. No predefined category perfectly captures the niche cooking conversion aspect, hence a custom label was created to better organize servers of this specific utility.",
    "primary_label": "Daily Productivity",
    "secondary_labels": [],
    "custom_label": "Cooking Utility",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2163,
    "server_name": "Cooking Units Converter",
    "rank_by_usage": 2164,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@sellisd_mcp-units.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@sellisd/mcp-units/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "convert_temperature",
          "description": "Convert between Celsius (C) and Fahrenheit (F) temperatures",
          "input_schema": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Temperature value to convert"
              },
              "from_unit": {
                "type": "string",
                "enum": [
                  "C",
                  "F"
                ],
                "description": "Source temperature unit (C or F)"
              },
              "to_unit": {
                "type": "string",
                "enum": [
                  "C",
                  "F"
                ],
                "description": "Target temperature unit (C or F)"
              }
            },
            "required": [
              "value",
              "from_unit",
              "to_unit"
            ]
          },
          "annotations": null
        },
        {
          "name": "convert_volume",
          "description": "Convert between volume units (ml, l, cup, tbsp, tsp)",
          "input_schema": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Volume value to convert"
              },
              "from_unit": {
                "type": "string",
                "enum": [
                  "ml",
                  "l",
                  "cup",
                  "tbsp",
                  "tsp"
                ],
                "description": "Source volume unit (ml, l, cup, tbsp, tsp)"
              },
              "to_unit": {
                "type": "string",
                "enum": [
                  "ml",
                  "l",
                  "cup",
                  "tbsp",
                  "tsp"
                ],
                "description": "Target volume unit (ml, l, cup, tbsp, tsp)"
              }
            },
            "required": [
              "value",
              "from_unit",
              "to_unit"
            ]
          },
          "annotations": null
        },
        {
          "name": "convert_weight",
          "description": "Convert between weight units (g, kg, oz, lb)",
          "input_schema": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Weight value to convert"
              },
              "from_unit": {
                "type": "string",
                "enum": [
                  "g",
                  "kg",
                  "oz",
                  "lb"
                ],
                "description": "Source weight unit (g, kg, oz, lb)"
              },
              "to_unit": {
                "type": "string",
                "enum": [
                  "g",
                  "kg",
                  "oz",
                  "lb"
                ],
                "description": "Target weight unit (g, kg, oz, lb)"
              }
            },
            "required": [
              "value",
              "from_unit",
              "to_unit"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 3,
      "tool_names": [
        "convert_temperature",
        "convert_volume",
        "convert_weight"
      ]
    },
    "server_info_crawled": {
      "id": 2163,
      "name": "Cooking Units Converter",
      "author": "@sellisd/mcp-units",
      "overview": "Provide cooking unit conversion tools to easily convert between volume, weight, and temperature units commonly used in cooking. Convert measurements such as milliliters to cups, grams to pounds, and Celsius to Fahrenheit with simple commands. Enhance your cooking-related applications or workflows by integrating precise unit conversions.",
      "repository_url": "https://github.com/sellisd/mcp-units",
      "homepage": "https://smithery.ai/server/@sellisd/mcp-units",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@sellisd_mcp-units.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "convert_temperature",
          "description": "Convert between Celsius (C) and Fahrenheit (F) temperatures",
          "input_schema": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Temperature value to convert"
              },
              "from_unit": {
                "type": "string",
                "enum": [
                  "C",
                  "F"
                ],
                "description": "Source temperature unit (C or F)"
              },
              "to_unit": {
                "type": "string",
                "enum": [
                  "C",
                  "F"
                ],
                "description": "Target temperature unit (C or F)"
              }
            },
            "required": [
              "value",
              "from_unit",
              "to_unit"
            ]
          },
          "annotations": null
        },
        {
          "name": "convert_volume",
          "description": "Convert between volume units (ml, l, cup, tbsp, tsp)",
          "input_schema": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Volume value to convert"
              },
              "from_unit": {
                "type": "string",
                "enum": [
                  "ml",
                  "l",
                  "cup",
                  "tbsp",
                  "tsp"
                ],
                "description": "Source volume unit (ml, l, cup, tbsp, tsp)"
              },
              "to_unit": {
                "type": "string",
                "enum": [
                  "ml",
                  "l",
                  "cup",
                  "tbsp",
                  "tsp"
                ],
                "description": "Target volume unit (ml, l, cup, tbsp, tsp)"
              }
            },
            "required": [
              "value",
              "from_unit",
              "to_unit"
            ]
          },
          "annotations": null
        },
        {
          "name": "convert_weight",
          "description": "Convert between weight units (g, kg, oz, lb)",
          "input_schema": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Weight value to convert"
              },
              "from_unit": {
                "type": "string",
                "enum": [
                  "g",
                  "kg",
                  "oz",
                  "lb"
                ],
                "description": "Source weight unit (g, kg, oz, lb)"
              },
              "to_unit": {
                "type": "string",
                "enum": [
                  "g",
                  "kg",
                  "oz",
                  "lb"
                ],
                "description": "Target weight unit (g, kg, oz, lb)"
              }
            },
            "required": [
              "value",
              "from_unit",
              "to_unit"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@sellisd/mcp-units/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@sellisd/mcp-units/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "2164.@sellisd_mcp-units_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1872
  }
}