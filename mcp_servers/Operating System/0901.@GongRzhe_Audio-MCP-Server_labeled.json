{
  "labels": {
    "analysis": "The MCP Server is primarily focused on audio management and interaction, enabling AI assistants to control and utilize a computer's audio system. Its core functionality includes listing audio devices, recording audio from microphones, and playing back recorded audio or text-to-speech output. This server simplifies audio management tasks by providing a programmatic interface for audio input/output operations.",
    "reasoning": "The **primary_label** is chosen because the server deals with audio recording, playback, and device management, which are all tasks related to operating system functionality. The **secondary_labels** are included because the server involves text-to-speech (which is an AI/ML tool) and could be used in communication contexts. The **custom_label** describes the server's specialized audio management capability.",
    "primary_label": "Operating System",
    "secondary_labels": [
      "AI/ML Tools",
      "Communication Tools"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 900,
    "server_name": "Audio Interface Server",
    "rank_by_usage": 901,
    "usage_count": "4",
    "original_file": "../crawler/smithery/@GongRzhe_Audio-MCP-Server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@GongRzhe/Audio-MCP-Server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "list_audio_devices",
          "description": "List all available audio input and output devices on the system.",
          "input_schema": {
            "properties": {},
            "title": "list_audio_devicesArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "record_audio",
          "description": "Record audio from the microphone.\n    \n    Args:\n        duration: Recording duration in seconds (default: 5)\n        sample_rate: Sample rate in Hz (default: 44100)\n        channels: Number of audio channels (default: 1)\n        device_index: Specific input device index to use (default: system default)\n    \n    Returns:\n        A message confirming the recording was captured\n    ",
          "input_schema": {
            "properties": {
              "duration": {
                "default": 5,
                "title": "Duration",
                "type": "number"
              },
              "sample_rate": {
                "default": 44100,
                "title": "Sample Rate",
                "type": "integer"
              },
              "channels": {
                "default": 1,
                "title": "Channels",
                "type": "integer"
              },
              "device_index": {
                "default": null,
                "title": "Device Index",
                "type": "integer"
              }
            },
            "title": "record_audioArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "play_latest_recording",
          "description": "Play the latest recorded audio through the speakers.",
          "input_schema": {
            "properties": {},
            "title": "play_latest_recordingArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "play_audio",
          "description": "\n    Play audio from text using text-to-speech.\n    \n    Args:\n        text: The text to convert to speech\n        voice: The voice to use (default: \"default\")\n    \n    Returns:\n        A message indicating if the audio was played successfully\n    ",
          "input_schema": {
            "properties": {
              "text": {
                "title": "Text",
                "type": "string"
              },
              "voice": {
                "default": "default",
                "title": "Voice",
                "type": "string"
              }
            },
            "required": [
              "text"
            ],
            "title": "play_audioArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "play_audio_file",
          "description": "\n    Play an audio file through the speakers.\n    \n    Args:\n        file_path: Path to the audio file\n        device_index: Specific output device index to use (default: system default)\n    \n    Returns:\n        A message indicating if the audio was played successfully\n    ",
          "input_schema": {
            "properties": {
              "file_path": {
                "title": "File Path",
                "type": "string"
              },
              "device_index": {
                "default": null,
                "title": "Device Index",
                "type": "integer"
              }
            },
            "required": [
              "file_path"
            ],
            "title": "play_audio_fileArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 5,
      "tool_names": [
        "list_audio_devices",
        "record_audio",
        "play_latest_recording",
        "play_audio",
        "play_audio_file"
      ]
    },
    "server_info_crawled": {
      "id": 900,
      "name": "Audio Interface Server",
      "author": "@GongRzhe/Audio-MCP-Server",
      "overview": "Enable AI assistants to interact with your computer's audio system by listing devices, recording audio, and playing back recordings or audio files. Enhance your assistant's capabilities with seamless audio input and output control. Simplify audio management through easy-to-use tools integrated with your AI assistant.",
      "repository_url": "https://github.com/GongRzhe/Audio-MCP-Server",
      "homepage": "https://smithery.ai/server/@GongRzhe/Audio-MCP-Server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "4",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@GongRzhe_Audio-MCP-Server.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "list_audio_devices",
          "description": "List all available audio input and output devices on the system.",
          "input_schema": {
            "properties": {},
            "title": "list_audio_devicesArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "record_audio",
          "description": "Record audio from the microphone.\n    \n    Args:\n        duration: Recording duration in seconds (default: 5)\n        sample_rate: Sample rate in Hz (default: 44100)\n        channels: Number of audio channels (default: 1)\n        device_index: Specific input device index to use (default: system default)\n    \n    Returns:\n        A message confirming the recording was captured\n    ",
          "input_schema": {
            "properties": {
              "duration": {
                "default": 5,
                "title": "Duration",
                "type": "number"
              },
              "sample_rate": {
                "default": 44100,
                "title": "Sample Rate",
                "type": "integer"
              },
              "channels": {
                "default": 1,
                "title": "Channels",
                "type": "integer"
              },
              "device_index": {
                "default": null,
                "title": "Device Index",
                "type": "integer"
              }
            },
            "title": "record_audioArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "play_latest_recording",
          "description": "Play the latest recorded audio through the speakers.",
          "input_schema": {
            "properties": {},
            "title": "play_latest_recordingArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "play_audio",
          "description": "\n    Play audio from text using text-to-speech.\n    \n    Args:\n        text: The text to convert to speech\n        voice: The voice to use (default: \"default\")\n    \n    Returns:\n        A message indicating if the audio was played successfully\n    ",
          "input_schema": {
            "properties": {
              "text": {
                "title": "Text",
                "type": "string"
              },
              "voice": {
                "default": "default",
                "title": "Voice",
                "type": "string"
              }
            },
            "required": [
              "text"
            ],
            "title": "play_audioArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "play_audio_file",
          "description": "\n    Play an audio file through the speakers.\n    \n    Args:\n        file_path: Path to the audio file\n        device_index: Specific output device index to use (default: system default)\n    \n    Returns:\n        A message indicating if the audio was played successfully\n    ",
          "input_schema": {
            "properties": {
              "file_path": {
                "title": "File Path",
                "type": "string"
              },
              "device_index": {
                "default": null,
                "title": "Device Index",
                "type": "integer"
              }
            },
            "required": [
              "file_path"
            ],
            "title": "play_audio_fileArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@GongRzhe/Audio-MCP-Server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@GongRzhe/Audio-MCP-Server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0901.@GongRzhe_Audio-MCP-Server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 882
  }
}