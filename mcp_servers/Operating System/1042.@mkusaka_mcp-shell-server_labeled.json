{
  "labels": {
    "analysis": "The MCP Server described is focused on executing shell commands through an AI interface, providing safe and efficient command execution with multi-shell support and detailed error handling. Its primary functionality revolves around running operating system commands programmatically, which is essential for automation, system management, and task execution. The \"shell_exec\" tool indicates that the server is designed to handle command-line operations with robust error handling and output capture, making it suitable for tasks that require direct interaction with the operating system or command-line interfaces.",
    "reasoning": "The primary label \"Operating System\" is chosen because the server's core functionality is centered around executing shell commands and interacting with the operating system's command-line environment. The secondary label \"Development Tools\" is appropriate because developers often use shell commands for automation, debugging, and system-level tasks. The secondary label \"Browser Automation\" is also relevant if the server is used to interact with web-based applications via command-line tools, though this is less central. No custom label is needed as the predefined categories cover the functionality well.",
    "primary_label": "Operating System",
    "secondary_labels": [
      "Development Tools",
      "Browser Automation"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1041,
    "server_name": "Shell Command Executor",
    "rank_by_usage": 1042,
    "usage_count": "2",
    "original_file": "../crawler/smithery/@mkusaka_mcp-shell-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@mkusaka/mcp-shell-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "shell_exec",
          "description": "Executes commands in the specified shell with detailed error handling and output capture",
          "input_schema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "minLength": 1,
                "description": "The shell command to execute in the configured shell environment"
              },
              "workingDir": {
                "type": "string",
                "description": "Optional working directory to execute the command in (must be under $HOME for security)"
              }
            },
            "required": [
              "command"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "shell_exec"
      ]
    },
    "server_info_crawled": {
      "id": 1041,
      "name": "Shell Command Executor",
      "author": "@mkusaka/mcp-shell-server",
      "overview": "Execute shell commands safely and efficiently through AI agents. Leverage multi-shell support and detailed error handling to enhance your command execution capabilities. Simplify your workflow by integrating shell command execution directly into your applications.",
      "repository_url": "https://github.com/mkusaka/mcp-shell-server",
      "homepage": "https://smithery.ai/server/@mkusaka/mcp-shell-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "2",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@mkusaka_mcp-shell-server.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "shell_exec",
          "description": "Executes commands in the specified shell with detailed error handling and output capture",
          "input_schema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "minLength": 1,
                "description": "The shell command to execute in the configured shell environment"
              },
              "workingDir": {
                "type": "string",
                "description": "Optional working directory to execute the command in (must be under $HOME for security)"
              }
            },
            "required": [
              "command"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@mkusaka/mcp-shell-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@mkusaka/mcp-shell-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1042.@mkusaka_mcp-shell-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1020
  }
}