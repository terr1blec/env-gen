{
  "labels": {
    "analysis": "The Lilith Shell MCP Server is designed to enable AI assistants to execute terminal commands securely within controlled environments. Its core functionality revolves around running shell commands through an \"execute_command\" tool, with emphasis on security and integration with AI systems via the Model Context Protocol (MCP). This is particularly useful for development systems where secure automation of terminal operations is required.",
    "reasoning": "The primary label \"Operating System\" was chosen because the server's main purpose is to execute terminal commands, which directly relates to system operations. The secondary label \"Development Tools\" is appropriate as it supports development environments with secure command execution. A custom label is not required as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Operating System",
    "secondary_labels": [
      "Development Tools"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 546,
    "server_name": "Lilith Shell",
    "rank_by_usage": 547,
    "usage_count": "24",
    "original_file": "../crawler/smithery/@charles-adedotun_Lilith-Shell.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@charles-adedotun/Lilith-Shell/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "execute_command",
          "description": "Execute any shell command",
          "input_schema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "directory": {
                "type": "string",
                "description": "Working directory (optional)",
                "default": "~"
              }
            },
            "required": [
              "command"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "execute_command"
      ]
    },
    "server_info_crawled": {
      "id": 546,
      "name": "Lilith Shell",
      "author": "@charles-adedotun/Lilith-Shell",
      "overview": "Empower your AI assistants to execute terminal commands securely and efficiently. Leverage enhanced security controls and testing to ensure safe command execution in controlled environments. Ideal for development systems, this tool allows for seamless integration with any AI assistant supporting the Model Context Protocol.",
      "repository_url": "https://github.com/charles-adedotun/Lilith-Shell",
      "homepage": "https://smithery.ai/server/@charles-adedotun/Lilith-Shell",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "24",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@charles-adedotun_Lilith-Shell.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "execute_command",
          "description": "Execute any shell command",
          "input_schema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "directory": {
                "type": "string",
                "description": "Working directory (optional)",
                "default": "~"
              }
            },
            "required": [
              "command"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@charles-adedotun/Lilith-Shell/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@charles-adedotun/Lilith-Shell/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0547.@charles-adedotun_Lilith-Shell_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 535
  }
}