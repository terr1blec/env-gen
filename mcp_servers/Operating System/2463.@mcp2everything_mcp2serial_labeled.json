{
  "labels": {
    "analysis": "The MCP2Serial server specializes in interfacing with hardware devices using natural language commands, allowing users to control and monitor physical devices (e.g., Raspbery Pi Pico) via AI-driven interactions. The available tools (set_pwm, get_pico_info, led_control) indicate functionality around administering physical computing tasks, such as adjusting PWM signals, querying device information, and managing LED states. This implies real-time hardware control through intelligent automation.",
    "reasoning": "The primary label \"Operating System\" was chosen because the server primarily interacts with hardware and low-level device control, akin to system-level operations. Secondary label \"Development Tools\" was selected due to its use in automating hardware tasks, which is relevant to developers. While \"IoT\" could be a relevant custom label, it is too niche for this context.",
    "primary_label": "Operating System",
    "secondary_labels": [
      "Development Tools"
    ],
    "custom_label": "IoT Device Control",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2462,
    "server_name": "MCP2Serial",
    "rank_by_usage": 2463,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@mcp2everything_mcp2serial.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@mcp2everything/mcp2serial/mcp?config=eyJjb25maWdOYW1lIjogIiJ9&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "set_pwm",
          "description": "Execute set_pwm command",
          "input_schema": {
            "type": "object",
            "properties": {
              "frequency": {
                "type": "string"
              }
            },
            "required": [
              "frequency"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_pico_info",
          "description": "Execute get_pico_info command",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "led_control",
          "description": "Execute led_control command",
          "input_schema": {
            "type": "object",
            "properties": {
              "state": {
                "type": "string"
              }
            },
            "required": [
              "state"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 3,
      "tool_names": [
        "set_pwm",
        "get_pico_info",
        "led_control"
      ]
    },
    "server_info_crawled": {
      "id": 2462,
      "name": "MCP2Serial",
      "author": "@mcp2everything/mcp2serial",
      "overview": "Connect hardware devices with AI models using natural language commands. Control your devices seamlessly and enable real-time adjustments to physical parameters with intelligent responses.",
      "repository_url": "https://github.com/mcp2everything/mcp2serial",
      "homepage": "https://smithery.ai/server/@mcp2everything/mcp2serial",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@mcp2everything_mcp2serial.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "set_pwm",
          "description": "Execute set_pwm command",
          "input_schema": {
            "type": "object",
            "properties": {
              "frequency": {
                "type": "string"
              }
            },
            "required": [
              "frequency"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_pico_info",
          "description": "Execute get_pico_info command",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "led_control",
          "description": "Execute led_control command",
          "input_schema": {
            "type": "object",
            "properties": {
              "state": {
                "type": "string"
              }
            },
            "required": [
              "state"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"configName\": \"\"\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@mcp2everything/mcp2serial/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"configName\": \"\"\n}",
      "python_sdk_url": "https://server.smithery.ai/@mcp2everything/mcp2serial/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "2463.@mcp2everything_mcp2serial_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 2101
  }
}