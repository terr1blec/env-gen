{
  "labels": {
    "analysis": "The MCP Server specializes in Android device management through ADB (Android Debug Bridge) functionalities. It provides tools for device enumeration, app installation, log access, file transfer, and shell command execution. The core purpose is to streamline Android device operations, automate tasks, and facilitate data retrieval for AI-powered workflows.",
    "reasoning": "Primary Label *Operating System* is chosen because the server's main functionality revolves around device management and system-level operations (e.g., shell commands, file transfers). Secondary Labels like *Development Tools* and *Database Operations* are included because the server supports app installation/deployment (development) and log access (data querying). No custom label is needed as the predefined categories adequately describe its capabilities.",
    "primary_label": "Operating System",
    "secondary_labels": [
      "Development Tools",
      "Database Operations"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 642,
    "server_name": "ADB Android Device Server",
    "rank_by_usage": 643,
    "usage_count": "14",
    "original_file": "../crawler/smithery/@srmorete_adb-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@srmorete/adb-mcp/mcp?config=eyJhZGJQYXRoIjogIiJ9&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "adb_devices",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "random_string": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "inspect_ui",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "device": {
                "type": "string",
                "description": "Specific device ID (optional)"
              },
              "outputPath": {
                "type": "string",
                "description": "Custom output path on device (default: /sdcard/window_dump.xml)"
              },
              "asBase64": {
                "type": "boolean",
                "default": false,
                "description": "Return XML content as base64 (default: false)"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "adb_shell",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Shell command to execute on the device"
              },
              "device": {
                "type": "string",
                "description": "Specific device ID (optional)"
              }
            },
            "required": [
              "command"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "adb_install",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "apkPath": {
                "type": "string",
                "description": "Local path to the APK file"
              },
              "device": {
                "type": "string",
                "description": "Specific device ID (optional)"
              }
            },
            "required": [
              "apkPath"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "adb_logcat",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Logcat filter expression (optional)"
              },
              "device": {
                "type": "string",
                "description": "Specific device ID (optional)"
              },
              "lines": {
                "type": "number",
                "default": 50,
                "description": "Number of lines to return (default: 50)"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "adb_pull",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "remotePath": {
                "type": "string",
                "description": "Remote file path on the device"
              },
              "device": {
                "type": "string",
                "description": "Specific device ID (optional)"
              },
              "asBase64": {
                "type": "boolean",
                "default": true,
                "description": "Return file content as base64 (default: true)"
              }
            },
            "required": [
              "remotePath"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "adb_push",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "fileBase64": {
                "type": "string",
                "description": "Base64 encoded file content to push"
              },
              "remotePath": {
                "type": "string",
                "description": "Remote file path on the device"
              },
              "device": {
                "type": "string",
                "description": "Specific device ID (optional)"
              }
            },
            "required": [
              "fileBase64",
              "remotePath"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "dump_image",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "device": {
                "type": "string",
                "description": "Specific device ID (optional)"
              },
              "asBase64": {
                "type": "boolean",
                "default": false,
                "description": "Return image as base64 (default: false)"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        }
      ],
      "tool_count": 8,
      "tool_names": [
        "adb_devices",
        "inspect_ui",
        "adb_shell",
        "adb_install",
        "adb_logcat",
        "adb_pull",
        "adb_push",
        "dump_image"
      ]
    },
    "server_info_crawled": {
      "id": 642,
      "name": "ADB Android Device Server",
      "author": "@srmorete/adb-mcp",
      "overview": "Enable seamless interaction with Android devices through ADB by listing devices, installing apps, accessing logs, transferring files, capturing screenshots, and executing shell commands. Streamline Android device management and automation for AI-powered workflows. Simplify device control and data retrieval with a unified MCP server interface.",
      "repository_url": "https://github.com/srmorete/adb-mcp",
      "homepage": "https://smithery.ai/server/@srmorete/adb-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "14",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@srmorete_adb-mcp.json",
      "tools_count": 8,
      "tools": [
        {
          "name": "adb_devices",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "random_string": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "inspect_ui",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "device": {
                "type": "string",
                "description": "Specific device ID (optional)"
              },
              "outputPath": {
                "type": "string",
                "description": "Custom output path on device (default: /sdcard/window_dump.xml)"
              },
              "asBase64": {
                "type": "boolean",
                "default": false,
                "description": "Return XML content as base64 (default: false)"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "adb_shell",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Shell command to execute on the device"
              },
              "device": {
                "type": "string",
                "description": "Specific device ID (optional)"
              }
            },
            "required": [
              "command"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "adb_install",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "apkPath": {
                "type": "string",
                "description": "Local path to the APK file"
              },
              "device": {
                "type": "string",
                "description": "Specific device ID (optional)"
              }
            },
            "required": [
              "apkPath"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "adb_logcat",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Logcat filter expression (optional)"
              },
              "device": {
                "type": "string",
                "description": "Specific device ID (optional)"
              },
              "lines": {
                "type": "number",
                "default": 50,
                "description": "Number of lines to return (default: 50)"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "adb_pull",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "remotePath": {
                "type": "string",
                "description": "Remote file path on the device"
              },
              "device": {
                "type": "string",
                "description": "Specific device ID (optional)"
              },
              "asBase64": {
                "type": "boolean",
                "default": true,
                "description": "Return file content as base64 (default: true)"
              }
            },
            "required": [
              "remotePath"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "adb_push",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "fileBase64": {
                "type": "string",
                "description": "Base64 encoded file content to push"
              },
              "remotePath": {
                "type": "string",
                "description": "Remote file path on the device"
              },
              "device": {
                "type": "string",
                "description": "Specific device ID (optional)"
              }
            },
            "required": [
              "fileBase64",
              "remotePath"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "dump_image",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "device": {
                "type": "string",
                "description": "Specific device ID (optional)"
              },
              "asBase64": {
                "type": "boolean",
                "default": false,
                "description": "Return image as base64 (default: false)"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"adbPath\": \"\"\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@srmorete/adb-mcp/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"adbPath\": \"\"\n}",
      "python_sdk_url": "https://server.smithery.ai/@srmorete/adb-mcp/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "0643.@srmorete_adb-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 628
  }
}