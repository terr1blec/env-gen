{
  "labels": {
    "analysis": "The MCP Server is designed to manage WordPress hosting on SiteBay through natural language commands. It allows users to create, update, delete, and configure WordPress sites, execute server commands, edit files, and view logs. Additionally, it provides tools for managing site regions, templates, proxies, backups, and team affiliations. The server also includes proxy functionality for integrating with WordPress, Shopify, and PostHog APIs, as well as tools for handling subscriptions and billing through Stripe. The core functionality revolves around cloud infrastructure management and automation for WordPress hosting.",
    "reasoning": "The \"SiteBay WordPress Hosting Manager\" primarily falls under the \"Web Hosting Management\" category as it focuses on WordPress hosting management. The tools provided are primarily for managing websites, servers, and associated configurations. The secondary label \"Cloud Services\" is included because SiteBay deals with cloud infrastructure. Additionally, the \"API Integration\" label is included due to the proxy capabilities for WordPress, Shopify, and PostHog. There isn't a predefined label for the exact nature of the server, so no custom label is needed.",
    "primary_label": "Operating System",
    "secondary_labels": [
      "Cloud Services",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1964,
    "server_name": "SiteBay WordPress Hosting Manager",
    "rank_by_usage": 1965,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@sitebay_sitebay-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@sitebay/sitebay-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1964,
      "name": "SiteBay WordPress Hosting Manager",
      "author": "@sitebay/sitebay-mcp",
      "overview": "Manage your WordPress hosting on SiteBay through natural language commands. Create, update, and delete sites, execute server commands, edit files, and view logs seamlessly. Access hosting regions, templates, and proxy configurations to streamline your SiteBay cloud infrastructure management.",
      "repository_url": "https://github.com/sitebay/sitebay-mcp",
      "homepage": "https://smithery.ai/server/@sitebay/sitebay-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@sitebay_sitebay-mcp.json",
      "tools_count": 23,
      "tools": [
        {
          "name": "sitebay_list_sites",
          "description": "Deploy Server SiteBay WordPress Hosting Manager @sitebay/sitebay-mcp Try in Playground sitebay_list_sites",
          "parameters": []
        },
        {
          "name": "sitebay_get_site",
          "description": "Get detailed information about a specific WordPress site. Args: fqdn: The fully qualified domain name of the site (e.g., \"example.com\") Returns: Detailed site information including status, versions, URLs, and configuration",
          "parameters": []
        },
        {
          "name": "sitebay_create_site",
          "description": "Create a new WordPress site. Args: fqdn: The fully qualified domain name for the new site (e.g., \"myblog.example.com\") wp_title: WordPress site title wp_username: WordPress admin username wp_password: WordPress admin password (should be strong) wp_email: WordPress admin email address region_name: Optional region name for hosting (uses default if not specified) template_id: Optional template ID to use for site creation team_id: Optional team ID to create site under Returns: Success message with new site details and access information",
          "parameters": []
        },
        {
          "name": "sitebay_update_site",
          "description": "Update an existing WordPress site configuration. Args: fqdn: The fully qualified domain name of the site to update wp_title: New WordPress site title wp_username: New WordPress admin username wp_password: New WordPress admin password wp_email: New WordPress admin email php_version: New PHP version (e.g., \"8.1\", \"8.2\", \"8.3\") Returns: Confirmation message with updated settings",
          "parameters": []
        },
        {
          "name": "sitebay_delete_site",
          "description": "Delete a WordPress site permanently. This action cannot be undone. Args: fqdn: The fully qualified domain name of the site to delete confirm: Must be True to actually delete the site (safety check) Returns: Confirmation message or deletion requirements if confirm=False",
          "parameters": []
        },
        {
          "name": "sitebay_site_shell_command",
          "description": "Execute a shell command on a WordPress site. Supports WP-CLI commands, system commands, etc. Args: fqdn: The fully qualified domain name of the site command: The shell command to execute (e.g., \"wp plugin list\", \"ls -la\", \"wp search-replace\") Returns: Command output and execution details",
          "parameters": []
        },
        {
          "name": "sitebay_site_edit_file",
          "description": "Edit a file in the site's wp-content directory. Args: fqdn: The fully qualified domain name of the site file_path: Path to the file relative to wp-content (e.g., \"themes/mytheme/style.css\") content: New content for the file Returns: Success confirmation with file details",
          "parameters": []
        },
        {
          "name": "sitebay_site_get_events",
          "description": "Get recent events for a site (deployments, updates, restores, etc.). Args: fqdn: The fully qualified domain name of the site after_datetime: Optional ISO datetime to filter events after (e.g., \"2024-01-01T00:00:00Z\") limit: Maximum number of events to return (default: 20) Returns: Formatted list of recent site events with timestamps and details",
          "parameters": []
        },
        {
          "name": "sitebay_site_external_path_list",
          "description": "List external path configurations for a site (URL proxying/routing). Args: fqdn: The fully qualified domain name of the site Returns: List of configured external paths with their target URLs and status",
          "parameters": [
            {
              "name": "fqdn",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "sitebay_site_external_path_create",
          "description": "Create an external path configuration to proxy requests to external URLs. Args: fqdn: The fully qualified domain name of the site path: The path on your site (e.g., \"/api\", \"/external\") target_url: The external URL to proxy requests to description: Optional description for this path configuration Returns: Success message with external path details",
          "parameters": []
        },
        {
          "name": "sitebay_list_regions",
          "description": "List all available hosting regions for site deployment. Returns: List of available regions with their details",
          "parameters": []
        },
        {
          "name": "sitebay_list_templates",
          "description": "List all available site templates for quick site creation. Returns: List of available templates with descriptions",
          "parameters": []
        },
        {
          "name": "sitebay_list_teams",
          "description": "List all teams for the authenticated user. Returns: Formatted list of teams with their details and member information",
          "parameters": []
        },
        {
          "name": "sitebay_wordpress_proxy",
          "description": "Proxy requests to a WordPress site's REST API. Args: site_fqdn: The site domain endpoint: WordPress API endpoint (e.g., \"/wp/v2/posts\") method: HTTP method (GET, POST, PUT, DELETE) data: Optional data for POST/PUT requests Returns: WordPress API response",
          "parameters": [
            {
              "name": "WordPress",
              "required": false,
              "type": "string"
            },
            {
              "name": "API",
              "required": false,
              "type": "string"
            },
            {
              "name": "response",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "sitebay_shopify_proxy",
          "description": "Proxy requests to a Shopify Admin API. Args: shop_domain: Shopify shop domain (e.g., \"myshop.myshopify.com\") endpoint: Shopify API endpoint (e.g., \"/admin/api/2023-10/products.json\") access_token: Shopify access token method: HTTP method (GET, POST, PUT, DELETE) data: Optional data for POST/PUT requests Returns: Shopify API response",
          "parameters": []
        },
        {
          "name": "sitebay_posthog_proxy",
          "description": "Proxy POST requests to PostHog analytics API. Args: endpoint: PostHog API endpoint data: Data to send to PostHog api_key: Optional PostHog API key Returns: PostHog API response",
          "parameters": [
            {
              "name": "PostHog",
              "required": false,
              "type": "string"
            },
            {
              "name": "API",
              "required": false,
              "type": "string"
            },
            {
              "name": "response",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "sitebay_staging_create",
          "description": "Create a staging site for testing changes. Args: fqdn: The live site domain staging_subdomain: Optional custom staging subdomain Returns: Staging site creation confirmation",
          "parameters": [
            {
              "name": "Staging",
              "required": false,
              "type": "string"
            },
            {
              "name": "site",
              "required": false,
              "type": "string"
            },
            {
              "name": "creation",
              "required": false,
              "type": "string"
            },
            {
              "name": "confirmation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "sitebay_staging_delete",
          "description": "Delete the staging site. Args: fqdn: The live site domain Returns: Staging deletion confirmation",
          "parameters": [
            {
              "name": "Staging",
              "required": false,
              "type": "string"
            },
            {
              "name": "deletion",
              "required": false,
              "type": "string"
            },
            {
              "name": "confirmation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "sitebay_staging_commit",
          "description": "Commit staging changes to live site (sync staging to live). Args: fqdn: The live site domain Returns: Staging commit confirmation",
          "parameters": [
            {
              "name": "Staging",
              "required": false,
              "type": "string"
            },
            {
              "name": "commit",
              "required": false,
              "type": "string"
            },
            {
              "name": "confirmation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "sitebay_backup_list_commits",
          "description": "List available backup commits for point-in-time restore. Args: fqdn: The site domain number_to_fetch: Number of backup entries to fetch (default: 10) Returns: List of available backup commits",
          "parameters": []
        },
        {
          "name": "sitebay_backup_restore",
          "description": "Restore a site to a previous point in time. Args: fqdn: The site domain commit_id: The backup commit ID to restore from restore_type: Type of restore (\"full\", \"database\", \"files\") Returns: Restore operation confirmation",
          "parameters": [
            {
              "name": "Restore",
              "required": false,
              "type": "string"
            },
            {
              "name": "operation",
              "required": false,
              "type": "string"
            },
            {
              "name": "confirmation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "sitebay_account_affiliates",
          "description": "Get affiliate referral information. Returns: List of users who signed up using your affiliate links",
          "parameters": [
            {
              "name": "Get",
              "required": false,
              "type": "string"
            },
            {
              "name": "affiliate",
              "required": false,
              "type": "string"
            },
            {
              "name": "referral",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "sitebay_account_create_checkout",
          "description": "Create a Stripe checkout session for team billing. Args: plan_name: Plan type (\"starter\", \"pro\", \"enterprise\") interval: Billing interval (\"month\", \"year\") team_id: Optional team ID to purchase for Returns: Stripe checkout URL",
          "parameters": [
            {
              "name": "Stripe",
              "required": false,
              "type": "string"
            },
            {
              "name": "checkout",
              "required": false,
              "type": "string"
            },
            {
              "name": "URL",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@sitebay/sitebay-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "sitebayApiToken",
          "required": true,
          "description": "Your SiteBay API token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@sitebay/sitebay-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1965.@sitebay_sitebay-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1723
  }
}