{
  "labels": {
    "analysis": "The MCP Server serves as an integration layer between AI assistants and Prometheus Alertmanager. Its core functionality allows for querying and managing Alertmanager resources, including alerts, silences, and receivers, greatly simplifying the monitoring and incident management process. The available tools enable CRUD operations (create, read, update, delete) on these resources, which are crucial for alert management workflows. The server also features authentication support and containerized deployment, enhancing security and ease of use.",
    "reasoning": "The primary function of this server is managing alerts and incidents within a monitoring system, which aligns closely with **Operating System** as the tools are designed to manage system operations from an alerting/information management standpoint. The operations on silences and alerts suggest a focus on operational efficiency and system management. Secondary relevance to **Monitoring & Alerting** is added to highlight its specialized role in alert management, even though it's a custom label since this category is not in the predefined list. **API Integration** is added as the server acts as a middleware layer between AI assistants and Alertmanager.",
    "primary_label": "Operating System",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": "Monitoring & Alerting",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2123,
    "server_name": "Prometheus Alertmanager MCP Server",
    "rank_by_usage": 2124,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@ntk148v_alertmanager-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ntk148v/alertmanager-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2123,
      "name": "Prometheus Alertmanager MCP Server",
      "author": "@ntk148v/alertmanager-mcp-server",
      "overview": "Enable AI assistants to programmatically query and manage Prometheus Alertmanager resources such as alerts, silences, and receivers securely. Integrate Alertmanager management into your workflows with support for creating, updating, and deleting silences and alerts. Benefit from authentication support and containerized deployment for easy setup and operation.",
      "repository_url": "https://github.com/ntk148v/alertmanager-mcp-server",
      "homepage": "https://smithery.ai/server/@ntk148v/alertmanager-mcp-server",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ntk148v_alertmanager-mcp-server.json",
      "tools_count": 9,
      "tools": [
        {
          "name": "get_status",
          "description": "Deploy Server Prometheus Alertmanager MCP Server Claim Server @ntk148v/alertmanager-mcp-server Try in Playground",
          "parameters": [
            {
              "name": "get_status",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_receivers",
          "description": "Get list of all receivers (name of notification integrations)",
          "parameters": [
            {
              "name": "get_receivers",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_silences",
          "description": "Get list of all silences",
          "parameters": [
            {
              "name": "get_silences",
              "required": false,
              "type": "string"
            },
            {
              "name": "filter",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "post_silence",
          "description": "Post a new silence or update an existing one",
          "parameters": [
            {
              "name": "post_silence",
              "required": false,
              "type": "string"
            },
            {
              "name": "silence",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_silence",
          "description": "Get a silence by its ID",
          "parameters": [
            {
              "name": "get_silences",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_silence",
          "description": "Delete a silence by its ID",
          "parameters": [
            {
              "name": "delete_silence",
              "required": false,
              "type": "string"
            },
            {
              "name": "silence_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_alerts",
          "description": "Description not available",
          "parameters": [
            {
              "name": "active",
              "required": false,
              "type": "string"
            },
            {
              "name": "filter",
              "required": false,
              "type": "string"
            },
            {
              "name": "silenced",
              "required": false,
              "type": "string"
            },
            {
              "name": "inhibited",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "post_alerts",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Create",
              "required": false,
              "type": "string"
            },
            {
              "name": "new",
              "required": false,
              "type": "string"
            },
            {
              "name": "alerts",
              "required": false,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_alert_groups",
          "description": "Get a list of alert groups",
          "parameters": [
            {
              "name": "active",
              "required": false,
              "type": "string"
            },
            {
              "name": "silenced",
              "required": false,
              "type": "string"
            },
            {
              "name": "inhibited",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ntk148v/alertmanager-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ntk148v/alertmanager-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2124.@ntk148v_alertmanager-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1843
  }
}