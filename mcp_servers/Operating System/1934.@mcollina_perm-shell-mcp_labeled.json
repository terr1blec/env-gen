{
  "labels": {
    "analysis": "The MCP Server \"PermShell\" is primarily designed for executing shell commands securely with explicit permission notifications, ensuring transparency and preventing unauthorized actions. It also provides tools to retrieve detailed system information such as OS, uptime, memory, disk, and CPU usage. The available tools, execute-command and system-info, indicate its core functionality in system interaction and monitoring with safeguards like timeout limits and input sanitization.",
    "reasoning": "The primary label \"Operating System\" is chosen because the server's main functionality revolves around executing system commands and retrieving system informationâ€”activities directly related to operating system operations. The secondary label \"Security & Authentication\" is relevant due to the server's focus on secure command execution and permission notifications, which align with security practices. No custom label is needed as the predefined categories sufficiently cover the server's functionality.",
    "primary_label": "Operating System",
    "secondary_labels": [
      "Security & Authentication"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1933,
    "server_name": "PermShell",
    "rank_by_usage": 1934,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@mcollina_perm-shell-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@mcollina/perm-shell-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "execute-command",
          "description": "Execute a shell command",
          "input_schema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "The shell command to execute"
              },
              "cwd": {
                "type": "string",
                "description": "Directory to run the command in (defaults to system temp directory)"
              },
              "timeout": {
                "type": "number",
                "description": "Timeout in milliseconds after which the process is killed"
              },
              "stdin": {
                "type": "string",
                "description": "Optional input to provide to the command's standard input"
              }
            },
            "required": [
              "command"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "system-info",
          "description": "Get system information",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 2,
      "tool_names": [
        "execute-command",
        "system-info"
      ]
    },
    "server_info_crawled": {
      "id": 1933,
      "name": "PermShell",
      "author": "@mcollina/perm-shell-mcp",
      "overview": "Execute shell commands securely with explicit permission notifications to ensure transparency and prevent unauthorized actions. Retrieve detailed system information including OS, uptime, memory, disk, and CPU. Benefit from safeguards like timeout limits and input sanitization to maintain system integrity while interacting with your environment.",
      "repository_url": "https://github.com/mcollina/perm-shell-mcp",
      "homepage": "https://smithery.ai/server/@mcollina/perm-shell-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@mcollina_perm-shell-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "execute-command",
          "description": "Execute a shell command",
          "input_schema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "The shell command to execute"
              },
              "cwd": {
                "type": "string",
                "description": "Directory to run the command in (defaults to system temp directory)"
              },
              "timeout": {
                "type": "number",
                "description": "Timeout in milliseconds after which the process is killed"
              },
              "stdin": {
                "type": "string",
                "description": "Optional input to provide to the command's standard input"
              }
            },
            "required": [
              "command"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "system-info",
          "description": "Get system information",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@mcollina/perm-shell-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@mcollina/perm-shell-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1934.@mcollina_perm-shell-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1703
  }
}