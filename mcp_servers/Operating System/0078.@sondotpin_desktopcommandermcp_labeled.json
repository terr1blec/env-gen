{
  "labels": {
    "analysis": "The MCP Server \"Desktop Commander\" is primarily a tool for executing terminal commands and managing files with AI assistance. It provides extensive functionality for system administration, file operations, and process management. The server excels in interacting with the operating system through terminal commands, managing files and directories, and searching/text editing file contents. It also includes features for monitoring and controlling running processes, which are essential for tasks like debugging and resource management.",
    "reasoning": "The server's primary functionality aligns most closely with **Operating System** due to its focus on executing commands, managing processes, and handling file operations. **File Management** is also heavily represented, as the server includes many tools specifically for file operations like reading, writing, moving, and searching files. While there are code-related features (like searching code patterns), the tools are more oriented toward system administration rather than full-fledged development. The custom label \"Terminal Automation\" captures the server's unique ability to automate and manage terminal sessions.",
    "primary_label": "Operating System",
    "secondary_labels": [
      "File Management",
      "Operating System"
    ],
    "custom_label": "Terminal Automation",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 77,
    "server_name": "Desktop Commander",
    "rank_by_usage": 78,
    "usage_count": "1,025",
    "original_file": "../crawler/smithery/@sondotpin_desktopcommandermcp.json",
    "mode": "smithery",
    "timestamp": 1751937975,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@sondotpin/desktopcommandermcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "execute_command",
          "description": "Execute a terminal command with timeout. Command will continue running in background if it doesn't complete within timeout.",
          "input_schema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string"
              },
              "timeout_ms": {
                "type": "number"
              }
            },
            "required": [
              "command"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "read_output",
          "description": "Read new output from a running terminal session.",
          "input_schema": {
            "type": "object",
            "properties": {
              "pid": {
                "type": "number"
              }
            },
            "required": [
              "pid"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "force_terminate",
          "description": "Force terminate a running terminal session.",
          "input_schema": {
            "type": "object",
            "properties": {
              "pid": {
                "type": "number"
              }
            },
            "required": [
              "pid"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "list_sessions",
          "description": "List all active terminal sessions.",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "list_processes",
          "description": "List all running processes. Returns process information including PID, command name, CPU usage, and memory usage.",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "kill_process",
          "description": "Terminate a running process by PID. Use with caution as this will forcefully terminate the specified process.",
          "input_schema": {
            "type": "object",
            "properties": {
              "pid": {
                "type": "number"
              }
            },
            "required": [
              "pid"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "block_command",
          "description": "Add a command to the blacklist. Once blocked, the command cannot be executed until unblocked.",
          "input_schema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string"
              }
            },
            "required": [
              "command"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "unblock_command",
          "description": "Remove a command from the blacklist. Once unblocked, the command can be executed normally.",
          "input_schema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string"
              }
            },
            "required": [
              "command"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "list_blocked_commands",
          "description": "List all currently blocked commands.",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "read_file",
          "description": "Read the complete contents of a file from the file system or a URL. When reading from the file system, only works within allowed directories. Can fetch content from URLs when isUrl parameter is set to true. Handles text files normally and image files are returned as viewable images. Recognized image types: PNG, JPEG, GIF, WebP.",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string"
              },
              "isUrl": {
                "type": "boolean",
                "default": false
              }
            },
            "required": [
              "path"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "read_multiple_files",
          "description": "Read the contents of multiple files simultaneously. Each file's content is returned with its path as a reference. Handles text files normally and renders images as viewable content. Recognized image types: PNG, JPEG, GIF, WebP. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.",
          "input_schema": {
            "type": "object",
            "properties": {
              "paths": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "paths"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "write_file",
          "description": "Completely replace file contents. Best for large changes (>20% of file) or when edit_block fails. Use with caution as it will overwrite existing files. Only works within allowed directories.",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string"
              },
              "content": {
                "type": "string"
              }
            },
            "required": [
              "path",
              "content"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_directory",
          "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. Only works within allowed directories.",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string"
              }
            },
            "required": [
              "path"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "list_directory",
          "description": "Get a detailed listing of all files and directories in a specified path. Results distinguish between files and directories with [FILE] and [DIR] prefixes. Only works within allowed directories.",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string"
              }
            },
            "required": [
              "path"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "move_file",
          "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. Both source and destination must be within allowed directories.",
          "input_schema": {
            "type": "object",
            "properties": {
              "source": {
                "type": "string"
              },
              "destination": {
                "type": "string"
              }
            },
            "required": [
              "source",
              "destination"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "search_files",
          "description": "Finds files by name using a case-insensitive substring matching. Searches through all subdirectories from the starting path. Has a default timeout of 30 seconds which can be customized using the timeoutMs parameter. Only searches within allowed directories.",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string"
              },
              "pattern": {
                "type": "string"
              },
              "timeoutMs": {
                "type": "number"
              }
            },
            "required": [
              "path",
              "pattern"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "search_code",
          "description": "Search for text/code patterns within file contents using ripgrep. Fast and powerful search similar to VS Code search functionality. Supports regular expressions, file pattern filtering, and context lines. Has a default timeout of 30 seconds which can be customized. Only searches within allowed directories.",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string"
              },
              "pattern": {
                "type": "string"
              },
              "filePattern": {
                "type": "string"
              },
              "ignoreCase": {
                "type": "boolean"
              },
              "maxResults": {
                "type": "number"
              },
              "includeHidden": {
                "type": "boolean"
              },
              "contextLines": {
                "type": "number"
              },
              "timeoutMs": {
                "type": "number"
              }
            },
            "required": [
              "path",
              "pattern"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_file_info",
          "description": "Retrieve detailed metadata about a file or directory including size, creation time, last modified time, permissions, and type. Only works within allowed directories.",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string"
              }
            },
            "required": [
              "path"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "list_allowed_directories",
          "description": "Returns the list of directories that this server is allowed to access.",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "edit_block",
          "description": "Apply surgical text replacements to files. Best for small changes (<20% of file size). Call repeatedly to change multiple blocks. Will verify changes after application. Format:\nfilepath\n<<<<<<< SEARCH\ncontent to find\n=======\nnew content\n>>>>>>> REPLACE",
          "input_schema": {
            "type": "object",
            "properties": {
              "blockContent": {
                "type": "string"
              }
            },
            "required": [
              "blockContent"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 20,
      "tool_names": [
        "execute_command",
        "read_output",
        "force_terminate",
        "list_sessions",
        "list_processes",
        "kill_process",
        "block_command",
        "unblock_command",
        "list_blocked_commands",
        "read_file",
        "read_multiple_files",
        "write_file",
        "create_directory",
        "list_directory",
        "move_file",
        "search_files",
        "search_code",
        "get_file_info",
        "list_allowed_directories",
        "edit_block"
      ]
    },
    "server_info_crawled": {
      "id": 77,
      "name": "Desktop Commander",
      "author": "@sondotpin/desktopcommandermcp",
      "overview": "Execute terminal commands, manage files, and perform code editing with AI assistance. Streamline your workflow by integrating powerful file operations and process management directly into your coding environment.",
      "repository_url": "https://github.com/sondotpin/DesktopCommanderMCP",
      "homepage": "https://smithery.ai/server/@sondotpin/desktopcommandermcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "1,025",
      "success_rate": "99.82%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@sondotpin_desktopcommandermcp.json",
      "tools_count": 20,
      "tools": [
        {
          "name": "execute_command",
          "description": "Execute a terminal command with timeout. Command will continue running in background if it doesn't complete within timeout.",
          "input_schema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string"
              },
              "timeout_ms": {
                "type": "number"
              }
            },
            "required": [
              "command"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "read_output",
          "description": "Read new output from a running terminal session.",
          "input_schema": {
            "type": "object",
            "properties": {
              "pid": {
                "type": "number"
              }
            },
            "required": [
              "pid"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "force_terminate",
          "description": "Force terminate a running terminal session.",
          "input_schema": {
            "type": "object",
            "properties": {
              "pid": {
                "type": "number"
              }
            },
            "required": [
              "pid"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "list_sessions",
          "description": "List all active terminal sessions.",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "list_processes",
          "description": "List all running processes. Returns process information including PID, command name, CPU usage, and memory usage.",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "kill_process",
          "description": "Terminate a running process by PID. Use with caution as this will forcefully terminate the specified process.",
          "input_schema": {
            "type": "object",
            "properties": {
              "pid": {
                "type": "number"
              }
            },
            "required": [
              "pid"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "block_command",
          "description": "Add a command to the blacklist. Once blocked, the command cannot be executed until unblocked.",
          "input_schema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string"
              }
            },
            "required": [
              "command"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "unblock_command",
          "description": "Remove a command from the blacklist. Once unblocked, the command can be executed normally.",
          "input_schema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string"
              }
            },
            "required": [
              "command"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "list_blocked_commands",
          "description": "List all currently blocked commands.",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "read_file",
          "description": "Read the complete contents of a file from the file system or a URL. When reading from the file system, only works within allowed directories. Can fetch content from URLs when isUrl parameter is set to true. Handles text files normally and image files are returned as viewable images. Recognized image types: PNG, JPEG, GIF, WebP.",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string"
              },
              "isUrl": {
                "type": "boolean",
                "default": false
              }
            },
            "required": [
              "path"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "read_multiple_files",
          "description": "Read the contents of multiple files simultaneously. Each file's content is returned with its path as a reference. Handles text files normally and renders images as viewable content. Recognized image types: PNG, JPEG, GIF, WebP. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.",
          "input_schema": {
            "type": "object",
            "properties": {
              "paths": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "paths"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "write_file",
          "description": "Completely replace file contents. Best for large changes (>20% of file) or when edit_block fails. Use with caution as it will overwrite existing files. Only works within allowed directories.",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string"
              },
              "content": {
                "type": "string"
              }
            },
            "required": [
              "path",
              "content"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_directory",
          "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. Only works within allowed directories.",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string"
              }
            },
            "required": [
              "path"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "list_directory",
          "description": "Get a detailed listing of all files and directories in a specified path. Results distinguish between files and directories with [FILE] and [DIR] prefixes. Only works within allowed directories.",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string"
              }
            },
            "required": [
              "path"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "move_file",
          "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. Both source and destination must be within allowed directories.",
          "input_schema": {
            "type": "object",
            "properties": {
              "source": {
                "type": "string"
              },
              "destination": {
                "type": "string"
              }
            },
            "required": [
              "source",
              "destination"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "search_files",
          "description": "Finds files by name using a case-insensitive substring matching. Searches through all subdirectories from the starting path. Has a default timeout of 30 seconds which can be customized using the timeoutMs parameter. Only searches within allowed directories.",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string"
              },
              "pattern": {
                "type": "string"
              },
              "timeoutMs": {
                "type": "number"
              }
            },
            "required": [
              "path",
              "pattern"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "search_code",
          "description": "Search for text/code patterns within file contents using ripgrep. Fast and powerful search similar to VS Code search functionality. Supports regular expressions, file pattern filtering, and context lines. Has a default timeout of 30 seconds which can be customized. Only searches within allowed directories.",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string"
              },
              "pattern": {
                "type": "string"
              },
              "filePattern": {
                "type": "string"
              },
              "ignoreCase": {
                "type": "boolean"
              },
              "maxResults": {
                "type": "number"
              },
              "includeHidden": {
                "type": "boolean"
              },
              "contextLines": {
                "type": "number"
              },
              "timeoutMs": {
                "type": "number"
              }
            },
            "required": [
              "path",
              "pattern"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_file_info",
          "description": "Retrieve detailed metadata about a file or directory including size, creation time, last modified time, permissions, and type. Only works within allowed directories.",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string"
              }
            },
            "required": [
              "path"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "list_allowed_directories",
          "description": "Returns the list of directories that this server is allowed to access.",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "edit_block",
          "description": "Apply surgical text replacements to files. Best for small changes (<20% of file size). Call repeatedly to change multiple blocks. Will verify changes after application. Format:\nfilepath\n<<<<<<< SEARCH\ncontent to find\n=======\nnew content\n>>>>>>> REPLACE",
          "input_schema": {
            "type": "object",
            "properties": {
              "blockContent": {
                "type": "string"
              }
            },
            "required": [
              "blockContent"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@sondotpin/desktopcommandermcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@sondotpin/desktopcommandermcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0078.@sondotpin_desktopcommandermcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 77
  }
}