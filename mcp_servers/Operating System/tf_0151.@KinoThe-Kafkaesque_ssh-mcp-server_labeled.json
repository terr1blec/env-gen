{
  "labels": {
    "analysis": "The MCP Server primarily provides capabilities for secure remote access and management via SSH. It includes tools for executing commands remotely, managing SSH credentials, and copying files between local and remote systems. The use of a SQLite database for credential persistence and TypeScript support suggests a structured, secure approach to remote system administration.",
    "reasoning": "The primary label \"Operating System\" is chosen because the server's core functionality revolves around remote command execution and file transfer, which are fundamental operating system activities. \"Security & Authentication\" is included as a secondary label because of the emphasis on SSH credential management. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Operating System",
    "secondary_labels": [
      "Security & Authentication"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 150,
    "server_name": "SSH Server",
    "rank_by_usage": 151,
    "usage_count": "386",
    "original_file": "../crawler/smithery/@KinoThe-Kafkaesque_ssh-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@KinoThe-Kafkaesque/ssh-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "ssh_exec",
          "description": "Execute command over SSH using private key file path",
          "input_schema": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string"
              },
              "command": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "privateKeyPath": {
                "type": "string"
              }
            },
            "required": [
              "host",
              "command",
              "username",
              "privateKeyPath"
            ]
          },
          "annotations": null
        },
        {
          "name": "add_credential",
          "description": "Add a new SSH credential with private key file path",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "privateKeyPath": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "host",
              "username",
              "privateKeyPath"
            ]
          },
          "annotations": null
        },
        {
          "name": "list_credentials",
          "description": "List all stored SSH credentials",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "remove_credential",
          "description": "Remove a stored SSH credential",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "required": [
              "name"
            ]
          },
          "annotations": null
        },
        {
          "name": "rsync_copy",
          "description": "Copy files/directories between local and remote server via rsync",
          "input_schema": {
            "type": "object",
            "properties": {
              "credentialName": {
                "type": "string",
                "description": "Name of the stored credential to use"
              },
              "localPath": {
                "type": "string",
                "description": "Path on the local machine"
              },
              "remotePath": {
                "type": "string",
                "description": "Path on the remote server"
              },
              "direction": {
                "type": "string",
                "enum": [
                  "toRemote",
                  "fromRemote"
                ],
                "description": "Direction of copy (toRemote or fromRemote)"
              }
            },
            "required": [
              "credentialName",
              "localPath",
              "remotePath",
              "direction"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 5,
      "tool_names": [
        "ssh_exec",
        "add_credential",
        "list_credentials",
        "remove_credential",
        "rsync_copy"
      ]
    },
    "server_info_crawled": {
      "id": 150,
      "name": "SSH Server",
      "author": "@KinoThe-Kafkaesque/ssh-mcp-server",
      "overview": "Enable secure remote access and command execution through SSH using the Model Context Protocol. Manage SSH credentials effortlessly with a built-in SQLite database for data persistence. Experience a type-safe development environment with TypeScript support.",
      "repository_url": "https://github.com/KinoThe-Kafkaesque/ssh-mcp-server",
      "homepage": "https://smithery.ai/server/@KinoThe-Kafkaesque/ssh-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "386",
      "success_rate": "98.86%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@KinoThe-Kafkaesque_ssh-mcp-server.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "ssh_exec",
          "description": "Execute command over SSH using private key file path",
          "input_schema": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string"
              },
              "command": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "privateKeyPath": {
                "type": "string"
              }
            },
            "required": [
              "host",
              "command",
              "username",
              "privateKeyPath"
            ]
          },
          "annotations": null
        },
        {
          "name": "add_credential",
          "description": "Add a new SSH credential with private key file path",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "privateKeyPath": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "host",
              "username",
              "privateKeyPath"
            ]
          },
          "annotations": null
        },
        {
          "name": "list_credentials",
          "description": "List all stored SSH credentials",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "remove_credential",
          "description": "Remove a stored SSH credential",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "required": [
              "name"
            ]
          },
          "annotations": null
        },
        {
          "name": "rsync_copy",
          "description": "Copy files/directories between local and remote server via rsync",
          "input_schema": {
            "type": "object",
            "properties": {
              "credentialName": {
                "type": "string",
                "description": "Name of the stored credential to use"
              },
              "localPath": {
                "type": "string",
                "description": "Path on the local machine"
              },
              "remotePath": {
                "type": "string",
                "description": "Path on the remote server"
              },
              "direction": {
                "type": "string",
                "enum": [
                  "toRemote",
                  "fromRemote"
                ],
                "description": "Direction of copy (toRemote or fromRemote)"
              }
            },
            "required": [
              "credentialName",
              "localPath",
              "remotePath",
              "direction"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@KinoThe-Kafkaesque/ssh-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@KinoThe-Kafkaesque/ssh-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0151.@KinoThe-Kafkaesque_ssh-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 148
  }
}