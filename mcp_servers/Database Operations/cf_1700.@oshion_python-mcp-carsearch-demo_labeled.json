{
  "labels": {
    "analysis": "The MCP Server serves as a comprehensive car database management system, allowing users to search, retrieve detailed automotive information, and get tailored recommendations based on specific criteria. The primary focus is on automotive data access and integration, enabling applications to seamlessly utilize this information. The \"Optional Settings\" tool suggests basic server management capabilities, possibly including authentication or user-specific configurations.",
    "reasoning": "The primary label \"Database Operations\" was chosen because the server's core functionality revolves around managing and querying a car database. \"API Integration\" is included as a secondary label due to the mention of enhancing applications with automotive data, implying that the server offers some form of integration capabilities. No custom label is needed as the server's functionality fits well within the predefined categories.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1699,
    "server_name": "Car Database Server",
    "rank_by_usage": 1700,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@oshion_python-mcp-carsearch-demo.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@oshion/python-mcp-carsearch-demo/mcp?config=eyJEQl9IT1NUIjogImxvY2FsaG9zdCIsICJEQl9OQU1FIjogImNhcl9kYiIsICJEQl9VU0VSIjogImNhcl9kYiIsICJEQl9QQVNTV09SRCI6ICJ0ZXN0In0=&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "Connection timeout (20 seconds)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1699,
      "name": "Car Database Server",
      "author": "@oshion/python-mcp-carsearch-demo",
      "overview": "Access and interact with a comprehensive car database through a powerful MCP server. Search for cars based on specific criteria, retrieve detailed information, and get recommendations tailored to your preferences. Enhance your applications with seamless integration of automotive data and insights.",
      "repository_url": "https://github.com/oshion/python-mcp-carsearch-demo",
      "homepage": "https://smithery.ai/server/@oshion/python-mcp-carsearch-demo",
      "remote_or_local": "Remote",
      "license": "Not specified",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@oshion_python-mcp-carsearch-demo.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "Optional Settings",
          "description": "Access and manage servers by signing in.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"DB_HOST\": \"localhost\",\n  \"DB_NAME\": \"car_db\",\n  \"DB_USER\": \"car_db\",\n  \"DB_PASSWORD\": \"test\"\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@oshion/python-mcp-carsearch-demo/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"DB_HOST\": \"localhost\",\n  \"DB_NAME\": \"car_db\",\n  \"DB_USER\": \"car_db\",\n  \"DB_PASSWORD\": \"test\"\n}",
      "python_sdk_url": "https://server.smithery.ai/@oshion/python-mcp-carsearch-demo/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "cf_1700.@oshion_python-mcp-carsearch-demo_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1531
  }
}