{
  "labels": {
    "analysis": "The MCP Server primarily facilitates interaction with the Snowflake database, allowing users to manage data operations such as querying, schema inspection, and table management. It supports operations like listing databases, schemas, and tables, executing SELECT queries, and adding data insights. The focus is on enabling efficient data retrieval and manipulation in a secure and customized manner.",
    "reasoning": "The primary label \"Database Operations\" was chosen because the server's core functionality revolves around executing SQL queries, managing tables, and accessing schema details, which are quintessential tasks in database management. The inclusion of \"Data Analysis & Processing\" as a secondary label is justified by its capability to run queries and surface data insights, which are foundational to data analysis. The secondary label \"Memory Management\" is somewhat relevant due to the \"append_insight\" tool, which suggests some form of note-taking or knowledge storage.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Data Analysis & Processing",
      "Memory Management"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1421,
    "server_name": "Snowflake Database Interaction Server",
    "rank_by_usage": 1422,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@rbucks_mcp-snowflake-server2.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@rbucks/mcp-snowflake-server2/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1421,
      "name": "Snowflake Database Interaction Server",
      "author": "@rbucks/mcp-snowflake-server2",
      "overview": "Enable seamless interaction with your Snowflake database by running SQL queries and accessing schema insights. Query data, manage tables, and aggregate data insights dynamically to enhance your data workflows. Securely control write operations and customize resource prefetching for tailored database context exposure.",
      "repository_url": "https://github.com/rbucks/mcp-snowflake-server",
      "homepage": "https://smithery.ai/server/@rbucks/mcp-snowflake-server2",
      "remote_or_local": "Remote",
      "license": "GPL-3.0",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@rbucks_mcp-snowflake-server2.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "list_databases",
          "description": "Deploy Server Snowflake Database Interaction Server @rbucks/mcp-snowflake-server2 Try in Playground list_databases",
          "parameters": [
            {
              "name": "list_databases",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_schemas",
          "description": "List all schemas in a database",
          "parameters": [
            {
              "name": "list_schemas",
              "required": false,
              "type": "string"
            },
            {
              "name": "database",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_tables",
          "description": "List all tables in a specific database and schema",
          "parameters": [
            {
              "name": "schema",
              "required": true,
              "type": "string"
            },
            {
              "name": "database",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "describe_table",
          "description": "Get the schema information for a specific table",
          "parameters": [
            {
              "name": "describe_table",
              "required": false,
              "type": "string"
            },
            {
              "name": "table_name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "read_query",
          "description": "Execute a SELECT query.",
          "parameters": [
            {
              "name": "read_query",
              "required": false,
              "type": "string"
            },
            {
              "name": "Execute",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "SELECT",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "append_insight",
          "description": "Add a data insight to the memo",
          "parameters": [
            {
              "name": "append_insight",
              "required": false,
              "type": "string"
            },
            {
              "name": "insight",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@rbucks/mcp-snowflake-server2/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@rbucks/mcp-snowflake-server2/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1422.@rbucks_mcp-snowflake-server2_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1325
  }
}