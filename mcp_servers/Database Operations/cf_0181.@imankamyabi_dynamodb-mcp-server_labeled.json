{
  "labels": {
    "analysis": "The DynamoDB Server is specifically designed for managing Amazon DynamoDB resources. It provides a suite of tools for table management, including creation, capacity adjustments, and data manipulation (insert, update, query, scan). The server also supports indexing operations (global and local secondary indexes) and table metadata retrieval. Its primary use cases involve database operations, data querying, and DynamoDB-specific administration.",
    "reasoning": "The primary label \"Database Operations\" was chosen because the server's tools directly handle DynamoDB table management, CRUD operations, and querying capabilities. \"Data Analysis & Processing\" is selected as a secondary label due to the server's ability to retrieve, query, and scan data, which aligns with data analysis use cases. \"Data Analysis & Processing\" is relevant due to the querying and scanning capabilities that enable data extraction and analysis.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 180,
    "server_name": "DynamoDB Server",
    "rank_by_usage": 181,
    "usage_count": "261",
    "original_file": "../crawler/smithery/@imankamyabi_dynamodb-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@imankamyabi/dynamodb-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 180,
      "name": "DynamoDB Server",
      "author": "@imankamyabi/dynamodb-mcp-server",
      "overview": "Manage Amazon DynamoDB resources with table and capacity management tools.",
      "repository_url": "https://github.com/imankamyabi/dynamodb-mcp-server",
      "homepage": "https://smithery.ai/server/@imankamyabi/dynamodb-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "261",
      "success_rate": "99.65%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@imankamyabi_dynamodb-mcp-server.json",
      "tools_count": 12,
      "tools": [
        {
          "name": "create_table",
          "description": "Deploy Server DynamoDB Server Claim Server @imankamyabi/dynamodb-mcp-server Try in Playground create_table",
          "parameters": [
            {
              "name": "create_table",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_capacity",
          "description": "Updates the provisioned capacity of a table",
          "parameters": [
            {
              "name": "update_capacity",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "put_item",
          "description": "Inserts or replaces an item in a table",
          "parameters": [
            {
              "name": "item",
              "required": true,
              "type": "string"
            },
            {
              "name": "tableName",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_item",
          "description": "Retrieves an item from a table by its primary key",
          "parameters": [
            {
              "name": "key",
              "required": true,
              "type": "string"
            },
            {
              "name": "tableName",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "query_table",
          "description": "Queries a table using key conditions and optional filters",
          "parameters": [
            {
              "name": "tableName",
              "required": true,
              "type": "string"
            },
            {
              "name": "filterExpression",
              "required": false,
              "type": "string"
            },
            {
              "name": "keyConditionExpression",
              "required": true,
              "type": "string"
            },
            {
              "name": "expressionAttributeNames",
              "required": false,
              "type": "string"
            },
            {
              "name": "expressionAttributeValues",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "scan_table",
          "description": "Scans an entire table with optional filters",
          "parameters": [
            {
              "name": "scan_table",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "describe_table",
          "description": "Gets detailed information about a DynamoDB table",
          "parameters": [
            {
              "name": "describe_table",
              "required": false,
              "type": "string"
            },
            {
              "name": "tableName",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_tables",
          "description": "Lists all DynamoDB tables in the account",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "exclusiveStartTableName",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_gsi",
          "description": "Creates a global secondary index on a table",
          "parameters": [
            {
              "name": "create_gsi",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_gsi",
          "description": "Updates the provisioned capacity of a global secondary index",
          "parameters": [
            {
              "name": "update_gsi",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_lsi",
          "description": "Creates a local secondary index on a table (must be done during table creation)",
          "parameters": [
            {
              "name": "create_lsi",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_item",
          "description": "Updates specific attributes of an item in a table",
          "parameters": [
            {
              "name": "update_item",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@imankamyabi/dynamodb-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "awsAccessKeyId",
          "required": true,
          "description": "AWS Access Key ID"
        },
        {
          "name": "awsSecretAccessKey",
          "required": true,
          "description": "AWS Secret Access Key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@imankamyabi/dynamodb-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0181.@imankamyabi_dynamodb-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 177
  }
}