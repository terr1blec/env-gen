{
  "labels": {
    "analysis": "The OpenPyXL Excel MCP Server serves as an intermediary that allows AI clients like Claude to directly query and manipulate Excel file data without manual handling. It provides tools for reading cell values, searching through ranges, and navigating worksheets, effectively exposing spreadsheet content as structured data that can be processed by LLMs or other applications. This facilitates automated data analysis, reporting, and integration into AI-driven workflows.",
    "reasoning": "The primary label \"Database Operations\" was chosen because the server fundamentally enables query-like interactions with Excel data, similar to how one would interact with a database. The secondary \"Data Analysis & Processing\" label reflects the analytical capabilities enabled by the querying functionality. While spreadsheet data could technically fall under \"File Management,\" the focused querying nature aligns better with database operations. No custom label is needed as the predefined categories cover the core functionality effectively.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 959,
    "server_name": "OpenPyXL Excel MCP Server",
    "rank_by_usage": 960,
    "usage_count": "3",
    "original_file": "../crawler/smithery/@jonemo_openpyxl-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@jonemo/openpyxl-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_cell_details",
          "description": "",
          "input_schema": {
            "properties": {
              "filepath": {
                "title": "Filepath",
                "type": "string"
              },
              "sheet_name": {
                "title": "Sheet Name",
                "type": "string"
              },
              "cell_name": {
                "title": "Cell Name",
                "type": "string"
              }
            },
            "required": [
              "filepath",
              "sheet_name",
              "cell_name"
            ],
            "title": "get_cell_detailsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_cell_value",
          "description": "",
          "input_schema": {
            "properties": {
              "filepath": {
                "title": "Filepath",
                "type": "string"
              },
              "sheet_name": {
                "title": "Sheet Name",
                "type": "string"
              },
              "cell_name": {
                "title": "Cell Name",
                "type": "string"
              }
            },
            "required": [
              "filepath",
              "sheet_name",
              "cell_name"
            ],
            "title": "get_cell_valueArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_values_of_cell_range",
          "description": "",
          "input_schema": {
            "properties": {
              "filepath": {
                "title": "Filepath",
                "type": "string"
              },
              "sheet_name": {
                "title": "Sheet Name",
                "type": "string"
              },
              "top_left_cell": {
                "title": "Top Left Cell",
                "type": "string"
              },
              "bottom_right_cell": {
                "title": "Bottom Right Cell",
                "type": "string"
              }
            },
            "required": [
              "filepath",
              "sheet_name",
              "top_left_cell",
              "bottom_right_cell"
            ],
            "title": "get_values_of_cell_rangeArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_content_of_cell_list",
          "description": "",
          "input_schema": {
            "properties": {
              "filepath": {
                "title": "Filepath",
                "type": "string"
              },
              "sheet_name": {
                "title": "Sheet Name",
                "type": "string"
              },
              "cell_name_list": {
                "items": {
                  "type": "string"
                },
                "title": "Cell Name List",
                "type": "array"
              }
            },
            "required": [
              "filepath",
              "sheet_name",
              "cell_name_list"
            ],
            "title": "get_content_of_cell_listArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_in_cell_range",
          "description": "",
          "input_schema": {
            "properties": {
              "filepath": {
                "title": "Filepath",
                "type": "string"
              },
              "sheet_name": {
                "title": "Sheet Name",
                "type": "string"
              },
              "top_left_cell": {
                "title": "Top Left Cell",
                "type": "string"
              },
              "bottom_right_cell": {
                "title": "Bottom Right Cell",
                "type": "string"
              },
              "search_string": {
                "title": "Search String",
                "type": "string"
              },
              "exact_match": {
                "default": false,
                "title": "Exact Match",
                "type": "boolean"
              }
            },
            "required": [
              "filepath",
              "sheet_name",
              "top_left_cell",
              "bottom_right_cell",
              "search_string"
            ],
            "title": "search_in_cell_rangeArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_list_of_sheets",
          "description": "",
          "input_schema": {
            "properties": {
              "filepath": {
                "title": "Filepath",
                "type": "string"
              }
            },
            "required": [
              "filepath"
            ],
            "title": "get_list_of_sheetsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 6,
      "tool_names": [
        "get_cell_details",
        "get_cell_value",
        "get_values_of_cell_range",
        "get_content_of_cell_list",
        "search_in_cell_range",
        "get_list_of_sheets"
      ]
    },
    "server_info_crawled": {
      "id": 959,
      "name": "OpenPyXL Excel MCP Server",
      "author": "@jonemo/openpyxl-mcp-server",
      "overview": "Expose Excel file data through a Model Context Protocol server to enable LLM clients like Claude to query and analyze spreadsheet contents. Facilitate seamless integration of Excel data into AI workflows for enhanced data-driven insights. Simplify access to Excel data without manual file handling or parsing.",
      "repository_url": "https://github.com/jonemo/openpyxl-mcp-server",
      "homepage": "https://smithery.ai/server/@jonemo/openpyxl-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "3",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@jonemo_openpyxl-mcp-server.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "get_cell_details",
          "description": "",
          "input_schema": {
            "properties": {
              "filepath": {
                "title": "Filepath",
                "type": "string"
              },
              "sheet_name": {
                "title": "Sheet Name",
                "type": "string"
              },
              "cell_name": {
                "title": "Cell Name",
                "type": "string"
              }
            },
            "required": [
              "filepath",
              "sheet_name",
              "cell_name"
            ],
            "title": "get_cell_detailsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_cell_value",
          "description": "",
          "input_schema": {
            "properties": {
              "filepath": {
                "title": "Filepath",
                "type": "string"
              },
              "sheet_name": {
                "title": "Sheet Name",
                "type": "string"
              },
              "cell_name": {
                "title": "Cell Name",
                "type": "string"
              }
            },
            "required": [
              "filepath",
              "sheet_name",
              "cell_name"
            ],
            "title": "get_cell_valueArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_values_of_cell_range",
          "description": "",
          "input_schema": {
            "properties": {
              "filepath": {
                "title": "Filepath",
                "type": "string"
              },
              "sheet_name": {
                "title": "Sheet Name",
                "type": "string"
              },
              "top_left_cell": {
                "title": "Top Left Cell",
                "type": "string"
              },
              "bottom_right_cell": {
                "title": "Bottom Right Cell",
                "type": "string"
              }
            },
            "required": [
              "filepath",
              "sheet_name",
              "top_left_cell",
              "bottom_right_cell"
            ],
            "title": "get_values_of_cell_rangeArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_content_of_cell_list",
          "description": "",
          "input_schema": {
            "properties": {
              "filepath": {
                "title": "Filepath",
                "type": "string"
              },
              "sheet_name": {
                "title": "Sheet Name",
                "type": "string"
              },
              "cell_name_list": {
                "items": {
                  "type": "string"
                },
                "title": "Cell Name List",
                "type": "array"
              }
            },
            "required": [
              "filepath",
              "sheet_name",
              "cell_name_list"
            ],
            "title": "get_content_of_cell_listArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_in_cell_range",
          "description": "",
          "input_schema": {
            "properties": {
              "filepath": {
                "title": "Filepath",
                "type": "string"
              },
              "sheet_name": {
                "title": "Sheet Name",
                "type": "string"
              },
              "top_left_cell": {
                "title": "Top Left Cell",
                "type": "string"
              },
              "bottom_right_cell": {
                "title": "Bottom Right Cell",
                "type": "string"
              },
              "search_string": {
                "title": "Search String",
                "type": "string"
              },
              "exact_match": {
                "default": false,
                "title": "Exact Match",
                "type": "boolean"
              }
            },
            "required": [
              "filepath",
              "sheet_name",
              "top_left_cell",
              "bottom_right_cell",
              "search_string"
            ],
            "title": "search_in_cell_rangeArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_list_of_sheets",
          "description": "",
          "input_schema": {
            "properties": {
              "filepath": {
                "title": "Filepath",
                "type": "string"
              }
            },
            "required": [
              "filepath"
            ],
            "title": "get_list_of_sheetsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@jonemo/openpyxl-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@jonemo/openpyxl-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0960.@jonemo_openpyxl-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 938
  }
}