{
  "labels": {
    "analysis": "The MCP Server \"Metabase Integration Server\" is designed to facilitate interaction with Metabase, a popular business intelligence and data visualization tool. Its core functionality revolves around accessing, executing, and retrieving data from Metabase dashboards and queries. The available tools allow users to list dashboards, cards (questions), databases, execute queries (both pre-defined cards and raw SQL), and retrieve detailed information from dashboards. This server enhances AI assistant capabilities by extending their ability to interact with BI data sources directly.",
    "reasoning": "The primary label \"Database Operations\" is chosen because the server's main function is to interface with databases through Metabase, executing queries and retrieving results. \"Data Analysis & Processing\" is a secondary label as the tool supports executing analytical queries and retrieving processed data. There's no need for a custom label as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1784,
    "server_name": "Metabase Integration Server",
    "rank_by_usage": 1785,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@imlewc_metabase-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@imlewc/metabase-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1784,
      "name": "Metabase Integration Server",
      "author": "@imlewc/metabase-server",
      "overview": "Interact with Metabase seamlessly. Access dashboards, execute queries, and retrieve data directly from your Metabase instance, enhancing your AI assistant's capabilities.",
      "repository_url": "https://github.com/imlewc/metabase-server",
      "homepage": "https://smithery.ai/server/@imlewc/metabase-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@imlewc_metabase-server.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "list_dashboards",
          "description": "Deploy Server Metabase Integration Server @imlewc/metabase-server Try in Playground list_dashboards",
          "parameters": [
            {
              "name": "list_dashboards",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_cards",
          "description": "List all questions/cards in Metabase",
          "parameters": [
            {
              "name": "list_cards",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_databases",
          "description": "List all databases in Metabase",
          "parameters": [
            {
              "name": "list_databases",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "execute_card",
          "description": "Execute a Metabase question/card and get results",
          "parameters": [
            {
              "name": "card_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "parameters",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_dashboard_cards",
          "description": "Get all cards in a dashboard",
          "parameters": [
            {
              "name": "get_dashboard_cards",
              "required": false,
              "type": "string"
            },
            {
              "name": "dashboard_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "execute_query",
          "description": "Execute a SQL query against a Metabase database",
          "parameters": [
            {
              "name": "execute_query",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@imlewc/metabase-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@imlewc/metabase-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1785.@imlewc_metabase-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1592
  }
}