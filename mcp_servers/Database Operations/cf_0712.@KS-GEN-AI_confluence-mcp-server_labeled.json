{
  "labels": {
    "analysis": "The MCP Server is designed to interact with Confluence, providing tools to execute CQL queries and retrieve page content. This server primarily enhances workflows by integrating Confluence data directly into applications, allowing for seamless retrieval and manipulation of Confluence's information. The tools enable users to perform searches and access specific page content programmatically, which is useful for data extraction, content management, and integration tasks.",
    "reasoning": "The primary label is Database Operations because the server focuses on querying (CQL) and retrieving data from Confluence, which aligns with data querying and management functionalities. The secondary labels include API Integration due to the server's role in providing programmatic access to Confluence's data, and Content Creation for its ability to retrieve and potentially repurpose Confluence content in applications. No custom label is needed as the predefined categories adequately cover the server's functionalities.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "API Integration",
      "Content Creation"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 711,
    "server_name": "Confluence Communication Server",
    "rank_by_usage": 712,
    "usage_count": "11",
    "original_file": "../crawler/smithery/@KS-GEN-AI_confluence-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@KS-GEN-AI/confluence-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 711,
      "name": "Confluence Communication Server",
      "author": "@KS-GEN-AI/confluence-mcp-server",
      "overview": "Interact with Confluence to execute CQL queries and retrieve page content seamlessly. Enhance your workflow by integrating Confluence data directly into your applications. Simplify your Confluence interactions with powerful tools designed for efficiency.",
      "repository_url": "https://github.com/KS-GEN-AI/confluence-mcp-server",
      "homepage": "https://smithery.ai/server/@KS-GEN-AI/confluence-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "11",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@KS-GEN-AI_confluence-mcp-server.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "execute_cql_search",
          "description": "Deploy Server Confluence Communication Server Claim Server @KS-GEN-AI/confluence-mcp-server Try in Playground execute_cql_search",
          "parameters": [
            {
              "name": "cql",
              "required": true,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_page_content",
          "description": "Get the content of a Confluence page",
          "parameters": [
            {
              "name": "get_page_content",
              "required": false,
              "type": "string"
            },
            {
              "name": "pageId",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@KS-GEN-AI/confluence-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "confluenceApiKey",
          "required": true,
          "description": "API key or token for Confluence authentication"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@KS-GEN-AI/confluence-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0712.@KS-GEN-AI_confluence-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 695
  }
}