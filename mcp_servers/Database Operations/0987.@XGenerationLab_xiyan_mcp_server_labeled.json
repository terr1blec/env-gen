{
  "labels": {
    "analysis": "The MCP Server (XiYan) is primarily designed to enable natural language queries to databases, allowing users to interact with MySQL and PostgreSQL databases through advanced text-to-SQL techniques. It simplifies database operations by translating human-readable queries into executable SQL commands, supporting both cloud and local modes. The available tool enables fetching data through natural language input, making it particularly useful for non-technical users or applications requiring seamless database interaction without manual SQL knowledge.",
    "reasoning": "The primary label \"Database Operations\" was chosen because the server's core functionality revolves around database query execution using natural language. Secondary labels like \"Web Search & Research\" and \"AI/ML Tools\" are included because it aids in research by simplifying data retrieval and leverages AI for text-to-SQL conversion. No custom label is needed as the predefined categories adequately cover the server's capabilities.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Web Search & Research",
      "AI/ML Tools"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 986,
    "server_name": "XiYan MCP Server",
    "rank_by_usage": 987,
    "usage_count": "2",
    "original_file": "../crawler/smithery/@XGenerationLab_xiyan_mcp_server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@XGenerationLab/xiyan_mcp_server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_data",
          "description": "Fetch the data from database through a natural language query\n\n    Args:\n        query: The query in natual language\n    ",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              }
            },
            "required": [
              "query"
            ],
            "title": "get_dataArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get_data"
      ]
    },
    "server_info_crawled": {
      "id": 986,
      "name": "XiYan MCP Server",
      "author": "@XGenerationLab/xiyan_mcp_server",
      "overview": "Enhance your AI assistants by enabling natural language queries to databases, allowing you to effortlessly fetch data, list tables, and read contents using advanced text-to-SQL techniques. Whether operating in cloud mode or pure local mode, enjoy seamless support for both MySQL and PostgreSQL databases. Elevate your database interaction capabilities to a new level of sophistication.",
      "repository_url": "https://github.com/XGenerationLab/xiyan_mcp_server",
      "homepage": "https://smithery.ai/server/@XGenerationLab/xiyan_mcp_server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "2",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@XGenerationLab_xiyan_mcp_server.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_data",
          "description": "Fetch the data from database through a natural language query\n\n    Args:\n        query: The query in natual language\n    ",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              }
            },
            "required": [
              "query"
            ],
            "title": "get_dataArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@XGenerationLab/xiyan_mcp_server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@XGenerationLab/xiyan_mcp_server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0987.@XGenerationLab_xiyan_mcp_server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 965
  }
}