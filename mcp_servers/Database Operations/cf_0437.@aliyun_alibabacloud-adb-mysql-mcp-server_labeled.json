{
  "labels": {
    "analysis": "The MCP Server described is focused on enabling seamless interaction between AI Agents and MySQL databases. It provides tools to execute SQL queries, retrieve query plans, and obtain execution details with runtime statistics. This suggests it's primarily a tool for managing and querying databases using SQL operations, with additional support for query optimization analysis.",
    "reasoning": "The primary functionality revolves around executing SQL operations and analyzing query performance, which clearly falls under database operations. The secondary label for data analysis and processing is appropriate because of the tools that analyze query plans and execution details. No custom label is needed as the predefined labels adequately cover the server's functionality.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 436,
    "server_name": "Adb MySQL MCP Server",
    "rank_by_usage": 437,
    "usage_count": "48",
    "original_file": "../crawler/smithery/@aliyun_alibabacloud-adb-mysql-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@aliyun/alibabacloud-adb-mysql-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 436,
      "name": "Adb MySQL MCP Server",
      "author": "@aliyun/alibabacloud-adb-mysql-mcp-server",
      "overview": "Facilitate seamless communication between AI Agents and Adb MySQL databases. Retrieve database metadata and execute SQL operations effortlessly, enhancing your AI capabilities with real-time data access.",
      "repository_url": "https://github.com/aliyun/alibabacloud-adb-mysql-mcp-server",
      "homepage": "https://smithery.ai/server/@aliyun/alibabacloud-adb-mysql-mcp-server",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "48",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@aliyun_alibabacloud-adb-mysql-mcp-server.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "execute_sql",
          "description": "Deploy Server Adb MySQL MCP Server Claim Server @aliyun/alibabacloud-adb-mysql-mcp-server Try in Playground execute_sql",
          "parameters": [
            {
              "name": "execute_sql",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_query_plan",
          "description": "Get the query plan for a SQL query",
          "parameters": [
            {
              "name": "get_query_plan",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_execution_plan",
          "description": "Get the actual execution plan with runtime statistics for a SQL query",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@aliyun/alibabacloud-adb-mysql-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@aliyun/alibabacloud-adb-mysql-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0437.@aliyun_alibabacloud-adb-mysql-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 431
  }
}