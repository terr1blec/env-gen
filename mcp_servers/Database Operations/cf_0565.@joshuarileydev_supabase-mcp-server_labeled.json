{
  "labels": {
    "analysis": "The MCP Supabase Server is designed to interact with the Supabase Management API, providing tools to manage Supabase projects and organizations. Its core functionality includes creating, retrieving, and deleting projects and organizations, as well as managing API keys. This server primarily serves as an interface for administering Supabase resources programmatically.",
    "reasoning": "The primary label is chosen because the server's functionality revolves around managing database projects, which is a database operations use case. The secondary labels reflect the API integration aspect and the broader system management capabilities.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "API Integration",
      "Operating System"
    ],
    "custom_label": "Supabase Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 564,
    "server_name": "Supabase Server",
    "rank_by_usage": 565,
    "usage_count": "21",
    "original_file": "../crawler/smithery/@joshuarileydev_supabase-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@joshuarileydev/supabase-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 564,
      "name": "Supabase Server",
      "author": "@joshuarileydev/supabase-mcp-server",
      "overview": "An MCP server providing access to the Supabase Management API for managing Supabase projects and organizations.",
      "repository_url": "https://github.com/JoshuaRileyDev/supabase-mcp-server",
      "homepage": "https://smithery.ai/server/@joshuarileydev/supabase-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "21",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@joshuarileydev_supabase-mcp-server.json",
      "tools_count": 8,
      "tools": [
        {
          "name": "list_projects",
          "description": "Deploy Server Supabase Server Claim Server @joshuarileydev/supabase-mcp-server Try in Playground list_projects",
          "parameters": [
            {
              "name": "list_projects",
              "required": false,
              "type": "string"
            },
            {
              "name": "List",
              "required": false,
              "type": "string"
            },
            {
              "name": "all",
              "required": false,
              "type": "string"
            },
            {
              "name": "Supabase",
              "required": false,
              "type": "string"
            },
            {
              "name": "projects",
              "required": false,
              "type": "string"
            },
            {
              "name": "ref",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_project",
          "description": "Get details of a specific Supabase project",
          "parameters": [
            {
              "name": "get_project",
              "required": false,
              "type": "string"
            },
            {
              "name": "ref",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_project",
          "description": "Create a new Supabase project",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "plan",
              "required": false,
              "type": "string"
            },
            {
              "name": "region",
              "required": true,
              "type": "string"
            },
            {
              "name": "db_pass",
              "required": true,
              "type": "string"
            },
            {
              "name": "organization_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_project",
          "description": "Delete a Supabase project",
          "parameters": [
            {
              "name": "delete_project",
              "required": false,
              "type": "string"
            },
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "Supabase",
              "required": false,
              "type": "string"
            },
            {
              "name": "project",
              "required": false,
              "type": "string"
            },
            {
              "name": "ref",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_organizations",
          "description": "List all organizations",
          "parameters": [
            {
              "name": "list_organizations",
              "required": false,
              "type": "string"
            },
            {
              "name": "List",
              "required": false,
              "type": "string"
            },
            {
              "name": "all",
              "required": false,
              "type": "string"
            },
            {
              "name": "organizations",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_organization",
          "description": "Get details of a specific organization",
          "parameters": [
            {
              "name": "get_organization",
              "required": false,
              "type": "string"
            },
            {
              "name": "slug",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_organization",
          "description": "Create a new organization",
          "parameters": [
            {
              "name": "Create",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "new",
              "required": false,
              "type": "string"
            },
            {
              "name": "organization",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "billing_email",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_project_api_keys",
          "description": "Get API keys for a specific Supabase project",
          "parameters": [
            {
              "name": "ref",
              "required": true,
              "type": "string"
            },
            {
              "name": "name",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@joshuarileydev/supabase-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "supabaseApiKey",
          "required": true,
          "description": "Supabase API key used for authentication with the Supabase API."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@joshuarileydev/supabase-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0565.@joshuarileydev_supabase-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 553
  }
}