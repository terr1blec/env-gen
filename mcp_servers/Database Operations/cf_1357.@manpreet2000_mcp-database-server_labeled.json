{
  "labels": {
    "analysis": "The MCP Server described is a Database Server designed to facilitate natural language interactions with databases. It allows users to perform essential database operations such as querying, inserting, and deleting documents, and mentions planned support for multiple databases. The available tools indicate core database operations including collection retrieval, document insertion, deletion, and aggregation, all suggesting a focus on database management and interaction.",
    "reasoning": "The primary functionality of the server clearly aligns with database operations and management, making \"Database Operations\" the most appropriate primary label. The ability to handle various database interactions suggests versatility in database management, which justifies selecting this as the main category. While it has elements of data processing via aggregation, the core focus remains on database operations rather than broader data analysis.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1356,
    "server_name": "Database Server",
    "rank_by_usage": 1357,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@manpreet2000_mcp-database-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@manpreet2000/mcp-database-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1356,
      "name": "Database Server",
      "author": "@manpreet2000/mcp-database-server",
      "overview": "Enable seamless interaction with databases using natural language. Perform operations like querying, inserting, and deleting documents effortlessly. Future support for multiple databases enhances versatility and functionality.",
      "repository_url": "https://github.com/manpreet2000/mcp-database-server",
      "homepage": "https://smithery.ai/server/@manpreet2000/mcp-database-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@manpreet2000_mcp-database-server.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "getCollections",
          "description": "Deploy Server Database Server Claim Server @manpreet2000/mcp-database-server Try in Playground getCollections",
          "parameters": [
            {
              "name": "getCollections",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getCollection",
          "description": "Deploy Server Database Server Claim Server @manpreet2000/mcp-database-server Try in Playground getCollections",
          "parameters": [
            {
              "name": "getCollections",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "insertOne",
          "description": "Description not available",
          "parameters": [
            {
              "name": "insertOne",
              "required": false,
              "type": "string"
            },
            {
              "name": "document",
              "required": true,
              "type": "string"
            },
            {
              "name": "collectionName",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "deleteOne",
          "description": "Description not available",
          "parameters": [
            {
              "name": "deleteOne",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "collectionName",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "aggregate",
          "description": "Description not available",
          "parameters": [
            {
              "name": "options",
              "required": false,
              "type": "string"
            },
            {
              "name": "pipeline",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "collectionName",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@manpreet2000/mcp-database-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@manpreet2000/mcp-database-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1357.@manpreet2000_mcp-database-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1278
  }
}