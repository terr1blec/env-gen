{
  "labels": {
    "analysis": "The MCP Server is designed to facilitate interactions with AnalyticDB for MySQL databases by enabling AI agents to execute SQL operations, retrieve metadata, and analyze query plans. Its tools allow for efficient database querying and management through a standardized interface, making it particularly useful for integrating AI workflows with database operations.",
    "reasoning": "The primary label is chosen because the server's main functionality revolves around executing SQL operations and managing database queries. Secondary labels are included to highlight its role in AI workflow integration and data analysis capabilities. No custom label is needed as the predefined categories sufficiently cover the server's functionality.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Data Analysis & Processing",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 912,
    "server_name": "AnalyticDB for MySQL Server",
    "rank_by_usage": 913,
    "usage_count": "4",
    "original_file": "../crawler/smithery/@yangruoyuluke_alibabacloud-adb-mysql-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@yangruoyuluke/alibabacloud-adb-mysql-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 912,
      "name": "AnalyticDB for MySQL Server",
      "author": "@yangruoyuluke/alibabacloud-adb-mysql-mcp-server",
      "overview": "Enable AI Agents to seamlessly interact with AnalyticDB for MySQL databases by retrieving metadata and executing SQL operations. Facilitate efficient database querying and management through a standardized interface. Simplify integration of AI workflows with AnalyticDB for MySQL clusters.",
      "repository_url": "https://github.com/yangruoyuluke/alibabacloud-adb-mysql-mcp-server",
      "homepage": "https://smithery.ai/server/@yangruoyuluke/alibabacloud-adb-mysql-mcp-server",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "4",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@yangruoyuluke_alibabacloud-adb-mysql-mcp-server.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "execute_sql",
          "description": "Deploy Server AnalyticDB for MySQL Server @yangruoyuluke/alibabacloud-adb-mysql-mcp-server Try in Playground execute_sql",
          "parameters": [
            {
              "name": "execute_sql",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_query_plan",
          "description": "Get the query plan for a SQL query",
          "parameters": [
            {
              "name": "get_query_plan",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_execution_plan",
          "description": "Get the actual execution plan with runtime statistics for a SQL query",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@yangruoyuluke/alibabacloud-adb-mysql-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@yangruoyuluke/alibabacloud-adb-mysql-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0913.@yangruoyuluke_alibabacloud-adb-mysql-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 893
  }
}