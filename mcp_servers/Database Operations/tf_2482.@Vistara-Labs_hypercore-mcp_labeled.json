{
  "labels": {
    "analysis": "The MCP Server is designed to facilitate interaction with the Hypercore network, which is a decentralized data streaming platform. Its core functionality revolves around managing and accessing containers (or data streams) within the Hypercore ecosystem. The available tools allow users to list existing containers and spawn new ones, indicating a focus on container/lifecycle management within a decentralized infrastructure. This server simplifies integration with Hypercore, enabling LLM applications to leverage dynamic, decentralized data streams for enhanced context and capabilities.",
    "reasoning": "The primary label \"Decentralized Data Management\" was chosen because the server's core functionality is centered around managing and accessing data streams within a decentralized network. While \"API Integration\" is relevant due to its standardized protocol, the decentralized aspect is more fundamental. No predefined category perfectly matches the Hypercore-specific functionality, so a custom label was created.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": "Hypercore Network Integration",
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2481,
    "server_name": "Hypercore Network MCP Server",
    "rank_by_usage": 2482,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@Vistara-Labs_hypercore-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Vistara-Labs/hypercore-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "list-containers",
          "description": "fetches a list of already deployed containers",
          "input_schema": {
            "type": "object"
          },
          "annotations": {
            "title": null,
            "readOnlyHint": null,
            "destructiveHint": null,
            "idempotentHint": null,
            "openWorldHint": null
          }
        },
        {
          "name": "spawn-container",
          "description": "spawns a new container on the hypercore network with the given configuration",
          "input_schema": {
            "type": "object",
            "properties": {
              "imageRef": {
                "type": "string",
                "description": "public docker image tag, eg. docker.io/alpine:latest"
              },
              "port": {
                "type": "number",
                "description": "application port to expose"
              }
            },
            "required": [
              "imageRef",
              "port"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        }
      ],
      "tool_count": 2,
      "tool_names": [
        "list-containers",
        "spawn-container"
      ]
    },
    "server_info_crawled": {
      "id": 2481,
      "name": "Hypercore Network MCP Server",
      "author": "@Vistara-Labs/hypercore-mcp",
      "overview": "Enable seamless integration with the Hypercore network by exposing its data and tools through a standardized protocol. Facilitate dynamic access and manipulation of Hypercore resources to enhance your LLM applications. Simplify interaction with decentralized data streams for improved context and capabilities.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@Vistara-Labs/hypercore-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Vistara-Labs_hypercore-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "list-containers",
          "description": "fetches a list of already deployed containers",
          "input_schema": {
            "type": "object"
          },
          "annotations": {
            "title": null,
            "readOnlyHint": null,
            "destructiveHint": null,
            "idempotentHint": null,
            "openWorldHint": null
          }
        },
        {
          "name": "spawn-container",
          "description": "spawns a new container on the hypercore network with the given configuration",
          "input_schema": {
            "type": "object",
            "properties": {
              "imageRef": {
                "type": "string",
                "description": "public docker image tag, eg. docker.io/alpine:latest"
              },
              "port": {
                "type": "number",
                "description": "application port to expose"
              }
            },
            "required": [
              "imageRef",
              "port"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Vistara-Labs/hypercore-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Vistara-Labs/hypercore-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "2482.@Vistara-Labs_hypercore-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 2114
  }
}