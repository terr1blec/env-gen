{
  "labels": {
    "analysis": "The MCP Server described is primarily focused on managing and querying a knowledge graph with semantic search capabilities. It utilizes Qdrant for data persistence and OpenAI embeddings for semantic similarity searches. The core functionality revolves around creating, managing, and querying entities and relations within the graph, providing fast and efficient semantic search capabilities. The available tool (Optional Settings) suggests some level of server management, but the primary focus is clearly on the knowledge graph and semantic search features.",
    "reasoning": "The primary label \"Database Operations\" is chosen because the server's core functionality involves managing and querying a knowledge graph, which is a form of database operation. The secondary label \"AI/ML Tools\" is chosen because the server uses OpenAI embeddings for semantic similarity searches, which involves AI/ML techniques. The secondary label \"Memory Management\" is chosen because the server provides a memory-like knowledge graph for storing and retrieving information. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "AI/ML Tools",
      "Memory Management"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1839,
    "server_name": "Memory Server with Qdrant Persistence",
    "rank_by_usage": 1840,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@tjwells47_mcp-qdrant-memory.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@tjwells47/mcp-qdrant-memory/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1839,
      "name": "Memory Server with Qdrant Persistence",
      "author": "@tjwells47/mcp-qdrant-memory",
      "overview": "Leverage a powerful knowledge graph with semantic search capabilities to enhance your applications. Create, manage, and query entities and relations seamlessly while ensuring data persistence with Qdrant. Experience fast and efficient semantic similarity searches powered by OpenAI embeddings.",
      "repository_url": "https://github.com/tjwells47/mcp-qdrant-memory",
      "homepage": "https://smithery.ai/server/@tjwells47/mcp-qdrant-memory",
      "remote_or_local": "Remote",
      "license": "Not specified",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@tjwells47_mcp-qdrant-memory.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "Optional Settings",
          "description": "Access and manage servers by signing in.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@tjwells47/mcp-qdrant-memory/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "openaiApiKey",
          "required": true,
          "description": "OpenAI API key for generating embeddings"
        },
        {
          "name": "qdrantApiKey",
          "required": true,
          "description": "Qdrant API key for vector database access"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@tjwells47/mcp-qdrant-memory/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1840.@tjwells47_mcp-qdrant-memory_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1634
  }
}