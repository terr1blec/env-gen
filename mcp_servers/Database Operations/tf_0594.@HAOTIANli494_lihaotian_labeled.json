{
  "labels": {
    "analysis": "The MCP Server facilitates secure, read-only interactions with MySQL databases by providing tools to connect, query, and inspect database schemas. Its primary use case involves enabling AI assistants to perform data exploration and analysis through SQL queries while ensuring safe read-only access.",
    "reasoning": "The server's core functionality is centered around querying and managing database interactions, which aligns with the Database Operations category. Additionally, its flexible deployment options suggest API Integration capabilities, while the read-only query focus reinforces secure data access patterns relevant to Security & Authentication.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "API Integration",
      "Security & Authentication"
    ],
    "custom_label": "MySQL Query Assistant",
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 593,
    "server_name": "MySQL MCP Server",
    "rank_by_usage": 594,
    "usage_count": "18",
    "original_file": "../crawler/smithery/@HAOTIANli494_lihaotian.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@HAOTIANli494/lihaotian/mcp?config=eyJkZXNjcmlwdGlvbiI6ICJNeVNRTFx1NjU3MFx1NjM2ZVx1NWU5M1x1NjdlNVx1OGJlMlx1NjcwZFx1NTJhMVx1NTY2OCJ9&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "connect_database",
          "description": "连接到MySQL数据库",
          "input_schema": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string",
                "description": "数据库主机地址（例如：localhost 或 127.0.0.1）"
              },
              "port": {
                "type": "number",
                "description": "数据库端口号（默认：3306）",
                "default": 3306
              },
              "user": {
                "type": "string",
                "description": "数据库用户名"
              },
              "password": {
                "type": "string",
                "description": "数据库密码"
              },
              "database": {
                "type": "string",
                "description": "要连接的数据库名称"
              }
            },
            "required": [
              "host",
              "user",
              "password",
              "database"
            ]
          },
          "annotations": null
        },
        {
          "name": "execute_query",
          "description": "执行SQL查询语句",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "要执行的SQL查询语句"
              }
            },
            "required": [
              "query"
            ]
          },
          "annotations": null
        },
        {
          "name": "show_tables",
          "description": "显示数据库中的所有表",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "describe_table",
          "description": "显示指定表的结构信息",
          "input_schema": {
            "type": "object",
            "properties": {
              "table_name": {
                "type": "string",
                "description": "要查看结构的表名"
              }
            },
            "required": [
              "table_name"
            ]
          },
          "annotations": null
        },
        {
          "name": "disconnect_database",
          "description": "断开数据库连接",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        }
      ],
      "tool_count": 5,
      "tool_names": [
        "connect_database",
        "execute_query",
        "show_tables",
        "describe_table",
        "disconnect_database"
      ]
    },
    "server_info_crawled": {
      "id": 593,
      "name": "MySQL MCP Server",
      "author": "@HAOTIANli494/lihaotian",
      "overview": "Enable your AI assistant to securely connect and query MySQL databases with read-only access. Explore database schemas, execute safe SELECT queries, and analyze data directly within your AI workflows. Deploy easily in stdio or HTTP/SSE modes for flexible integration in development environments like VSCode.",
      "repository_url": "https://github.com/HAOTIANli494/MySQL_MCP",
      "homepage": "https://smithery.ai/server/@HAOTIANli494/lihaotian",
      "remote_or_local": "Remote",
      "license": "https://smithery.ai",
      "usage_count": "18",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@HAOTIANli494_lihaotian.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "connect_database",
          "description": "连接到MySQL数据库",
          "input_schema": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string",
                "description": "数据库主机地址（例如：localhost 或 127.0.0.1）"
              },
              "port": {
                "type": "number",
                "description": "数据库端口号（默认：3306）",
                "default": 3306
              },
              "user": {
                "type": "string",
                "description": "数据库用户名"
              },
              "password": {
                "type": "string",
                "description": "数据库密码"
              },
              "database": {
                "type": "string",
                "description": "要连接的数据库名称"
              }
            },
            "required": [
              "host",
              "user",
              "password",
              "database"
            ]
          },
          "annotations": null
        },
        {
          "name": "execute_query",
          "description": "执行SQL查询语句",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "要执行的SQL查询语句"
              }
            },
            "required": [
              "query"
            ]
          },
          "annotations": null
        },
        {
          "name": "show_tables",
          "description": "显示数据库中的所有表",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "describe_table",
          "description": "显示指定表的结构信息",
          "input_schema": {
            "type": "object",
            "properties": {
              "table_name": {
                "type": "string",
                "description": "要查看结构的表名"
              }
            },
            "required": [
              "table_name"
            ]
          },
          "annotations": null
        },
        {
          "name": "disconnect_database",
          "description": "断开数据库连接",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"description\": \"MySQL数据库查询服务器\"\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@HAOTIANli494/lihaotian/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"description\": \"MySQL数据库查询服务器\"\n}",
      "python_sdk_url": "https://server.smithery.ai/@HAOTIANli494/lihaotian/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "0594.@HAOTIANli494_lihaotian_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 580
  }
}