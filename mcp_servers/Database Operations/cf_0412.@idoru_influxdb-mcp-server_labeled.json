{
  "labels": {
    "analysis": "The InfluxDB MCP Server is designed to facilitate interaction with InfluxDB, a time-series database. Its core functionality revolves around managing time-series data through querying, writing operations, and administrative tasks like bucket and organization management. The server acts as an intermediary, enabling standardized access to InfluxDB, which can be particularly useful for integrating with AI assistants or other systems that require time-series data processing.",
    "reasoning": "The primary label is Database Operations because the server's main functionality is centered around managing and querying a database (InfluxDB). Secondary labels include Data Analysis & Processing due to the nature of time-series data handling, and Cloud Services as InfluxDB is often deployed in cloud environments. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Data Analysis & Processing",
      "Cloud Services"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 411,
    "server_name": "InfluxDB MCP Server",
    "rank_by_usage": 412,
    "usage_count": "54",
    "original_file": "../crawler/smithery/@idoru_influxdb-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@idoru/influxdb-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 411,
      "name": "InfluxDB MCP Server",
      "author": "@idoru/influxdb-mcp-server",
      "overview": "Access and manage your InfluxDB time-series data effortlessly. Execute queries, write data, and utilize templates for common operations with ease. Enhance your AI assistants' capabilities by integrating with InfluxDB through a standardized protocol.",
      "repository_url": "https://github.com/idoru/influxdb-mcp-server",
      "homepage": "https://smithery.ai/server/@idoru/influxdb-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "54",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@idoru_influxdb-mcp-server.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "write-data",
          "description": "Deploy Server InfluxDB MCP Server Claim Server @idoru/influxdb-mcp-server Try in Playground",
          "parameters": [
            {
              "name": "org",
              "required": true,
              "type": "string"
            },
            {
              "name": "data",
              "required": true,
              "type": "string"
            },
            {
              "name": "bucket",
              "required": true,
              "type": "string"
            },
            {
              "name": "precision",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "query-data",
          "description": "Description not available",
          "parameters": [
            {
              "name": "org",
              "required": true,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create-bucket",
          "description": "Description not available",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "orgID",
              "required": true,
              "type": "string"
            },
            {
              "name": "retentionPeriodSeconds",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create-org",
          "description": "Description not available",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "description",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@idoru/influxdb-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "influxdbToken",
          "required": true,
          "description": "Authentication token for the InfluxDB API"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@idoru/influxdb-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0412.@idoru_influxdb-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 406
  }
}