{
  "labels": {
    "analysis": "The MCP Server appears to be a versatile integration and automation platform that primarily facilitates database operations (user management) and cryptocurrency data retrieval. It serves as a middleware layer that connects applications with external tools and real-world data through standardized operations. The available tools suggest a focus on user database management and real-time cryptocurrency price fetching.",
    "reasoning": "The primary label \"Database Operations\" was chosen because the majority of tools (create_user, find_user, find_all_users) are directly related to managing user data in a database. The secondary label \"Cryptocurrency & Blockchain\" was selected due to the presence of crypto price-related tools (get_crypto_price, get_binance_price). No custom label is needed as the functionality is well covered by predefined categories.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Cryptocurrency & Blockchain"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1450,
    "server_name": "Test Server",
    "rank_by_usage": 1451,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@nqdhocai_test-mcp-py.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@nqdhocai/test-mcp-py/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "create_user",
          "description": "Create a new user in the database",
          "input_schema": {
            "properties": {
              "email": {
                "title": "email",
                "type": "string"
              },
              "password": {
                "title": "password",
                "type": "string"
              },
              "full_name": {
                "title": "full_name",
                "type": "string"
              },
              "role": {
                "default": "user",
                "title": "role",
                "type": "string"
              },
              "is_email_verified": {
                "default": false,
                "title": "is_email_verified",
                "type": "string"
              }
            },
            "required": [
              "email",
              "password",
              "full_name"
            ],
            "title": "create_userArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "find_user",
          "description": "Find a user in the database by email.",
          "input_schema": {
            "properties": {
              "email": {
                "title": "Email",
                "type": "string"
              }
            },
            "required": [
              "email"
            ],
            "title": "find_userArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "find_all_users",
          "description": "Retrieve all users from the database.",
          "input_schema": {
            "properties": {},
            "title": "find_all_usersArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_crypto_price",
          "description": "Get the current price of a cryptocurrency",
          "input_schema": {
            "properties": {
              "crypto_id": {
                "default": "bitcoin",
                "title": "crypto_id",
                "type": "string"
              },
              "vs_currency": {
                "default": "usd",
                "title": "vs_currency",
                "type": "string"
              }
            },
            "title": "get_crypto_priceArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_binance_price",
          "description": "Get the current price of a cryptocurrency from Binance",
          "input_schema": {
            "properties": {
              "symbol": {
                "default": "BTCUSDT",
                "title": "Symbol",
                "type": "string"
              }
            },
            "title": "get_binance_priceArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_greeting",
          "description": "Return a greeting message.",
          "input_schema": {
            "properties": {
              "name": {
                "default": "World",
                "title": "Name",
                "type": "string"
              }
            },
            "title": "get_greetingArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 6,
      "tool_names": [
        "create_user",
        "find_user",
        "find_all_users",
        "get_crypto_price",
        "get_binance_price",
        "get_greeting"
      ]
    },
    "server_info_crawled": {
      "id": 1450,
      "name": "Test Server",
      "author": "@nqdhocai/test-mcp-py",
      "overview": "Integrate your applications with external data and tools seamlessly. Enhance your workflows by leveraging real-world data and executing actions through a standardized interface. Experience the power of dynamic context integration with ease.",
      "repository_url": "https://github.com/nqdhocai/test-mcp-py",
      "homepage": "https://smithery.ai/server/@nqdhocai/test-mcp-py",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@nqdhocai_test-mcp-py.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "create_user",
          "description": "Create a new user in the database",
          "input_schema": {
            "properties": {
              "email": {
                "title": "email",
                "type": "string"
              },
              "password": {
                "title": "password",
                "type": "string"
              },
              "full_name": {
                "title": "full_name",
                "type": "string"
              },
              "role": {
                "default": "user",
                "title": "role",
                "type": "string"
              },
              "is_email_verified": {
                "default": false,
                "title": "is_email_verified",
                "type": "string"
              }
            },
            "required": [
              "email",
              "password",
              "full_name"
            ],
            "title": "create_userArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "find_user",
          "description": "Find a user in the database by email.",
          "input_schema": {
            "properties": {
              "email": {
                "title": "Email",
                "type": "string"
              }
            },
            "required": [
              "email"
            ],
            "title": "find_userArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "find_all_users",
          "description": "Retrieve all users from the database.",
          "input_schema": {
            "properties": {},
            "title": "find_all_usersArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_crypto_price",
          "description": "Get the current price of a cryptocurrency",
          "input_schema": {
            "properties": {
              "crypto_id": {
                "default": "bitcoin",
                "title": "crypto_id",
                "type": "string"
              },
              "vs_currency": {
                "default": "usd",
                "title": "vs_currency",
                "type": "string"
              }
            },
            "title": "get_crypto_priceArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_binance_price",
          "description": "Get the current price of a cryptocurrency from Binance",
          "input_schema": {
            "properties": {
              "symbol": {
                "default": "BTCUSDT",
                "title": "Symbol",
                "type": "string"
              }
            },
            "title": "get_binance_priceArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_greeting",
          "description": "Return a greeting message.",
          "input_schema": {
            "properties": {
              "name": {
                "default": "World",
                "title": "Name",
                "type": "string"
              }
            },
            "title": "get_greetingArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@nqdhocai/test-mcp-py/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@nqdhocai/test-mcp-py/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1451.@nqdhocai_test-mcp-py_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1346
  }
}