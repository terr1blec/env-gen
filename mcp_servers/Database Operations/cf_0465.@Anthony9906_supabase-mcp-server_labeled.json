{
  "labels": {
    "analysis": "The Supabase MCP Server primarily focuses on enabling database management and SQL query execution directly from IDEs. It allows users to interact with databases end-to-end, including authentication and Management API access, with built-in safety controls. The available tools suggest this server is designed for developers who need secure and streamlined database operations within their development workflow.",
    "reasoning": "The primary functionality of database management, SQL operations, and API access aligns with the \"Database Operations\" category. Authentication handling is closely related to database access, which fits under the same umbrella. No custom labels are needed as the predefined categories adequately cover the server's purpose.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Security & Authentication",
      "Development Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 464,
    "server_name": "Supabase MCP Server",
    "rank_by_usage": 465,
    "usage_count": "40",
    "original_file": "../crawler/smithery/@Anthony9906_supabase-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Anthony9906/supabase-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 464,
      "name": "Supabase MCP Server",
      "author": "@Anthony9906/supabase-mcp-server",
      "overview": "Enable your favorite IDE to safely execute SQL queries, manage your database end-to-end, access Management API, and handle user authentication with built-in safety controls.",
      "repository_url": "https://github.com/Anthony9906/supabase-mcp-server",
      "homepage": "https://smithery.ai/server/@Anthony9906/supabase-mcp-server",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "40",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Anthony9906_supabase-mcp-server.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "Optional Settings",
          "description": "Access and manage servers by signing in.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Anthony9906/supabase-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Anthony9906/supabase-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0465.@Anthony9906_supabase-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 456
  }
}