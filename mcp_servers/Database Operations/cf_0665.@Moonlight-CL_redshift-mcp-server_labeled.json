{
  "labels": {
    "analysis": "The MCP Server is designed to facilitate seamless interaction between AI assistants and Amazon Redshift databases. Its core functionality includes listing database schemas and tables, retrieving table definitions and statistics, executing SQL queries, analyzing table structures, and obtaining query execution plans. This server simplifies database operations and provides insights through standardized tools, making it particularly useful for data management, querying, and analysis tasks. The available tools (execute_sql, analyze_table, get_execution_plan) are specifically geared toward database operations and query optimization.",
    "reasoning": "The primary label is chosen because the server's primary purpose is to interact with and manage a specific database system (Amazon Redshift). The secondary labels are selected because the server also facilitates SQL execution and the analysis of database structures, which are key aspects of its functionality. No custom label is needed as the predefined categories adequately cover the server's purpose.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "API Integration",
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 664,
    "server_name": "Redshift MCP Server",
    "rank_by_usage": 665,
    "usage_count": "13",
    "original_file": "../crawler/smithery/@Moonlight-CL_redshift-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Moonlight-CL/redshift-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 664,
      "name": "Redshift MCP Server",
      "author": "@Moonlight-CL/redshift-mcp-server",
      "overview": "Enable AI assistants to interact seamlessly with Amazon Redshift databases by listing schemas and tables, retrieving table DDL and statistics, executing SQL queries, analyzing tables, and obtaining execution plans. Simplify database operations and insights through standardized MCP tools and resources. Enhance your AI workflows with direct Redshift integration for efficient data management and querying.",
      "repository_url": "https://github.com/Moonlight-CL/redshift-mcp-server",
      "homepage": "https://smithery.ai/server/@Moonlight-CL/redshift-mcp-server",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "13",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Moonlight-CL_redshift-mcp-server.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "execute_sql",
          "description": "Deploy Server Redshift MCP Server Claim Server @Moonlight-CL/redshift-mcp-server Try in Playground execute_sql",
          "parameters": [
            {
              "name": "execute_sql",
              "required": false,
              "type": "string"
            },
            {
              "name": "sql",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "analyze_table",
          "description": "Analyze table to collect statistics information",
          "parameters": [
            {
              "name": "table",
              "required": true,
              "type": "string"
            },
            {
              "name": "schema",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_execution_plan",
          "description": "Get actual execution plan with runtime statistics for a SQL query",
          "parameters": [
            {
              "name": "get_execution_plan",
              "required": false,
              "type": "string"
            },
            {
              "name": "sql",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Moonlight-CL/redshift-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Moonlight-CL/redshift-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0665.@Moonlight-CL_redshift-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 649
  }
}