{
  "labels": {
    "analysis": "The MCP Server is designed to interact with a simple database and mock data, primarily focusing on user and post management. It provides tools for creating users and posts, as well as searching posts by title or content. The functionality aligns with basic database operations, particularly for managing and querying user-generated content. The server is likely intended for educational purposes, such as learning how to interact with databases via an MCP (Message Control Panel) server in Python.",
    "reasoning": "The primary functionality revolves around database operations, specifically managing and querying user and post data, which aligns well with the \"Database Operations\" category. Given the educational context and the simplicity of the operations, no secondary labels are particularly necessary beyond this. No custom label is required as the server's functionality is well-covered by predefined categories.",
    "primary_label": "Database Operations",
    "secondary_labels": [],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1734,
    "server_name": "Python MCP Tutorial Server",
    "rank_by_usage": 1735,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@jhj0517_mcp-python-tutorial.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@jhj0517/mcp-python-tutorial/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "create_user",
          "description": "Create a new user with the given username and email",
          "input_schema": {
            "properties": {
              "username": {
                "title": "Username",
                "type": "string"
              },
              "email": {
                "title": "Email",
                "type": "string"
              }
            },
            "required": [
              "username",
              "email"
            ],
            "title": "create_userArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "create_post",
          "description": "Create a new post with the given title, content, and user ID",
          "input_schema": {
            "properties": {
              "title": {
                "title": "Title",
                "type": "string"
              },
              "content": {
                "title": "Content",
                "type": "string"
              },
              "user_id": {
                "title": "User Id",
                "type": "integer"
              }
            },
            "required": [
              "title",
              "content",
              "user_id"
            ],
            "title": "create_postArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_posts",
          "description": "Search posts by title or content",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_postsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 3,
      "tool_names": [
        "create_user",
        "create_post",
        "search_posts"
      ]
    },
    "server_info_crawled": {
      "id": 1734,
      "name": "Python MCP Tutorial Server",
      "author": "@jhj0517/mcp-python-tutorial",
      "overview": "Set up a local MCP server to interact with a simple database and mock data. Easily create and manage resources like users and posts while leveraging reusable prompts for efficient LLM interactions. Get started quickly with a straightforward installation and configuration process.",
      "repository_url": "https://github.com/jhj0517/mcp-python-tutorial",
      "homepage": "https://smithery.ai/server/@jhj0517/mcp-python-tutorial",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@jhj0517_mcp-python-tutorial.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "create_user",
          "description": "Create a new user with the given username and email",
          "input_schema": {
            "properties": {
              "username": {
                "title": "Username",
                "type": "string"
              },
              "email": {
                "title": "Email",
                "type": "string"
              }
            },
            "required": [
              "username",
              "email"
            ],
            "title": "create_userArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "create_post",
          "description": "Create a new post with the given title, content, and user ID",
          "input_schema": {
            "properties": {
              "title": {
                "title": "Title",
                "type": "string"
              },
              "content": {
                "title": "Content",
                "type": "string"
              },
              "user_id": {
                "title": "User Id",
                "type": "integer"
              }
            },
            "required": [
              "title",
              "content",
              "user_id"
            ],
            "title": "create_postArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_posts",
          "description": "Search posts by title or content",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_postsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@jhj0517/mcp-python-tutorial/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@jhj0517/mcp-python-tutorial/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1735.@jhj0517_mcp-python-tutorial_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1560
  }
}