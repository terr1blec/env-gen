{
  "labels": {
    "analysis": "The MCP Server is designed to facilitate secure connections and interactions with MySQL databases for AI assistants. It enables not only viewing database schemas and executing SELECT queries but also supports full CRUD operations (Create, Read, Update, Delete) within transactional contexts. The tools provided allow for detailed database schema exploration, transaction management (including rollback capabilities), and both relational and operational data analysis. This server is particularly useful for integrating AI workflows with database operations, ensuring data integrity while enabling flexible querying and analysis.",
    "reasoning": "The primary label \"Database Operations\" is chosen because the server's core functionality revolves around managing and querying MySQL databases, which is the essence of database operations. The \"Data Analysis & Processing\" label is selected as a secondary category due to the server's capability to execute queries and analyze data, making it useful for analytical workflows. The server's transaction management features further solidify its role in database operations. No custom label is needed as the predefined labels adequately cover its functionality.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": "MySQL Integration for AI Workflows",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1726,
    "server_name": "MySQL Database Server",
    "rank_by_usage": 1727,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@guangxiangdebizi_mysql_mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@guangxiangdebizi/mysql_mcp/mcp?config=eyJkZXNjcmlwdGlvbiI6ICJNeVNRTFx1NjU3MFx1NjM2ZVx1NWU5M1x1NjdlNVx1OGJlMlx1NjcwZFx1NTJhMVx1NTY2OCJ9&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "connect_database",
          "description": "连接到MySQL数据库",
          "input_schema": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string",
                "description": "数据库主机地址（例如：localhost 或 127.0.0.1）"
              },
              "port": {
                "type": "number",
                "description": "数据库端口号（默认：3306）",
                "default": 3306
              },
              "user": {
                "type": "string",
                "description": "数据库用户名"
              },
              "password": {
                "type": "string",
                "description": "数据库密码"
              },
              "database": {
                "type": "string",
                "description": "要连接的数据库名称"
              }
            },
            "required": [
              "host",
              "user",
              "password",
              "database"
            ]
          },
          "annotations": null
        },
        {
          "name": "execute_query",
          "description": "执行SQL查询语句（支持增删改查所有操作）",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "要执行的SQL查询语句"
              },
              "params": {
                "type": "array",
                "description": "SQL参数（可选，用于参数化查询）",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "query"
            ]
          },
          "annotations": null
        },
        {
          "name": "begin_transaction",
          "description": "开始数据库事务",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "commit_transaction",
          "description": "提交数据库事务",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "rollback_transaction",
          "description": "回滚数据库事务",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "show_transaction_history",
          "description": "显示当前事务的操作历史",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "rollback_to_step",
          "description": "回滚到指定的操作步骤",
          "input_schema": {
            "type": "object",
            "properties": {
              "step_number": {
                "type": "number",
                "description": "要回滚到的步骤号（从操作历史中选择）"
              }
            },
            "required": [
              "step_number"
            ]
          },
          "annotations": null
        },
        {
          "name": "full_rollback",
          "description": "完全回滚当前事务的所有操作",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "show_tables",
          "description": "显示数据库中的所有表及其结构信息",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "describe_table",
          "description": "显示指定表的详细结构信息和样本数据",
          "input_schema": {
            "type": "object",
            "properties": {
              "table_name": {
                "type": "string",
                "description": "要查看结构的表名"
              }
            },
            "required": [
              "table_name"
            ]
          },
          "annotations": null
        },
        {
          "name": "disconnect_database",
          "description": "断开数据库连接",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        }
      ],
      "tool_count": 11,
      "tool_names": [
        "connect_database",
        "execute_query",
        "begin_transaction",
        "commit_transaction",
        "rollback_transaction",
        "show_transaction_history",
        "rollback_to_step",
        "full_rollback",
        "show_tables",
        "describe_table",
        "disconnect_database"
      ]
    },
    "server_info_crawled": {
      "id": 1726,
      "name": "MySQL Database Server",
      "author": "@guangxiangdebizi/mysql_mcp",
      "overview": "Enable AI assistants to securely connect and query MySQL databases with read-only access. View database schemas, execute safe SELECT queries, and analyze data directly within your AI workflows. Supports both stdio and HTTP/SSE modes for flexible deployment scenarios.",
      "repository_url": "https://github.com/guangxiangdebizi/MySQL_MCP",
      "homepage": "https://smithery.ai/server/@guangxiangdebizi/mysql_mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@guangxiangdebizi_mysql_mcp.json",
      "tools_count": 11,
      "tools": [
        {
          "name": "connect_database",
          "description": "连接到MySQL数据库",
          "input_schema": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string",
                "description": "数据库主机地址（例如：localhost 或 127.0.0.1）"
              },
              "port": {
                "type": "number",
                "description": "数据库端口号（默认：3306）",
                "default": 3306
              },
              "user": {
                "type": "string",
                "description": "数据库用户名"
              },
              "password": {
                "type": "string",
                "description": "数据库密码"
              },
              "database": {
                "type": "string",
                "description": "要连接的数据库名称"
              }
            },
            "required": [
              "host",
              "user",
              "password",
              "database"
            ]
          },
          "annotations": null
        },
        {
          "name": "execute_query",
          "description": "执行SQL查询语句（支持增删改查所有操作）",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "要执行的SQL查询语句"
              },
              "params": {
                "type": "array",
                "description": "SQL参数（可选，用于参数化查询）",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "query"
            ]
          },
          "annotations": null
        },
        {
          "name": "begin_transaction",
          "description": "开始数据库事务",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "commit_transaction",
          "description": "提交数据库事务",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "rollback_transaction",
          "description": "回滚数据库事务",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "show_transaction_history",
          "description": "显示当前事务的操作历史",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "rollback_to_step",
          "description": "回滚到指定的操作步骤",
          "input_schema": {
            "type": "object",
            "properties": {
              "step_number": {
                "type": "number",
                "description": "要回滚到的步骤号（从操作历史中选择）"
              }
            },
            "required": [
              "step_number"
            ]
          },
          "annotations": null
        },
        {
          "name": "full_rollback",
          "description": "完全回滚当前事务的所有操作",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "show_tables",
          "description": "显示数据库中的所有表及其结构信息",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "describe_table",
          "description": "显示指定表的详细结构信息和样本数据",
          "input_schema": {
            "type": "object",
            "properties": {
              "table_name": {
                "type": "string",
                "description": "要查看结构的表名"
              }
            },
            "required": [
              "table_name"
            ]
          },
          "annotations": null
        },
        {
          "name": "disconnect_database",
          "description": "断开数据库连接",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"description\": \"MySQL数据库查询服务器\"\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@guangxiangdebizi/mysql_mcp/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"description\": \"MySQL数据库查询服务器\"\n}",
      "python_sdk_url": "https://server.smithery.ai/@guangxiangdebizi/mysql_mcp/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "1727.@guangxiangdebizi_mysql_mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1555
  }
}