{
  "labels": {
    "analysis": "The MCP Server is designed to interact with AWS DynamoDB databases using natural language requests, providing a user-friendly interface for querying, scanning, and retrieving data. The tools available focus on reading and managing DynamoDB data without write capabilities. This server simplifies data access for users who may not be familiar with DynamoDB's native query language or CLI, making it easier to retrieve and analyze data stored in DynamoDB tables.",
    "reasoning": "The primary functionality of this server revolves around querying and retrieving data from DynamoDB, which aligns closely with database operations. The tools provided are primarily read-only operations, such as listing tables, querying items, and counting items, which are core to database operations. Since DynamoDB is a NoSQL database service, this server is inherently tied to database management. No custom label is needed as the predefined categories sufficiently describe the server's functionality.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 510,
    "server_name": "DynamoDB Read-Only Server",
    "rank_by_usage": 511,
    "usage_count": "30",
    "original_file": "../crawler/smithery/@jjikky_dynamo-readonly-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@jjikky/dynamo-readonly-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 510,
      "name": "DynamoDB Read-Only Server",
      "author": "@jjikky/dynamo-readonly-mcp",
      "overview": "Query AWS DynamoDB databases using natural language requests. Access and manage your DynamoDB data effortlessly through a user-friendly interface. Simplify your data interactions and enhance your LLM capabilities with seamless integration.",
      "repository_url": "https://github.com/jjikky/dynamo-readonly-mcp",
      "homepage": "https://smithery.ai/server/@jjikky/dynamo-readonly-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "30",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@jjikky_dynamo-readonly-mcp.json",
      "tools_count": 7,
      "tools": [
        {
          "name": "list-tables",
          "description": "Deploy Server DynamoDB Read-Only Server @jjikky/dynamo-readonly-mcp Try in Playground list-tables",
          "parameters": []
        },
        {
          "name": "describe-table",
          "description": "Get detailed information about a DynamoDB table",
          "parameters": [
            {
              "name": "tableName",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "scan-table",
          "description": "Scan items from a DynamoDB table",
          "parameters": []
        },
        {
          "name": "query-table",
          "description": "Query items from a DynamoDB table based on conditions",
          "parameters": []
        },
        {
          "name": "paginate-query-table",
          "description": "Paginate query results",
          "parameters": [
            {
              "name": "tableName",
              "required": true,
              "type": "string"
            },
            {
              "name": "projectionExpression",
              "required": false,
              "type": "string"
            },
            {
              "name": "keyConditionExpression",
              "required": true,
              "type": "string"
            },
            {
              "name": "expressionAttributeValues",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-item",
          "description": "Get an item from a DynamoDB table based on a specific key",
          "parameters": [
            {
              "name": "key",
              "required": true,
              "type": "string"
            },
            {
              "name": "tableName",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "count-items",
          "description": "Count items in a DynamoDB table",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@jjikky/dynamo-readonly-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "awsAccessKeyId",
          "required": true,
          "description": "AWS access key ID"
        },
        {
          "name": "awsSecretAccessKey",
          "required": true,
          "description": "AWS secret access key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@jjikky/dynamo-readonly-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0511.@jjikky_dynamo-readonly-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 500
  }
}