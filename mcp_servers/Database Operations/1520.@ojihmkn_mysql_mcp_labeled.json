{
  "labels": {
    "analysis": "The MySQL MCP Server is designed to facilitate secure interactions between an AI assistant and MySQL databases, focusing on read-only operations. Its core functionality includes connecting to databases, executing SELECT queries, and analyzing database schemas. The tools provided enable users to view table structures, query data, and manage connections programmatically. This server is particularly useful in development environments where integration with database systems is needed for data analysis, research, or automation workflows.",
    "reasoning": "The primary label \"Database Operations\" was chosen because the server's primary functionality revolves around querying and managing MySQL databases. The secondary label \"Development Tools\" was selected due to its integration with development environments and potential use in coding or debugging workflows. The predefined categories adequately cover the server's functionality, so no custom label is needed.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Development Tools"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1519,
    "server_name": "MySQL MCP Server",
    "rank_by_usage": 1520,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@ojihmkn_mysql_mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ojihmkn/mysql_mcp/mcp?config=eyJkZXNjcmlwdGlvbiI6ICJNeVNRTFx1NjU3MFx1NjM2ZVx1NWU5M1x1NjdlNVx1OGJlMlx1NjcwZFx1NTJhMVx1NTY2OCJ9&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "connect_database",
          "description": "连接到MySQL数据库",
          "input_schema": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string",
                "description": "数据库主机地址（例如：localhost 或 127.0.0.1）"
              },
              "port": {
                "type": "number",
                "description": "数据库端口号（默认：3306）",
                "default": 3306
              },
              "user": {
                "type": "string",
                "description": "数据库用户名"
              },
              "password": {
                "type": "string",
                "description": "数据库密码"
              },
              "database": {
                "type": "string",
                "description": "要连接的数据库名称"
              }
            },
            "required": [
              "host",
              "user",
              "password",
              "database"
            ]
          },
          "annotations": null
        },
        {
          "name": "execute_query",
          "description": "执行SQL查询语句",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "要执行的SQL查询语句"
              }
            },
            "required": [
              "query"
            ]
          },
          "annotations": null
        },
        {
          "name": "show_tables",
          "description": "显示数据库中的所有表",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "describe_table",
          "description": "显示指定表的结构信息",
          "input_schema": {
            "type": "object",
            "properties": {
              "table_name": {
                "type": "string",
                "description": "要查看结构的表名"
              }
            },
            "required": [
              "table_name"
            ]
          },
          "annotations": null
        },
        {
          "name": "disconnect_database",
          "description": "断开数据库连接",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        }
      ],
      "tool_count": 5,
      "tool_names": [
        "connect_database",
        "execute_query",
        "show_tables",
        "describe_table",
        "disconnect_database"
      ]
    },
    "server_info_crawled": {
      "id": 1519,
      "name": "MySQL MCP Server",
      "author": "@ojihmkn/mysql_mcp",
      "overview": "Enable your AI assistant to securely connect and query MySQL databases with read-only access. View database schemas, execute safe SELECT queries, and analyze data directly within your AI workflows. Deploy easily in stdio or HTTP/SSE modes for flexible integration in development environments like VSCode.",
      "repository_url": "https://github.com/ojihmkn/MySQL_MCP",
      "homepage": "https://smithery.ai/server/@ojihmkn/mysql_mcp",
      "remote_or_local": "Remote",
      "license": "https://smithery.ai",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ojihmkn_mysql_mcp.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "connect_database",
          "description": "连接到MySQL数据库",
          "input_schema": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string",
                "description": "数据库主机地址（例如：localhost 或 127.0.0.1）"
              },
              "port": {
                "type": "number",
                "description": "数据库端口号（默认：3306）",
                "default": 3306
              },
              "user": {
                "type": "string",
                "description": "数据库用户名"
              },
              "password": {
                "type": "string",
                "description": "数据库密码"
              },
              "database": {
                "type": "string",
                "description": "要连接的数据库名称"
              }
            },
            "required": [
              "host",
              "user",
              "password",
              "database"
            ]
          },
          "annotations": null
        },
        {
          "name": "execute_query",
          "description": "执行SQL查询语句",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "要执行的SQL查询语句"
              }
            },
            "required": [
              "query"
            ]
          },
          "annotations": null
        },
        {
          "name": "show_tables",
          "description": "显示数据库中的所有表",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "describe_table",
          "description": "显示指定表的结构信息",
          "input_schema": {
            "type": "object",
            "properties": {
              "table_name": {
                "type": "string",
                "description": "要查看结构的表名"
              }
            },
            "required": [
              "table_name"
            ]
          },
          "annotations": null
        },
        {
          "name": "disconnect_database",
          "description": "断开数据库连接",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"description\": \"MySQL数据库查询服务器\"\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@ojihmkn/mysql_mcp/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"description\": \"MySQL数据库查询服务器\"\n}",
      "python_sdk_url": "https://server.smithery.ai/@ojihmkn/mysql_mcp/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "1520.@ojihmkn_mysql_mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1399
  }
}