{
  "labels": {
    "analysis": "The BlazeSQL Natural Language Query Server enables users to query databases using plain English rather than traditional SQL syntax. The primary function is to convert natural language queries into executable SQL commands and return structured JSON results. The server simplifies database interaction by integrating with MCP-compatible clients, making it accessible for users without deep SQL knowledge. The key tools include an API for natural language querying, demonstrating a clear focus on database operations and user-friendly data access.",
    "reasoning": "The primary label \"Database Operations\" is chosen because the server's core functionality directly revolves around querying databases, a fundamental aspect of database management. The secondary label \"API Integration\" is added because the server operates through an API, facilitating seamless integration with other systems. No custom label is needed as the functionality aligns well with predefined categories.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2429,
    "server_name": "BlazeSQL Natural Language Query Server",
    "rank_by_usage": 2430,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@arjshiv_blaze-sql-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@arjshiv/blaze-sql-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2429,
      "name": "BlazeSQL Natural Language Query Server",
      "author": "@arjshiv/blaze-sql-mcp-server",
      "overview": "Enable natural language querying of your databases by connecting to BlazeSQL's API through a simple MCP server. Execute plain English queries and receive formatted SQL and JSON results seamlessly. Integrate effortlessly with MCP-compatible clients to enhance your data interaction experience.",
      "repository_url": "https://github.com/arjshiv/blaze-sql-mcp-server",
      "homepage": "https://smithery.ai/server/@arjshiv/blaze-sql-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@arjshiv_blaze-sql-mcp-server.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "blazesql_query",
          "description": "Deploy Server BlazeSQL Natural Language Query Server Claim Server @arjshiv/blaze-sql-mcp-server Try in Playground blazesql_query",
          "parameters": [
            {
              "name": "blazesql_query",
              "required": false,
              "type": "string"
            },
            {
              "name": "db_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "natural_language_request",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@arjshiv/blaze-sql-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "blazeApiKey",
          "required": true,
          "description": "BlazeSQL API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@arjshiv/blaze-sql-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2430.@arjshiv_blaze-sql-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 2075
  }
}