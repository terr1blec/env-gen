{
  "labels": {
    "analysis": "The MCP Server for Supabase is primarily a toolset designed for interacting with Supabase databases and services. It allows users to run SQL queries, manage schema changes, call the Supabase Management API, and use the Auth Admin SDK. This indicates its core functionality revolves around database operations and API integration, particularly for Supabase-based projects. The available tools suggest a focus on server and database management within MCP-compatible IDEs, along with authentication and server access settings.",
    "reasoning": "The primary label \"Database Operations\" was chosen because the server's core functionality centers around querying and managing databases. \"API Integration\" is selected as a secondary label due to its support for calling the Supabase Management API. \"Security & Authentication\" is another relevant secondary label, as it facilitates Auth Admin SDK operations.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "API Integration",
      "Security & Authentication"
    ],
    "custom_label": "Supabase Management Tools",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 20,
    "server_name": "Query | MCP Server for Supabase",
    "rank_by_usage": 21,
    "usage_count": "5,405",
    "original_file": "../crawler/smithery/@alexander-zuev_supabase-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@alexander-zuev/supabase-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 20,
      "name": "Query | MCP Server for Supabase",
      "author": "@alexander-zuev/supabase-mcp-server",
      "overview": "Query MCP (Supabase MCP Server) is now in Early Access under its new name. You can safely run SQL, manage schema changes, call the Supabase Management API, and use the Auth Admin SDK â€” all from MCP-compatible IDEs like Cursor and Windsurf.\n\nâš¡ Core features are free & open-source forever. ðŸ’Ž Premium tools are coming â€” but nothing existing will be locked behind a paywall.",
      "repository_url": "https://github.com/alexander-zuev/supabase-mcp-server",
      "homepage": "https://smithery.ai/server/@alexander-zuev/supabase-mcp-server",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "5,405",
      "success_rate": "99.96%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@alexander-zuev_supabase-mcp-server.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "Optional Settings",
          "description": "Access and manage servers by signing in.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@alexander-zuev/supabase-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "queryApiKey",
          "required": true,
          "description": "(required) - Your Query API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@alexander-zuev/supabase-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0021.@alexander-zuev_supabase-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 21
  }
}