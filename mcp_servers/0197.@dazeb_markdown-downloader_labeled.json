{
  "labels": {
    "analysis": "The MCP Server is designed to facilitate the downloading and management of web content in Markdown format. Its core functionality revolves around converting web pages into Markdown files, setting up directories for organized storage, and managing these files through various commands. This tool is particularly useful for users who need to extract and retain web content in a structured, text-based format, often for research, note-taking, or content archival purposes.",
    "reasoning": "The primary functionality of converting web content into Markdown and managing these files aligns with the **Web Search & Research** category, as it aids in gathering and organizing web-based information. The ability to manage directories and files also relates to **File Management**, making it a secondary label. No custom label is necessary as the predefined categories adequately cover the server's capabilities.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "File Management"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 196,
    "server_name": "Markdown Downloader",
    "rank_by_usage": 197,
    "usage_count": "240",
    "original_file": "../crawler/smithery/@dazeb_markdown-downloader.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@dazeb/markdown-downloader/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "download_markdown",
          "description": "Download a webpage as markdown using r.jina.ai",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL of the webpage to download"
              },
              "subdirectory": {
                "type": "string",
                "description": "Optional subdirectory to save the file in"
              }
            },
            "required": [
              "url"
            ]
          },
          "annotations": null
        },
        {
          "name": "list_downloaded_files",
          "description": "List all downloaded markdown files",
          "input_schema": {
            "type": "object",
            "properties": {
              "subdirectory": {
                "type": "string",
                "description": "Optional subdirectory to list files from"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "set_download_directory",
          "description": "Set the main local download folder for markdown files",
          "input_schema": {
            "type": "object",
            "properties": {
              "directory": {
                "type": "string",
                "description": "Full path to the download directory"
              }
            },
            "required": [
              "directory"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_download_directory",
          "description": "Get the current download directory",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "create_subdirectory",
          "description": "Create a new subdirectory in the root download folder",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the subdirectory to create"
              }
            },
            "required": [
              "name"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 5,
      "tool_names": [
        "download_markdown",
        "list_downloaded_files",
        "set_download_directory",
        "get_download_directory",
        "create_subdirectory"
      ]
    },
    "server_info_crawled": {
      "id": 196,
      "name": "Markdown Downloader",
      "author": "@dazeb/markdown-downloader",
      "overview": "Download webpages as markdown files effortlessly. Convert web content into markdown format with a simple command, and manage your downloads with ease. Enjoy a configurable download directory and automatic date-stamped filenames for organized storage.",
      "repository_url": "https://github.com/dazeb/markdown-downloader",
      "homepage": "https://smithery.ai/server/@dazeb/markdown-downloader",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "240",
      "success_rate": "99.86%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@dazeb_markdown-downloader.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "download_markdown",
          "description": "Download a webpage as markdown using r.jina.ai",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL of the webpage to download"
              },
              "subdirectory": {
                "type": "string",
                "description": "Optional subdirectory to save the file in"
              }
            },
            "required": [
              "url"
            ]
          },
          "annotations": null
        },
        {
          "name": "list_downloaded_files",
          "description": "List all downloaded markdown files",
          "input_schema": {
            "type": "object",
            "properties": {
              "subdirectory": {
                "type": "string",
                "description": "Optional subdirectory to list files from"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "set_download_directory",
          "description": "Set the main local download folder for markdown files",
          "input_schema": {
            "type": "object",
            "properties": {
              "directory": {
                "type": "string",
                "description": "Full path to the download directory"
              }
            },
            "required": [
              "directory"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_download_directory",
          "description": "Get the current download directory",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "create_subdirectory",
          "description": "Create a new subdirectory in the root download folder",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the subdirectory to create"
              }
            },
            "required": [
              "name"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@dazeb/markdown-downloader/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@dazeb/markdown-downloader/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0197.@dazeb_markdown-downloader_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 193
  }
}