{
  "labels": {
    "analysis": "The MCP Server functions as an intermediary that provides access to Pexels' vast library of photos, videos, and collections. It standardizes the interaction with Pexels' media resources through a standardized protocol, allowing users to search, retrieve, and download media effortlessly. The server automates the management of API keys and facilitates integration of rich media content into applications. Its core functionality revolves around media discovery, retrieval, and management, making it primarily an interface to Pexels' assets.",
    "reasoning": "The primary label is \"Content Creation\" because the server's core purpose is to provide easy access to media assets for integration into other applications, which is a fundamental part of content creation workflows. The secondary label \"API Integration\" is included because the server acts as a bridge between applications and the Pexels API, abstracting away direct API management complexities. The server doesn't require a custom label as its functionality aligns well with existing predefined categories.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 104,
    "server_name": "Pexels MCP Server",
    "rank_by_usage": 105,
    "usage_count": "669",
    "original_file": "../crawler/smithery/@CaullenOmdahl_pexels-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@CaullenOmdahl/pexels-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 104,
      "name": "Pexels MCP Server",
      "author": "@CaullenOmdahl/pexels-mcp-server",
      "overview": "Provide seamless access to Pexels photos, videos, and collections through a standardized protocol. Search, retrieve, and explore curated media with ease using this MCP server. Manage your API key dynamically and integrate rich media content into your applications effortlessly.",
      "repository_url": "https://github.com/CaullenOmdahl/pexels-mcp-server",
      "homepage": "https://smithery.ai/server/@CaullenOmdahl/pexels-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "669",
      "success_rate": "98.78%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@CaullenOmdahl_pexels-mcp-server.json",
      "tools_count": 11,
      "tools": [
        {
          "name": "searchPhotos",
          "description": "Deploy Server Pexels MCP Server @CaullenOmdahl/pexels-mcp-server Try in Playground searchPhotos",
          "parameters": [
            {
              "name": "color",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "locale",
              "required": false,
              "type": "string"
            },
            {
              "name": "perPage",
              "required": false,
              "type": "string"
            },
            {
              "name": "orientation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "downloadPhoto",
          "description": "Description not available",
          "parameters": [
            {
              "name": "downloadPhoto",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "size",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "downloadVideo",
          "description": "Description not available",
          "parameters": [
            {
              "name": "downloadVideo",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "quality",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getCuratedPhotos",
          "description": "Description not available",
          "parameters": [
            {
              "name": "getCuratedPhotos",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "perPage",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getPhoto",
          "description": "Description not available",
          "parameters": [
            {
              "name": "getPhoto",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "searchVideos",
          "description": "Description not available",
          "parameters": [
            {
              "name": "size",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "locale",
              "required": false,
              "type": "string"
            },
            {
              "name": "perPage",
              "required": false,
              "type": "string"
            },
            {
              "name": "orientation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getPopularVideos",
          "description": "Description not available",
          "parameters": [
            {
              "name": "perPage",
              "required": false,
              "type": "string"
            },
            {
              "name": "minWidth",
              "required": false,
              "type": "string"
            },
            {
              "name": "minHeight",
              "required": false,
              "type": "string"
            },
            {
              "name": "maxDuration",
              "required": false,
              "type": "string"
            },
            {
              "name": "minDuration",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getVideo",
          "description": "Description not available",
          "parameters": [
            {
              "name": "getVideo",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getFeaturedCollections",
          "description": "Description not available",
          "parameters": [
            {
              "name": "getFeaturedCollections",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "perPage",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getCollectionMedia",
          "description": "Description not available",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "sort",
              "required": false,
              "type": "string"
            },
            {
              "name": "type",
              "required": false,
              "type": "string"
            },
            {
              "name": "perPage",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "setApiKey",
          "description": "Description not available",
          "parameters": [
            {
              "name": "setApiKey",
              "required": false,
              "type": "string"
            },
            {
              "name": "apiKey",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@CaullenOmdahl/pexels-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "pexelsApiKey",
          "required": true,
          "description": "Pexels API key for authenticating requests"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@CaullenOmdahl/pexels-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0105.@CaullenOmdahl_pexels-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 102
  }
}