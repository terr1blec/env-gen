{
  "labels": {
    "analysis": "The Jenkins MCP Server is designed to manage and interact with Jenkins CI/CD pipelines. It provides tools to list Jenkins jobs, trigger builds, and check build statuses, which are core operations in continuous integration and software development workflows. This server primarily serves as an interface for automating and monitoring Jenkins operations, making it well-suited for development and deployment workflows.",
    "reasoning": "The primary label is \"Development Tools\" since Jenkins is a core tool in software development, and this MCP focuses on managing Jenkins jobs and builds. Secondary labels include \"API Integration\" because it interacts with Jenkins' API to perform operations, and \"Automation\" is relevant due to its build-triggering capabilities. No custom label is needed as the predefined categories adequately cover the functionality.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "API Integration",
      "Browser Automation"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1945,
    "server_name": "Jenkins MCP",
    "rank_by_usage": 1946,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@kjozsa_jenkins-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@kjozsa/jenkins-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1945,
      "name": "Jenkins MCP",
      "author": "@kjozsa/jenkins-mcp",
      "overview": "Manage Jenkins operations efficiently.",
      "repository_url": "https://github.com/kjozsa/jenkins-mcp",
      "homepage": "https://smithery.ai/server/@kjozsa/jenkins-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@kjozsa_jenkins-mcp.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "list_jobs",
          "description": "Deploy Server Jenkins MCP @kjozsa/jenkins-mcp Try in Playground",
          "parameters": [
            {
              "name": "list_jobs",
              "required": false,
              "type": "string"
            },
            {
              "name": "List",
              "required": false,
              "type": "string"
            },
            {
              "name": "all",
              "required": false,
              "type": "string"
            },
            {
              "name": "Jenkins",
              "required": false,
              "type": "string"
            },
            {
              "name": "jobs",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "trigger_build",
          "description": "Trigger a Jenkins build Args: job_name: Name of the job to build",
          "parameters": []
        },
        {
          "name": "get_build_status",
          "description": "Get build status Args: job_name: Name of the job build_number: Build number to check, defaults to latest Returns: Build information dictionary",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@kjozsa/jenkins-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@kjozsa/jenkins-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1946.@kjozsa_jenkins-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1711
  }
}