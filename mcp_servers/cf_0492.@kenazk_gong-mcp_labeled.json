{
  "labels": {
    "analysis": "The Gong MCP Server is designed to interact with Gong's API to retrieve call recordings and transcripts, enhancing workflow efficiency by providing detailed call data. It features capabilities to list calls, retrieve transcripts (including speaker ID, topics, and timestamps), and integrate with Claude for improved data interaction. The server focuses on securely authenticating and filtering calls, making it particularly useful for business communication, customer service, and sales teams that rely on call analytics.",
    "reasoning": "The primary label \"API Integration\" is chosen because the server's core functionality revolves around accessing and interacting with Gong's API. \"Communication Tools\" is a secondary label as the server deals with call data and transcripts, which are key components of communication. \"Content Creation\" is another secondary label because the transcripts can be used for creating content like reports, summaries, or analyses. No custom label is needed as the predefined labels sufficiently cover the server's functionality.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Communication Tools",
      "Content Creation"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 491,
    "server_name": "Gong MCP Server",
    "rank_by_usage": 492,
    "usage_count": "34",
    "original_file": "../crawler/smithery/@kenazk_gong-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@kenazk/gong-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 491,
      "name": "Gong MCP Server",
      "author": "@kenazk/gong-mcp",
      "overview": "Access Gong's API to retrieve call recordings and transcripts seamlessly. Integrate with Claude to enhance your data interaction capabilities through a standardized interface. Securely authenticate and filter calls with ease, improving your workflow efficiency.",
      "repository_url": "https://github.com/kenazk/gong-mcp",
      "homepage": "https://smithery.ai/server/@kenazk/gong-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "34",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@kenazk_gong-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "list_calls",
          "description": "Deploy Server Gong MCP Server Claim Server @kenazk/gong-mcp Try in Playground",
          "parameters": []
        },
        {
          "name": "retrieve_transcripts",
          "description": "Retrieve transcripts for specified call IDs. Returns detailed transcripts including speaker IDs, topics, and timestamped sentences.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@kenazk/gong-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "gongAccessKey",
          "required": true,
          "description": "Gong API access key"
        },
        {
          "name": "gongAccessSecret",
          "required": true,
          "description": "Gong API access secret"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@kenazk/gong-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0492.@kenazk_gong-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 482
  }
}