{
  "labels": {
    "analysis": "The MCP Server is designed to interact with Miro's online whiteboard application. It provides tools for listing boards, creating sticky notes and shapes, performing bulk operations, and querying frames and items within frames. The core functionality revolves around automating and integrating Miro whiteboard tasks, which are commonly used for collaborative planning, brainstorming, and visual organization in professional and educational settings.",
    "reasoning": "The primary label \"Collaboration & Whiteboard Tools\" is chosen because the server's main purpose is to automate and enhance interactions with Miro's whiteboard application, which is a collaboration tool. The secondary labels \"Content Creation\" and \"Productivity & Workflow Automation\" reflect the server's ability to assist in content creation (sticky notes, shapes) and automate repetitive tasks, enhancing productivity.",
    "primary_label": "Communication Tools",
    "secondary_labels": [
      "Content Creation",
      "Browser Automation"
    ],
    "custom_label": "Miro Board Automation",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2093,
    "server_name": "MIRO Whiteboard Connector",
    "rank_by_usage": 2094,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@ferran9908_mcp-miro.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ferran9908/mcp-miro/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2093,
      "name": "MIRO Whiteboard Connector",
      "author": "@ferran9908/mcp-miro",
      "overview": "Connect to the MIRO Whiteboard Application to manipulate boards, create stickies and shapes, and perform bulk operations. Easily integrate with your workflow by passing your OAuth key and leverage prompts for board coordinate instructions. Enhance your productivity by automating MIRO board interactions through this server.",
      "repository_url": "https://github.com/ferran9908/mcp-miro",
      "homepage": "https://smithery.ai/server/@ferran9908/mcp-miro",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ferran9908_mcp-miro.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "list_boards",
          "description": "Deploy Server MIRO Whiteboard Connector @ferran9908/mcp-miro Try in Playground list_boards",
          "parameters": [
            {
              "name": "list_boards",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_sticky_note",
          "description": "Create a sticky note on a Miro board. By default, sticky notes are 199x228 and available in these colors: gray, light_yellow, yellow, orange, light_green, green, dark_green, cyan, light_pink, pink, violet, red, light_blue, blue, dark_blue, black.",
          "parameters": [
            {
              "name": "create_sticky_note",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "bulk_create_items",
          "description": "Create multiple items on a Miro board in a single transaction (max 20 items)",
          "parameters": [
            {
              "name": "bulk_create_items",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_frames",
          "description": "Get all frames from a Miro board",
          "parameters": [
            {
              "name": "get_frames",
              "required": false,
              "type": "string"
            },
            {
              "name": "boardId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_items_in_frame",
          "description": "Get all items contained within a specific frame on a Miro board",
          "parameters": [
            {
              "name": "boardId",
              "required": true,
              "type": "string"
            },
            {
              "name": "frameId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_shape",
          "description": "Create a shape on a Miro board. Available shapes include basic shapes (rectangle, circle, etc.) and flowchart shapes (process, decision, etc.). Standard geometry specs: width and height in pixels (default 200x200)",
          "parameters": [
            {
              "name": "create_shape",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ferran9908/mcp-miro/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "token",
          "required": true,
          "description": "Miro OAuth token for API access"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ferran9908/mcp-miro/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2094.@ferran9908_mcp-miro_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1823
  }
}