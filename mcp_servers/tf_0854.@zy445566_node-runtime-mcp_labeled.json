{
  "labels": {
    "analysis": "The MCP Server described is a Node.js Code Execution Server designed to run JavaScript code securely within a containerized environment. It provides dynamic code evaluation and interaction through a standardized protocol, enabling applications to integrate runtime capabilities. The primary tool is \"eval\" for executing JavaScript code, which suggests the server's core functionality is centered around code execution and runtime integration. The server is likely used for scenarios requiring on-demand script execution, such as automation, testing, or embedded functionality in applications.",
    "reasoning": "The primary label \"Development Tools\" is chosen because the server's core functionality revolves around executing and managing code, which aligns with development and scripting tasks. The secondary label \"API Integration\" is included due to the mention of a \"standardized protocol,\" indicating the server is likely designed to be integrated with other systems. No custom label is needed as the predefined categories cover the server's functionality adequately.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 853,
    "server_name": "Node.js Code Execution Server",
    "rank_by_usage": 854,
    "usage_count": "5",
    "original_file": "../crawler/smithery/@zy445566_node-runtime-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@zy445566/node-runtime-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "eval",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              }
            },
            "required": [
              "code"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "eval"
      ]
    },
    "server_info_crawled": {
      "id": 853,
      "name": "Node.js Code Execution Server",
      "author": "@zy445566/node-runtime-mcp",
      "overview": "Run JavaScript code securely within a Node.js container and retrieve the execution results. Enable dynamic code evaluation and interaction through a standardized protocol. Simplify integrating code runtime capabilities into your applications.",
      "repository_url": "https://github.com/zy445566/node-runtime-mcp",
      "homepage": "https://smithery.ai/server/@zy445566/node-runtime-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "5",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@zy445566_node-runtime-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "eval",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              }
            },
            "required": [
              "code"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@zy445566/node-runtime-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@zy445566/node-runtime-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0854.@zy445566_node-runtime-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 835
  }
}