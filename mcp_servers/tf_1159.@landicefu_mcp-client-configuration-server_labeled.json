{
  "labels": {
    "analysis": "The MCP Server is primarily designed to manage and automate configuration settings for multiple MCP clients. It allows users to synchronize server settings, retrieve configurations, list servers, and modify configurations across different AI assistants. The core functionality revolves around configuration management, which is essential for maintaining consistency, scalability, and efficient troubleshooting across distributed systems.",
    "reasoning": "The \"Configuration Management\" label is chosen as it directly reflects the server's primary functionality of managing and automating configurations. The \"Daily Productivity\" label is added because efficient configuration management enhances workflow and reduces setup time for end-users. The \"Operating System\" label is included because the tools allow interaction with the system's configuration files, although this is secondary to the primary focus.",
    "primary_label": "Others",
    "secondary_labels": [
      "Daily Productivity",
      "Operating System"
    ],
    "custom_label": "Configuration Management",
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1158,
    "server_name": "Client Configuration Server",
    "rank_by_usage": 1159,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@landicefu_mcp-client-configuration-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@landicefu/mcp-client-configuration-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_configuration_path",
          "description": "Get the path to the configuration file for a specific client",
          "input_schema": {
            "type": "object",
            "properties": {
              "client": {
                "type": "string",
                "description": "Client name (cline, roo_code, windsurf, claude)"
              }
            },
            "required": [
              "client"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_configuration",
          "description": "Get the entire configuration for a specific client",
          "input_schema": {
            "type": "object",
            "properties": {
              "client": {
                "type": "string",
                "description": "Client name (cline, roo_code, windsurf, claude)"
              }
            },
            "required": [
              "client"
            ]
          },
          "annotations": null
        },
        {
          "name": "list_servers",
          "description": "List all server names configured in a specific client",
          "input_schema": {
            "type": "object",
            "properties": {
              "client": {
                "type": "string",
                "description": "Client name (cline, roo_code, windsurf, claude)"
              }
            },
            "required": [
              "client"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_server_configuration",
          "description": "Get the configuration for a specific server from a client configuration",
          "input_schema": {
            "type": "object",
            "properties": {
              "client": {
                "type": "string",
                "description": "Client name (cline, roo_code, windsurf, claude)"
              },
              "server_name": {
                "type": "string",
                "description": "Name of the server to retrieve"
              }
            },
            "required": [
              "client",
              "server_name"
            ]
          },
          "annotations": null
        },
        {
          "name": "add_server_configuration",
          "description": "Add or update a server configuration in a client configuration",
          "input_schema": {
            "type": "object",
            "properties": {
              "client": {
                "type": "string",
                "description": "Client name (cline, roo_code, windsurf, claude)"
              },
              "server_name": {
                "type": "string",
                "description": "Name of the server to add or update"
              },
              "json_config": {
                "type": "object",
                "description": "Server configuration in JSON format"
              },
              "allow_override": {
                "type": "boolean",
                "description": "Whether to allow overriding an existing server configuration with the same name (default: false)",
                "default": false
              }
            },
            "required": [
              "client",
              "server_name",
              "json_config"
            ]
          },
          "annotations": null
        },
        {
          "name": "remove_server_configuration",
          "description": "Remove a server configuration from a client configuration",
          "input_schema": {
            "type": "object",
            "properties": {
              "client": {
                "type": "string",
                "description": "Client name (cline, roo_code, windsurf, claude)"
              },
              "server_name": {
                "type": "string",
                "description": "Name of the server to remove"
              }
            },
            "required": [
              "client",
              "server_name"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 6,
      "tool_names": [
        "get_configuration_path",
        "get_configuration",
        "list_servers",
        "get_server_configuration",
        "add_server_configuration",
        "remove_server_configuration"
      ]
    },
    "server_info_crawled": {
      "id": 1158,
      "name": "Client Configuration Server",
      "author": "@landicefu/mcp-client-configuration-server",
      "overview": "Manage and automate configurations for multiple MCP clients seamlessly. Synchronize server settings across different AI assistants with ease, enhancing your workflow and troubleshooting capabilities.",
      "repository_url": "https://github.com/landicefu/mcp-client-configuration-server",
      "homepage": "https://smithery.ai/server/@landicefu/mcp-client-configuration-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@landicefu_mcp-client-configuration-server.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "get_configuration_path",
          "description": "Get the path to the configuration file for a specific client",
          "input_schema": {
            "type": "object",
            "properties": {
              "client": {
                "type": "string",
                "description": "Client name (cline, roo_code, windsurf, claude)"
              }
            },
            "required": [
              "client"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_configuration",
          "description": "Get the entire configuration for a specific client",
          "input_schema": {
            "type": "object",
            "properties": {
              "client": {
                "type": "string",
                "description": "Client name (cline, roo_code, windsurf, claude)"
              }
            },
            "required": [
              "client"
            ]
          },
          "annotations": null
        },
        {
          "name": "list_servers",
          "description": "List all server names configured in a specific client",
          "input_schema": {
            "type": "object",
            "properties": {
              "client": {
                "type": "string",
                "description": "Client name (cline, roo_code, windsurf, claude)"
              }
            },
            "required": [
              "client"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_server_configuration",
          "description": "Get the configuration for a specific server from a client configuration",
          "input_schema": {
            "type": "object",
            "properties": {
              "client": {
                "type": "string",
                "description": "Client name (cline, roo_code, windsurf, claude)"
              },
              "server_name": {
                "type": "string",
                "description": "Name of the server to retrieve"
              }
            },
            "required": [
              "client",
              "server_name"
            ]
          },
          "annotations": null
        },
        {
          "name": "add_server_configuration",
          "description": "Add or update a server configuration in a client configuration",
          "input_schema": {
            "type": "object",
            "properties": {
              "client": {
                "type": "string",
                "description": "Client name (cline, roo_code, windsurf, claude)"
              },
              "server_name": {
                "type": "string",
                "description": "Name of the server to add or update"
              },
              "json_config": {
                "type": "object",
                "description": "Server configuration in JSON format"
              },
              "allow_override": {
                "type": "boolean",
                "description": "Whether to allow overriding an existing server configuration with the same name (default: false)",
                "default": false
              }
            },
            "required": [
              "client",
              "server_name",
              "json_config"
            ]
          },
          "annotations": null
        },
        {
          "name": "remove_server_configuration",
          "description": "Remove a server configuration from a client configuration",
          "input_schema": {
            "type": "object",
            "properties": {
              "client": {
                "type": "string",
                "description": "Client name (cline, roo_code, windsurf, claude)"
              },
              "server_name": {
                "type": "string",
                "description": "Name of the server to remove"
              }
            },
            "required": [
              "client",
              "server_name"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@landicefu/mcp-client-configuration-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@landicefu/mcp-client-configuration-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1159.@landicefu_mcp-client-configuration-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1131
  }
}