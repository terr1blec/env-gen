{
  "labels": {
    "analysis": "The MCP Server functions as a research assistant for arXiv.org, focusing on efficient search, exploration, and analysis of academic papers. Its core functionality includes crawling recent papers, keyword-based searches, retrieving paper metadata, and analyzing trends in specific research categories. The tools are designed to facilitate academic research by providing structured access to arXiv's content and enabling trend analysis.",
    "reasoning": "The primary label is selected because the server's main purpose is to assist with research activities, particularly in searching and analyzing academic papers. Secondary labels are chosen to reflect the server's capabilities in web scraping and trend analysis, which are integral to its research assistant functionality. No custom label is needed as the predefined categories adequately cover the server's features.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Browser Automation",
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 412,
    "server_name": "arXiv Research Assistant",
    "rank_by_usage": 413,
    "usage_count": "54",
    "original_file": "../crawler/smithery/@daheepk_arxiv-paper-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@daheepk/arxiv-paper-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "scrape_recent_category_papers",
          "description": "[크롤링] 특정 카테고리의 'recent' 페이지를 스크랩하여 최신 논문 목록을 가져옵니다.",
          "input_schema": {
            "properties": {
              "category": {
                "title": "Category",
                "type": "string"
              },
              "max_results": {
                "default": 10,
                "title": "Max Results",
                "type": "integer"
              }
            },
            "required": [
              "category"
            ],
            "title": "scrape_recent_category_papersArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_papers",
          "description": "키워드로 arXiv 논문을 검색합니다.",
          "input_schema": {
            "properties": {
              "keyword": {
                "title": "Keyword",
                "type": "string"
              },
              "max_results": {
                "default": 5,
                "title": "Max Results",
                "type": "integer"
              }
            },
            "required": [
              "keyword"
            ],
            "title": "search_papersArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_paper_info",
          "description": "논문 ID로 상세 정보를 가져옵니다.",
          "input_schema": {
            "properties": {
              "paper_id": {
                "title": "Paper Id",
                "type": "string"
              }
            },
            "required": [
              "paper_id"
            ],
            "title": "get_paper_infoArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "analyze_trends",
          "description": "특정 카테고리의 최신 트렌드를 분석합니다.",
          "input_schema": {
            "properties": {
              "category": {
                "default": "cs.AI",
                "title": "Category",
                "type": "string"
              },
              "days": {
                "default": 30,
                "title": "Days",
                "type": "integer"
              }
            },
            "title": "analyze_trendsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 4,
      "tool_names": [
        "scrape_recent_category_papers",
        "search_papers",
        "get_paper_info",
        "analyze_trends"
      ]
    },
    "server_info_crawled": {
      "id": 412,
      "name": "arXiv Research Assistant",
      "author": "@daheepk/arxiv-paper-mcp",
      "overview": "Enable efficient search, exploration, and comparison of arXiv.org research papers through a local MCP server. Access detailed paper metadata, perform keyword and author-based searches, and generate prompts for summarization and comparison. Stay updated with trending topics in various research categories.",
      "repository_url": "https://github.com/daheepk/arxiv-paper-mcp",
      "homepage": "https://smithery.ai/server/@daheepk/arxiv-paper-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "54",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@daheepk_arxiv-paper-mcp.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "scrape_recent_category_papers",
          "description": "[크롤링] 특정 카테고리의 'recent' 페이지를 스크랩하여 최신 논문 목록을 가져옵니다.",
          "input_schema": {
            "properties": {
              "category": {
                "title": "Category",
                "type": "string"
              },
              "max_results": {
                "default": 10,
                "title": "Max Results",
                "type": "integer"
              }
            },
            "required": [
              "category"
            ],
            "title": "scrape_recent_category_papersArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_papers",
          "description": "키워드로 arXiv 논문을 검색합니다.",
          "input_schema": {
            "properties": {
              "keyword": {
                "title": "Keyword",
                "type": "string"
              },
              "max_results": {
                "default": 5,
                "title": "Max Results",
                "type": "integer"
              }
            },
            "required": [
              "keyword"
            ],
            "title": "search_papersArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_paper_info",
          "description": "논문 ID로 상세 정보를 가져옵니다.",
          "input_schema": {
            "properties": {
              "paper_id": {
                "title": "Paper Id",
                "type": "string"
              }
            },
            "required": [
              "paper_id"
            ],
            "title": "get_paper_infoArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "analyze_trends",
          "description": "특정 카테고리의 최신 트렌드를 분석합니다.",
          "input_schema": {
            "properties": {
              "category": {
                "default": "cs.AI",
                "title": "Category",
                "type": "string"
              },
              "days": {
                "default": 30,
                "title": "Days",
                "type": "integer"
              }
            },
            "title": "analyze_trendsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@daheepk/arxiv-paper-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@daheepk/arxiv-paper-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0413.@daheepk_arxiv-paper-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 407
  }
}