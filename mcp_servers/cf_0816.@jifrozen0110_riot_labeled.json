{
  "labels": {
    "analysis": "The MCP Server specializes in obtaining and processing real-time League of Legends player data through the Riot Games API. Its tools enable AI assistants to retrieve information such as player summaries, ranked statistics, champion mastery levels, recent match histories, and detailed match summaries. This server enhances gaming knowledge by providing detailed and up-to-date game data via natural language queries.",
    "reasoning": "The **Gaming** label was chosen as the primary label due to the server's core focus on providing League of Legends player and match data, which is directly related to gaming. The **Data Analysis & Processing** label is added as a secondary label since the server processes and presents structured game data. No custom label is needed as the functionality fits well within the predefined categories.",
    "primary_label": "Gaming",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 815,
    "server_name": "Riot Server",
    "rank_by_usage": 816,
    "usage_count": "6",
    "original_file": "../crawler/smithery/@jifrozen0110_riot.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@jifrozen0110/riot/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 815,
      "name": "Riot Server",
      "author": "@jifrozen0110/riot",
      "overview": "Provide AI assistants with real-time League of Legends data by integrating with the Riot Games API. Retrieve player summaries, ranked stats, champion mastery, recent matches, and match summaries through natural language queries. Enhance your AI's gaming knowledge with detailed and up-to-date game information.",
      "repository_url": "https://github.com/jifrozen0110/mcp-riot",
      "homepage": "https://smithery.ai/server/@jifrozen0110/riot",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "6",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@jifrozen0110_riot.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "get_top_champions_tool",
          "description": "Deploy Server Riot Server @jifrozen0110/riot Try in Playground get_top_champions_tool",
          "parameters": []
        },
        {
          "name": "get_recent_matches_tool",
          "description": "üïπÔ∏è Get the player's recent match history. Returns a brief summary of the player's most recent matches, including champion, score, and result.",
          "parameters": []
        },
        {
          "name": "get_champion_mastery_tool",
          "description": "üéØ Get the player's mastery info for a specific champion. Returns detailed mastery data (level, points, last play time, etc.) for the requested champion.",
          "parameters": []
        },
        {
          "name": "get_player_summary",
          "description": "üßæ Get a complete summary of a player's profile. Includes level, solo rank, top champion masteries, and recent matches in a single output.",
          "parameters": []
        },
        {
          "name": "get_match_summary",
          "description": "üìä Get a detailed summary of a specific match for a given player. Extracts and returns only the relevant stats (KDA, damage, vision, win/loss, etc.) from the match.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@jifrozen0110/riot/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "riotApiKey",
          "required": true,
          "description": "Riot API key for accessing Riot Games API"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@jifrozen0110/riot/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0816.@jifrozen0110_riot_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 797
  }
}