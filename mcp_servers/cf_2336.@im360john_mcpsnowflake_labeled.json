{
  "labels": {
    "analysis": "The MCP Snowflake Database Server is primarily designed to facilitate interaction with Snowflake databases through SQL operations. It allows users to list databases, schemas, and tables, as well as execute SELECT queries and describe table structures. Additionally, it supports appending data insights to a memo, suggesting a layer of data analysis or documentation functionality. The server is geared toward data management, querying, and extracting insights from Snowflake databases.",
    "reasoning": "The primary label \"Database Operations\" is chosen because the core functionality revolves around querying, managing, and extracting data from Snowflake databases, which aligns with database management tasks. The secondary label \"Data Analysis & Processing\" is selected due to the capability of appending data insights, indicating some level of data interpretation. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2335,
    "server_name": "Snowflake Database Server",
    "rank_by_usage": 2336,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@im360john_mcpsnowflake.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@im360john/mcpsnowflake/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2335,
      "name": "Snowflake Database Server",
      "author": "@im360john/mcpsnowflake",
      "overview": "Enable seamless interaction with Snowflake databases by running SQL queries, managing schemas, and extracting data insights. Execute read and write operations securely with optional write permissions. Access continuously updated data insights and schema context as resources for enhanced data understanding.",
      "repository_url": "https://github.com/im360john/mcpsnowflake",
      "homepage": "https://smithery.ai/server/@im360john/mcpsnowflake",
      "remote_or_local": "Remote",
      "license": "GPL-3.0",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@im360john_mcpsnowflake.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "list_databases",
          "description": "Deploy Server Snowflake Database Server @im360john/mcpsnowflake Try in Playground list_databases",
          "parameters": [
            {
              "name": "list_databases",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_schemas",
          "description": "List all schemas in a database",
          "parameters": [
            {
              "name": "list_schemas",
              "required": false,
              "type": "string"
            },
            {
              "name": "database",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_tables",
          "description": "List all tables in a specific database and schema",
          "parameters": [
            {
              "name": "schema",
              "required": true,
              "type": "string"
            },
            {
              "name": "database",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "describe_table",
          "description": "Get the schema information for a specific table",
          "parameters": [
            {
              "name": "describe_table",
              "required": false,
              "type": "string"
            },
            {
              "name": "table_name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "read_query",
          "description": "Execute a SELECT query.",
          "parameters": [
            {
              "name": "read_query",
              "required": false,
              "type": "string"
            },
            {
              "name": "Execute",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "SELECT",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "append_insight",
          "description": "Add a data insight to the memo",
          "parameters": [
            {
              "name": "append_insight",
              "required": false,
              "type": "string"
            },
            {
              "name": "insight",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@im360john/mcpsnowflake/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@im360john/mcpsnowflake/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2336.@im360john_mcpsnowflake_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 2008
  }
}