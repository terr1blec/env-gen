{
  "labels": {
    "analysis": "The MCP Server described is primarily focused on enabling Prolog execution and querying, which are core functionalities of a logic programming environment. Prolog is a general-purpose logic programming language associated with artificial intelligence and computational linguistics. The tools provided (discover, exec, query) allow users to interact with the Prolog engine by listing available predicates, executing Prolog programs, and querying the knowledge base. This indicates that the server is intended for tasks requiring symbolic reasoning, rule-based programming, and inference.",
    "reasoning": "The primary label \"AI/ML Tools\" is chosen because Prolog is often used in AI applications for tasks such as theorem proving, natural language processing, and symbolic reasoning. The secondary label \"Development Tools\" is appropriate as the server aids in the development process by providing a way to execute and query Prolog code, which is beneficial for programmatic integration and automation. The custom label \"Logic Programming\" is added to specifically describe the unique Prolog-based functionality, which is not directly covered by the other predefined categories.",
    "primary_label": "AI/ML Tools",
    "secondary_labels": [
      "Development Tools"
    ],
    "custom_label": "Logic Programming",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 509,
    "server_name": "Prolog Execution and Querying",
    "rank_by_usage": 510,
    "usage_count": "30",
    "original_file": "../crawler/smithery/@snoglobe_prolog_mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@snoglobe/prolog_mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "discover",
          "description": "Shows the available predicates in the prolog engine",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "exec",
          "description": "Execute a prolog program",
          "input_schema": {
            "type": "object",
            "properties": {
              "program": {
                "description": "The prolog program to execute",
                "type": "string"
              }
            },
            "required": [
              "program"
            ]
          },
          "annotations": null
        },
        {
          "name": "query",
          "description": "Query the prolog engine",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "description": "The query to execute",
                "type": "string"
              }
            },
            "required": [
              "query"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 3,
      "tool_names": [
        "discover",
        "exec",
        "query"
      ]
    },
    "server_info_crawled": {
      "id": 509,
      "name": "Prolog Execution and Querying",
      "author": "@snoglobe/prolog_mcp",
      "overview": "Execute Prolog code and query predicates seamlessly. Enhance your applications with powerful logic programming capabilities. Simplify your development process by integrating Prolog's reasoning abilities directly into your workflows.",
      "repository_url": "https://github.com/snoglobe/prolog_mcp",
      "homepage": "https://smithery.ai/server/@snoglobe/prolog_mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "30",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@snoglobe_prolog_mcp.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "discover",
          "description": "Shows the available predicates in the prolog engine",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "exec",
          "description": "Execute a prolog program",
          "input_schema": {
            "type": "object",
            "properties": {
              "program": {
                "description": "The prolog program to execute",
                "type": "string"
              }
            },
            "required": [
              "program"
            ]
          },
          "annotations": null
        },
        {
          "name": "query",
          "description": "Query the prolog engine",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "description": "The query to execute",
                "type": "string"
              }
            },
            "required": [
              "query"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@snoglobe/prolog_mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@snoglobe/prolog_mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0510.@snoglobe_prolog_mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 499
  }
}