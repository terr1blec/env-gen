{
  "labels": {
    "analysis": "The MCP Server described accesses Unsplash, a platform with a vast library of high-quality images. Its primary functionality revolves around providing access to Unsplash's API to fetch images for integration into applications. The only available tool, \"search_photos,\" suggests that the main use case is searching for and retrieving photos. This enhances visual content and user engagement in various applications.",
    "reasoning": "The server is primarily a tool for accessing and utilizing a media library (Unsplash), making it central to content creation, particularly visual content. The predefined category \"Content Creation\" best represents this functionality as it involves using images to enhance applications. Additional use cases could involve integration with other platforms, hence \"API Integration\" as a secondary label. Since the server's focus is very specific, no custom label is needed.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 120,
    "server_name": "Unsplash Server",
    "rank_by_usage": 121,
    "usage_count": "546",
    "original_file": "../crawler/smithery/@douglarek_unsplash-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@douglarek/unsplash-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 120,
      "name": "Unsplash Server",
      "author": "@douglarek/unsplash-mcp-server",
      "overview": "Access a vast library of high-quality images from Unsplash. Integrate effortlessly with your applications to enhance visual content and user engagement. Utilize the power of Unsplash's API to fetch stunning images on demand.",
      "repository_url": "https://github.com/douglarek/unsplash-mcp-server",
      "homepage": "https://smithery.ai/server/@douglarek/unsplash-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "546",
      "success_rate": "99.62%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@douglarek_unsplash-mcp-server.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "search_photos",
          "description": "Deploy Server Unsplash Server @douglarek/unsplash-mcp-server Try in Playground search_photos",
          "parameters": [
            {
              "name": "color",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "order_by",
              "required": true,
              "type": "string"
            },
            {
              "name": "per_page",
              "required": true,
              "type": "string"
            },
            {
              "name": "orientation",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@douglarek/unsplash-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "unsplashAccessKey",
          "required": true,
          "description": "Your Unsplash API access key."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@douglarek/unsplash-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0121.@douglarek_unsplash-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 118
  }
}