{
  "labels": {
    "analysis": "The MCP Server is designed to connect applications to Kakao Local API and Kakao Map, providing location-based data and services. Its core functionality revolves around accessing and querying location data such as place coordinates, search by keywords, categories, and detailed place information. This enables seamless integration with Kakao's mapping and local search capabilities, solving problems related to geospatial data retrieval and place information management.",
    "reasoning": "The primary label \"Travel & Maps\" was chosen because the server's core functionality is centered around location-based services and mapping, which aligns with navigation and place-based information. The secondary label \"API Integration\" was selected due to its role in integrating with Kakao's APIs. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Travel & Maps",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1576,
    "server_name": "Kakao Local API Connector",
    "rank_by_usage": 1577,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@yunkee-lee_mcp-kakao-local.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@yunkee-lee/mcp-kakao-local/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1576,
      "name": "Kakao Local API Connector",
      "author": "@yunkee-lee/mcp-kakao-local",
      "overview": "Connect to Kakao Local API and Kakao Map to access location-based data and services. Enable your applications to query and interact with Kakao's local search and mapping capabilities seamlessly. Simplify integration with Kakao's location services through this MCP server.",
      "repository_url": "https://github.com/yunkee-lee/mcp-kakao-local",
      "homepage": "https://smithery.ai/server/@yunkee-lee/mcp-kakao-local",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@yunkee-lee_mcp-kakao-local.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "find_coordinates",
          "description": "Deploy Server Kakao Local API Connector Claim Server @yunkee-lee/mcp-kakao-local Try in Playground find_coordinates",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "address",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_by_keyword",
          "description": "Searches for places related to the keyword",
          "parameters": []
        },
        {
          "name": "search_by_category",
          "description": "Searches for places with matching category group code",
          "parameters": []
        },
        {
          "name": "get_place",
          "description": "Fetches details for a place such as name, address, reviews, photos and etc",
          "parameters": [
            {
              "name": "get_place",
              "required": false,
              "type": "string"
            },
            {
              "name": "place_id",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@yunkee-lee/mcp-kakao-local/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "restApiKey",
          "required": true,
          "description": "Kakao REST API Key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@yunkee-lee/mcp-kakao-local/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1577.@yunkee-lee_mcp-kakao-local_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1441
  }
}