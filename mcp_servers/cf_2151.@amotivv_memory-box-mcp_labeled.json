{
  "labels": {
    "analysis": "The Memory Box MCP Server is designed to enhance memory management by allowing users to save, organize, and retrieve memories with semantic understanding. It provides tools for semantic search, structured formatting, and usage statistics, making it particularly useful for organizing and recalling information efficiently. The server leverages advanced semantic search capabilities to improve the retrieval of memories, and it includes features for managing memories in buckets or collections.",
    "reasoning": "The primary label, \"Memory Management,\" is chosen because the server's core functionality revolves around saving, searching, and organizing memories, which is a key aspect of memory management. The secondary labels, \"Web Search & Research\" and \"Data Analysis & Processing,\" are included because the semantic search capabilities are similar to researching information, and the ability to format and analyze memories aligns with data processing. No custom label is needed as the predefined labels adequately cover the server's functionality.",
    "primary_label": "Memory Management",
    "secondary_labels": [
      "Web Search & Research",
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2150,
    "server_name": "Memory Box MCP Server",
    "rank_by_usage": 2151,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@amotivv_memory-box-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@amotivv/memory-box-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2150,
      "name": "Memory Box MCP Server",
      "author": "@amotivv/memory-box-mcp",
      "overview": "Save, search, and format memories with semantic understanding. Enhance your memory management by leveraging advanced semantic search capabilities directly from Cline. Organize and retrieve your memories efficiently with structured formatting and detailed context.",
      "repository_url": "https://github.com/amotivv/memory-box-mcp",
      "homepage": "https://smithery.ai/server/@amotivv/memory-box-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@amotivv_memory-box-mcp.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "save_memory",
          "description": "Deploy Server Memory Box MCP Server @amotivv/memory-box-mcp Try in Playground save_memory",
          "parameters": [
            {
              "name": "save_memory",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_memories",
          "description": "Search for memories using semantic search",
          "parameters": [
            {
              "name": "debug",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_all_memories",
          "description": "Retrieve all memories",
          "parameters": [
            {
              "name": "get_all_memories",
              "required": false,
              "type": "string"
            },
            {
              "name": "Retrieve",
              "required": false,
              "type": "string"
            },
            {
              "name": "all",
              "required": false,
              "type": "string"
            },
            {
              "name": "memories",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_bucket_memories",
          "description": "Get memories from a specific bucket",
          "parameters": [
            {
              "name": "get_bucket_memories",
              "required": false,
              "type": "string"
            },
            {
              "name": "bucket_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "format_memory",
          "description": "Format a text according to the memory system prompt without saving",
          "parameters": [
            {
              "name": "text",
              "required": true,
              "type": "string"
            },
            {
              "name": "type",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_usage_stats",
          "description": "Retrieve user usage statistics and plan information",
          "parameters": [
            {
              "name": "get_usage_stats",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@amotivv/memory-box-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "memoryBoxToken",
          "required": true,
          "description": "Token for authenticating with the Memory Box instance."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@amotivv/memory-box-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2151.@amotivv_memory-box-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1860
  }
}