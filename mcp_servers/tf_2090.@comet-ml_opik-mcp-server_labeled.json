{
  "labels": {
    "analysis": "The Opik MCP Server provides a centralized platform for managing prompts, projects, and metrics associated with the Opik ecosystem. Its core functionality revolves around organizing and manipulating Opik-related resources, offering tools for creating, retrieving, updating, and deleting prompts and projects. Additionally, it provides access to metrics, tracing information, and contextual help. The server's primary use case appears to be facilitating developer and user interactions with the Opik platform through a standardized protocol.",
    "reasoning": "The primary label \"Development Tools\" was chosen because the server is intended to integrate with IDEs and provides programmatic access to manage prompts, projects, and metricsâ€”key aspects of software development workflows. The secondary label \"Memory Management\" is appropriate due to the tools for managing prompts and projects, which can be seen as organizational data structures. The secondary label \"API Integration\" was selected because the server offers help and examples specifically for using Opik Comet's API, indicating a focus on programmatic interaction.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Memory Management",
      "API Integration"
    ],
    "custom_label": "Prompt Management",
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2089,
    "server_name": "Opik MCP Server",
    "rank_by_usage": 2090,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@comet-ml_opik-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@comet-ml/opik-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "list-prompts",
          "description": "Get a list of Opik prompts",
          "input_schema": {
            "type": "object",
            "properties": {
              "page": {
                "type": "number",
                "description": "Page number for pagination"
              },
              "size": {
                "type": "number",
                "description": "Number of items per page"
              }
            },
            "required": [
              "page",
              "size"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create-prompt",
          "description": "Create a new prompt",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the prompt"
              }
            },
            "required": [
              "name"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create-prompt-version",
          "description": "Create a new version of a prompt",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the original prompt"
              },
              "template": {
                "type": "string",
                "description": "Template content for the prompt version"
              },
              "commit_message": {
                "type": "string",
                "description": "Commit message for the prompt version"
              }
            },
            "required": [
              "name",
              "template",
              "commit_message"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-prompt-by-id",
          "description": "Get a single prompt by ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "promptId": {
                "type": "string",
                "description": "ID of the prompt to fetch"
              }
            },
            "required": [
              "promptId"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "update-prompt",
          "description": "Update a prompt",
          "input_schema": {
            "type": "object",
            "properties": {
              "promptId": {
                "type": "string",
                "description": "ID of the prompt to update"
              },
              "name": {
                "type": "string",
                "description": "New name for the prompt"
              }
            },
            "required": [
              "promptId",
              "name"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "delete-prompt",
          "description": "Delete a prompt",
          "input_schema": {
            "type": "object",
            "properties": {
              "promptId": {
                "type": "string",
                "description": "ID of the prompt to delete"
              }
            },
            "required": [
              "promptId"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "list-projects",
          "description": "Get a list of projects/workspaces",
          "input_schema": {
            "type": "object",
            "properties": {
              "page": {
                "type": "number",
                "description": "Page number for pagination"
              },
              "size": {
                "type": "number",
                "description": "Number of items per page"
              },
              "sortBy": {
                "type": "string",
                "description": "Sort projects by this field"
              },
              "sortOrder": {
                "type": "string",
                "description": "Sort order (asc or desc)"
              },
              "workspaceName": {
                "type": "string",
                "description": "Workspace name to use instead of the default"
              }
            },
            "required": [
              "page",
              "size"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-project-by-id",
          "description": "Get a single project by ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "string",
                "description": "ID of the project to fetch"
              },
              "workspaceName": {
                "type": "string",
                "description": "Workspace name to use instead of the default"
              }
            },
            "required": [
              "projectId"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create-project",
          "description": "Create a new project/workspace",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the project"
              },
              "description": {
                "type": "string",
                "description": "Description of the project"
              },
              "workspaceName": {
                "type": "string",
                "description": "Workspace name to use instead of the default"
              }
            },
            "required": [
              "name"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "update-project",
          "description": "Update a project",
          "input_schema": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "string",
                "description": "ID of the project to update"
              },
              "name": {
                "type": "string",
                "description": "New project name"
              },
              "workspaceName": {
                "type": "string",
                "description": "Workspace name to use instead of the default"
              },
              "description": {
                "type": "string",
                "description": "New project description"
              }
            },
            "required": [
              "projectId"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "delete-project",
          "description": "Delete a project",
          "input_schema": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "string",
                "description": "ID of the project to delete"
              },
              "workspaceName": {
                "type": "string",
                "description": "Workspace name to use instead of the default"
              }
            },
            "required": [
              "projectId"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "list-traces",
          "description": "Get a list of traces",
          "input_schema": {
            "type": "object",
            "properties": {
              "page": {
                "type": "number",
                "description": "Page number for pagination"
              },
              "size": {
                "type": "number",
                "description": "Number of items per page"
              },
              "projectId": {
                "type": "string",
                "description": "Project ID to filter traces"
              },
              "projectName": {
                "type": "string",
                "description": "Project name to filter traces"
              },
              "workspaceName": {
                "type": "string",
                "description": "Workspace name to use instead of the default"
              }
            },
            "required": [
              "page",
              "size"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-trace-by-id",
          "description": "Get a single trace by ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "traceId": {
                "type": "string",
                "description": "ID of the trace to fetch"
              },
              "workspaceName": {
                "type": "string",
                "description": "Workspace name to use instead of the default"
              }
            },
            "required": [
              "traceId"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-trace-stats",
          "description": "Get statistics for traces",
          "input_schema": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "string",
                "description": "Project ID to filter traces"
              },
              "projectName": {
                "type": "string",
                "description": "Project name to filter traces"
              },
              "startDate": {
                "type": "string",
                "description": "Start date in ISO format (YYYY-MM-DD)"
              },
              "endDate": {
                "type": "string",
                "description": "End date in ISO format (YYYY-MM-DD)"
              },
              "workspaceName": {
                "type": "string",
                "description": "Workspace name to use instead of the default"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-metrics",
          "description": "Get metrics data",
          "input_schema": {
            "type": "object",
            "properties": {
              "metricName": {
                "type": "string",
                "description": "Optional metric name to filter"
              },
              "projectId": {
                "type": "string",
                "description": "Optional project ID to filter metrics"
              },
              "projectName": {
                "type": "string",
                "description": "Optional project name to filter metrics"
              },
              "startDate": {
                "type": "string",
                "description": "Start date in ISO format (YYYY-MM-DD)"
              },
              "endDate": {
                "type": "string",
                "description": "End date in ISO format (YYYY-MM-DD)"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-server-info",
          "description": "Get information about the Opik server configuration",
          "input_schema": {
            "type": "object",
            "properties": {
              "random_string": {
                "type": "string",
                "description": "Dummy parameter for no-parameter tools"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-opik-help",
          "description": "Get contextual help about Opik Comet's capabilities",
          "input_schema": {
            "type": "object",
            "properties": {
              "topic": {
                "type": "string",
                "description": "The topic to get help about (prompts, projects, traces, metrics, or general)"
              },
              "subtopic": {
                "type": "string",
                "description": "Optional subtopic for more specific help"
              }
            },
            "required": [
              "topic"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-opik-examples",
          "description": "Get examples of how to use Opik Comet's API for specific tasks",
          "input_schema": {
            "type": "object",
            "properties": {
              "task": {
                "type": "string",
                "description": "The task to get examples for (e.g., 'create prompt', 'analyze traces', 'monitor costs')"
              }
            },
            "required": [
              "task"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-opik-tracing-info",
          "description": "Get information about Opik's tracing capabilities and how to use them",
          "input_schema": {
            "type": "object",
            "properties": {
              "topic": {
                "type": "string",
                "description": "Optional specific tracing topic to get information about (e.g., 'spans', 'distributed', 'multimodal', 'annotations')"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 19,
      "tool_names": [
        "list-prompts",
        "create-prompt",
        "create-prompt-version",
        "get-prompt-by-id",
        "update-prompt",
        "delete-prompt",
        "list-projects",
        "get-project-by-id",
        "create-project",
        "update-project",
        "delete-project",
        "list-traces",
        "get-trace-by-id",
        "get-trace-stats",
        "get-metrics",
        "get-server-info",
        "get-opik-help",
        "get-opik-examples",
        "get-opik-tracing-info"
      ]
    },
    "server_info_crawled": {
      "id": 2089,
      "name": "Opik MCP Server",
      "author": "@comet-ml/opik-mcp-server",
      "overview": "Integrate seamlessly with your IDE and access all Opik features through a standardized protocol. Manage prompts, projects, and metrics efficiently with a unified interface. Leverage multiple transport options for flexible integration into various environments.",
      "repository_url": "https://github.com/comet-ml/opik-mcp",
      "homepage": "https://smithery.ai/server/@comet-ml/opik-mcp-server",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@comet-ml_opik-mcp-server.json",
      "tools_count": 19,
      "tools": [
        {
          "name": "list-prompts",
          "description": "Get a list of Opik prompts",
          "input_schema": {
            "type": "object",
            "properties": {
              "page": {
                "type": "number",
                "description": "Page number for pagination"
              },
              "size": {
                "type": "number",
                "description": "Number of items per page"
              }
            },
            "required": [
              "page",
              "size"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create-prompt",
          "description": "Create a new prompt",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the prompt"
              }
            },
            "required": [
              "name"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create-prompt-version",
          "description": "Create a new version of a prompt",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the original prompt"
              },
              "template": {
                "type": "string",
                "description": "Template content for the prompt version"
              },
              "commit_message": {
                "type": "string",
                "description": "Commit message for the prompt version"
              }
            },
            "required": [
              "name",
              "template",
              "commit_message"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-prompt-by-id",
          "description": "Get a single prompt by ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "promptId": {
                "type": "string",
                "description": "ID of the prompt to fetch"
              }
            },
            "required": [
              "promptId"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "update-prompt",
          "description": "Update a prompt",
          "input_schema": {
            "type": "object",
            "properties": {
              "promptId": {
                "type": "string",
                "description": "ID of the prompt to update"
              },
              "name": {
                "type": "string",
                "description": "New name for the prompt"
              }
            },
            "required": [
              "promptId",
              "name"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "delete-prompt",
          "description": "Delete a prompt",
          "input_schema": {
            "type": "object",
            "properties": {
              "promptId": {
                "type": "string",
                "description": "ID of the prompt to delete"
              }
            },
            "required": [
              "promptId"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "list-projects",
          "description": "Get a list of projects/workspaces",
          "input_schema": {
            "type": "object",
            "properties": {
              "page": {
                "type": "number",
                "description": "Page number for pagination"
              },
              "size": {
                "type": "number",
                "description": "Number of items per page"
              },
              "sortBy": {
                "type": "string",
                "description": "Sort projects by this field"
              },
              "sortOrder": {
                "type": "string",
                "description": "Sort order (asc or desc)"
              },
              "workspaceName": {
                "type": "string",
                "description": "Workspace name to use instead of the default"
              }
            },
            "required": [
              "page",
              "size"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-project-by-id",
          "description": "Get a single project by ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "string",
                "description": "ID of the project to fetch"
              },
              "workspaceName": {
                "type": "string",
                "description": "Workspace name to use instead of the default"
              }
            },
            "required": [
              "projectId"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create-project",
          "description": "Create a new project/workspace",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the project"
              },
              "description": {
                "type": "string",
                "description": "Description of the project"
              },
              "workspaceName": {
                "type": "string",
                "description": "Workspace name to use instead of the default"
              }
            },
            "required": [
              "name"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "update-project",
          "description": "Update a project",
          "input_schema": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "string",
                "description": "ID of the project to update"
              },
              "name": {
                "type": "string",
                "description": "New project name"
              },
              "workspaceName": {
                "type": "string",
                "description": "Workspace name to use instead of the default"
              },
              "description": {
                "type": "string",
                "description": "New project description"
              }
            },
            "required": [
              "projectId"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "delete-project",
          "description": "Delete a project",
          "input_schema": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "string",
                "description": "ID of the project to delete"
              },
              "workspaceName": {
                "type": "string",
                "description": "Workspace name to use instead of the default"
              }
            },
            "required": [
              "projectId"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "list-traces",
          "description": "Get a list of traces",
          "input_schema": {
            "type": "object",
            "properties": {
              "page": {
                "type": "number",
                "description": "Page number for pagination"
              },
              "size": {
                "type": "number",
                "description": "Number of items per page"
              },
              "projectId": {
                "type": "string",
                "description": "Project ID to filter traces"
              },
              "projectName": {
                "type": "string",
                "description": "Project name to filter traces"
              },
              "workspaceName": {
                "type": "string",
                "description": "Workspace name to use instead of the default"
              }
            },
            "required": [
              "page",
              "size"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-trace-by-id",
          "description": "Get a single trace by ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "traceId": {
                "type": "string",
                "description": "ID of the trace to fetch"
              },
              "workspaceName": {
                "type": "string",
                "description": "Workspace name to use instead of the default"
              }
            },
            "required": [
              "traceId"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-trace-stats",
          "description": "Get statistics for traces",
          "input_schema": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "string",
                "description": "Project ID to filter traces"
              },
              "projectName": {
                "type": "string",
                "description": "Project name to filter traces"
              },
              "startDate": {
                "type": "string",
                "description": "Start date in ISO format (YYYY-MM-DD)"
              },
              "endDate": {
                "type": "string",
                "description": "End date in ISO format (YYYY-MM-DD)"
              },
              "workspaceName": {
                "type": "string",
                "description": "Workspace name to use instead of the default"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-metrics",
          "description": "Get metrics data",
          "input_schema": {
            "type": "object",
            "properties": {
              "metricName": {
                "type": "string",
                "description": "Optional metric name to filter"
              },
              "projectId": {
                "type": "string",
                "description": "Optional project ID to filter metrics"
              },
              "projectName": {
                "type": "string",
                "description": "Optional project name to filter metrics"
              },
              "startDate": {
                "type": "string",
                "description": "Start date in ISO format (YYYY-MM-DD)"
              },
              "endDate": {
                "type": "string",
                "description": "End date in ISO format (YYYY-MM-DD)"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-server-info",
          "description": "Get information about the Opik server configuration",
          "input_schema": {
            "type": "object",
            "properties": {
              "random_string": {
                "type": "string",
                "description": "Dummy parameter for no-parameter tools"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-opik-help",
          "description": "Get contextual help about Opik Comet's capabilities",
          "input_schema": {
            "type": "object",
            "properties": {
              "topic": {
                "type": "string",
                "description": "The topic to get help about (prompts, projects, traces, metrics, or general)"
              },
              "subtopic": {
                "type": "string",
                "description": "Optional subtopic for more specific help"
              }
            },
            "required": [
              "topic"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-opik-examples",
          "description": "Get examples of how to use Opik Comet's API for specific tasks",
          "input_schema": {
            "type": "object",
            "properties": {
              "task": {
                "type": "string",
                "description": "The task to get examples for (e.g., 'create prompt', 'analyze traces', 'monitor costs')"
              }
            },
            "required": [
              "task"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-opik-tracing-info",
          "description": "Get information about Opik's tracing capabilities and how to use them",
          "input_schema": {
            "type": "object",
            "properties": {
              "topic": {
                "type": "string",
                "description": "Optional specific tracing topic to get information about (e.g., 'spans', 'distributed', 'multimodal', 'annotations')"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@comet-ml/opik-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@comet-ml/opik-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "2090.@comet-ml_opik-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1820
  }
}