{
  "labels": {
    "analysis": "The MCP Server is primarily focused on translating manga text from one language to another using the MangAPI3 Translate API. Its core functionality is to simplify the workflow for manga translation by providing a dedicated service that sends translated results in JSON format. Additionally, it offers a secondary tool for retrieving random jokes using the JokeAPI, which suggests a broader utility for entertainment or lighthearted interactions.",
    "reasoning": "The primary label \"Content Creation\" was chosen because the server's main function is to assist in translating manga, which is a form of content creation and localization. The secondary label \"Education\" is relevant due to the linguistic and cultural aspects of manga translation, which can be educational. The secondary label \"Communication Tools\" was also considered because translating text involves clear communication between languages. The \"Gaming\" label was not deemed appropriate because the server does not directly interact with games or gaming platforms.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "Education",
      "Communication Tools"
    ],
    "custom_label": "Manga Localization",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 955,
    "server_name": "Manga Translator",
    "rank_by_usage": 956,
    "usage_count": "3",
    "original_file": "../crawler/smithery/@meren41_s-navmobil.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@meren41/s-navmobil/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_random_joke",
          "description": "\n    JokeAPI'yi kullanarak rastgele şaka döner.\n    ",
          "input_schema": {
            "properties": {},
            "title": "get_random_jokeArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get_random_joke"
      ]
    },
    "server_info_crawled": {
      "id": 955,
      "name": "Manga Translator",
      "author": "@meren41/s-navmobil",
      "overview": "Translate manga text from one language to another using the MangAPI3 Translate API. Send text and target language parameters to receive translated results in JSON format. Simplify manga translation workflows with this dedicated service.",
      "repository_url": "https://github.com/meren41/S-navMobil",
      "homepage": "https://smithery.ai/server/@meren41/s-navmobil",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "3",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@meren41_s-navmobil.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_random_joke",
          "description": "\n    JokeAPI'yi kullanarak rastgele şaka döner.\n    ",
          "input_schema": {
            "properties": {},
            "title": "get_random_jokeArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@meren41/s-navmobil/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@meren41/s-navmobil/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0956.@meren41_s-navmobil_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 934
  }
}