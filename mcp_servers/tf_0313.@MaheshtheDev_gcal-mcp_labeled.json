{
  "labels": {
    "analysis": "The MCP Server's core functionality centers around interacting with Google Calendar, allowing users to manage calendar events (list, read, and create) through a standardized interface. This enhances productivity by integrating scheduling capabilities directly into workflows, suggesting strong ties to time management and productivity. The available tools focus exclusively on calendar-related operations.",
    "reasoning": "The **Time & Calendar** label was chosen as the primary label because the server's tools directly manipulate calendar events, aligning with scheduling and time management. The **Daily Productivity** secondary label was selected because optimizing calendar work improves overall task efficiency. No custom label is needed as the functionality fits well into predefined categories.",
    "primary_label": "Time & Calendar",
    "secondary_labels": [
      "Daily Productivity"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 312,
    "server_name": "Google Calendar Integration Server",
    "rank_by_usage": 313,
    "usage_count": "104",
    "original_file": "../crawler/smithery/@MaheshtheDev_gcal-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@MaheshtheDev/gcal-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "list-events",
          "description": "List calendar events for a specified time range",
          "input_schema": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string",
                "description": "Google OAuth access token"
              },
              "timeMin": {
                "type": "string",
                "description": "Start time in ISO format"
              },
              "timeMax": {
                "type": "string",
                "description": "End time in ISO format"
              },
              "maxResults": {
                "type": "number",
                "description": "Maximum number of events to return"
              }
            },
            "required": [
              "accessToken",
              "timeMin",
              "timeMax"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-event",
          "description": "Get details of a specific calendar event",
          "input_schema": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string",
                "description": "Google OAuth access token"
              },
              "eventId": {
                "type": "string",
                "description": "ID of the calendar event"
              }
            },
            "required": [
              "accessToken",
              "eventId"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create-event",
          "description": "Create a new calendar event",
          "input_schema": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string",
                "description": "Google OAuth access token"
              },
              "summary": {
                "type": "string",
                "description": "Title of the event"
              },
              "startTime": {
                "type": "string",
                "description": "Start time in ISO format"
              },
              "endTime": {
                "type": "string",
                "description": "End time in ISO format"
              },
              "description": {
                "type": "string",
                "description": "Description of the event"
              },
              "location": {
                "type": "string",
                "description": "Location of the event"
              },
              "attendees": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of attendee email addresses"
              },
              "timeZone": {
                "type": "string",
                "default": "UTC",
                "description": "Time zone for the event"
              }
            },
            "required": [
              "accessToken",
              "summary",
              "startTime",
              "endTime"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 3,
      "tool_names": [
        "list-events",
        "get-event",
        "create-event"
      ]
    },
    "server_info_crawled": {
      "id": 312,
      "name": "Google Calendar Integration Server",
      "author": "@MaheshtheDev/gcal-mcp",
      "overview": "Enable your agents to interact with Google Calendar by listing, reading, and managing calendar events through a standardized MCP interface. Simplify calendar operations and enhance productivity by integrating scheduling capabilities directly into your LLM workflows. Provide seamless access to calendar data and actions with secure authentication and easy-to-use tools.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@MaheshtheDev/gcal-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "104",
      "success_rate": "97.38%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@MaheshtheDev_gcal-mcp.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "list-events",
          "description": "List calendar events for a specified time range",
          "input_schema": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string",
                "description": "Google OAuth access token"
              },
              "timeMin": {
                "type": "string",
                "description": "Start time in ISO format"
              },
              "timeMax": {
                "type": "string",
                "description": "End time in ISO format"
              },
              "maxResults": {
                "type": "number",
                "description": "Maximum number of events to return"
              }
            },
            "required": [
              "accessToken",
              "timeMin",
              "timeMax"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-event",
          "description": "Get details of a specific calendar event",
          "input_schema": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string",
                "description": "Google OAuth access token"
              },
              "eventId": {
                "type": "string",
                "description": "ID of the calendar event"
              }
            },
            "required": [
              "accessToken",
              "eventId"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create-event",
          "description": "Create a new calendar event",
          "input_schema": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string",
                "description": "Google OAuth access token"
              },
              "summary": {
                "type": "string",
                "description": "Title of the event"
              },
              "startTime": {
                "type": "string",
                "description": "Start time in ISO format"
              },
              "endTime": {
                "type": "string",
                "description": "End time in ISO format"
              },
              "description": {
                "type": "string",
                "description": "Description of the event"
              },
              "location": {
                "type": "string",
                "description": "Location of the event"
              },
              "attendees": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of attendee email addresses"
              },
              "timeZone": {
                "type": "string",
                "default": "UTC",
                "description": "Time zone for the event"
              }
            },
            "required": [
              "accessToken",
              "summary",
              "startTime",
              "endTime"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@MaheshtheDev/gcal-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@MaheshtheDev/gcal-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0313.@MaheshtheDev_gcal-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 309
  }
}