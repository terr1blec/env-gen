{
  "labels": {
    "analysis": "The MCP Server described specializes in providing linguistic information through dictionary lookups, focusing on word definitions. Its primary functionality is to offer quick access to language-related data to enhance language understanding and processing in applications. The sole tool provided, get_definitions, confirms this core purpose of definitions retrieval.",
    "reasoning": "The primary label \"Language Tools\" is chosen as it accurately describes the server's core functionality of providing linguistic information. However, since it's not a predefined category, we also select the most relevant predefined category, \"Education\", as it supports learning and language processing, which are educational tools. No custom label is required as the functionality is well-covered by the predefined categories.",
    "primary_label": "Others",
    "secondary_labels": [
      "Education"
    ],
    "custom_label": "Language Tools",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2444,
    "server_name": "Dictionary",
    "rank_by_usage": 2445,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@emineturan_dictionary.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@emineturan/dictionary/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_definitions",
          "description": "\n    Get definitions for a word.\n    ",
          "input_schema": {
            "properties": {
              "word": {
                "title": "Word",
                "type": "string"
              }
            },
            "required": [
              "word"
            ],
            "title": "get_definitionsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get_definitions"
      ]
    },
    "server_info_crawled": {
      "id": 2444,
      "name": "Dictionary",
      "author": "@emineturan/dictionary",
      "overview": "Provide quick and easy access to word definitions and related linguistic information. Enhance your applications with comprehensive dictionary data to improve language understanding and processing. Enable users to look up words efficiently within your workflows.",
      "repository_url": "https://github.com/emineturan/dictionary",
      "homepage": "https://smithery.ai/server/@emineturan/dictionary",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@emineturan_dictionary.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_definitions",
          "description": "\n    Get definitions for a word.\n    ",
          "input_schema": {
            "properties": {
              "word": {
                "title": "Word",
                "type": "string"
              }
            },
            "required": [
              "word"
            ],
            "title": "get_definitionsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@emineturan/dictionary/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@emineturan/dictionary/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "2445.@emineturan_dictionary_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 2085
  }
}