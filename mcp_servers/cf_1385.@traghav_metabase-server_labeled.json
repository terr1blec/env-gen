{
  "labels": {
    "analysis": "The MCP Server enables seamless interaction with Metabase, allowing AI assistants to access, query, and manipulate Metabase resources such as dashboards, questions (cards), and databases. It provides tools for listing, executing, and managing these resources, as well as executing SQL queries directly against databases. This server simplifies data exploration and querying within AI workflows, making it a powerful tool for data-driven decision-making and automation.",
    "reasoning": "The primary label is Data Analysis & Processing because the server's core functionality revolves around querying, analyzing, and retrieving structured data from Metabase. Secondary labels Database Operations and API Integration are chosen because the server interacts directly with databases and provides a programmatic interface to Metabase's functionality. The server's unique capability to bridge AI assistants with Metabase is best described by the custom label AI-Driven Data Analysis.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "Database Operations",
      "API Integration"
    ],
    "custom_label": "AI-Driven Data Analysis",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1384,
    "server_name": "Metabase Integration Server",
    "rank_by_usage": 1385,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@traghav_metabase-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@traghav/metabase-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1384,
      "name": "Metabase Integration Server",
      "author": "@traghav/metabase-server",
      "overview": "Enable AI assistants to interact seamlessly with Metabase by accessing dashboards, questions, and databases as resources. Execute Metabase queries and retrieve structured data to enhance data-driven conversations. Simplify data exploration and querying within your AI workflows.",
      "repository_url": "https://github.com/traghav/metabase-server",
      "homepage": "https://smithery.ai/server/@traghav/metabase-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@traghav_metabase-server.json",
      "tools_count": 12,
      "tools": [
        {
          "name": "list_dashboards",
          "description": "Deploy Server Metabase Integration Server @traghav/metabase-server Try in Playground list_dashboards",
          "parameters": [
            {
              "name": "archived",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "collection_id",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_cards",
          "description": "List Metabase cards (questions/models). Can be filtered.",
          "parameters": [
            {
              "name": "list_cards",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_databases",
          "description": "List Metabase databases. Can be filtered.",
          "parameters": [
            {
              "name": "list_databases",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "execute_card",
          "description": "Execute a Metabase question/card and get results",
          "parameters": [
            {
              "name": "card_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "parameters",
              "required": false,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_dashboard_details",
          "description": "Get full details for a specific dashboard, including its dashcards and parameters.",
          "parameters": [
            {
              "name": "get_dashboard_details",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "execute_query",
          "description": "Execute a SQL query against a specified database.",
          "parameters": [
            {
              "name": "execute_query",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_card",
          "description": "Create a new Metabase question (card).",
          "parameters": [
            {
              "name": "create_card",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_card",
          "description": "Update an existing Metabase question (card).",
          "parameters": [
            {
              "name": "update_card",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_card",
          "description": "Delete a Metabase question (card).",
          "parameters": [
            {
              "name": "card_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "hard_delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_dashboard",
          "description": "Create a new Metabase dashboard.",
          "parameters": [
            {
              "name": "create_dashboard",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_dashboard",
          "description": "Update an existing Metabase dashboard.",
          "parameters": [
            {
              "name": "update_dashboard",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_dashboard",
          "description": "Delete a Metabase dashboard.",
          "parameters": [
            {
              "name": "hard_delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "dashboard_id",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@traghav/metabase-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@traghav/metabase-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1385.@traghav_metabase-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1299
  }
}