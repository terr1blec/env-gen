{
  "labels": {
    "analysis": "The AtomGit Server is designed specifically to manage and interact with the AtomGit open source collaboration platform. It provides a comprehensive suite of tools for repository management, issue tracking, pull request handling, and label management. The tools enable automated operations for creating, assigning, listing, and commenting on issues and pull requests, as well as managing repository branches and labels. The server's primary focus is on enhancing collaboration and project management within the AtomGit ecosystem, leveraging AI interactions with AtomGit's API for efficiency.",
    "reasoning": "The primary label \"Development Tools\" is chosen because the server is primarily used for version control, issue tracking, and collaboration features commonly used in software development workflows. The secondary label \"API Integration\" is selected since the server heavily relies on AtomGit's API for its operations. A custom label \"AtomGit Management\" is added to specifically describe the server's tailored functionality for the AtomGit platform.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": "AtomGit Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2319,
    "server_name": "AtomGit Server",
    "rank_by_usage": 2320,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@kaiyuanxiaobing_atomgit-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@kaiyuanxiaobing/atomgit-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2319,
      "name": "AtomGit Server",
      "author": "@kaiyuanxiaobing/atomgit-mcp-server",
      "overview": "Manage AtomGit open source collaboration platform repositories, issues, pull requests, branches, and labels through a comprehensive set of tools. Enable AI to interact seamlessly with AtomGit's API for efficient project management and collaboration. Simplify repository and issue handling with automated operations tailored for AtomGit users.",
      "repository_url": "https://github.com/kaiyuanxiaobing/atomgit-mcp-server",
      "homepage": "https://smithery.ai/server/@kaiyuanxiaobing/atomgit-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@kaiyuanxiaobing_atomgit-mcp-server.json",
      "tools_count": 24,
      "tools": [
        {
          "name": "get_user_repository",
          "description": "Deploy Server AtomGit Server Claim Server @kaiyuanxiaobing/atomgit-mcp-server Try in Playground get_user_repository",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "assign_issue",
          "description": "Assign users to an issue in a AtomGit repository",
          "parameters": [
            {
              "name": "assign_issue",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_repository_issues",
          "description": "List issues in a AtomGit repository",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_issue_details",
          "description": "Get details of a specific issue in a AtomGit repository",
          "parameters": [
            {
              "name": "get_issue_details",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_issue_assignees",
          "description": "List assignees for a specific issue in a AtomGit repository",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "check_if_user_is_assignable",
          "description": "Check if a user can be assigned to an issue in a AtomGit repository",
          "parameters": [
            {
              "name": "check_if_user_is_assignable",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_user_repositories",
          "description": "Search for AtomGit user repositories",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "search",
              "required": false,
              "type": "string"
            },
            {
              "name": "per_page",
              "required": false,
              "type": "string"
            },
            {
              "name": "username",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_org_repositories",
          "description": "Search for AtomGit org repositories",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "search",
              "required": false,
              "type": "string"
            },
            {
              "name": "orgPath",
              "required": true,
              "type": "string"
            },
            {
              "name": "per_page",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_issue",
          "description": "Create a new issue in a AtomGit repository",
          "parameters": [
            {
              "name": "create_issue",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_issue_comment",
          "description": "Create an issue comment in a AtomGit repository issue",
          "parameters": [
            {
              "name": "create_issue_comment",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_pull_request",
          "description": "Create a new pull request in a repository",
          "parameters": [
            {
              "name": "body",
              "required": true,
              "type": "string"
            },
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_pull_request_details",
          "description": "Get details of a specific pull request",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "pull_number",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_pull_request_comment",
          "description": "Create a comment on a pull request",
          "parameters": [
            {
              "name": "create_pull_request_comment",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_pull_request_reply",
          "description": "Reply to a comment on a pull request",
          "parameters": [
            {
              "name": "create_pull_request_reply",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_pull_request_comment",
          "description": "Get details of a specific pull request comment",
          "parameters": [
            {
              "name": "get_pull_request_comment",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_pull_request_comments",
          "description": "List comments on a pull request",
          "parameters": [
            {
              "name": "list_pull_request_comments",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_repository_branches",
          "description": "List branches in a repository",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "per_page",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_repository_branch_details",
          "description": "Get details of a specific branch in a repository",
          "parameters": [
            {
              "name": "get_repository_branch_details",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_repository_label",
          "description": "Create a new label in a repository",
          "parameters": [
            {
              "name": "create_repository_label",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_repository_labels",
          "description": "Get all labels in a repository",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_issue_labels",
          "description": "Add labels to an issue in a repository",
          "parameters": [
            {
              "name": "create_issue_labels",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_issue_labels",
          "description": "Get all labels for an issue in a repository",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "issue_number",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_issue_label",
          "description": "Remove a label from an issue in a repository",
          "parameters": [
            {
              "name": "delete_issue_label",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_label_by_name",
          "description": "Get a single label by name from a repository",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@kaiyuanxiaobing/atomgit-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "atomgitPersonalAccessToken",
          "required": true,
          "description": "AtomGit Personal Access Token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@kaiyuanxiaobing/atomgit-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2320.@kaiyuanxiaobing_atomgit-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1995
  }
}