{
  "labels": {
    "analysis": "The MCP Server \"MasterGo Magic\" is designed to bridge design tools with AI models, enabling seamless retrieval and utilization of DSL (Domain Specific Language) data from MasterGo design files. Its core functionality revolves around extracting design structure, component documentation, and site configuration information, which can then be used to generate frontend code or follow structured development workflows. The tools provided are tailored for component analysis, documentation retrieval, and best-practice workflow generation, catering primarily to developers and designers working with design-to-code workflows.",
    "reasoning": "The primary label is chosen as \"Development Tools\" because the server's core purpose is to assist in code generation, structured workflow management, and frontend development based on design data. Secondary labels include \"AI/ML Tools\" due to AI integration for data retrieval and processing, and \"Content Creation\" because it facilitates the transformation of design data into frontend code, which is a form of content generation. No custom label is needed as the predefined labels sufficiently categorize the server's functionality.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "AI/ML Tools",
      "Content Creation"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 351,
    "server_name": "MasterGo Magic",
    "rank_by_usage": 352,
    "usage_count": "85",
    "original_file": "../crawler/smithery/@mastergo-design_mastergo-magic-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@mastergo-design/mastergo-magic-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 351,
      "name": "MasterGo Magic",
      "author": "@mastergo-design/mastergo-magic-mcp",
      "overview": "Connect your design tools with AI models to seamlessly retrieve DSL data from MasterGo design files. Enhance your design workflow by integrating AI capabilities directly into your projects. Experience a streamlined process with no external dependencies, just Node.js required.",
      "repository_url": "https://github.com/mastergo-design/mastergo-magic-mcp",
      "homepage": "https://smithery.ai/server/@mastergo-design/mastergo-magic-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "85",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@mastergo-design_mastergo-magic-mcp.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "version_0.0.4-beta.11",
          "description": "Deploy Server MasterGo Magic @mastergo-design/mastergo-magic-mcp Try in Playground version_0.0.4-beta.11",
          "parameters": []
        },
        {
          "name": "mcp__getDsl",
          "description": "\"Use this tool to retrieve the DSL (Domain Specific Language) data from MasterGo design files and the rules you must follow when generating code. This tool is useful when you need to analyze the structure of a design, understand component hierarchy, or extract design properties. You must provide a fileId and layerId to identify the specific design element. This tool returns the raw DSL data in JSON format that you can then parse and analyze. This tool also returns the rules you must follow when generating code. The DSL data can also be used to transform and generate code for different frameworks.\"",
          "parameters": []
        },
        {
          "name": "mcp__getComponentLink",
          "description": "When the data returned by mcp__getDsl contains a non-empty componentDocumentLinks array, this tool is used to sequentially retrieve URLs from the componentDocumentLinks array and then obtain component documentation data. The returned document data is used for you to generate frontend code based on components.",
          "parameters": [
            {
              "name": "mcp__getComponentLink",
              "required": false,
              "type": "string"
            },
            {
              "name": "url",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "mcp__getMeta",
          "description": "Use this tool when the user intends to build a complete website or needs to obtain high-level site configuration information. You must provide a fileld and layerld to identify the specific design element. This tool returns the rules and results of the site and page. The rules is a markdown file, you must follow the rules and use the results to analyze the site and page.",
          "parameters": []
        },
        {
          "name": "mcp__getComponentGenerator",
          "description": "Users need to actively call this tool to get the component development workflow. When Generator is mentioned, please actively call this tool. This tool provides a structured workflow for component development following best practices. You must provide an absolute rootPath of workspace to save workflow files.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@mastergo-design/mastergo-magic-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "token",
          "required": true,
          "description": "MasterGo API token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@mastergo-design/mastergo-magic-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0352.@mastergo-design_mastergo-magic-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 348
  }
}