{
  "labels": {
    "analysis": "The Hevy Fitness API MCP Server is designed to integrate with the Hevy fitness tracking app, allowing users to access, create, update, and organize their workout data, routines, and exercise templates. The tools provided enable users to manage workouts, routines, exercise templates, and folders, facilitating seamless fitness tracking and organization. The server primarily focuses on fitness data management, with capabilities to synchronize workout events and maintain an up-to-date local cache.",
    "reasoning": "The **Health & Fitness** category is the most fitting primary label as the server's core functionality revolves around fitness tracking and workout management. The secondary labels **File Management** and **Database Operations** are relevant due to the server's ability to organize and retrieve structured workout data, routines, and templates. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Health & Fitness",
    "secondary_labels": [
      "Database Operations",
      "File Management"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 157,
    "server_name": "Hevy Fitness API MCP Server",
    "rank_by_usage": 158,
    "usage_count": "363",
    "original_file": "../crawler/smithery/@chrisdoc_hevy-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@chrisdoc/hevy-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 157,
      "name": "Hevy Fitness API MCP Server",
      "author": "@chrisdoc/hevy-mcp",
      "overview": "Access and manage your workout data seamlessly. Integrate with the Hevy fitness tracking app to create, update, and organize workouts and routines effortlessly.",
      "repository_url": "https://github.com/chrisdoc/hevy-mcp",
      "homepage": "https://smithery.ai/server/@chrisdoc/hevy-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "363",
      "success_rate": "98.65%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@chrisdoc_hevy-mcp.json",
      "tools_count": 15,
      "tools": [
        {
          "name": "get-workouts",
          "description": "Deploy Server Hevy Fitness API MCP Server @chrisdoc/hevy-mcp Try in Playground get-workouts",
          "parameters": []
        },
        {
          "name": "get-workout",
          "description": "get-workouts Get a paginated list of workouts. Returns workout details including title, description, start/end times, and exercises performed. Results are ordered from newest to oldest.",
          "parameters": []
        },
        {
          "name": "get-workout-count",
          "description": "Get the total number of workouts on the account. Useful for pagination or statistics.",
          "parameters": []
        },
        {
          "name": "get-workout-events",
          "description": "Retrieve a paged list of workout events (updates or deletes) since a given date. Events are ordered from newest to oldest. The intention is to allow clients to keep their local cache of workouts up to date without having to fetch the entire list of workouts.",
          "parameters": []
        },
        {
          "name": "create-workout",
          "description": "Create a new workout in your Hevy account. Requires title, start/end times, and at least one exercise with sets. Returns the complete workout details upon successful creation including the newly assigned workout ID.",
          "parameters": []
        },
        {
          "name": "update-workout",
          "description": "Update an existing workout by ID. You can modify the title, description, start/end times, privacy setting, and exercise data. Returns the updated workout with all changes applied.",
          "parameters": []
        },
        {
          "name": "get-routines",
          "description": "Get a paginated list of routines. Returns routine details including title, creation date, folder assignment, and exercise configurations. Results include both default and custom routines.",
          "parameters": []
        },
        {
          "name": "get-routine",
          "description": "get-routines Get a paginated list of routines. Returns routine details including title, creation date, folder assignment, and exercise configurations. Results include both default and custom routines.",
          "parameters": []
        },
        {
          "name": "create-routine",
          "description": "Create a new workout routine in your Hevy account. Requires title and at least one exercise with sets. Optionally assign to a specific folder. Returns the complete routine details upon successful creation including the newly assigned routine ID.",
          "parameters": []
        },
        {
          "name": "update-routine",
          "description": "Update an existing workout routine by ID. You can modify the title, notes, and exercise data. Returns the updated routine with all changes applied. Note that you cannot change the folder assignment through this method.",
          "parameters": []
        },
        {
          "name": "get-exercise-templates",
          "description": "Get a paginated list of exercise templates available on the account. Returns both default and custom exercise templates with details including title, type, primary muscle group, and secondary muscle groups. Supports up to 100 templates per page.",
          "parameters": []
        },
        {
          "name": "get-exercise-template",
          "description": "get-exercise-templates Get a paginated list of exercise templates available on the account. Returns both default and custom exercise templates with details including title, type, primary muscle group, and secondary muscle groups. Supports up to 100 templates per page.",
          "parameters": []
        },
        {
          "name": "get-routine-folders",
          "description": "Get a paginated list of routine folders available on the account. Returns folder details including ID, title, index (order position), and creation/update timestamps. Useful for organizing routines into categories.",
          "parameters": []
        },
        {
          "name": "get-routine-folder",
          "description": "get-routine-folders Get a paginated list of routine folders available on the account. Returns folder details including ID, title, index (order position), and creation/update timestamps. Useful for organizing routines into categories.",
          "parameters": []
        },
        {
          "name": "create-routine-folder",
          "description": "Create a new routine folder in your Hevy account. The folder will be created at index 0, and all other folders will have their indexes incremented. Returns the complete folder details upon successful creation including the newly assigned folder ID.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@chrisdoc/hevy-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "hevyApiKey",
          "required": true,
          "description": "Your Hevy API key to authenticate with the Hevy Fitness API."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@chrisdoc/hevy-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0158.@chrisdoc_hevy-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 155
  }
}