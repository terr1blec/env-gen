{
  "labels": {
    "analysis": "The MCP Server provides real-time access to Bitcoin blockchain data, including transactions, addresses, blocks, and specialized data like Ordinals inscriptions and Runes tokens. It allows users to query detailed information, validate addresses, retrieve mempool stats, and explore blockchain stats. The tools available are primarily focused on interacting with the Bitcoin blockchain, providing developer-friendly APIs for integrating Bitcoin data into applications.",
    "reasoning": "The primary functionality of this server is closely tied to **Cryptocurrency & Blockchain** due to its focus on Bitcoin data analysis, transactions, and blockchain exploration. The tools provided are specialized for Bitcoin, making this the most fitting primary label. Secondary labels like **Database Operations** (for querying blockchain data) and **API Integration** (for accessing blockchain data via APIs) are also relevant. A custom label is not necessary as the predefined categories cover the server's functionality well.",
    "primary_label": "Cryptocurrency & Blockchain",
    "secondary_labels": [
      "Database Operations",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1655,
    "server_name": "Satstream Bitcoin Data Server",
    "rank_by_usage": 1656,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@satstream_ss-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@satstream/ss-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1655,
      "name": "Satstream Bitcoin Data Server",
      "author": "@satstream/ss-mcp",
      "overview": "Provide real-time access to Bitcoin blockchain data including transactions, addresses, blocks, and specialized data like Ordinals inscriptions and Runes tokens. Query detailed Bitcoin address information, validate addresses, retrieve mempool stats, and explore blockchain stats seamlessly. Integrate Bitcoin data queries into your applications using a comprehensive MCP server backed by Satstream's API.",
      "repository_url": "https://github.com/satstream/ss-mcp",
      "homepage": "https://smithery.ai/server/@satstream/ss-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@satstream_ss-mcp.json",
      "tools_count": 37,
      "tools": [
        {
          "name": "address_get",
          "description": "Deploy Server Satstream Bitcoin Data Server Claim Server @satstream/ss-mcp Try in Playground address_get",
          "parameters": [
            {
              "name": "address_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "block_get",
          "description": "Get detailed information about a specific Bitcoin block by its hash or height. Use this to retrieve block header data, transaction IDs, and mining details.",
          "parameters": [
            {
              "name": "block_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "blockchain_info",
          "description": "Get current blockchain information including chain height, latest block details, and network status. Use this for obtaining overall Bitcoin network statistics.",
          "parameters": [
            {
              "name": "blockchain_info",
              "required": false,
              "type": "string"
            },
            {
              "name": "random_string",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "address_balance_get",
          "description": "Get the total Bitcoin balance (in satoshis) of an address by summing all its deltas. Use this when you only need the balance information without the full address details.",
          "parameters": [
            {
              "name": "address_balance_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "address_deltas_get",
          "description": "Get transaction deltas (inputs and outputs) for a specific Bitcoin address with pagination. Use this to analyze the transaction history of an address with filtering by block height.",
          "parameters": [
            {
              "name": "address_deltas_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "transaction_get",
          "description": "Get detailed information about a specific Bitcoin transaction by its transaction ID (txid). Use this to retrieve comprehensive data about inputs, outputs, fees, and confirmation status.",
          "parameters": [
            {
              "name": "transaction_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "ordinals_inscription_get",
          "description": "Get information about a specific Bitcoin Ordinals inscription by its ID. Use this to retrieve metadata about NFT-like inscriptions on Bitcoin, including content type and ownership details.",
          "parameters": [
            {
              "name": "ordinals_inscription_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "mempool_info_get",
          "description": "Get current Bitcoin mempool statistics including size, transaction count, and fee estimates. Use this to understand the current state of unconfirmed transactions.",
          "parameters": [
            {
              "name": "mempool_info_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "mempool_transactions_get",
          "description": "List unconfirmed transactions in the Bitcoin mempool with pagination. Use this to monitor incoming transactions before they are included in a block.",
          "parameters": [
            {
              "name": "mempool_transactions_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "address_validate",
          "description": "Validate a Bitcoin address and retrieve information about its format, type, and validity. Use this to check if an address is valid before sending or receiving transactions.",
          "parameters": [
            {
              "name": "address_validate",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "address_outputs_get",
          "description": "Retrieve UTXOs (unspent transaction outputs) held by a specific Bitcoin address with optional type filtering. Use this to get detailed information about available UTXOs for spending or analysis.",
          "parameters": [
            {
              "name": "address_outputs_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "address_rune_deltas_get",
          "description": "Get rune deltas (changes in rune balances) for a specific Bitcoin address with pagination. Use this to analyze the history of rune token transfers for an address.",
          "parameters": [
            {
              "name": "address_rune_deltas_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "rune_get",
          "description": "Retrieve information about a specific Bitcoin Rune by name or ID (e.g., \"UNCOMMONâ€¢GOODS\" or \"1:0\"). Use this to get details about a specific rune token, including supply, minting status, and transactions.",
          "parameters": [
            {
              "name": "rune_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "runes_latest_get",
          "description": "Retrieve information about the last 100 inscribed Bitcoin Runes (first page). Use this to get an overview of the most recently created rune tokens on the Bitcoin blockchain.",
          "parameters": [
            {
              "name": "runes_latest_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "runes_page_get",
          "description": "Retrieve a specific page of 100 inscribed Bitcoin Runes. Use this for paginated access to the complete list of rune tokens on the blockchain.",
          "parameters": [
            {
              "name": "runes_page_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "blocks_get",
          "description": "Get information about the last 100 Bitcoin blocks. Use this for obtaining an overview of recent blockchain activity including block heights, hashes, and timestamps.",
          "parameters": [
            {
              "name": "blocks_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "block_raw_hex_get",
          "description": "Get the raw hexadecimal representation of a specific Bitcoin block by its hash or height. This provides the complete serialized block data in hexadecimal format.",
          "parameters": [
            {
              "name": "block_raw_hex_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "block_raw_decoded_get",
          "description": "Get the full decoded (verbose) representation of a specific Bitcoin block by its hash or height. This provides extensive details about the block structure and contained transactions.",
          "parameters": [
            {
              "name": "block_raw_decoded_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "inscriptions_latest_get",
          "description": "Get the latest Bitcoin Ordinals inscriptions. Use this to retrieve recently created NFT-like inscriptions on the Bitcoin blockchain.",
          "parameters": [
            {
              "name": "inscriptions_latest_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "inscriptions_page_get",
          "description": "Get a specific page of Bitcoin Ordinals inscriptions. Use this for paginated access to the complete list of inscriptions on the blockchain.",
          "parameters": [
            {
              "name": "inscriptions_page_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "inscriptions_block_get",
          "description": "Get all Bitcoin Ordinals inscriptions in a specific block. Use this to analyze the inscriptions created in a particular block height.",
          "parameters": [
            {
              "name": "inscriptions_block_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "inscriptions_block_page_get",
          "description": "Get a specific page of Bitcoin Ordinals inscriptions in a particular block. Use this for paginated access to the inscriptions created in a specific block height.",
          "parameters": [
            {
              "name": "inscriptions_block_page_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "output_get",
          "description": "Get detailed information about a specific Bitcoin UTXO (unspent transaction output) by its outpoint in the format 'txid:vout'. Use this to retrieve spend status, value, and script details of an output.",
          "parameters": [
            {
              "name": "output_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "tx_inscriptions_get",
          "description": "Get all Bitcoin Ordinals inscriptions contained in a specific transaction. Use this to analyze the inscriptions created or transferred in a particular transaction.",
          "parameters": [
            {
              "name": "tx_inscriptions_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "sat_get",
          "description": "Get information about a specific satoshi by its absolute number (index). Use this to retrieve details about a particular satoshi, including its rarity, block of creation, and inscription status.",
          "parameters": [
            {
              "name": "sat_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "status_get",
          "description": "Get the current status of the Satstream API server, including uptime, version information, and performance metrics. Use this to check if the API is functioning properly.",
          "parameters": [
            {
              "name": "status_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "block_count_get",
          "description": "Get the current block height of the Bitcoin blockchain. This returns the height of the latest block that has been processed.",
          "parameters": [
            {
              "name": "block_count_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "latest_blockhash_get",
          "description": "Get the hash of the latest block in the Bitcoin blockchain. Use this to retrieve the most recent block hash.",
          "parameters": [
            {
              "name": "latest_blockhash_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "blockhash_by_height_get",
          "description": "Get the hash of a specific Bitcoin block by its height. Use this to convert a block height to its corresponding block hash.",
          "parameters": [
            {
              "name": "blockhash_by_height_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "latest_block_height_get",
          "description": "Get the current height of the Bitcoin blockchain. This returns the height of the latest block that has been processed.",
          "parameters": [
            {
              "name": "latest_block_height_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "latest_blocktime_get",
          "description": "Get the timestamp of the latest block in the Bitcoin blockchain. This returns the UNIX timestamp of when the latest block was mined.",
          "parameters": [
            {
              "name": "latest_blocktime_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "block_raw_prevout_get",
          "description": "Get the full decoded representation of a specific Bitcoin block with prevout information by its hash or height. This provides extensive details about the block including input and output data.",
          "parameters": [
            {
              "name": "block_raw_prevout_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "block_raw_summary_get",
          "description": "Get a summary of a specific Bitcoin block by its hash or height. This provides a condensed view of block data without full transaction details.",
          "parameters": [
            {
              "name": "block_raw_summary_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "inscription_child_get",
          "description": "Get information about a specific child of a Bitcoin Ordinals inscription. Use this to retrieve metadata about nested or child inscriptions.",
          "parameters": [
            {
              "name": "inscription_child_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "tx_raw_decode_get",
          "description": "Get a raw Bitcoin transaction with basic decoded information by its transaction ID. This provides the transaction structure and decoded script data.",
          "parameters": [
            {
              "name": "tx_raw_decode_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "tx_raw_hex_get",
          "description": "Get the raw hexadecimal representation of a Bitcoin transaction by its transaction ID. This provides the complete serialized transaction data in hexadecimal format.",
          "parameters": [
            {
              "name": "tx_raw_hex_get",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "tx_raw_prevout_get",
          "description": "Get a raw Bitcoin transaction with prevout information by its transaction ID. This provides the transaction with details about the previous outputs being spent.",
          "parameters": [
            {
              "name": "tx_raw_prevout_get",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@satstream/ss-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "satstreamApiKey",
          "required": true,
          "description": "Satstream API key to authenticate with Satstream API"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@satstream/ss-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1656.@satstream_ss-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1499
  }
}