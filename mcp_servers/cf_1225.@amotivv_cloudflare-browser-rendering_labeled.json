{
  "labels": {
    "analysis": "The MCP Server is designed to fetch, process, and structure web content for LLM (Large Language Model) interactions. It provides tools to extract web data, summarize content, and search documentation, all of which enhance the ability to integrate real-time web information into LLM contexts. The primary use case revolves around automation and enrichment of web content for AI applications.",
    "reasoning": "The primary label \"Browser Automation\" is chosen because this server's core functionality involves fetching web pages and processing their content, which aligns with web scraping and automated browsing. The secondary label \"Web Search & Research\" is selected because it enhances LLM interactions with relevant web information. There is no need for a custom label as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Browser Automation",
    "secondary_labels": [
      "Web Search & Research"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1224,
    "server_name": "Web Content Server",
    "rank_by_usage": 1225,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@amotivv_cloudflare-browser-rendering.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@amotivv/cloudflare-browser-rendering/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1224,
      "name": "Web Content Server",
      "author": "@amotivv/cloudflare-browser-rendering",
      "overview": "Fetch and process web content seamlessly for LLM context using Cloudflare Browser Rendering. Enhance your applications with real-time web data extraction and structured content summarization. Leverage powerful tools to enrich your LLM interactions with relevant web information.",
      "repository_url": "https://github.com/amotivv/cloudflare-browser-rendering",
      "homepage": "https://smithery.ai/server/@amotivv/cloudflare-browser-rendering",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@amotivv_cloudflare-browser-rendering.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "fetch_page",
          "description": "Deploy Server Web Content Server Claim Server @amotivv/cloudflare-browser-rendering Try in Playground",
          "parameters": [
            {
              "name": "fetch_page",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_documentation",
          "description": "Searches Cloudflare documentation and returns relevant content",
          "parameters": []
        },
        {
          "name": "extract_structured_content",
          "description": "Extracts structured content from a web page using CSS selectors",
          "parameters": []
        },
        {
          "name": "summarize_content",
          "description": "Summarizes web content for more concise LLM context",
          "parameters": [
            {
              "name": "url",
              "required": true,
              "type": "string"
            },
            {
              "name": "maxLength",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@amotivv/cloudflare-browser-rendering/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@amotivv/cloudflare-browser-rendering/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1225.@amotivv_cloudflare-browser-rendering_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1176
  }
}