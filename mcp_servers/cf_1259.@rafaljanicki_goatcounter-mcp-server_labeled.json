{
  "labels": {
    "analysis": "The MCP Server described provides web analytics data through a Model Context Protocol server, allowing LLMs to query and analyze website traffic metrics in real-time. The server's core functionality revolves around providing structured access to detailed visitor and traffic statistics, such as pageviews, browsers, referrers, screen sizes, and locations. This enables seamless integration of analytics into AI workflows for data-driven decision-making without complex direct integration of third-party tools.",
    "reasoning": "The primary label \"Web Analytics\" was chosen because the server is fundamentally focused on providing structured web traffic data. The secondary label \"API Integration\" fits due to its role in connecting analytics data to AI systems via MCP. The custom label \"MCP-Enhanced Analytics\" was added to highlight the unique aspect of using Model Context Protocol for analytics access.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": "MCP-Enhanced Analytics",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1258,
    "server_name": "GoatCounter MCP Server",
    "rank_by_usage": 1259,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@rafaljanicki_goatcounter-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@rafaljanicki/goatcounter-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1258,
      "name": "GoatCounter MCP Server",
      "author": "@rafaljanicki/goatcounter-mcp-server",
      "overview": "Provide web analytics data through a Model Context Protocol server, enabling LLMs to query and analyze website traffic metrics seamlessly. Facilitate integration of real-time analytics into AI workflows for enhanced decision-making. Simplify access to visitor statistics and trends via standardized MCP methods.",
      "repository_url": "https://github.com/rafaljanicki/goatcounter-mcp-server",
      "homepage": "https://smithery.ai/server/@rafaljanicki/goatcounter-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@rafaljanicki_goatcounter-mcp-server.json",
      "tools_count": 10,
      "tools": [
        {
          "name": "get_me",
          "description": "Deploy Server GoatCounter MCP Server @rafaljanicki/goatcounter-mcp-server Try in Playground",
          "parameters": [
            {
              "name": "get_me",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_sites",
          "description": "List all Goatcounter sites accessible with the current API key.",
          "parameters": [
            {
              "name": "list_sites",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_paths",
          "description": "Get an overview of paths on this site (without statistics).",
          "parameters": [
            {
              "name": "list_paths",
              "required": false,
              "type": "string"
            },
            {
              "name": "params",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_stats_total",
          "description": "Get total number of pageviews and visitors for the site.",
          "parameters": [
            {
              "name": "get_stats_total",
              "required": false,
              "type": "string"
            },
            {
              "name": "params",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_stats_hits",
          "description": "List page statistics (pageviews and visitors per path).",
          "parameters": [
            {
              "name": "get_stats_hits",
              "required": false,
              "type": "string"
            },
            {
              "name": "params",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_stats_refs",
          "description": "List referrer statistics.",
          "parameters": [
            {
              "name": "get_stats_refs",
              "required": false,
              "type": "string"
            },
            {
              "name": "List",
              "required": false,
              "type": "string"
            },
            {
              "name": "referrer",
              "required": false,
              "type": "string"
            },
            {
              "name": "params",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_stats_browsers",
          "description": "List browser statistics.",
          "parameters": [
            {
              "name": "get_stats_browsers",
              "required": false,
              "type": "string"
            },
            {
              "name": "List",
              "required": false,
              "type": "string"
            },
            {
              "name": "browser",
              "required": false,
              "type": "string"
            },
            {
              "name": "params",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_stats_systems",
          "description": "List operating system statistics.",
          "parameters": [
            {
              "name": "get_stats_systems",
              "required": false,
              "type": "string"
            },
            {
              "name": "List",
              "required": false,
              "type": "string"
            },
            {
              "name": "operating",
              "required": false,
              "type": "string"
            },
            {
              "name": "system",
              "required": false,
              "type": "string"
            },
            {
              "name": "params",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_stats_sizes",
          "description": "List screen size statistics.",
          "parameters": [
            {
              "name": "get_stats_sizes",
              "required": false,
              "type": "string"
            },
            {
              "name": "List",
              "required": false,
              "type": "string"
            },
            {
              "name": "screen",
              "required": false,
              "type": "string"
            },
            {
              "name": "size",
              "required": false,
              "type": "string"
            },
            {
              "name": "params",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_stats_locations",
          "description": "List location statistics.",
          "parameters": [
            {
              "name": "get_stats_locations",
              "required": false,
              "type": "string"
            },
            {
              "name": "List",
              "required": false,
              "type": "string"
            },
            {
              "name": "location",
              "required": false,
              "type": "string"
            },
            {
              "name": "params",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@rafaljanicki/goatcounter-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "goatcounterApiKey",
          "required": true,
          "description": "Goatcounter API Key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@rafaljanicki/goatcounter-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1259.@rafaljanicki_goatcounter-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1203
  }
}