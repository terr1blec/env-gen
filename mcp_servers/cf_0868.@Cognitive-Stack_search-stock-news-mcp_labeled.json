{
  "labels": {
    "analysis": "The MCP Server is designed to provide real-time stock market news search capabilities using the Tavily API. It allows users to perform customizable queries with domain-specific filtering, enabling efficient access to financial news. The core functionality revolves around financial information retrieval, making it particularly useful for AI workflows that require up-to-date stock market data. The server integrates with MCP clients to streamline the process of gathering financial news.",
    "reasoning": "The primary label \"Financial Services\" was chosen because the server's main function is retrieving real-time stock news, which is a key aspect of financial services. The secondary label \"Web Search & Research\" is added because the server performs search operations, and \"Data Analysis & Processing\" is included because it enables configurable queries for filtering and transforming financial data. No custom label is needed as the functionality is well-covered by the predefined categories.",
    "primary_label": "Financial Services",
    "secondary_labels": [
      "Web Search & Research",
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 867,
    "server_name": "Search Stock News",
    "rank_by_usage": 868,
    "usage_count": "5",
    "original_file": "../crawler/smithery/@Cognitive-Stack_search-stock-news-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Cognitive-Stack/search-stock-news-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 867,
      "name": "Search Stock News",
      "author": "@Cognitive-Stack/search-stock-news-mcp",
      "overview": "Provide real-time stock news search capabilities with customizable queries and domain-specific filtering. Enable seamless integration with MCP clients to access up-to-date financial news efficiently. Enhance your AI workflows with type-safe, configurable search operations powered by the Tavily API.",
      "repository_url": "https://github.com/Cognitive-Stack/search-stock-news-mcp",
      "homepage": "https://smithery.ai/server/@Cognitive-Stack/search-stock-news-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "5",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Cognitive-Stack_search-stock-news-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "search-stock-news",
          "description": "Deploy Server Search Stock News Claim Server @Cognitive-Stack/search-stock-news-mcp Try in Playground search-stock-news",
          "parameters": [
            {
              "name": "symbol",
              "required": true,
              "type": "string"
            },
            {
              "name": "companyName",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Cognitive-Stack/search-stock-news-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "tavilyApiKey",
          "required": true,
          "description": "Your Tavily API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Cognitive-Stack/search-stock-news-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0868.@Cognitive-Stack_search-stock-news-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 849
  }
}