{
  "labels": {
    "analysis": "The MCP Server for Todoist provides comprehensive tools for managing tasks, projects, labels, sections, and comments within the Todoist productivity platform. Its functionalities revolve around task and project management, collaborative features, and organization. The tools enable users to perform CRUD operations on tasks, projects, labels, and sections, as well as manage comments and collaborations, making it a centralized management tool for Todoist's suite of productivity features.",
    "reasoning": "<primary_label>The server's core functionality aligns most closely with \"Daily Productivity\" as it focuses on task and project management, a fundamental aspect of personal productivity tools.</primary_label>\n    <secondary_labels>File Management (for tasks as \"files\" of work), API Integration (for direct Todoist API access)</secondary_labels>\n    <custom_label>Todoist Management</custom_label>",
    "primary_label": "Operating System",
    "secondary_labels": [
      "File Management",
      "Daily Productivity"
    ],
    "custom_label": "Todoist Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 694,
    "server_name": "Todoist MCP Server (ALL functions included)",
    "rank_by_usage": 695,
    "usage_count": "11",
    "original_file": "../crawler/smithery/@koji0701_todoist-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@koji0701/todoist-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 694,
      "name": "Todoist MCP Server (ALL functions included)",
      "author": "@koji0701/todoist-mcp-server",
      "overview": "The complete Todoist MCP server, including all functions and parameters from the Todoist API.",
      "repository_url": "https://github.com/koji0701/todoist-mcp-server",
      "homepage": "https://smithery.ai/server/@koji0701/todoist-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "11",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@koji0701_todoist-mcp-server.json",
      "tools_count": 38,
      "tools": [
        {
          "name": "add_task",
          "description": "Deploy Server Todoist MCP Server (ALL functions included) @koji0701/todoist-mcp-server Try in Playground",
          "parameters": [
            {
              "name": "add_task",
              "required": false,
              "type": "string"
            },
            {
              "name": "Create",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "new",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_task",
          "description": "Get a specific task by its ID.",
          "parameters": [
            {
              "name": "get_task",
              "required": false,
              "type": "string"
            },
            {
              "name": "task_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_tasks",
          "description": "Get active tasks, optionally filtered.",
          "parameters": [
            {
              "name": "get_tasks",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "filter_tasks",
          "description": "Get active tasks matching the filter query.",
          "parameters": [
            {
              "name": "lang",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_task_quick",
          "description": "Create a new task using Todoist's Quick Add syntax.",
          "parameters": [
            {
              "name": "add_task_quick",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_task",
          "description": "Update an existing task.",
          "parameters": [
            {
              "name": "update_task",
              "required": false,
              "type": "string"
            },
            {
              "name": "Update",
              "required": false,
              "type": "string"
            },
            {
              "name": "an",
              "required": false,
              "type": "string"
            },
            {
              "name": "existing",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "complete_task",
          "description": "Complete a task. (Corresponds to 'close_task' in SDK v2+)",
          "parameters": [
            {
              "name": "complete_task",
              "required": false,
              "type": "string"
            },
            {
              "name": "task_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "uncomplete_task",
          "description": "Uncomplete a (completed) task. (Corresponds to 'reopen_task' in SDK v2+)",
          "parameters": [
            {
              "name": "uncomplete_task",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "move_task",
          "description": "Move a task to a different project or section. (parent_id might need update_task)",
          "parameters": [
            {
              "name": "move_task",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_task",
          "description": "Description not available",
          "parameters": [
            {
              "name": "delete_task",
              "required": false,
              "type": "string"
            },
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "task_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_completed_tasks_by_due_date",
          "description": "Get completed tasks within a due date range using filters.",
          "parameters": [
            {
              "name": "get_completed_tasks_by_due_date",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_completed_tasks_by_completion_date",
          "description": "Get completed tasks within a completion date range using filters.",
          "parameters": [
            {
              "name": "get_completed_tasks_by_completion_date",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_project",
          "description": "Create a new project.",
          "parameters": [
            {
              "name": "color",
              "required": false,
              "type": "string"
            },
            {
              "name": "parent_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "view_style",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "required": false,
              "type": "string"
            },
            {
              "name": "is_favorite",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_project",
          "description": "Get a project by its ID.",
          "parameters": [
            {
              "name": "get_project",
              "required": false,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_projects",
          "description": "Get all active projects.",
          "parameters": [
            {
              "name": "get_projects",
              "required": false,
              "type": "string"
            },
            {
              "name": "Get",
              "required": false,
              "type": "string"
            },
            {
              "name": "all",
              "required": false,
              "type": "string"
            },
            {
              "name": "active",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_project",
          "description": "Update an existing project.",
          "parameters": [
            {
              "name": "update_project",
              "required": false,
              "type": "string"
            },
            {
              "name": "Update",
              "required": false,
              "type": "string"
            },
            {
              "name": "an",
              "required": false,
              "type": "string"
            },
            {
              "name": "existing",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "archive_project",
          "description": "Description not available",
          "parameters": [
            {
              "name": "archive_project",
              "required": false,
              "type": "string"
            },
            {
              "name": "Archive",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "unarchive_project",
          "description": "Description not available",
          "parameters": [
            {
              "name": "unarchive_project",
              "required": false,
              "type": "string"
            },
            {
              "name": "Unarchive",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_project",
          "description": "Description not available",
          "parameters": [
            {
              "name": "delete_project",
              "required": false,
              "type": "string"
            },
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_collaborators",
          "description": "Get collaborators in a shared project.",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_section",
          "description": "Create a new section within a project.",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "order",
              "required": false,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_section",
          "description": "Get a specific section by its ID.",
          "parameters": [
            {
              "name": "get_section",
              "required": false,
              "type": "string"
            },
            {
              "name": "section_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_sections",
          "description": "Get all active sections, optionally filtered by project_id.",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_section",
          "description": "Update an existing section's name.",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "section_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_section",
          "description": "Description not available",
          "parameters": [
            {
              "name": "delete_section",
              "required": false,
              "type": "string"
            },
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "section_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_label",
          "description": "Create a new personal label.",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "color",
              "required": false,
              "type": "string"
            },
            {
              "name": "item_order",
              "required": false,
              "type": "string"
            },
            {
              "name": "is_favorite",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_label",
          "description": "Get a specific personal label by its ID.",
          "parameters": [
            {
              "name": "get_label",
              "required": false,
              "type": "string"
            },
            {
              "name": "label_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_labels",
          "description": "Get all personal labels.",
          "parameters": [
            {
              "name": "get_labels",
              "required": false,
              "type": "string"
            },
            {
              "name": "Get",
              "required": false,
              "type": "string"
            },
            {
              "name": "all",
              "required": false,
              "type": "string"
            },
            {
              "name": "personal",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_label",
          "description": "Update a personal label.",
          "parameters": [
            {
              "name": "name",
              "required": false,
              "type": "string"
            },
            {
              "name": "color",
              "required": false,
              "type": "string"
            },
            {
              "name": "label_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "item_order",
              "required": false,
              "type": "string"
            },
            {
              "name": "is_favorite",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_label",
          "description": "Delete a personal label.",
          "parameters": [
            {
              "name": "delete_label",
              "required": false,
              "type": "string"
            },
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "personal",
              "required": false,
              "type": "string"
            },
            {
              "name": "label_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_shared_labels",
          "description": "Get shared label names or Label objects (SDK v2+).",
          "parameters": [
            {
              "name": "get_shared_labels",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "rename_shared_label",
          "description": "Rename all occurrences of a shared label. (SDK v2: update label by ID)",
          "parameters": [
            {
              "name": "rename_shared_label",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "remove_shared_label",
          "description": "Remove all occurrences of a shared label. (SDK v2: delete label by ID)",
          "parameters": [
            {
              "name": "remove_shared_label",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_comment",
          "description": "Create a new comment on a task or project.",
          "parameters": [
            {
              "name": "add_comment",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_comment",
          "description": "Get a specific comment by its ID.",
          "parameters": [
            {
              "name": "get_comment",
              "required": false,
              "type": "string"
            },
            {
              "name": "comment_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_comments",
          "description": "Get comments for a task or project.",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "task_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_comment",
          "description": "Update an existing comment's content.",
          "parameters": [
            {
              "name": "content",
              "required": true,
              "type": "string"
            },
            {
              "name": "comment_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_comment",
          "description": "Description not available",
          "parameters": [
            {
              "name": "delete_comment",
              "required": false,
              "type": "string"
            },
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "comment_id",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@koji0701/todoist-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "todoistApiToken",
          "required": true,
          "description": "Your Todoist API token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@koji0701/todoist-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0695.@koji0701_todoist-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 679
  }
}