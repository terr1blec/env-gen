{
  "labels": {
    "analysis": "The MCP Server \"Linkup Search\" provides a web search capability using the LinkupClient to fetch real-time information. Its core functionality revolves around performing web searches, which is a fundamental action for gathering information from the internet. The available tool \"search-web\" enables users to query the web and retrieve search results in real-time, suggesting that it's primarily designed for web search and research purposes.",
    "reasoning": "The primary label \"Web Search & Research\" was chosen because the server's main functionality is centered around web search capabilities. This aligns perfectly with the predefined category for tools that facilitate searching the web and gathering information, which is the primary use case of this server. No secondary labels are necessary as the server's functionality is strictly limited to web search at this time.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 746,
    "server_name": "Linkup Search",
    "rank_by_usage": 747,
    "usage_count": "9",
    "original_file": "../crawler/smithery/mcp-search-linkup_linkup-search.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/mcp-search-linkup/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "search-web",
          "description": "Perform a web search query using Linkup. This tool is helpful for finding information on the web.",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "The query to search the web with. This should be a question, no need to write in keywords."
              }
            },
            "required": [
              "query"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "search-web"
      ]
    },
    "server_info_crawled": {
      "id": 746,
      "name": "Linkup Search",
      "author": "mcp-search-linkup",
      "overview": "Provides web search capability using the LinkupClient to fetch real-time information.",
      "repository_url": "https://github.com/LinkupPlatform/python-mcp-server",
      "homepage": "https://smithery.ai/server/mcp-search-linkup",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "9",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/mcp-search-linkup_linkup-search.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "search-web",
          "description": "Perform a web search query using Linkup. This tool is helpful for finding information on the web.",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "The query to search the web with. This should be a question, no need to write in keywords."
              }
            },
            "required": [
              "query"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/mcp-search-linkup/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/mcp-search-linkup/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0747.mcp-search-linkup_linkup-search_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 729
  }
}