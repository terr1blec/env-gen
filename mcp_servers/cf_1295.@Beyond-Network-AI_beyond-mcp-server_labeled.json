{
  "labels": {
    "analysis": "The MCP Server appears to specialize in integrating with social media platforms and blockchain networks to aggregate data. The available tools suggest functionality for retrieving user profiles, user-generated content, trending topics, and threads, which are typical operations for platforms like Twitter, Reddit, or other social networks. Additionally, the mention of \"onchain data\" indicates some capability to interact with blockchain data. This combination suggests the server acts as a bridge between social media and blockchain ecosystems, offering search and retrieval capabilities across these domains.",
    "reasoning": "The primary functionality of the server revolves around accessing and integrating data from social platforms, which aligns with the \"Social Media\" category. Given the mention of \"onchain data,\" it also fits the \"Cryptocurrency & Blockchain\" category, making it a secondary label. The third tool, \"get-trending-topics,\" suggests engagement with trending content, which overlaps with \"News & Media,\" but this is less central than the social and blockchain aspects. No custom label is needed as the predefined categories adequately cover its functionality.",
    "primary_label": "Social Media",
    "secondary_labels": [
      "Cryptocurrency & Blockchain"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1294,
    "server_name": "Beyond MCP Server",
    "rank_by_usage": 1295,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@Beyond-Network-AI_beyond-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Beyond-Network-AI/beyond-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1294,
      "name": "Beyond MCP Server",
      "author": "@Beyond-Network-AI/beyond-mcp-server",
      "overview": "Access social platform data and onchain data seamlessly. Integrate multiple social media platforms with ease and extend functionality as needed. Optimize your LLM interactions with well-formatted context and flexible transport options.",
      "repository_url": "https://github.com/Beyond-Network-AI/beyond-mcp-server",
      "homepage": "https://smithery.ai/server/@Beyond-Network-AI/beyond-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Beyond-Network-AI_beyond-mcp-server.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "search-content",
          "description": "Deploy Server Beyond MCP Server Claim Server @Beyond-Network-AI/beyond-mcp-server Try in Playground search-content",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "platform",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-user-profile",
          "description": "Description not available",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "type": "string"
            },
            {
              "name": "platform",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-user-content",
          "description": "Description not available",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "userId",
              "required": true,
              "type": "string"
            },
            {
              "name": "platform",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-thread",
          "description": "Description not available",
          "parameters": [
            {
              "name": "platform",
              "required": true,
              "type": "string"
            },
            {
              "name": "threadId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-trending-topics",
          "description": "Description not available",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "platform",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Beyond-Network-AI/beyond-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "neynarApiKey",
          "required": true,
          "description": "Neynar API key for Farcaster integration"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Beyond-Network-AI/beyond-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1295.@Beyond-Network-AI_beyond-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1231
  }
}