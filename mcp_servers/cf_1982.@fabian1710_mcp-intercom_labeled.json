{
  "labels": {
    "analysis": "The MCP Server specializes in interacting with Intercom chat data, allowing users to query and analyze conversations securely using their Intercom API key. Its primary functionality involves fetching and filtering chat conversations, with tools focused on retrieving conversation history (e.g., from the last week) and searching through existing chat data. This server enhances LLM capabilities by integrating real-time or historical Intercom chat data into workflows.",
    "reasoning": "The primary label \"Communication Tools\" was chosen because the server's core functionality revolves around managing and analyzing chat/ conversation data from Intercom, a messaging platform. The secondary label \"API Integration\" is relevant due to its reliance on the Intercom API for data access. The secondary label \"Data Analysis & Processing\" was also chosen because the server provides tools for filtering and analyzing chat data. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Communication Tools",
    "secondary_labels": [
      "API Integration",
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1981,
    "server_name": "Intercom Chat Integration",
    "rank_by_usage": 1982,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@fabian1710_mcp-intercom.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@fabian1710/mcp-intercom/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1981,
      "name": "Intercom Chat Integration",
      "author": "@fabian1710/mcp-intercom",
      "overview": "Query and analyze your Intercom conversations with powerful filtering options. Gain insights from your chat data securely using your Intercom API key. Enhance your LLM's capabilities by integrating real-time conversation data from Intercom.",
      "repository_url": "https://github.com/fabian1710/mcp-intercom",
      "homepage": "https://smithery.ai/server/@fabian1710/mcp-intercom",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@fabian1710_mcp-intercom.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "search-conversations",
          "description": "Deploy Server Intercom Chat Integration Claim Server @fabian1710/mcp-intercom Try in Playground search-conversations",
          "parameters": []
        },
        {
          "name": "list-conversations-from-last-week",
          "description": "Fetch all conversations from the last week (last 7 days)",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@fabian1710/mcp-intercom/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "intercomApiKey",
          "required": true,
          "description": "Your Intercom API key to authenticate API calls."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@fabian1710/mcp-intercom/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1982.@fabian1710_mcp-intercom_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1731
  }
}