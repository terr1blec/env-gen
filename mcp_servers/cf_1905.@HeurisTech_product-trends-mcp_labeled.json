{
  "labels": {
    "analysis": "The MCP Server is specialized in analyzing product trends by scraping social media data from platforms like TikTok and Instagram. It focuses on hashtag-based content aggregation to provide social engagement metrics, enabling multi-hashtag analysis with filtering and pagination capabilities. The server is designed for easy integration via RESTful APIs and configurable deployment settings.",
    "reasoning": "The primary label \"Social Media\" was chosen because the server's core functionality revolves around scraping and analyzing content from social media platforms. The \"Data Analysis & Processing\" secondary label fits due to its analytical capabilities on the scraped data. A custom label was not deemed necessary as the predefined categories sufficiently cover the server's functionality.",
    "primary_label": "Social Media",
    "secondary_labels": [
      "Data Analysis & Processing",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1904,
    "server_name": "Product Trends Server",
    "rank_by_usage": 1905,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@HeurisTech_product-trends-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@HeurisTech/product-trends-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1904,
      "name": "Product Trends Server",
      "author": "@HeurisTech/product-trends-mcp",
      "overview": "Analyze product trends on social media platforms like TikTok and Instagram by scraping hashtags and providing social engagement metrics. Enable multi-hashtag analysis with result filtering and pagination for comprehensive trend insights. Integrate easily with RESTful resource endpoints and configure via environment variables for flexible deployment.",
      "repository_url": "https://github.com/HeurisTech/product-trends-mcp",
      "homepage": "https://smithery.ai/server/@HeurisTech/product-trends-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@HeurisTech_product-trends-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "tiktok_hashtag_scraper",
          "description": "Deploy Server Product Trends Server @HeurisTech/product-trends-mcp Try in Playground tiktok_hashtag_scraper",
          "parameters": []
        },
        {
          "name": "insta_hashtag_scraper",
          "description": "Scrape Instagram hashtags to analyze trends related to products.\n    \n    Args:\n        hashtags: List of hashtags to scrape (without the # symbol)\n        results_limit: Maximum number of results to fetch\n        \n    Returns:\n        Dictionary containing scraped hashtag data and analysis",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@HeurisTech/product-trends-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "APIFY_API_TOKEN",
          "required": true,
          "description": "The Apify API key required for scraping social media."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@HeurisTech/product-trends-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1905.@HeurisTech_product-trends-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1682
  }
}