{
  "labels": {
    "analysis": "The MCP Server described is a Python-based server that facilitates dynamic integration of LLM clients with external data and tools using the Model Context Protocol. Its primary functionality revolves around accessing and retrieving information about Portuguese companies via the NIF Portugal service. The available tools enable users to search for company-related data (e.g., company details, NIF numbers, accounting status, and activity status) based on various criteria. This server acts as an intermediary, providing structured access to company-specific data, making it particularly useful for business research, compliance checks, or automation involving Portuguese corporate data.",
    "reasoning": "The primary label \"Business Research\" was chosen because the server's core functionality is centered around retrieving and managing company-related data, which aligns with researching business entities. The secondary label \"Database Operations\" was selected because the server interacts with structured data (likely a database) to perform queries and return results. No custom label is needed as the predefined categories sufficiently capture the server's purpose.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Database Operations"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 432,
    "server_name": "NIF Portugal MCP Server",
    "rank_by_usage": 433,
    "usage_count": "49",
    "original_file": "../crawler/smithery/@ruicarvalho1_mcp_nif.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ruicarvalho1/mcp_nif/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_company",
          "description": null,
          "input_schema": {
            "properties": {
              "nif": {
                "title": "Nif",
                "type": "string"
              }
            },
            "required": [
              "nif"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "is_accounting_company",
          "description": null,
          "input_schema": {
            "properties": {
              "nif": {
                "title": "Nif",
                "type": "string"
              }
            },
            "required": [
              "nif"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "is_active",
          "description": null,
          "input_schema": {
            "properties": {
              "nif": {
                "title": "Nif",
                "type": "string"
              }
            },
            "required": [
              "nif"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_companies_by_name_and_city",
          "description": null,
          "input_schema": {
            "properties": {
              "name": {
                "title": "Name",
                "type": "string"
              },
              "city": {
                "title": "City",
                "type": "string"
              }
            },
            "required": [
              "name",
              "city"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "find_nif_by_name",
          "description": null,
          "input_schema": {
            "properties": {
              "name": {
                "title": "Name",
                "type": "string"
              }
            },
            "required": [
              "name"
            ],
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 5,
      "tool_names": [
        "get_company",
        "is_accounting_company",
        "is_active",
        "search_companies_by_name_and_city",
        "find_nif_by_name"
      ]
    },
    "server_info_crawled": {
      "id": 432,
      "name": "NIF Portugal MCP Server",
      "author": "@ruicarvalho1/mcp_nif",
      "overview": "This project involves the implementation of a Python-based MCP server that enables the dynamic integration of LLM clients with external data and tools. The server exposes resources, tools and prompts through the Model Context Protocol that can be used by the models in real time, facilitating intelligent, contextual interactions. The project also integrates with the NIF Portugal service (https://nif.pt/), enabling users to access data on Portuguese companies based on their NIF.",
      "repository_url": "https://github.com/ruicarvalho1/MCP_Nif",
      "homepage": "https://smithery.ai/server/@ruicarvalho1/mcp_nif",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "49",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ruicarvalho1_mcp_nif.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "get_company",
          "description": null,
          "input_schema": {
            "properties": {
              "nif": {
                "title": "Nif",
                "type": "string"
              }
            },
            "required": [
              "nif"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "is_accounting_company",
          "description": null,
          "input_schema": {
            "properties": {
              "nif": {
                "title": "Nif",
                "type": "string"
              }
            },
            "required": [
              "nif"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "is_active",
          "description": null,
          "input_schema": {
            "properties": {
              "nif": {
                "title": "Nif",
                "type": "string"
              }
            },
            "required": [
              "nif"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_companies_by_name_and_city",
          "description": null,
          "input_schema": {
            "properties": {
              "name": {
                "title": "Name",
                "type": "string"
              },
              "city": {
                "title": "City",
                "type": "string"
              }
            },
            "required": [
              "name",
              "city"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "find_nif_by_name",
          "description": null,
          "input_schema": {
            "properties": {
              "name": {
                "title": "Name",
                "type": "string"
              }
            },
            "required": [
              "name"
            ],
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ruicarvalho1/mcp_nif/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ruicarvalho1/mcp_nif/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0433.@ruicarvalho1_mcp_nif_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 427
  }
}