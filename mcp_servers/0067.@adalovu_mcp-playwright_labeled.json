{
  "labels": {
    "analysis": "The MCP Server is a specialized Playwright Automation Server designed to enable LLMs to perform browser automation tasks. It provides a comprehensive set of tools for interacting with web pages, including navigation, element interaction, data scraping, HTTP request handling, and test code generation. The core functionality revolves around automating browser actions, generating test scripts, and retrieving web content programmatically. This server is particularly useful for tasks requiring automated web interaction, such as web scraping, end-to-end testing, user simulation, and dynamic content extraction.",
    "reasoning": "The primary functionality of the MCP Server is browser automation, making \"Browser Automation\" the most appropriate primary label. The server also includes capabilities for web scraping and HTTP request handling, which aligns with \"Web Search & Research\" and \"API Integration\" as secondary labels. No unique functionality outside the predefined categories is noted, so no custom label is needed.",
    "primary_label": "Browser Automation",
    "secondary_labels": [
      "Web Search & Research",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 66,
    "server_name": "Playwright Automation Server",
    "rank_by_usage": 67,
    "usage_count": "1,256",
    "original_file": "../crawler/smithery/@adalovu_mcp-playwright.json",
    "mode": "smithery",
    "timestamp": 1751937975,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@adalovu/mcp-playwright/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "start_codegen_session",
          "description": "Start a new code generation session to record Playwright actions",
          "input_schema": {
            "type": "object",
            "properties": {
              "options": {
                "type": "object",
                "description": "Code generation options",
                "properties": {
                  "outputPath": {
                    "type": "string",
                    "description": "Directory path where generated tests will be saved (use absolute path)"
                  },
                  "testNamePrefix": {
                    "type": "string",
                    "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                  },
                  "includeComments": {
                    "type": "boolean",
                    "description": "Whether to include descriptive comments in generated tests"
                  }
                },
                "required": [
                  "outputPath"
                ]
              }
            },
            "required": [
              "options"
            ]
          },
          "annotations": null
        },
        {
          "name": "end_codegen_session",
          "description": "End a code generation session and generate the test file",
          "input_schema": {
            "type": "object",
            "properties": {
              "sessionId": {
                "type": "string",
                "description": "ID of the session to end"
              }
            },
            "required": [
              "sessionId"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_codegen_session",
          "description": "Get information about a code generation session",
          "input_schema": {
            "type": "object",
            "properties": {
              "sessionId": {
                "type": "string",
                "description": "ID of the session to retrieve"
              }
            },
            "required": [
              "sessionId"
            ]
          },
          "annotations": null
        },
        {
          "name": "clear_codegen_session",
          "description": "Clear a code generation session without generating a test",
          "input_schema": {
            "type": "object",
            "properties": {
              "sessionId": {
                "type": "string",
                "description": "ID of the session to clear"
              }
            },
            "required": [
              "sessionId"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_navigate",
          "description": "Navigate to a URL",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL to navigate to the website specified"
              },
              "browserType": {
                "type": "string",
                "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
                "enum": [
                  "chromium",
                  "firefox",
                  "webkit"
                ]
              },
              "width": {
                "type": "number",
                "description": "Viewport width in pixels (default: 1280)"
              },
              "height": {
                "type": "number",
                "description": "Viewport height in pixels (default: 720)"
              },
              "timeout": {
                "type": "number",
                "description": "Navigation timeout in milliseconds"
              },
              "waitUntil": {
                "type": "string",
                "description": "Navigation wait condition"
              },
              "headless": {
                "type": "boolean",
                "description": "Run browser in headless mode (default: false)"
              }
            },
            "required": [
              "url"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_screenshot",
          "description": "Take a screenshot of the current page or a specific element",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name for the screenshot"
              },
              "selector": {
                "type": "string",
                "description": "CSS selector for element to screenshot"
              },
              "width": {
                "type": "number",
                "description": "Width in pixels (default: 800)"
              },
              "height": {
                "type": "number",
                "description": "Height in pixels (default: 600)"
              },
              "storeBase64": {
                "type": "boolean",
                "description": "Store screenshot in base64 format (default: true)"
              },
              "fullPage": {
                "type": "boolean",
                "description": "Store screenshot of the entire page (default: false)"
              },
              "savePng": {
                "type": "boolean",
                "description": "Save screenshot as PNG file (default: false)"
              },
              "downloadsDir": {
                "type": "string",
                "description": "Custom downloads directory path (default: user's Downloads folder)"
              }
            },
            "required": [
              "name"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_click",
          "description": "Click an element on the page",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string",
                "description": "CSS selector for the element to click"
              }
            },
            "required": [
              "selector"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_iframe_click",
          "description": "Click an element in an iframe on the page",
          "input_schema": {
            "type": "object",
            "properties": {
              "iframeSelector": {
                "type": "string",
                "description": "CSS selector for the iframe containing the element to click"
              },
              "selector": {
                "type": "string",
                "description": "CSS selector for the element to click"
              }
            },
            "required": [
              "iframeSelector",
              "selector"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_fill",
          "description": "fill out an input field",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string",
                "description": "CSS selector for input field"
              },
              "value": {
                "type": "string",
                "description": "Value to fill"
              }
            },
            "required": [
              "selector",
              "value"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_select",
          "description": "Select an element on the page with Select tag",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string",
                "description": "CSS selector for element to select"
              },
              "value": {
                "type": "string",
                "description": "Value to select"
              }
            },
            "required": [
              "selector",
              "value"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_hover",
          "description": "Hover an element on the page",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string",
                "description": "CSS selector for element to hover"
              }
            },
            "required": [
              "selector"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_evaluate",
          "description": "Execute JavaScript in the browser console",
          "input_schema": {
            "type": "object",
            "properties": {
              "script": {
                "type": "string",
                "description": "JavaScript code to execute"
              }
            },
            "required": [
              "script"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_console_logs",
          "description": "Retrieve console logs from the browser with filtering options",
          "input_schema": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of logs to retrieve (all, error, warning, log, info, debug)",
                "enum": [
                  "all",
                  "error",
                  "warning",
                  "log",
                  "info",
                  "debug"
                ]
              },
              "search": {
                "type": "string",
                "description": "Text to search for in logs (handles text with square brackets)"
              },
              "limit": {
                "type": "number",
                "description": "Maximum number of logs to return"
              },
              "clear": {
                "type": "boolean",
                "description": "Whether to clear logs after retrieval (default: false)"
              }
            },
            "required": []
          },
          "annotations": null
        },
        {
          "name": "playwright_close",
          "description": "Close the browser and release all resources",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "playwright_get",
          "description": "Perform an HTTP GET request",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL to perform GET operation"
              }
            },
            "required": [
              "url"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_post",
          "description": "Perform an HTTP POST request",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL to perform POST operation"
              },
              "value": {
                "type": "string",
                "description": "Data to post in the body"
              },
              "token": {
                "type": "string",
                "description": "Bearer token for authorization"
              },
              "headers": {
                "type": "object",
                "description": "Additional headers to include in the request",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "required": [
              "url",
              "value"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_put",
          "description": "Perform an HTTP PUT request",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL to perform PUT operation"
              },
              "value": {
                "type": "string",
                "description": "Data to PUT in the body"
              }
            },
            "required": [
              "url",
              "value"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_patch",
          "description": "Perform an HTTP PATCH request",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL to perform PUT operation"
              },
              "value": {
                "type": "string",
                "description": "Data to PATCH in the body"
              }
            },
            "required": [
              "url",
              "value"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_delete",
          "description": "Perform an HTTP DELETE request",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL to perform DELETE operation"
              }
            },
            "required": [
              "url"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_expect_response",
          "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
              },
              "url": {
                "type": "string",
                "description": "URL pattern to match in the response."
              }
            },
            "required": [
              "id",
              "url"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_assert_response",
          "description": "Wait for and validate a previously initiated HTTP response wait operation.",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
              },
              "value": {
                "type": "string",
                "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
              }
            },
            "required": [
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_custom_user_agent",
          "description": "Set a custom User Agent for the browser",
          "input_schema": {
            "type": "object",
            "properties": {
              "userAgent": {
                "type": "string",
                "description": "Custom User Agent for the Playwright browser instance"
              }
            },
            "required": [
              "userAgent"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_get_visible_text",
          "description": "Get the visible text content of the current page",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "playwright_get_visible_html",
          "description": "Get the HTML content of the current page",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "playwright_go_back",
          "description": "Navigate back in browser history",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "playwright_go_forward",
          "description": "Navigate forward in browser history",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "playwright_drag",
          "description": "Drag an element to a target location",
          "input_schema": {
            "type": "object",
            "properties": {
              "sourceSelector": {
                "type": "string",
                "description": "CSS selector for the element to drag"
              },
              "targetSelector": {
                "type": "string",
                "description": "CSS selector for the target location"
              }
            },
            "required": [
              "sourceSelector",
              "targetSelector"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_press_key",
          "description": "Press a keyboard key",
          "input_schema": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
              },
              "selector": {
                "type": "string",
                "description": "Optional CSS selector to focus before pressing key"
              }
            },
            "required": [
              "key"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_save_as_pdf",
          "description": "Save the current page as a PDF file",
          "input_schema": {
            "type": "object",
            "properties": {
              "outputPath": {
                "type": "string",
                "description": "Directory path where PDF will be saved"
              },
              "filename": {
                "type": "string",
                "description": "Name of the PDF file (default: page.pdf)"
              },
              "format": {
                "type": "string",
                "description": "Page format (e.g. 'A4', 'Letter')"
              },
              "printBackground": {
                "type": "boolean",
                "description": "Whether to print background graphics"
              },
              "margin": {
                "type": "object",
                "description": "Page margins",
                "properties": {
                  "top": {
                    "type": "string"
                  },
                  "right": {
                    "type": "string"
                  },
                  "bottom": {
                    "type": "string"
                  },
                  "left": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "outputPath"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_click_and_switch_tab",
          "description": "Click a link and switch to the newly opened tab",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string",
                "description": "CSS selector for the link to click"
              }
            },
            "required": [
              "selector"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 30,
      "tool_names": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_close",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_get_visible_text",
        "playwright_get_visible_html",
        "playwright_go_back",
        "playwright_go_forward",
        "playwright_drag",
        "playwright_press_key",
        "playwright_save_as_pdf",
        "playwright_click_and_switch_tab"
      ]
    },
    "server_info_crawled": {
      "id": 66,
      "name": "Playwright Automation Server",
      "author": "@adalovu/mcp-playwright",
      "overview": "Enable LLMs to automate and interact with web browsers using Playwright. Perform actions like taking screenshots, generating test code, scraping web pages, and executing JavaScript in real browser environments. Enhance your AI agents with powerful browser automation capabilities seamlessly integrated via MCP.",
      "repository_url": "https://github.com/adalovu/mcp-playwright",
      "homepage": "https://smithery.ai/server/@adalovu/mcp-playwright",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "1,256",
      "success_rate": "99.86%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@adalovu_mcp-playwright.json",
      "tools_count": 30,
      "tools": [
        {
          "name": "start_codegen_session",
          "description": "Start a new code generation session to record Playwright actions",
          "input_schema": {
            "type": "object",
            "properties": {
              "options": {
                "type": "object",
                "description": "Code generation options",
                "properties": {
                  "outputPath": {
                    "type": "string",
                    "description": "Directory path where generated tests will be saved (use absolute path)"
                  },
                  "testNamePrefix": {
                    "type": "string",
                    "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                  },
                  "includeComments": {
                    "type": "boolean",
                    "description": "Whether to include descriptive comments in generated tests"
                  }
                },
                "required": [
                  "outputPath"
                ]
              }
            },
            "required": [
              "options"
            ]
          },
          "annotations": null
        },
        {
          "name": "end_codegen_session",
          "description": "End a code generation session and generate the test file",
          "input_schema": {
            "type": "object",
            "properties": {
              "sessionId": {
                "type": "string",
                "description": "ID of the session to end"
              }
            },
            "required": [
              "sessionId"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_codegen_session",
          "description": "Get information about a code generation session",
          "input_schema": {
            "type": "object",
            "properties": {
              "sessionId": {
                "type": "string",
                "description": "ID of the session to retrieve"
              }
            },
            "required": [
              "sessionId"
            ]
          },
          "annotations": null
        },
        {
          "name": "clear_codegen_session",
          "description": "Clear a code generation session without generating a test",
          "input_schema": {
            "type": "object",
            "properties": {
              "sessionId": {
                "type": "string",
                "description": "ID of the session to clear"
              }
            },
            "required": [
              "sessionId"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_navigate",
          "description": "Navigate to a URL",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL to navigate to the website specified"
              },
              "browserType": {
                "type": "string",
                "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
                "enum": [
                  "chromium",
                  "firefox",
                  "webkit"
                ]
              },
              "width": {
                "type": "number",
                "description": "Viewport width in pixels (default: 1280)"
              },
              "height": {
                "type": "number",
                "description": "Viewport height in pixels (default: 720)"
              },
              "timeout": {
                "type": "number",
                "description": "Navigation timeout in milliseconds"
              },
              "waitUntil": {
                "type": "string",
                "description": "Navigation wait condition"
              },
              "headless": {
                "type": "boolean",
                "description": "Run browser in headless mode (default: false)"
              }
            },
            "required": [
              "url"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_screenshot",
          "description": "Take a screenshot of the current page or a specific element",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name for the screenshot"
              },
              "selector": {
                "type": "string",
                "description": "CSS selector for element to screenshot"
              },
              "width": {
                "type": "number",
                "description": "Width in pixels (default: 800)"
              },
              "height": {
                "type": "number",
                "description": "Height in pixels (default: 600)"
              },
              "storeBase64": {
                "type": "boolean",
                "description": "Store screenshot in base64 format (default: true)"
              },
              "fullPage": {
                "type": "boolean",
                "description": "Store screenshot of the entire page (default: false)"
              },
              "savePng": {
                "type": "boolean",
                "description": "Save screenshot as PNG file (default: false)"
              },
              "downloadsDir": {
                "type": "string",
                "description": "Custom downloads directory path (default: user's Downloads folder)"
              }
            },
            "required": [
              "name"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_click",
          "description": "Click an element on the page",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string",
                "description": "CSS selector for the element to click"
              }
            },
            "required": [
              "selector"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_iframe_click",
          "description": "Click an element in an iframe on the page",
          "input_schema": {
            "type": "object",
            "properties": {
              "iframeSelector": {
                "type": "string",
                "description": "CSS selector for the iframe containing the element to click"
              },
              "selector": {
                "type": "string",
                "description": "CSS selector for the element to click"
              }
            },
            "required": [
              "iframeSelector",
              "selector"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_fill",
          "description": "fill out an input field",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string",
                "description": "CSS selector for input field"
              },
              "value": {
                "type": "string",
                "description": "Value to fill"
              }
            },
            "required": [
              "selector",
              "value"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_select",
          "description": "Select an element on the page with Select tag",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string",
                "description": "CSS selector for element to select"
              },
              "value": {
                "type": "string",
                "description": "Value to select"
              }
            },
            "required": [
              "selector",
              "value"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_hover",
          "description": "Hover an element on the page",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string",
                "description": "CSS selector for element to hover"
              }
            },
            "required": [
              "selector"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_evaluate",
          "description": "Execute JavaScript in the browser console",
          "input_schema": {
            "type": "object",
            "properties": {
              "script": {
                "type": "string",
                "description": "JavaScript code to execute"
              }
            },
            "required": [
              "script"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_console_logs",
          "description": "Retrieve console logs from the browser with filtering options",
          "input_schema": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of logs to retrieve (all, error, warning, log, info, debug)",
                "enum": [
                  "all",
                  "error",
                  "warning",
                  "log",
                  "info",
                  "debug"
                ]
              },
              "search": {
                "type": "string",
                "description": "Text to search for in logs (handles text with square brackets)"
              },
              "limit": {
                "type": "number",
                "description": "Maximum number of logs to return"
              },
              "clear": {
                "type": "boolean",
                "description": "Whether to clear logs after retrieval (default: false)"
              }
            },
            "required": []
          },
          "annotations": null
        },
        {
          "name": "playwright_close",
          "description": "Close the browser and release all resources",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "playwright_get",
          "description": "Perform an HTTP GET request",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL to perform GET operation"
              }
            },
            "required": [
              "url"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_post",
          "description": "Perform an HTTP POST request",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL to perform POST operation"
              },
              "value": {
                "type": "string",
                "description": "Data to post in the body"
              },
              "token": {
                "type": "string",
                "description": "Bearer token for authorization"
              },
              "headers": {
                "type": "object",
                "description": "Additional headers to include in the request",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "required": [
              "url",
              "value"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_put",
          "description": "Perform an HTTP PUT request",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL to perform PUT operation"
              },
              "value": {
                "type": "string",
                "description": "Data to PUT in the body"
              }
            },
            "required": [
              "url",
              "value"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_patch",
          "description": "Perform an HTTP PATCH request",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL to perform PUT operation"
              },
              "value": {
                "type": "string",
                "description": "Data to PATCH in the body"
              }
            },
            "required": [
              "url",
              "value"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_delete",
          "description": "Perform an HTTP DELETE request",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL to perform DELETE operation"
              }
            },
            "required": [
              "url"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_expect_response",
          "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
              },
              "url": {
                "type": "string",
                "description": "URL pattern to match in the response."
              }
            },
            "required": [
              "id",
              "url"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_assert_response",
          "description": "Wait for and validate a previously initiated HTTP response wait operation.",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
              },
              "value": {
                "type": "string",
                "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
              }
            },
            "required": [
              "id"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_custom_user_agent",
          "description": "Set a custom User Agent for the browser",
          "input_schema": {
            "type": "object",
            "properties": {
              "userAgent": {
                "type": "string",
                "description": "Custom User Agent for the Playwright browser instance"
              }
            },
            "required": [
              "userAgent"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_get_visible_text",
          "description": "Get the visible text content of the current page",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "playwright_get_visible_html",
          "description": "Get the HTML content of the current page",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "playwright_go_back",
          "description": "Navigate back in browser history",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "playwright_go_forward",
          "description": "Navigate forward in browser history",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "playwright_drag",
          "description": "Drag an element to a target location",
          "input_schema": {
            "type": "object",
            "properties": {
              "sourceSelector": {
                "type": "string",
                "description": "CSS selector for the element to drag"
              },
              "targetSelector": {
                "type": "string",
                "description": "CSS selector for the target location"
              }
            },
            "required": [
              "sourceSelector",
              "targetSelector"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_press_key",
          "description": "Press a keyboard key",
          "input_schema": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
              },
              "selector": {
                "type": "string",
                "description": "Optional CSS selector to focus before pressing key"
              }
            },
            "required": [
              "key"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_save_as_pdf",
          "description": "Save the current page as a PDF file",
          "input_schema": {
            "type": "object",
            "properties": {
              "outputPath": {
                "type": "string",
                "description": "Directory path where PDF will be saved"
              },
              "filename": {
                "type": "string",
                "description": "Name of the PDF file (default: page.pdf)"
              },
              "format": {
                "type": "string",
                "description": "Page format (e.g. 'A4', 'Letter')"
              },
              "printBackground": {
                "type": "boolean",
                "description": "Whether to print background graphics"
              },
              "margin": {
                "type": "object",
                "description": "Page margins",
                "properties": {
                  "top": {
                    "type": "string"
                  },
                  "right": {
                    "type": "string"
                  },
                  "bottom": {
                    "type": "string"
                  },
                  "left": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "outputPath"
            ]
          },
          "annotations": null
        },
        {
          "name": "playwright_click_and_switch_tab",
          "description": "Click a link and switch to the newly opened tab",
          "input_schema": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string",
                "description": "CSS selector for the link to click"
              }
            },
            "required": [
              "selector"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@adalovu/mcp-playwright/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@adalovu/mcp-playwright/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0067.@adalovu_mcp-playwright_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 66
  }
}