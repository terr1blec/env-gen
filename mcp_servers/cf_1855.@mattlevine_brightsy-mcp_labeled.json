{
  "labels": {
    "analysis": "The Brightsy MCP Server acts as an intermediary for routing requests to and receiving intelligent responses from AI agents, specifically an OpenAI-compatible one. Its primary function revolves around enabling seamless integration of AI agents into applications with minimal setup and configuration. The server simplifies the process of customizing and deploying AI tools within applications, focusing on ease of use and interoperability.",
    "reasoning": "The Primary Label is chosen because the server's core functionality is centered around facilitating interaction with AI/ML models, particularly in an agent-based framework. The secondary labels reflect related technical capabilities (API integration) and Developer-centric utilities (Development Tools). No custom label is necessary as the predefined categories adequately cover the server's functionality.",
    "primary_label": "AI/ML Tools",
    "secondary_labels": [
      "API Integration",
      "Development Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1854,
    "server_name": "Brightsy MCP Server",
    "rank_by_usage": 1855,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@mattlevine_brightsy-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@mattlevine/brightsy-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1854,
      "name": "Brightsy MCP Server",
      "author": "@mattlevine/brightsy-mcp",
      "overview": "Connect your applications to an OpenAI-compatible AI agent seamlessly. Utilize the Brightsy MCP server to forward requests and receive intelligent responses, enhancing your application's capabilities. Start interacting with your AI agent effortlessly with customizable tool names and easy setup.",
      "repository_url": "https://github.com/mattlevine/brightsy-mcp",
      "homepage": "https://smithery.ai/server/@mattlevine/brightsy-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@mattlevine_brightsy-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "brightsy",
          "description": "Deploy Server Brightsy MCP Server Claim Server @mattlevine/brightsy-mcp Try in Playground",
          "parameters": [
            {
              "name": "messages",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@mattlevine/brightsy-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "apiKey",
          "required": true,
          "description": "The Brightsy API key."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@mattlevine/brightsy-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1855.@mattlevine_brightsy-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1645
  }
}