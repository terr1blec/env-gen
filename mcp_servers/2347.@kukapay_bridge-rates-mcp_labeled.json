{
  "labels": {
    "analysis": "The MCP Server is designed to provide real-time data and analytics for cross-chain bridge operations, specifically focusing on bridge rates, supported chains, and supported bridges. It leverages LiFi's infrastructure to offer actionable insights for AI agents and users looking to optimize cross-chain transfers. The tools provided by this server primarily cater to the cryptocurrency and blockchain domain, with a strong emphasis on facilitating informed decision-making for cross-chain transactions.",
    "reasoning": "The primary label \"Cryptocurrency & Blockchain\" was chosen because the server's core functionality revolves around cross-chain bridging, a key operation within the blockchain ecosystem. \"Data Analysis & Processing\" is included as a secondary label due to the server's focus on providing up-to-date, structured data for analysis. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Cryptocurrency & Blockchain",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2346,
    "server_name": "Bridge Rates Server",
    "rank_by_usage": 2347,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@kukapay_bridge-rates-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@kukapay/bridge-rates-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "getBridgeRates",
          "description": "Fetches the cross-chain bridge rate for a token pair between two chains",
          "input_schema": {
            "type": "object",
            "properties": {
              "fromChainId": {
                "type": "string",
                "description": "Source chain ID (e.g., '1' for Ethereum)"
              },
              "toChainId": {
                "type": "string",
                "description": "Destination chain ID (e.g., '10' for Optimism)"
              },
              "fromTokenAddress": {
                "type": "string",
                "description": "Source token contract address"
              },
              "toTokenAddress": {
                "type": "string",
                "description": "Destination token contract address"
              },
              "fromAmount": {
                "type": "string",
                "default": "10000000",
                "description": "Amount to bridge (in smallest token unit, default: 10000000)"
              }
            },
            "required": [
              "fromChainId",
              "toChainId",
              "fromTokenAddress",
              "toTokenAddress"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "getSupportedChains",
          "description": "Fetches the list of chains supported by LiFi for cross-chain bridging",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "getSupportedBridges",
          "description": "Fetches the list of bridges supported by LiFi for cross-chain bridging",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 3,
      "tool_names": [
        "getBridgeRates",
        "getSupportedChains",
        "getSupportedBridges"
      ]
    },
    "server_info_crawled": {
      "id": 2346,
      "name": "Bridge Rates Server",
      "author": "@kukapay/bridge-rates-mcp",
      "overview": "Provide real-time cross-chain bridge rates and optimal transfer routes to support decision-making by onchain AI agents. Retrieve detailed bridge rates, supported chains, and bridges in easy-to-read Markdown tables. Enhance your cross-chain transfer insights with up-to-date data from LI.FI.",
      "repository_url": "https://github.com/kukapay/bridge-rates-mcp",
      "homepage": "https://smithery.ai/server/@kukapay/bridge-rates-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@kukapay_bridge-rates-mcp.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "getBridgeRates",
          "description": "Fetches the cross-chain bridge rate for a token pair between two chains",
          "input_schema": {
            "type": "object",
            "properties": {
              "fromChainId": {
                "type": "string",
                "description": "Source chain ID (e.g., '1' for Ethereum)"
              },
              "toChainId": {
                "type": "string",
                "description": "Destination chain ID (e.g., '10' for Optimism)"
              },
              "fromTokenAddress": {
                "type": "string",
                "description": "Source token contract address"
              },
              "toTokenAddress": {
                "type": "string",
                "description": "Destination token contract address"
              },
              "fromAmount": {
                "type": "string",
                "default": "10000000",
                "description": "Amount to bridge (in smallest token unit, default: 10000000)"
              }
            },
            "required": [
              "fromChainId",
              "toChainId",
              "fromTokenAddress",
              "toTokenAddress"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "getSupportedChains",
          "description": "Fetches the list of chains supported by LiFi for cross-chain bridging",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "getSupportedBridges",
          "description": "Fetches the list of bridges supported by LiFi for cross-chain bridging",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@kukapay/bridge-rates-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@kukapay/bridge-rates-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "2347.@kukapay_bridge-rates-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 2015
  }
}