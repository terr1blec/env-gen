{
  "labels": {
    "analysis": "The MCP Server is designed to integrate with the Vercel API, providing tools to manage deployments, DNS records, domains, and environment variables for Vercel projects. It automates interactions with Vercel, allowing users to retrieve, create, and manage their resources efficiently. The available tools focus on deployment management, including listing files, accessing file contents, and handling deployments directly through API calls.",
    "reasoning": "The primary functionality of the server is centered around API integration with Vercel, specifically for managing deployments and related resources. This aligns with the \"API Integration\" category, as it automates interactions with a third-party service. Secondary labels like \"Development Tools\" and \"Cloud Services\" are relevant because Vercel is a cloud platform for developers, and the tools aid in development workflows. No custom label is needed as the predefined categories cover the server's functionality adequately.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Development Tools",
      "Cloud Services"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 82,
    "server_name": "Vercel API Integration",
    "rank_by_usage": 83,
    "usage_count": "940",
    "original_file": "../crawler/smithery/@ssdavidai_vercel-api-mcp-fork.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ssdavidai/vercel-api-mcp-fork/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 82,
      "name": "Vercel API Integration",
      "author": "@ssdavidai/vercel-api-mcp-fork",
      "overview": "Connect to the Vercel API to manage deployments, DNS records, domains, and environment variables seamlessly. Streamline your workflow by automating interactions with Vercel, enhancing your development efficiency. Utilize powerful tools to retrieve, create, and manage your Vercel resources effortlessly.",
      "repository_url": "https://github.com/ssdavidai/vercel-api-mcp-fork",
      "homepage": "https://smithery.ai/server/@ssdavidai/vercel-api-mcp-fork",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "940",
      "success_rate": "99.93%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ssdavidai_vercel-api-mcp-fork.json",
      "tools_count": 7,
      "tools": [
        {
          "name": "getDeploymentEvents",
          "description": "Deploy Server Vercel API Integration @ssdavidai/vercel-api-mcp-fork Try in Playground getDeploymentEvents",
          "parameters": [
            {
              "name": "getDeploymentEvents",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getDeployment",
          "description": "Deploy Server Vercel API Integration @ssdavidai/vercel-api-mcp-fork Try in Playground getDeploymentEvents",
          "parameters": [
            {
              "name": "teamId",
              "required": false,
              "type": "string"
            },
            {
              "name": "delimiter",
              "required": false,
              "type": "string"
            },
            {
              "name": "direction",
              "required": false,
              "type": "string"
            },
            {
              "name": "statusCode",
              "required": false,
              "type": "string"
            },
            {
              "name": "deploymentId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "cancelDeployment",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Cancels",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "deployment",
              "required": false,
              "type": "string"
            },
            {
              "name": "slug",
              "required": false,
              "type": "string"
            },
            {
              "name": "teamId",
              "required": false,
              "type": "string"
            },
            {
              "name": "deploymentId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "listDeploymentFiles",
          "description": "Lists deployment files",
          "parameters": [
            {
              "name": "Lists",
              "required": false,
              "type": "string"
            },
            {
              "name": "deployment",
              "required": false,
              "type": "string"
            },
            {
              "name": "files",
              "required": false,
              "type": "string"
            },
            {
              "name": "slug",
              "required": false,
              "type": "string"
            },
            {
              "name": "teamId",
              "required": false,
              "type": "string"
            },
            {
              "name": "deploymentId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getDeploymentFileContents",
          "description": "Gets deployment file contents",
          "parameters": [
            {
              "name": "slug",
              "required": false,
              "type": "string"
            },
            {
              "name": "fileId",
              "required": true,
              "type": "string"
            },
            {
              "name": "teamId",
              "required": false,
              "type": "string"
            },
            {
              "name": "deploymentId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getDeployments",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "deleteDeployment",
          "description": "Description not available",
          "parameters": [
            {
              "name": "url",
              "required": false,
              "type": "string"
            },
            {
              "name": "slug",
              "required": false,
              "type": "string"
            },
            {
              "name": "teamId",
              "required": false,
              "type": "string"
            },
            {
              "name": "deploymentId",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ssdavidai/vercel-api-mcp-fork/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "vercelApiKey",
          "required": true,
          "description": "Your Vercel API key. Required for authenticating requests with the Vercel API."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ssdavidai/vercel-api-mcp-fork/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0083.@ssdavidai_vercel-api-mcp-fork_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 82
  }
}