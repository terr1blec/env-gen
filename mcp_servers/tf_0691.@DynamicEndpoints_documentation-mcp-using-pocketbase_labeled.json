{
  "labels": {
    "analysis": "The MCP Server acts as a specialized content management system focused on extracting, storing, and retrieving documents from specific online sources (Microsoft Learn and GitHub) using PocketBase as a backend database. It offers tools for document lifecycle management including extraction, searching, retrieval, and deletion. The server provides real-time analytics about the stored documents and supports multiple interaction protocols.",
    "reasoning": "The primary functionality revolves around document extraction and management within a database system, which aligns most closely with the Database Operations category. The secondary labels reflect its web content extraction and search capabilities. No custom label is needed as the functionality is well-covered by existing categories.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Web Search & Research",
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 690,
    "server_name": "Pocketbase Document Extractor",
    "rank_by_usage": 691,
    "usage_count": "12",
    "original_file": "../crawler/smithery/@DynamicEndpoints_documentation-mcp-using-pocketbase.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@DynamicEndpoints/documentation-mcp-using-pocketbase/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "extract_document",
          "description": "Extract document content from Microsoft Learn or GitHub URL and store in PocketBase",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri",
                "description": "Microsoft Learn or GitHub URL to extract content from"
              }
            },
            "required": [
              "url"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "list_documents",
          "description": "List stored documents from PocketBase with pagination",
          "input_schema": {
            "type": "object",
            "properties": {
              "limit": {
                "type": "number",
                "minimum": 1,
                "maximum": 100,
                "default": 20,
                "description": "Maximum number of documents to return (default: 20, max: 100)"
              },
              "page": {
                "type": "number",
                "minimum": 1,
                "default": 1,
                "description": "Page number for pagination (default: 1)"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "search_documents",
          "description": "Search documents by title or content using full-text search",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "minLength": 1,
                "description": "Search query to find documents (searches title and content)"
              },
              "limit": {
                "type": "number",
                "minimum": 1,
                "maximum": 100,
                "default": 50,
                "description": "Maximum number of results to return (default: 50)"
              }
            },
            "required": [
              "query"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_document",
          "description": "Get a specific document by ID with full content",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "minLength": 1,
                "description": "Document ID to retrieve"
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "delete_document",
          "description": "Delete a document from PocketBase by ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "minLength": 1,
                "description": "Document ID to delete"
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "ensure_collection",
          "description": "Check if the documents collection exists and create it if needed",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "collection_info",
          "description": "Get detailed information about the documents collection including statistics",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 7,
      "tool_names": [
        "extract_document",
        "list_documents",
        "search_documents",
        "get_document",
        "delete_document",
        "ensure_collection",
        "collection_info"
      ]
    },
    "server_info_crawled": {
      "id": 690,
      "name": "Pocketbase Document Extractor",
      "author": "@DynamicEndpoints/documentation-mcp-using-pocketbase",
      "overview": "Extract content from Microsoft Learn and GitHub URLs and store it in PocketBase for easy retrieval and search. Manage documents with tools for extraction, listing, searching, retrieval, and deletion. Benefit from real-time server statistics, dynamic tool management, and multi-transport support including STDIO and HTTP.",
      "repository_url": "https://github.com/DynamicEndpoints/documentation-mcp-using-pocketbase",
      "homepage": "https://smithery.ai/server/@DynamicEndpoints/documentation-mcp-using-pocketbase",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "12",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@DynamicEndpoints_documentation-mcp-using-pocketbase.json",
      "tools_count": 7,
      "tools": [
        {
          "name": "extract_document",
          "description": "Extract document content from Microsoft Learn or GitHub URL and store in PocketBase",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri",
                "description": "Microsoft Learn or GitHub URL to extract content from"
              }
            },
            "required": [
              "url"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "list_documents",
          "description": "List stored documents from PocketBase with pagination",
          "input_schema": {
            "type": "object",
            "properties": {
              "limit": {
                "type": "number",
                "minimum": 1,
                "maximum": 100,
                "default": 20,
                "description": "Maximum number of documents to return (default: 20, max: 100)"
              },
              "page": {
                "type": "number",
                "minimum": 1,
                "default": 1,
                "description": "Page number for pagination (default: 1)"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "search_documents",
          "description": "Search documents by title or content using full-text search",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "minLength": 1,
                "description": "Search query to find documents (searches title and content)"
              },
              "limit": {
                "type": "number",
                "minimum": 1,
                "maximum": 100,
                "default": 50,
                "description": "Maximum number of results to return (default: 50)"
              }
            },
            "required": [
              "query"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get_document",
          "description": "Get a specific document by ID with full content",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "minLength": 1,
                "description": "Document ID to retrieve"
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "delete_document",
          "description": "Delete a document from PocketBase by ID",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "minLength": 1,
                "description": "Document ID to delete"
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "ensure_collection",
          "description": "Check if the documents collection exists and create it if needed",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "collection_info",
          "description": "Get detailed information about the documents collection including statistics",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@DynamicEndpoints/documentation-mcp-using-pocketbase/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@DynamicEndpoints/documentation-mcp-using-pocketbase/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0691.@DynamicEndpoints_documentation-mcp-using-pocketbase_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 675
  }
}