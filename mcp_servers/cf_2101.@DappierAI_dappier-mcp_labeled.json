{
  "labels": {
    "analysis": "The Dappier MCP Server specializes in providing real-time web search capabilities across various domains, including news, financial markets, sports, entertainment, weather, and more. Its primary focus is on delivering up-to-date information from trusted media sources, making it particularly useful for applications that require current data for decision-making or content generation. Additionally, it offers AI-driven recommendations tailored to specific interests, such as sports and lifestyle news, enhancing personalization and relevance.",
    "reasoning": "The primary label \"Web Search & Research\" was chosen because the server's core functionality revolves around real-time web searching across multiple domains. The secondary labels \"News & Media\" and \"Financial Services\" were selected due to the server's emphasis on delivering news content and real-time financial market data. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "News & Media",
      "Financial Services"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2100,
    "server_name": "Dappier MCP Server",
    "rank_by_usage": 2101,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@DappierAI_dappier-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@DappierAI/dappier-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2100,
      "name": "Dappier MCP Server",
      "author": "@DappierAI/dappier-mcp",
      "overview": "Enable fast, free real-time web search and access premium data from trusted media brandsâ€”news, financial markets, sports, entertainment, weather, and more. Build powerful AI agents with Dappier.",
      "repository_url": "https://github.com/DappierAI/dappier-mcp",
      "homepage": "https://smithery.ai/server/@DappierAI/dappier-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@DappierAI_dappier-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "dappier_real_time_search",
          "description": "Retrieve real-time search data from Dappier by processing an AI model that supports two key capabilities:\n\n    - Real-Time Web Search:  \n    Access the latest news, stock market data, weather, travel information, deals, and more using model `am_01j06ytn18ejftedz6dyhz2b15`. Use this model when no stock ticker symbol is provided. - Stock Market Data:  \n    Retrieve real-time financial news, stock prices, and trade updates using model `am_01j749h8pbf7ns8r1bq9s2evrh`.",
          "parameters": []
        },
        {
          "name": "dappier_ai_recommendations",
          "description": "Fetch AI-powered recommendations from Dappier by processing the provided query with a selected data model that tailors results to specific interests. - **Sports News (dm_01j0pb465keqmatq9k83dthx34):**  \n    Get real-time news, updates, and personalized content from top sports sources. - **Lifestyle News (dm_01j0q82s4bfjmsqkhs3ywm3x6y):**  \n    Access current lifestyle updates, analysis, and insights from leading lifestyle publications.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@DappierAI/dappier-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "dappierApiKey",
          "required": true,
          "description": "Your Dappier API key."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@DappierAI/dappier-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2101.@DappierAI_dappier-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1827
  }
}