{
  "labels": {
    "analysis": "The Mercury MCP Server primarily focuses on providing banking and financial operations through an API interface. It allows users to access and manage their financial data, including bank accounts, credit cards, transactions, and payment recipients. The available tools support various banking operations such as retrieving account information, sending money, managing payment recipients, and accessing transaction details. This server simplifies banking interactions by providing easy-to-use commands and tools that integrate with Mercury's banking platform.",
    "reasoning": "The primary label \"Financial Services\" was chosen because the core functionality revolves around banking operations, account management, and financial transactions. The secondary label \"Database Operations\" is relevant as the tools involve querying and retrieving detailed financial data. Additionally, \"API Integration\" could be considered because the server acts as an intermediary for accessing Mercury's banking services, but it was omitted to keep it concise. No custom label is needed as the predefined labels sufficiently cover the server's functionality.",
    "primary_label": "Financial Services",
    "secondary_labels": [
      "Database Operations"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1234,
    "server_name": "Mercury MCP",
    "rank_by_usage": 1235,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@dragonkhoi_mercury-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@dragonkhoi/mercury-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1234,
      "name": "Mercury MCP",
      "author": "@dragonkhoi/mercury-mcp",
      "overview": "Get a Mercury API Key from your Mercury settings.\n\nInterface with your Mercury banking data seamlessly. Access your financial information and perform banking operations through any compatible MCP client. Simplify your banking interactions with easy-to-use commands and tools.",
      "repository_url": "https://github.com/dragonkhoi/mercury-mcp",
      "homepage": "https://smithery.ai/server/@dragonkhoi/mercury-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@dragonkhoi_mercury-mcp.json",
      "tools_count": 11,
      "tools": [
        {
          "name": "get_bank_accounts",
          "description": "Deploy Server Mercury MCP @dragonkhoi/mercury-mcp Try in Playground get_bank_accounts",
          "parameters": [
            {
              "name": "get_bank_accounts",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_bank_account_by_id",
          "description": "Retrieve information about a specific bank account.",
          "parameters": [
            {
              "name": "get_bank_account_by_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_credit_cards",
          "description": "Retrieve information about cards associated with a specific account. Note that status and physical card status are two separate concepts. Either one being set to something other than \"active\" could cause a transaction to be declined.",
          "parameters": [
            {
              "name": "get_credit_cards",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_treasury",
          "description": "Retrieve treasury account information from Mercury.",
          "parameters": [
            {
              "name": "get_treasury",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_transactions",
          "description": "Retrieve incoming and outgoing money transactions for a specific bank account.",
          "parameters": [
            {
              "name": "get_transactions",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_bank_transaction_by_id",
          "description": "Retrieve detailed information about a specific transaction for a specific account, including counterparty information, transaction status, and any attachments.",
          "parameters": [
            {
              "name": "get_bank_transaction_by_id",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "send_money",
          "description": "Create a new transaction for ACH payments. Note: This tool requires additional permissions and IP whitelisting with Mercury, so ask the user to clarify if they have whitelisted their IP first. If they have not, use the request_send_money tool instead. Only use for valid purposes like paying invoices or automating bill payments.",
          "parameters": [
            {
              "name": "send_money",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "request_send_money",
          "description": "Create an ACH payment that requires admin approval from the Mercury web interface. Unlike the direct send_money tool, this endpoint does not require IP whitelisting when using a Custom token, so ask the user to clarify if they have whitelisted their IP.",
          "parameters": []
        },
        {
          "name": "get_bank_statements",
          "description": "Retrieve statement information for a depository account in a given time period (Note: For now, treasury and credit accounts are not supported on this endpoint).",
          "parameters": [
            {
              "name": "get_bank_statements",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_payment_recipients",
          "description": "Retrieve information about all of your payment recipients in Mercury, including their banking details, routing information, payment methods, and status.",
          "parameters": [
            {
              "name": "get_payment_recipients",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_payment_recipient",
          "description": "Add a new payment recipient to Mercury. You must provide the recipient's name, email(s), and default payment method, along with the appropriate routing information for the chosen payment method.",
          "parameters": [
            {
              "name": "add_payment_recipient",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@dragonkhoi/mercury-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "apiKey",
          "required": true,
          "description": "Your Mercury API key."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@dragonkhoi/mercury-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1235.@dragonkhoi_mercury-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1184
  }
}