{
  "labels": {
    "analysis": "The MCP Server is designed to enhance the functionality of Apifox projects by providing diagnostic and information tools. It focuses on API management, including token validation, access checks, and documentation of API restrictions. The tools available suggest seamless integration with Apifox and other platforms like Claude Desktop and Cursor, making it easier for users to understand and navigate API limitations. The server also simplifies setup with an npm package and CLI utilities, indicating a technical focus on API interaction and management.",
    "reasoning": "The primary label \"API Integration\" is chosen because the server's core functionality revolves around interacting with and managing APIs within the Apifox platform. The secondary labels \"Development Tools\" and \"Security & Authentication\" are selected because the tools involve validating tokens, checking project access, and providing documentation on API limitations, which are key aspects of development and security in API management. No custom label is necessary as the predefined categories adequately cover the server's functionality.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Development Tools",
      "Security & Authentication"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1458,
    "server_name": "Apifox MCP Pro",
    "rank_by_usage": 1459,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@guocong-bincai_apifox_mcp_pro.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@guocong-bincai/apifox_mcp_pro/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1458,
      "name": "Apifox MCP Pro",
      "author": "@guocong-bincai/apifox_mcp_pro",
      "overview": "Provide enhanced diagnostic and information tools for Apifox projects, enabling token validation, project access checks, and clear explanations of API management limitations. Integrate seamlessly with Claude Desktop and Cursor to help users understand and navigate Apifox's API restrictions. Simplify setup with an easy-to-install npm package and CLI utilities.",
      "repository_url": "https://github.com/guocong-bincai/Apifox_mcp_pro",
      "homepage": "https://smithery.ai/server/@guocong-bincai/apifox_mcp_pro",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@guocong-bincai_apifox_mcp_pro.json",
      "tools_count": 9,
      "tools": [
        {
          "name": "apifox_project_info",
          "description": "Deploy Server Apifox MCP Pro @guocong-bincai/apifox_mcp_pro Try in Playground apifox_project_info",
          "parameters": [
            {
              "name": "apifox_project_info",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "apifox_check_access",
          "description": "Description not available",
          "parameters": [
            {
              "name": "apifox_check_access",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "apifox_api_info",
          "description": "获取Apifox开放API的使用说明和限制信息",
          "parameters": [
            {
              "name": "apifox_api_info",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "apifox_check_project_access",
          "description": "Description not available",
          "parameters": [
            {
              "name": "apifox_check_project_access",
              "required": false,
              "type": "string"
            },
            {
              "name": "projectId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "apifox_folder_info",
          "description": "Description not available",
          "parameters": [
            {
              "name": "apifox_folder_info",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "apifox_import_export_info",
          "description": "Description not available",
          "parameters": [
            {
              "name": "apifox_import_export_info",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "apifox_environment_info",
          "description": "Description not available",
          "parameters": [
            {
              "name": "apifox_environment_info",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "apifox_schema_info",
          "description": "Description not available",
          "parameters": [
            {
              "name": "apifox_schema_info",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "apifox_test_info",
          "description": "Description not available",
          "parameters": [
            {
              "name": "apifox_test_info",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@guocong-bincai/apifox_mcp_pro/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "apifoxAccessToken",
          "required": true,
          "description": "Your Apifox access token (APS-...)"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@guocong-bincai/apifox_mcp_pro/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1459.@guocong-bincai_apifox_mcp_pro_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1352
  }
}