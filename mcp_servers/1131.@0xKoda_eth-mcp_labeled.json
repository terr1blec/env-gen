{
  "labels": {
    "analysis": "The MCP Server functions as an Ethereum RPC (Remote Procedure Call) server, allowing users to interact with the Ethereum blockchain by executing standardized JSON-RPC methods. Its core functionality involves querying blockchain data, such as account balances, gas prices, and smart contract code. The available tools specifically enable fetching real-time Ethereum data, which can be integrated into AI applications or other blockchain-related use cases.",
    "reasoning": "The primary label is \"Cryptocurrency & Blockchain\" because the server's tools (eth_getCode, eth_gasPrice, eth_getBalance) are directly related to querying Ethereum blockchain data, aligning with blockchain interaction use cases. \"API Integration\" is a secondary label because the server acts as an API gateway for blockchain data access. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Cryptocurrency & Blockchain",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1130,
    "server_name": "Ethereum RPC Server",
    "rank_by_usage": 1131,
    "usage_count": "1",
    "original_file": "../crawler/smithery/@0xKoda_eth-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@0xKoda/eth-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "eth_getCode",
          "description": "Retrieves the code at a given Ethereum address",
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "pattern": "^0x[a-fA-F0-9]{40}$",
                "description": "The Ethereum address to get code from"
              },
              "blockParameter": {
                "type": "string",
                "default": "latest",
                "description": "Block parameter (default: \"latest\")"
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "eth_gasPrice",
          "description": "Retrieves the current gas price in wei",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "eth_getBalance",
          "description": "Retrieves the balance of a given Ethereum address",
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "pattern": "^0x[a-fA-F0-9]{40}$",
                "description": "The Ethereum address to check balance"
              },
              "blockParameter": {
                "type": "string",
                "default": "latest",
                "description": "Block parameter (default: \"latest\")"
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 3,
      "tool_names": [
        "eth_getCode",
        "eth_gasPrice",
        "eth_getBalance"
      ]
    },
    "server_info_crawled": {
      "id": 1130,
      "name": "Ethereum RPC Server",
      "author": "@0xKoda/eth-mcp",
      "overview": "Interact with the Ethereum blockchain seamlessly. Query blockchain data like account balances and gas prices through standardized JSON-RPC methods. Enhance your AI applications with real-time Ethereum data access.",
      "repository_url": "https://github.com/0xKoda/eth-mcp",
      "homepage": "https://smithery.ai/server/@0xKoda/eth-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "1",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@0xKoda_eth-mcp.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "eth_getCode",
          "description": "Retrieves the code at a given Ethereum address",
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "pattern": "^0x[a-fA-F0-9]{40}$",
                "description": "The Ethereum address to get code from"
              },
              "blockParameter": {
                "type": "string",
                "default": "latest",
                "description": "Block parameter (default: \"latest\")"
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "eth_gasPrice",
          "description": "Retrieves the current gas price in wei",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "eth_getBalance",
          "description": "Retrieves the balance of a given Ethereum address",
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "pattern": "^0x[a-fA-F0-9]{40}$",
                "description": "The Ethereum address to check balance"
              },
              "blockParameter": {
                "type": "string",
                "default": "latest",
                "description": "Block parameter (default: \"latest\")"
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@0xKoda/eth-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@0xKoda/eth-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1131.@0xKoda_eth-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1108
  }
}