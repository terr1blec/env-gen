{
  "labels": {
    "analysis": "The MCP Server specializes in Excel file manipulation without requiring Microsoft Excel installed. It provides comprehensive tools for creating, reading, modifying, and analyzing Excel workbooks, including formatting, chart generation, pivot tables, and worksheet management. The server supports both local and remote operations, making it suitable for data processing, reporting, and automation tasks.",
    "reasoning": "The primary label \"Data Analysis & Processing\" was chosen because the server's core functionality revolves around manipulating and analyzing Excel data, which is a key aspect of data processing. Secondary labels \"File Management\" and \"Operating System\" were included because the server handles file operations and can interact with system paths for file handling. No custom label is needed as the predefined labels adequately cover the server's functionality.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "File Management",
      "Operating System"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 29,
    "server_name": "Excel MCP Server",
    "rank_by_usage": 30,
    "usage_count": "3,993",
    "original_file": "../crawler/smithery/@haris-musa_excel-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@haris-musa/excel-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "Connection timeout (20 seconds)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 29,
      "name": "Excel MCP Server",
      "author": "@haris-musa/excel-mcp-server",
      "overview": "Manipulate Excel files seamlessly without requiring Microsoft Excel installed. Create, read, modify workbooks, apply formatting, generate charts, and manage worksheets through AI agents. Supports both local and remote usage with stdio and SSE transport protocols.",
      "repository_url": "https://github.com/haris-musa/excel-mcp-server",
      "homepage": "https://smithery.ai/server/@haris-musa/excel-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "3,993",
      "success_rate": "99.97%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@haris-musa_excel-mcp-server.json",
      "tools_count": 20,
      "tools": [
        {
          "name": "apply_formula",
          "description": "Deploy Server Excel MCP Server @haris-musa/excel-mcp-server Try in Playground apply_formula",
          "parameters": []
        },
        {
          "name": "validate_formula_syntax",
          "description": "Validate Excel formula syntax without applying it.",
          "parameters": [
            {
              "name": "validate_formula_syntax",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "format_range",
          "description": "Apply formatting to a range of cells.",
          "parameters": [
            {
              "name": "format_range",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "read_data_from_excel",
          "description": "Read data from Excel worksheet with cell metadata including validation rules. Args: filepath: Path to Excel file sheet_name: Name of worksheet start_cell: Starting cell (default A1) end_cell: Ending cell (optional, auto-expands if not provided) preview_only: Whether to return preview only Returns: JSON string containing structured cell data with validation metadata. Each cell includes: address, value, row, column, and validation info (if any).",
          "parameters": []
        },
        {
          "name": "write_data_to_excel",
          "description": "Write data to Excel worksheet. Excel formula will write to cell without any verification.",
          "parameters": []
        },
        {
          "name": "create_workbook",
          "description": "Create new Excel workbook.",
          "parameters": [
            {
              "name": "create_workbook",
              "required": false,
              "type": "string"
            },
            {
              "name": "Create",
              "required": false,
              "type": "string"
            },
            {
              "name": "new",
              "required": false,
              "type": "string"
            },
            {
              "name": "Excel",
              "required": false,
              "type": "string"
            },
            {
              "name": "filepath",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_worksheet",
          "description": "Create new worksheet in workbook.",
          "parameters": [
            {
              "name": "filepath",
              "required": true,
              "type": "string"
            },
            {
              "name": "sheet_name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_chart",
          "description": "Create chart in worksheet.",
          "parameters": [
            {
              "name": "create_chart",
              "required": false,
              "type": "string"
            },
            {
              "name": "Create",
              "required": false,
              "type": "string"
            },
            {
              "name": "chart",
              "required": false,
              "type": "string"
            },
            {
              "name": "in",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_pivot_table",
          "description": "Create pivot table in worksheet.",
          "parameters": [
            {
              "name": "create_pivot_table",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_table",
          "description": "Creates a native Excel table from a specified range of data.",
          "parameters": [
            {
              "name": "create_table",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "copy_worksheet",
          "description": "Copy worksheet within workbook.",
          "parameters": [
            {
              "name": "Copy",
              "required": false,
              "type": "string"
            },
            {
              "name": "worksheet",
              "required": false,
              "type": "string"
            },
            {
              "name": "within",
              "required": false,
              "type": "string"
            },
            {
              "name": "filepath",
              "required": true,
              "type": "string"
            },
            {
              "name": "source_sheet",
              "required": true,
              "type": "string"
            },
            {
              "name": "target_sheet",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_worksheet",
          "description": "Delete worksheet from workbook.",
          "parameters": [
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "worksheet",
              "required": false,
              "type": "string"
            },
            {
              "name": "from",
              "required": false,
              "type": "string"
            },
            {
              "name": "filepath",
              "required": true,
              "type": "string"
            },
            {
              "name": "sheet_name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "rename_worksheet",
          "description": "Rename worksheet in workbook.",
          "parameters": [
            {
              "name": "Rename",
              "required": false,
              "type": "string"
            },
            {
              "name": "worksheet",
              "required": false,
              "type": "string"
            },
            {
              "name": "in",
              "required": false,
              "type": "string"
            },
            {
              "name": "filepath",
              "required": true,
              "type": "string"
            },
            {
              "name": "new_name",
              "required": true,
              "type": "string"
            },
            {
              "name": "old_name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_workbook_metadata",
          "description": "Get metadata about workbook including sheets, ranges, etc.",
          "parameters": [
            {
              "name": "get_workbook_metadata",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "merge_cells",
          "description": "Merge a range of cells.",
          "parameters": [
            {
              "name": "end_cell",
              "required": true,
              "type": "string"
            },
            {
              "name": "filepath",
              "required": true,
              "type": "string"
            },
            {
              "name": "sheet_name",
              "required": true,
              "type": "string"
            },
            {
              "name": "start_cell",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "unmerge_cells",
          "description": "Unmerge a range of cells.",
          "parameters": [
            {
              "name": "end_cell",
              "required": true,
              "type": "string"
            },
            {
              "name": "filepath",
              "required": true,
              "type": "string"
            },
            {
              "name": "sheet_name",
              "required": true,
              "type": "string"
            },
            {
              "name": "start_cell",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "copy_range",
          "description": "Copy a range of cells to another location.",
          "parameters": [
            {
              "name": "copy_range",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_range",
          "description": "Delete a range of cells and shift remaining cells.",
          "parameters": [
            {
              "name": "delete_range",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "validate_excel_range",
          "description": "Validate if a range exists and is properly formatted.",
          "parameters": [
            {
              "name": "validate_excel_range",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_data_validation_info",
          "description": "Get all data validation rules in a worksheet. This tool helps identify which cell ranges have validation rules and what types of validation are applied. Args: filepath: Path to Excel file sheet_name: Name of worksheet Returns: JSON string containing all validation rules in the worksheet",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@haris-musa/excel-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@haris-musa/excel-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0030.@haris-musa_excel-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 29
  }
}