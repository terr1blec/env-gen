{
  "labels": {
    "analysis": "The MCP Server is focused on delivering weather-related services by integrating with the OpenWeatherMap API. Its core functionality includes providing current weather conditions and 5-day forecasts, with options to customize units and language for localized results. The primary problem it solves is enabling easy access to weather data for integration into various applications, making it a valuable tool for developers and end-users who need weather information.",
    "reasoning": "The primary label is \"Weather\" because the server is explicitly designed to provide weather data and forecasting. The secondary label \"API Integration\" is chosen because the server interacts with the OpenWeatherMap API. A custom label is not necessary as the predefined categories sufficiently cover the server's functionality.",
    "primary_label": "Weather",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 476,
    "server_name": "Weather Service",
    "rank_by_usage": 477,
    "usage_count": "37",
    "original_file": "../crawler/smithery/@mschneider82_mcp-openweather.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@mschneider82/mcp-openweather/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 476,
      "name": "Weather Service",
      "author": "@mschneider82/mcp-openweather",
      "overview": "Provide current weather conditions and 5-day forecasts using the OpenWeatherMap API. Configure units and language for localized weather information. Easily integrate weather data into your MCP-enabled applications.",
      "repository_url": "https://github.com/mschneider82/mcp-openweather",
      "homepage": "https://smithery.ai/server/@mschneider82/mcp-openweather",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "37",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@mschneider82_mcp-openweather.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "weather",
          "description": "Deploy Server Weather Service Claim Server @mschneider82/mcp-openweather Try in Playground",
          "parameters": [
            {
              "name": "city",
              "required": true,
              "type": "string"
            },
            {
              "name": "lang",
              "required": false,
              "type": "string"
            },
            {
              "name": "units",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@mschneider82/mcp-openweather/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "owmApiKey",
          "required": true,
          "description": "OpenWeatherMap API key for accessing weather data"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@mschneider82/mcp-openweather/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0477.@mschneider82_mcp-openweather_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 467
  }
}