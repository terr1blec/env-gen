{
  "labels": {
    "analysis": "The MCP Server appears to be a framework designed to facilitate the interaction between LLMs and external tools or resources through a standardized JSON-RPC interface. It enables dynamic communication and serves as a testing and development environment for MCP client-server interactions. The available tools mentioned (\"add\" and \"weather\") suggest basic functionality, possibly for numerical operations and weather information retrieval, indicating the server's role as an intermediary for various types of external data and actions.",
    "reasoning": "The primary label is **API Integration** as the server's core functionality revolves around exposing tools and resources via a standardized interface (JSON-RPC), enabling interaction with external data and actions. The secondary label **Data Analysis & Processing** is relevant as the \"add\" tool suggests basic data operations, and weather data can be categorized under general data processing. No custom label is necessary as predefined categories adequately cover the server's functionality.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 748,
    "server_name": "Test MCP Server",
    "rank_by_usage": 749,
    "usage_count": "9",
    "original_file": "../crawler/smithery/@amirahad_test-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@amirahad/test-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "add",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "a": {
                "type": "number"
              },
              "b": {
                "type": "number"
              }
            },
            "required": [
              "a",
              "b"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "weather",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              }
            },
            "required": [
              "city"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 2,
      "tool_names": [
        "add",
        "weather"
      ]
    },
    "server_info_crawled": {
      "id": 748,
      "name": "Test MCP Server",
      "author": "@amirahad/test-mcp-server",
      "overview": "Provide a basic implementation of an MCP server to expose tools, resources, and prompts for LLM integration. Enable dynamic interaction with external data and actions through a standardized JSON-RPC interface. Facilitate development and testing of MCP client-server interactions.",
      "repository_url": "https://github.com/amirahad/test-mcp-server",
      "homepage": "https://smithery.ai/server/@amirahad/test-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "9",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@amirahad_test-mcp-server.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "add",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "a": {
                "type": "number"
              },
              "b": {
                "type": "number"
              }
            },
            "required": [
              "a",
              "b"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "weather",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              }
            },
            "required": [
              "city"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@amirahad/test-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@amirahad/test-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0749.@amirahad_test-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 731
  }
}