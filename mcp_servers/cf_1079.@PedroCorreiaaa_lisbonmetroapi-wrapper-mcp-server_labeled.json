{
  "labels": {
    "analysis": "The MCP Server provides real-time access to Lisbon Metro's service status and route information through an API wrapper. Its primary function is to allow users to query metro routes and receive service updates, simplifying integration with the Lisbon Metro data for transit planning purposes. The available tool, route_between_locations, indicates functionality focused on retrieving transit route information between locations.",
    "reasoning": "The primary label \"Travel & Maps\" is chosen because the server's core functionality revolves around providing metro route information and service updates, which are essential for transit planning and navigation. While \"API Integration\" is also relevant, it is considered a secondary label since the server's primary purpose is transit-related rather than just API capabilities. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Travel & Maps",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1078,
    "server_name": "Lisbon Metro MCP Server",
    "rank_by_usage": 1079,
    "usage_count": "1",
    "original_file": "../crawler/smithery/@PedroCorreiaaa_lisbonmetroapi-wrapper-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@PedroCorreiaaa/lisbonmetroapi-wrapper-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1078,
      "name": "Lisbon Metro MCP Server",
      "author": "@PedroCorreiaaa/lisbonmetroapi-wrapper-mcp-server",
      "overview": "Provide real-time access to Lisbon Metro service status and route information through a convenient API wrapper. Enable users to query metro routes and service updates effortlessly. Simplify integration with Lisbon Metro data for enhanced transit planning.",
      "repository_url": "https://github.com/PedroCorreiaaa/LisbonMetroAPI-Wrapper-MCP-Server",
      "homepage": "https://smithery.ai/server/@PedroCorreiaaa/lisbonmetroapi-wrapper-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "1",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@PedroCorreiaaa_lisbonmetroapi-wrapper-mcp-server.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "route_between_locations",
          "description": "Deploy Server Lisbon Metro MCP Server @PedroCorreiaaa/lisbonmetroapi-wrapper-mcp-server Try in Playground route_between_locations",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@PedroCorreiaaa/lisbonmetroapi-wrapper-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "metroApiToken",
          "required": true,
          "description": "Metro Lisboa API Token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@PedroCorreiaaa/lisbonmetroapi-wrapper-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1079.@PedroCorreiaaa_lisbonmetroapi-wrapper-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1056
  }
}