{
  "labels": {
    "analysis": "The MCP Server described appears to be focused on integrations with LinkedIn through OpenAI and Anthropic models, providing tools to fetch profile details and contact activities. Its core functionality revolves around accessing and analyzing LinkedIn data, facilitating business intelligence, networking, or lead generation tasks. The tools enable automated collection of profile and engagement information, with support for structured project development.",
    "reasoning": "The Primary Label is **Web Search & Research** because the server's main functionality involves data retrieval from LinkedIn profiles and activities, which aligns with gathering professional information for research and outreach purposes. The Secondary Label **API Integration** is appropriate due to the underlying integration with LinkedIn data services. A Custom Label is included to highlight the unique focus areas beyond predefined categories.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": "LinkedIn Data Insights",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1914,
    "server_name": "Template Server",
    "rank_by_usage": 1915,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@moonlabsai_enrich_b2b_mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@moonlabsai/enrich_b2b_mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1914,
      "name": "Template Server",
      "author": "@moonlabsai/enrich_b2b_mcp",
      "overview": "Integrate powerful AI capabilities into your applications. Leverage OpenAI GPT-4 and Anthropic Claude for advanced text generation, alongside EnrichB2B for LinkedIn data insights. Simplify your development with a structured project layout and easy-to-use tools.",
      "repository_url": "https://github.com/moonlabsai/enrich_b2b_mcp",
      "homepage": "https://smithery.ai/server/@moonlabsai/enrich_b2b_mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@moonlabsai_enrich_b2b_mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "get_profile_details",
          "description": "Deploy Server Template Server Claim Server @moonlabsai/enrich_b2b_mcp Try in Playground get_profile_details",
          "parameters": []
        },
        {
          "name": "get_contact_activities",
          "description": "Get recent activities and posts from a LinkedIn profile.\n    \n    Args:\n        linkedin_url: LinkedIn profile URL of the contact\n        pages: Number of pages of activities to fetch (1-50)\n        comments_per_post: Number of comment pages per post (0-50)",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@moonlabsai/enrich_b2b_mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "openaiApiKey",
          "required": true,
          "description": "API key for OpenAI"
        },
        {
          "name": "anthropicApiKey",
          "required": true,
          "description": "API key for Anthropic"
        },
        {
          "name": "enrichb2bApiKey",
          "required": true,
          "description": "API key for EnrichB2B"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@moonlabsai/enrich_b2b_mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1915.@moonlabsai_enrich_b2b_mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1690
  }
}