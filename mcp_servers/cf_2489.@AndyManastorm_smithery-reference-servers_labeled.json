{
  "labels": {
    "analysis": "The MCP Server is designed to integrate with GitHub and provide a range of tools for repository management, file operations, and search functionalities. It enables automated workflows such as branch creation, file updates, and issue management, making it particularly useful for developers working with GitHub repositories.",
    "reasoning": "The primary functionality of the server revolves around repository management, file operations, and GitHub automation. These features align closely with Development Tools, as they assist developers in managing GitHub repositories more efficiently. The search capabilities and issue management tools justify the secondary labels.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "File Management",
      "API Integration"
    ],
    "custom_label": "GitHub Automation",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2488,
    "server_name": "Andy's Test API MCP Server",
    "rank_by_usage": 2489,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@AndyManastorm_smithery-reference-servers.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@AndyManastorm/smithery-reference-servers/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2488,
      "name": "Andy's Test API MCP Server",
      "author": "@AndyManastorm/smithery-reference-servers",
      "overview": "Enable seamless file operations, repository management, and advanced search functionalities on GitHub. Automate your workflow with automatic branch creation and comprehensive error handling, ensuring your Git history is preserved. Enhance your development experience by integrating GitHub capabilities directly into your applications.",
      "repository_url": "https://github.com/AndyManastorm/smithery-reference-servers",
      "homepage": "https://smithery.ai/server/@AndyManastorm/smithery-reference-servers",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@AndyManastorm_smithery-reference-servers.json",
      "tools_count": 17,
      "tools": [
        {
          "name": "create_or_update_file",
          "description": "Deploy Server Andy's Test API MCP Server @AndyManastorm/smithery-reference-servers Try in Playground create_or_update_file",
          "parameters": [
            {
              "name": "create_or_update_file",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_repositories",
          "description": "Search for GitHub repositories!!!",
          "parameters": [
            {
              "name": "Search",
              "required": false,
              "type": "string"
            },
            {
              "name": "for",
              "required": false,
              "type": "string"
            },
            {
              "name": "GitHub",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "perPage",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_repository",
          "description": "Create a new GitHub repository in your account",
          "parameters": [
            {
              "name": "create_repository",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_file_contents",
          "description": "Get the contents of a file or directory from a GitHub repository",
          "parameters": [
            {
              "name": "get_file_contents",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "push_files",
          "description": "Push multiple files to a GitHub repository in a single commit",
          "parameters": [
            {
              "name": "files",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "branch",
              "required": true,
              "type": "string"
            },
            {
              "name": "message",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_issue",
          "description": "Create a new issue in a GitHub repository",
          "parameters": [
            {
              "name": "labels",
              "required": false,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "assignees",
              "required": false,
              "type": "string"
            },
            {
              "name": "milestone",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_pull_request",
          "description": "Create a new pull request in a GitHub repository",
          "parameters": [
            {
              "name": "create_pull_request",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "fork_repository",
          "description": "Fork a GitHub repository to your account or specified organization",
          "parameters": [
            {
              "name": "fork_repository",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_branch",
          "description": "Create a new branch in a GitHub repository",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "branch",
              "required": true,
              "type": "string"
            },
            {
              "name": "from_branch",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_commits",
          "description": "Get list of commits of a branch in a GitHub repository",
          "parameters": [
            {
              "name": "list_commits",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_issues",
          "description": "List issues in a GitHub repository with filtering options",
          "parameters": [
            {
              "name": "list_issues",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_issue",
          "description": "Update an existing issue in a GitHub repository",
          "parameters": [
            {
              "name": "update_issue",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_issue_comment",
          "description": "Add a comment to an existing issue",
          "parameters": [
            {
              "name": "body",
              "required": true,
              "type": "string"
            },
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "issue_number",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_code",
          "description": "Search for code across GitHub repositories",
          "parameters": [
            {
              "name": "q",
              "required": true,
              "type": "string"
            },
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "order",
              "required": false,
              "type": "string"
            },
            {
              "name": "per_page",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_issues",
          "description": "Search for issues and pull requests across GitHub repositories",
          "parameters": [
            {
              "name": "search_issues",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_users",
          "description": "Search for users on GitHub",
          "parameters": [
            {
              "name": "q",
              "required": true,
              "type": "string"
            },
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "sort",
              "required": false,
              "type": "string"
            },
            {
              "name": "order",
              "required": false,
              "type": "string"
            },
            {
              "name": "per_page",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_issue",
          "description": "Get details of a specific issue in a GitHub repository.",
          "parameters": [
            {
              "name": "repo",
              "required": true,
              "type": "string"
            },
            {
              "name": "owner",
              "required": true,
              "type": "string"
            },
            {
              "name": "issue_number",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@AndyManastorm/smithery-reference-servers/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "githubPersonalAccessToken",
          "required": true,
          "description": "The personal access token for accessing the GitHub API."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@AndyManastorm/smithery-reference-servers/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2489.@AndyManastorm_smithery-reference-servers_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 2118
  }
}