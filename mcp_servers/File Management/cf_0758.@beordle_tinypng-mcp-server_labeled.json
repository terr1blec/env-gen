{
  "labels": {
    "analysis": "The TinyPNG MCP Server is primarily focused on image compression and optimization. It provides tools to compress both locally stored and remotely hosted images by leveraging the TinyPNG API. This server solves the problem of reducing file sizes for images while maintaining quality, which is useful for web optimization, storage management, and efficient content delivery.",
    "reasoning": "The primary label \"File Management\" is chosen because the server's main functionality revolves around optimizing image files, which is a core aspect of file management. The secondary label \"Memory Management\" is added because reducing image sizes directly contributes to storage efficiency. \"Web Search & Research\" is not directly applicable, but the ability to process remote images suggests some integration with web resources.",
    "primary_label": "File Management",
    "secondary_labels": [
      "Memory Management",
      "Web Search & Research"
    ],
    "custom_label": "Image Optimization",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 757,
    "server_name": "TinyPNG MCP Server",
    "rank_by_usage": 758,
    "usage_count": "8",
    "original_file": "../crawler/smithery/@beordle_tinypng-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@beordle/tinypng-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 757,
      "name": "TinyPNG MCP Server",
      "author": "@beordle/tinypng-mcp-server",
      "overview": "Compress images efficiently by utilizing the TinyPNG API. Easily compress both local and remote images with just a few commands, saving time and storage space. Enhance your image optimization workflow seamlessly with this server.",
      "repository_url": "https://github.com/beordle/tinypng-mcp-server",
      "homepage": "https://smithery.ai/server/@beordle/tinypng-mcp-server",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "8",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@beordle_tinypng-mcp-server.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "compress_local_image",
          "description": "Deploy Server TinyPNG MCP Server @beordle/tinypng-mcp-server Try in Playground compress_local_image",
          "parameters": [
            {
              "name": "compress_local_image",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "compress_remote_image",
          "description": "Compress a remote image file by giving the URL of the image",
          "parameters": []
        },
        {
          "name": "resize_image",
          "description": "Description not available",
          "parameters": [
            {
              "name": "width",
              "required": true,
              "type": "string"
            },
            {
              "name": "height",
              "required": true,
              "type": "string"
            },
            {
              "name": "method",
              "required": false,
              "type": "string"
            },
            {
              "name": "imagePath",
              "required": true,
              "type": "string"
            },
            {
              "name": "outputPath",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@beordle/tinypng-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "tinyPngApiKey",
          "required": true,
          "description": "TinyPNG API Key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@beordle/tinypng-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0758.@beordle_tinypng-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 740
  }
}