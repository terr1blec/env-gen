{
  "labels": {
    "analysis": "The MCP Server enables AI assistants to interact directly with Obsidian vaults through natural language commands, allowing users to read, update, and manage markdown files and TODO items. Key functionalities include filesystem access for reading/writing files, retrieving TODO lists, and handling markdown content. This server eliminates the need for manual app access, streamlining note-taking and project management.",
    "reasoning": "The primary label \"File Management\" is chosen because the server's core functionality revolves around reading, updating, and creating files within an Obsidian vault, which is a file-based system. The secondary label \"Memory Management\" is selected since it enables knowledge organization (note-taking) and retrieval (searching files and TODOs). The custom label \"Obsidian vault automation\" is added to highlight the server's specific integration with Obsidian.",
    "primary_label": "File Management",
    "secondary_labels": [
      "Memory Management",
      "Daily Productivity"
    ],
    "custom_label": "Obsidian vault automation",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1447,
    "server_name": "Obsidian Vault Integration Server",
    "rank_by_usage": 1448,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@marcelmarais_obsidian-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@marcelmarais/obsidian-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1447,
      "name": "Obsidian Vault Integration Server",
      "author": "@marcelmarais/obsidian-mcp-server",
      "overview": "Enable AI assistants to interact seamlessly with your Obsidian vault by reading notes, retrieving todos, and updating or creating markdown files. Manage your vault content through natural language commands to streamline note-taking and project tracking. Benefit from direct filesystem access without needing the Obsidian app running.",
      "repository_url": "https://github.com/marcelmarais/obsidian-mcp-server",
      "homepage": "https://smithery.ai/server/@marcelmarais/obsidian-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@marcelmarais_obsidian-mcp-server.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "getAllFilenames",
          "description": "Deploy Server Obsidian Vault Integration Server Claim Server @marcelmarais/obsidian-mcp-server Try in Playground getAllFilenames",
          "parameters": [
            {
              "name": "getAllFilenames",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "readMultipleFiles",
          "description": "Retrieves the contents of specified files from the Obsidian vault. You can provide exact filenames (with or without path), partial filenames, or case-insensitive matches. The tool will search for files that match any of these criteria and return their contents. If a file isn't found, it will indicate that in the response. Each file's content is prefixed with '# File: filename' for clear identification. Use this tool when you need to read specific documents from the vault.",
          "parameters": [
            {
              "name": "readMultipleFiles",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getOpenTodos",
          "description": "Retrieves all open TODO items in the Obsidian vault with their file locations. Useful for getting an overview of pending tasks.",
          "parameters": [
            {
              "name": "getOpenTodos",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "updateFileContent",
          "description": "Updates the content of a specified file in the Obsidian vault with new markdown content. If the file doesn't exist, it will be created. The tool accepts a file path (relative to the vault root) and the new content to write to the file. Note: if updating an existing file, you need to include both the old and new content in a single Markdown string.",
          "parameters": [
            {
              "name": "updateFileContent",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@marcelmarais/obsidian-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@marcelmarais/obsidian-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1448.@marcelmarais_obsidian-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1344
  }
}