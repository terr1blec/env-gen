{
  "labels": {
    "analysis": "The MCP Server's core functionality revolves around reading and extracting text, metadata, and other structured data from PDF files. It supports processing multiple PDFs from local paths or URLs, with the ability to specify pages to extract. The tool provides JSON output for easy parsing, facilitating integration into AI workflows via npm or Docker. This makes it particularly useful for document processing, data extraction, and integration with other systems that require PDF content analysis.",
    "reasoning": "The primary label \"File Management\" is chosen because the server's core functionality is centered around handling PDF files, extracting their content, and making the data accessible in a structured format. The secondary label \"Data Analysis & Processing\" is appropriate because the structured JSON output enables further data processing and analysis. The \"API Integration\" label is also relevant due to the tool's seamless integration capabilities via npm or Docker. No custom label is needed as the predefined labels adequately cover the server's functionality.",
    "primary_label": "File Management",
    "secondary_labels": [
      "Data Analysis & Processing",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1056,
    "server_name": "PDF Reader",
    "rank_by_usage": 1057,
    "usage_count": "1",
    "original_file": "../crawler/smithery/@sylphxltd_pdf-reader-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@sylphxltd/pdf-reader-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "read_pdf",
          "description": "Reads content/metadata from one or more PDFs (local/URL). Each source can specify pages to extract.",
          "input_schema": {
            "type": "object",
            "properties": {
              "sources": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Relative path to the local PDF file."
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "description": "URL of the PDF file."
                    },
                    "pages": {
                      "anyOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "exclusiveMinimum": true,
                            "minimum": 0
                          },
                          "minItems": 1
                        },
                        {
                          "type": "string",
                          "minLength": 1
                        }
                      ],
                      "description": "Extract text only from specific pages (1-based) or ranges for *this specific source*. If provided, 'include_full_text' for the entire request is ignored for this source."
                    }
                  },
                  "additionalProperties": false
                },
                "minItems": 1,
                "description": "An array of PDF sources to process, each can optionally specify pages."
              },
              "include_full_text": {
                "type": "boolean",
                "default": false,
                "description": "Include the full text content of each PDF (only if 'pages' is not specified for that source)."
              },
              "include_metadata": {
                "type": "boolean",
                "default": true,
                "description": "Include metadata and info objects for each PDF."
              },
              "include_page_count": {
                "type": "boolean",
                "default": true,
                "description": "Include the total number of pages for each PDF."
              }
            },
            "required": [
              "sources"
            ],
            "additionalProperties": false
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "read_pdf"
      ]
    },
    "server_info_crawled": {
      "id": 1056,
      "name": "PDF Reader",
      "author": "@sylphxltd/pdf-reader-mcp",
      "overview": "Enable AI agents to securely read and extract text, metadata, and page counts from PDF files within your project context using a single, flexible tool. Process multiple PDFs from local paths or URLs with structured JSON output for easy parsing. Integrate seamlessly via npm or Docker for efficient PDF data extraction in AI workflows.",
      "repository_url": "https://github.com/sylphxltd/pdf-reader-mcp",
      "homepage": "https://smithery.ai/server/@sylphxltd/pdf-reader-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "1",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@sylphxltd_pdf-reader-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "read_pdf",
          "description": "Reads content/metadata from one or more PDFs (local/URL). Each source can specify pages to extract.",
          "input_schema": {
            "type": "object",
            "properties": {
              "sources": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Relative path to the local PDF file."
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "description": "URL of the PDF file."
                    },
                    "pages": {
                      "anyOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "exclusiveMinimum": true,
                            "minimum": 0
                          },
                          "minItems": 1
                        },
                        {
                          "type": "string",
                          "minLength": 1
                        }
                      ],
                      "description": "Extract text only from specific pages (1-based) or ranges for *this specific source*. If provided, 'include_full_text' for the entire request is ignored for this source."
                    }
                  },
                  "additionalProperties": false
                },
                "minItems": 1,
                "description": "An array of PDF sources to process, each can optionally specify pages."
              },
              "include_full_text": {
                "type": "boolean",
                "default": false,
                "description": "Include the full text content of each PDF (only if 'pages' is not specified for that source)."
              },
              "include_metadata": {
                "type": "boolean",
                "default": true,
                "description": "Include metadata and info objects for each PDF."
              },
              "include_page_count": {
                "type": "boolean",
                "default": true,
                "description": "Include the total number of pages for each PDF."
              }
            },
            "required": [
              "sources"
            ],
            "additionalProperties": false
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@sylphxltd/pdf-reader-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@sylphxltd/pdf-reader-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1057.@sylphxltd_pdf-reader-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1035
  }
}