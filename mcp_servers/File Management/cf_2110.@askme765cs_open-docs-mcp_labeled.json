{
  "labels": {
    "analysis": "The MCP Server focuses on document management, enabling users to crawl, index, and search across various document formats. It provides tools to enable/disable document crawling, build search indices, and retrieve documents efficiently. The integration with AI context suggests enhanced document access and management beyond basic document storage, pointing to a sophisticated information retrieval system.",
    "reasoning": "The primary label \"Document Management\" is chosen because the server's core functionality revolves around organizing, indexing, and retrieving documents. The secondary label \"Web Search & Research\" aligns with the full-text search capability that aids in information retrieval, which is a key aspect of research. The custom label \"AI-Powered Document Search\" is used to highlight the unique integration with AI context for smarter document access, which is not fully covered by predefined categories.",
    "primary_label": "File Management",
    "secondary_labels": [
      "Web Search & Research",
      "File Management"
    ],
    "custom_label": "AI-Powered Document Search",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2109,
    "server_name": "Document Management Server",
    "rank_by_usage": 2110,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@askme765cs_open-docs-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@askme765cs/open-docs-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2109,
      "name": "Document Management Server",
      "author": "@askme765cs/open-docs-mcp",
      "overview": "Crawl, index, and manage documentation seamlessly. Enable full-text search across various document formats to enhance your information retrieval. Integrate with AI context for smarter document access and management.",
      "repository_url": "https://github.com/askme765cs/open-docs-mcp",
      "homepage": "https://smithery.ai/server/@askme765cs/open-docs-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@askme765cs_open-docs-mcp.json",
      "tools_count": 8,
      "tools": [
        {
          "name": "enable_doc",
          "description": "Deploy Server Document Management Server @askme765cs/open-docs-mcp Try in Playground",
          "parameters": [
            {
              "name": "enable_doc",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "disable_doc",
          "description": "Disable crawling for a specific doc",
          "parameters": [
            {
              "name": "disable_doc",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "crawl_docs",
          "description": "Start crawling enabled docs",
          "parameters": [
            {
              "name": "Start",
              "required": false,
              "type": "string"
            },
            {
              "name": "crawling",
              "required": false,
              "type": "string"
            },
            {
              "name": "enabled",
              "required": false,
              "type": "string"
            },
            {
              "name": "docs",
              "required": false,
              "type": "string"
            },
            {
              "name": "force",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "build_index",
          "description": "Build search index for docs",
          "parameters": [
            {
              "name": "force",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_docs",
          "description": "Description not available",
          "parameters": [
            {
              "name": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "offset",
              "required": false,
              "type": "string"
            },
            {
              "name": "doc_name",
              "required": false,
              "type": "string"
            },
            {
              "name": "max_results",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "build_index",
          "description": "Build search index for docs",
          "parameters": [
            {
              "name": "force",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_enabled_docs",
          "description": "List all enabled docs with their cache status",
          "parameters": [
            {
              "name": "verbose",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_all_docs",
          "description": "List all available docs including disabled ones",
          "parameters": [
            {
              "name": "verbose",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@askme765cs/open-docs-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@askme765cs/open-docs-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2110.@askme765cs_open-docs-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1834
  }
}