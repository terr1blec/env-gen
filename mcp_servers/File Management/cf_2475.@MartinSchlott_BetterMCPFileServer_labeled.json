{
  "labels": {
    "analysis": "The MCP Server is focused on providing a secure, privacy-preserving file management system optimized for AI model interactions. Its tools enable basic file operations such as reading, writing, editing, moving, renaming, copying, and deleting files and folders, along with advanced features like pattern-based search within directory structures. The emphasis is on reducing complexity for language models while maintaining high security standards for file access and manipulation.",
    "reasoning": "The primary label \"File Management\" was chosen because the server's core functionality revolves around file operations. \"Operating System\" is a relevant secondary label due to its interaction with directory structures and system-level commands. The server could also support broader productivity needs, particularly for AI assistance, hence the additional secondary label of \"Daily Productivity.\" No custom label is deemed necessary as the predefined labels adequately cover its functionality.",
    "primary_label": "File Management",
    "secondary_labels": [
      "Operating System",
      "Daily Productivity"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2474,
    "server_name": "Better MCP File Server",
    "rank_by_usage": 2475,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@MartinSchlott_BetterMCPFileServer.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@MartinSchlott/BetterMCPFileServer/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2474,
      "name": "Better MCP File Server",
      "author": "@MartinSchlott/BetterMCPFileServer",
      "overview": "Streamline your file access with a privacy-preserving system that simplifies interactions for AI models. Enjoy a more intuitive API designed specifically for LLMs, reducing complexity while enhancing security. Experience efficient file operations without exposing sensitive directory structures.",
      "repository_url": "https://github.com/MartinSchlott/BetterMCPFileServer",
      "homepage": "https://smithery.ai/server/@MartinSchlott/BetterMCPFileServer",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@MartinSchlott_BetterMCPFileServer.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "writeFile",
          "description": "Deploy Server Better MCP File Server Claim Server @MartinSchlott/BetterMCPFileServer Try in Playground",
          "parameters": [
            {
              "name": "writeFile",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "readFileContent",
          "description": "Retrieve the content of a specified file.",
          "parameters": [
            {
              "name": "readFileContent",
              "required": false,
              "type": "string"
            },
            {
              "name": "filePath",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "editFile",
          "description": "Make targeted changes to specific text portions within a file without rewriting the entire content.",
          "parameters": [
            {
              "name": "edits",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "manageFile",
          "description": "Perform actions like move, rename, copy, or delete a file.",
          "parameters": [
            {
              "name": "manageFile",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "manageFolder",
          "description": "Perform actions like create, rename, or delete a folder.",
          "parameters": [
            {
              "name": "action",
              "required": true,
              "type": "string"
            },
            {
              "name": "folderPath",
              "required": true,
              "type": "string"
            },
            {
              "name": "newFolderPath",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "searchFilesAndFolders",
          "description": "Search for matching files and folders using glob patterns. Results always include path and type fields. For simple directory listing, use pattern '*'. Only set includeMetadata to true when file size or timestamps are needed - this adds size, created, and modified fields.",
          "parameters": [
            {
              "name": "searchFilesAndFolders",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@MartinSchlott/BetterMCPFileServer/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@MartinSchlott/BetterMCPFileServer/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2475.@MartinSchlott_BetterMCPFileServer_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 2111
  }
}