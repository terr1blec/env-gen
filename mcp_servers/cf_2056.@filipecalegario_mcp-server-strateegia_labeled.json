{
  "labels": {
    "analysis": "The Strateegia Integration Server allows AI assistants to access and interact with Strateegia projects, enabling project listing and detailed information retrieval. This enhances AI workflows by simplifying project management and integrating Strateegia data directly into AI environments. The core functionality revolves around project access and management within an AI-driven ecosystem.",
    "reasoning": "The primary label is \"Development Tools\" as the server facilitates AI-assisted project management and data integration, which is closely tied to development workflows. The secondary label \"API Integration\" is chosen because the server acts as a bridge between AI systems and Strateegia projects, likely leveraging API interactions. The custom label \"AI Project Management\" is used to highlight the specific focus on managing projects within an AI context.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": "AI Project Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2055,
    "server_name": "Strateegia Integration Server",
    "rank_by_usage": 2056,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@filipecalegario_mcp-server-strateegia.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@filipecalegario/mcp-server-strateegia/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2055,
      "name": "Strateegia Integration Server",
      "author": "@filipecalegario/mcp-server-strateegia",
      "overview": "Enable AI assistants to access and interact with your Strateegia projects seamlessly. List all accessible projects and labs and retrieve detailed information to enhance your AI workflows. Simplify project management by integrating Strateegia data directly into your AI environment.",
      "repository_url": "https://github.com/filipecalegario/mcp-server-strateegia",
      "homepage": "https://smithery.ai/server/@filipecalegario/mcp-server-strateegia",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@filipecalegario_mcp-server-strateegia.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "list-projects",
          "description": "Deploy Server Strateegia Integration Server Claim Server @filipecalegario/mcp-server-strateegia Try in Playground list-projects",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@filipecalegario/mcp-server-strateegia/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "strateegiaApiKey",
          "required": true,
          "description": "API key for Strateegia (set as STRATEEGIA_API_KEY)"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@filipecalegario/mcp-server-strateegia/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2056.@filipecalegario_mcp-server-strateegia_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1792
  }
}