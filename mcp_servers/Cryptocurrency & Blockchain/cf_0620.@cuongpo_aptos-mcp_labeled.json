{
  "labels": {
    "analysis": "The MCP Server mainly focuses on interactions with the Aptos Blockchain, providing tools for account management, token transfers, and transaction operations. It enables AI applications to execute blockchain operations such as account funding, balance checks, token transfers for both native APT and custom coins, as well as querying transaction data. The server facilitates secure blockchain operations through a straightforward API, making it particularly useful for integrating blockchain functionalities into broader AI workflows.",
    "reasoning": "The primary label of \"Cryptocurrency & Blockchain\" was chosen because the server's core functionality revolves around blockchain operations, specifically focused on Aptos blockchain interactions, including account management, token transfers, and transaction queries. The secondary label \"API Integration\" was selected due to the server's role in enabling blockchain operations from AI workflows. No custom label is needed as the predefined labels adequately cover the server's functionality.",
    "primary_label": "Cryptocurrency & Blockchain",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 619,
    "server_name": "Aptos Blockchain Server",
    "rank_by_usage": 620,
    "usage_count": "16",
    "original_file": "../crawler/smithery/@cuongpo_aptos-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@cuongpo/aptos-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 619,
      "name": "Aptos Blockchain Server",
      "author": "@cuongpo/aptos-mcp",
      "overview": "Enable AI applications to seamlessly interact with the Aptos blockchain for account management, token transfers, custom coin operations, and transaction queries on testnet and mainnet. Simplify blockchain integration by providing a comprehensive set of tools for native APT and custom coin handling. Facilitate secure and efficient blockchain operations directly from your AI workflows.",
      "repository_url": "https://github.com/cuongpo/aptos-mcp",
      "homepage": "https://smithery.ai/server/@cuongpo/aptos-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "16",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@cuongpo_aptos-mcp.json",
      "tools_count": 12,
      "tools": [
        {
          "name": "create_account",
          "description": "Deploy Server Aptos Blockchain Server @cuongpo/aptos-mcp Try in Playground create_account",
          "parameters": [
            {
              "name": "create_account",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_account_info",
          "description": "Get detailed information about an Aptos account including sequence number and authentication key. This is used for checking account status and transaction readiness. Returns comprehensive account information.",
          "parameters": [
            {
              "name": "get_account_info",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "fund_account",
          "description": "Fund an Aptos account using the testnet faucet. This is only available on testnet and is used to add APT tokens to an account for testing purposes. Returns the funding transaction details.",
          "parameters": [
            {
              "name": "amount",
              "required": false,
              "type": "string"
            },
            {
              "name": "account_address",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_apt_balance",
          "description": "Get the native APT token balance of an Aptos account. This is used for checking the current balance of APT tokens in an account. Returns the account balance in both Octas and APT.",
          "parameters": [
            {
              "name": "get_apt_balance",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "transfer_apt",
          "description": "Transfer native APT tokens to another Aptos account. This is used for sending APT tokens from your account to another address. Returns the transaction hash upon successful transfer.",
          "parameters": [
            {
              "name": "transfer_apt",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_coin_balance",
          "description": "Get the balance of a specific coin type for an Aptos account. This is used for checking the balance of custom coins or tokens. Returns the coin balance and metadata.",
          "parameters": [
            {
              "name": "get_coin_balance",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "transfer_coin",
          "description": "Transfer a specific coin type to another Aptos account. This is used for sending custom coins or tokens from your account to another address. Returns the transaction hash upon successful transfer.",
          "parameters": [
            {
              "name": "transfer_coin",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "deploy_coin",
          "description": "Simulate deploying a new custom coin/token on Aptos blockchain. This demonstrates the coin deployment process and parameters. Note: Real coin deployment requires Move smart contract development and module deployment.",
          "parameters": [
            {
              "name": "deploy_coin",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "mint_coin",
          "description": "Mint new tokens of a previously deployed custom coin. Only the coin deployer can mint new tokens. This increases the total supply of the coin and sends the minted tokens to a specified recipient.",
          "parameters": [
            {
              "name": "mint_coin",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "register_coin",
          "description": "Register your account to receive a specific coin type. This is required before you can receive transfers of custom coins on Aptos. Returns the registration transaction details.",
          "parameters": [
            {
              "name": "register_coin",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_transaction_status",
          "description": "Get the status and details of a transaction by its hash. This is used for checking if a transaction was successful and getting detailed information about it. Returns comprehensive transaction information.",
          "parameters": [
            {
              "name": "get_transaction_status",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_account_transactions",
          "description": "Get recent transactions for an Aptos account. This is used for viewing transaction history and activity for an account. Returns a list of recent transactions with details.",
          "parameters": [
            {
              "name": "get_account_transactions",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@cuongpo/aptos-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "aptosMcpPrivateKey",
          "required": true,
          "description": "Aptos MCP private key for signing transactions (hex format starting with 0x)."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@cuongpo/aptos-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0620.@cuongpo_aptos-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 605
  }
}