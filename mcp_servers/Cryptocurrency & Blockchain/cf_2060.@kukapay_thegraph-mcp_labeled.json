{
  "labels": {
    "analysis": "TheGraph MCP Server is designed to facilitate AI agent interactions with blockchain data by providing tools to access and query data indexed by The Graph protocol. Its core functionality revolves around enabling developers and AI agents to retrieve blockchain data through GraphQL queries, specifically targeting subgraphs. The server simplifies the process of accessing blockchain data, making it more accessible for data-driven insights and analysis. The primary tools include fetching subgraph schemas and executing GraphQL queries against specified subgraphs, which are essential for blockchain data interaction and analysis.",
    "reasoning": "The primary label is \"Blockchain Data Querying\" as a custom label since the server is specialized in querying indexed blockchain data via GraphQL. The secondary labels \"Data Analysis & Processing\" and \"API Integration\" are chosen because the server enables data analysis through queries and operates as an API integration point for blockchain data. There is no predefined category that fully captures the server's unique focus on blockchain data querying, hence the custom primary label.",
    "primary_label": "Cryptocurrency & Blockchain",
    "secondary_labels": [
      "Data Analysis & Processing",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2059,
    "server_name": "TheGraph MCP Server",
    "rank_by_usage": 2060,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@kukapay_thegraph-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@kukapay/thegraph-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2059,
      "name": "TheGraph MCP Server",
      "author": "@kukapay/thegraph-mcp",
      "overview": "Enable AI agents to access and query indexed blockchain data from The Graph effortlessly. Fetch subgraph schemas and execute GraphQL queries to empower data-driven insights and analysis. Simplify blockchain data interaction for enhanced AI capabilities.",
      "repository_url": "https://github.com/kukapay/thegraph-mcp",
      "homepage": "https://smithery.ai/server/@kukapay/thegraph-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@kukapay_thegraph-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "getSubgraphSchema",
          "description": "Deploy Server TheGraph MCP Server Claim Server @kukapay/thegraph-mcp Try in Playground getSubgraphSchema",
          "parameters": []
        },
        {
          "name": "querySubgraph",
          "description": "Execute a GraphQL query against a specified subgraph.\n\n    Args:\n        subgraphId (str): The ID of the subgraph to query.\n        query (str): The GraphQL query string to execute.\n\n    Returns:\n        str: Query result in JSON format, or an error message.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@kukapay/thegraph-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "thegraphApiKey",
          "required": true,
          "description": "The Graph API key for accessing subgraphs"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@kukapay/thegraph-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2060.@kukapay_thegraph-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1796
  }
}