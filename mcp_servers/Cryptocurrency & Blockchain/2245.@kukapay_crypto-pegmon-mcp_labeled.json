{
  "labels": {
    "analysis": "The MCP Server \"Crypto Pegmon\" is designed to monitor the peg integrity of USD-pegged stablecoins across multiple blockchains. Its core functionality revolves around real-time peg deviation detection, historical price analysis, and stability reporting. The server provides tools to fetch supported stablecoins, current prices, historical data, and generate comprehensive stability analysis reports in Markdown format. This makes it particularly useful for detecting depegging risks early and integrating stability metrics into reports or dashboards.",
    "reasoning": "The primary label \"Cryptocurrency & Blockchain\" was chosen because the server's focus is entirely on stablecoins and blockchain-related price monitoring. The secondary label \"Data Analysis & Processing\" is appropriate due to its historical data analysis and reporting capabilities. \"Financial Services\" also applies as it deals with financial instruments and their stability. No custom label is needed as the functionality is well covered by predefined categories.",
    "primary_label": "Cryptocurrency & Blockchain",
    "secondary_labels": [
      "Data Analysis & Processing",
      "Financial Services"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2244,
    "server_name": "Crypto Pegmon",
    "rank_by_usage": 2245,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@kukapay_crypto-pegmon-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@kukapay/crypto-pegmon-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_supported_stablecoins",
          "description": "\n    Fetch the list of supported USD-pegged stablecoins with their symbols and descriptions.\n\n    Returns:\n        str: A Markdown-formatted table listing stablecoin symbols and their descriptions.\n    ",
          "input_schema": {
            "properties": {},
            "title": "get_supported_stablecoinsArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "get_current_price",
          "description": "\n    Fetch the current price of a USD-pegged stablecoin in USD and calculate peg deviation.\n\n    Args:\n        coin (str): The symbol of the stablecoin (e.g., 'usdt', 'usdc', 'dai').\n\n    Returns:\n        str: A string with the current price and peg deviation in Markdown format.\n    ",
          "input_schema": {
            "properties": {
              "coin": {
                "title": "Coin",
                "type": "string"
              }
            },
            "required": [
              "coin"
            ],
            "title": "get_current_priceArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "get_historical_data",
          "description": "\n    Fetch historical price data for a USD-pegged stablecoin and return as a Markdown table.\n\n    Args:\n        coin (str): The symbol of the stablecoin (e.g., 'usdt', 'usdc', 'dai').\n        days (int, optional): Number of days for historical data. Defaults to 7.\n\n    Returns:\n        str: A Markdown table with date, price, and deviation.\n    ",
          "input_schema": {
            "properties": {
              "coin": {
                "title": "Coin",
                "type": "string"
              },
              "days": {
                "default": 7,
                "title": "Days",
                "type": "integer"
              }
            },
            "required": [
              "coin"
            ],
            "title": "get_historical_dataArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "analyze_peg_stability",
          "description": "\n    Generate a peg stability analysis report for a USD-pegged stablecoin.\n\n    Args:\n        coin (str): The symbol of the stablecoin (e.g., 'usdt', 'usdc', 'dai').\n        days (int, optional): Number of days for analysis. Defaults to 7.\n\n    Returns:\n        str: A Markdown-formatted report with historical data, current price, and stability analysis.\n    ",
          "input_schema": {
            "properties": {
              "coin": {
                "title": "Coin",
                "type": "string"
              },
              "days": {
                "default": 7,
                "title": "Days",
                "type": "integer"
              }
            },
            "required": [
              "coin"
            ],
            "title": "analyze_peg_stabilityArguments",
            "type": "object"
          },
          "annotations": {}
        }
      ],
      "tool_count": 4,
      "tool_names": [
        "get_supported_stablecoins",
        "get_current_price",
        "get_historical_data",
        "analyze_peg_stability"
      ]
    },
    "server_info_crawled": {
      "id": 2244,
      "name": "Crypto Pegmon",
      "author": "@kukapay/crypto-pegmon-mcp",
      "overview": "Monitor stablecoin peg integrity across multiple blockchains to detect depegging risks early. Generate detailed stability reports, fetch real-time prices, and analyze historical data for 17 USD-pegged stablecoins. Present all information in clean Markdown format for easy integration into reports or dashboards.",
      "repository_url": "https://github.com/kukapay/crypto-pegmon-mcp",
      "homepage": "https://smithery.ai/server/@kukapay/crypto-pegmon-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@kukapay_crypto-pegmon-mcp.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "get_supported_stablecoins",
          "description": "\n    Fetch the list of supported USD-pegged stablecoins with their symbols and descriptions.\n\n    Returns:\n        str: A Markdown-formatted table listing stablecoin symbols and their descriptions.\n    ",
          "input_schema": {
            "properties": {},
            "title": "get_supported_stablecoinsArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "get_current_price",
          "description": "\n    Fetch the current price of a USD-pegged stablecoin in USD and calculate peg deviation.\n\n    Args:\n        coin (str): The symbol of the stablecoin (e.g., 'usdt', 'usdc', 'dai').\n\n    Returns:\n        str: A string with the current price and peg deviation in Markdown format.\n    ",
          "input_schema": {
            "properties": {
              "coin": {
                "title": "Coin",
                "type": "string"
              }
            },
            "required": [
              "coin"
            ],
            "title": "get_current_priceArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "get_historical_data",
          "description": "\n    Fetch historical price data for a USD-pegged stablecoin and return as a Markdown table.\n\n    Args:\n        coin (str): The symbol of the stablecoin (e.g., 'usdt', 'usdc', 'dai').\n        days (int, optional): Number of days for historical data. Defaults to 7.\n\n    Returns:\n        str: A Markdown table with date, price, and deviation.\n    ",
          "input_schema": {
            "properties": {
              "coin": {
                "title": "Coin",
                "type": "string"
              },
              "days": {
                "default": 7,
                "title": "Days",
                "type": "integer"
              }
            },
            "required": [
              "coin"
            ],
            "title": "get_historical_dataArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "analyze_peg_stability",
          "description": "\n    Generate a peg stability analysis report for a USD-pegged stablecoin.\n\n    Args:\n        coin (str): The symbol of the stablecoin (e.g., 'usdt', 'usdc', 'dai').\n        days (int, optional): Number of days for analysis. Defaults to 7.\n\n    Returns:\n        str: A Markdown-formatted report with historical data, current price, and stability analysis.\n    ",
          "input_schema": {
            "properties": {
              "coin": {
                "title": "Coin",
                "type": "string"
              },
              "days": {
                "default": 7,
                "title": "Days",
                "type": "integer"
              }
            },
            "required": [
              "coin"
            ],
            "title": "analyze_peg_stabilityArguments",
            "type": "object"
          },
          "annotations": {}
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@kukapay/crypto-pegmon-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@kukapay/crypto-pegmon-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "2245.@kukapay_crypto-pegmon-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1934
  }
}