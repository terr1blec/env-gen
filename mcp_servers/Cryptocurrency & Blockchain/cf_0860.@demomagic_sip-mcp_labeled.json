{
  "labels": {
    "analysis": "The MCP Server described is specifically designed for Solana blockchain operations, particularly focusing on token swaps and token searches. The core functionality revolves around simplifying blockchain interactions through tools that automate complex processes. The available tools, executeSolanaSwap and searchTokens, indicate that this server is primarily used for cryptocurrency operations, specifically within the Solana ecosystem.",
    "reasoning": "The primary label of \"Cryptocurrency & Blockchain\" was chosen because the server's primary functionality involves interacting with the Solana blockchain, performing token swaps, and searching for tokens. This category aligns closely with the server's focus on blockchain-related operations. No secondary labels are needed as the server's functionality is well-covered by the primary category.",
    "primary_label": "Cryptocurrency & Blockchain",
    "secondary_labels": [],
    "custom_label": "Solana Token Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 859,
    "server_name": "SIP",
    "rank_by_usage": 860,
    "usage_count": "5",
    "original_file": "../crawler/smithery/@demomagic_sip-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@demomagic/sip-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 859,
      "name": "SIP",
      "author": "@demomagic/sip-mcp",
      "overview": "The SIP MCP (Model Context Protocol) integration provides a powerful way to automate and manage Solana token swaps directly through an intelligent agent or system. It essentially turns complex blockchain interactions into easily callable \"tools\" within your MCP server.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@demomagic/sip-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "5",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@demomagic_sip-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "executeSolanaSwap",
          "description": "Deploy Server @demomagic/sip-mcp Try in Playground executeSolanaSwap",
          "parameters": []
        },
        {
          "name": "searchTokens",
          "description": "Searches for cryptocurrency tokens by keyword and optional blockchain chain. Defaults to Solana if no chain is specified. Return the mint addresses",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@demomagic/sip-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "privateKey",
          "required": true,
          "description": "Solana private key for transaction signing (loaded from environment)."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@demomagic/sip-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0860.@demomagic_sip-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 841
  }
}