{
  "labels": {
    "analysis": "The MCP Server focuses on providing real-time cryptocurrency market data, trading signals, price predictions, and advanced analytics. It offers a suite of tools to fetch various types of market-related information, including token prices, OHLCV data, trading grades, sentiment analysis, AI-generated reports, and quantitative metrics. The server is designed to empower users with comprehensive crypto insights to enhance investment decision-making. It solves problems related to market tracking, strategic trading, and investment analysis in the cryptocurrency space.",
    "reasoning": "The primary label \"Cryptocurrency & Blockchain\" is chosen because the server's core functionality revolves around cryptocurrency market data and analytics. The secondary labels \"AI/ML Tools\" and \"Data Analysis & Processing\" are selected because the server leverages AI for generating reports and trading signals, as well as processes complex financial data. No custom label is needed as the predefined labels adequately cover the server's functionality.",
    "primary_label": "Cryptocurrency & Blockchain",
    "secondary_labels": [
      "AI/ML Tools",
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 582,
    "server_name": "Token Metrics MCP",
    "rank_by_usage": 583,
    "usage_count": "19",
    "original_file": "../crawler/smithery/@token-metrics_mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@token-metrics/mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 582,
      "name": "Token Metrics MCP",
      "author": "@token-metrics/mcp",
      "overview": "Provide AI assistants with real-time cryptocurrency market data, trading signals, price predictions, and advanced analytics. Enable seamless access to comprehensive crypto insights and quantitative metrics to enhance decision-making. Empower users with AI-generated reports and market sentiment analysis for smarter crypto investments.",
      "repository_url": "https://github.com/token-metrics/mcp",
      "homepage": "https://smithery.ai/server/@token-metrics/mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "19",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@token-metrics_mcp.json",
      "tools_count": 20,
      "tools": [
        {
          "name": "get_tokens_data",
          "description": "Deploy Server Token Metrics MCP @token-metrics/mcp Try in Playground get_tokens_data",
          "parameters": [
            {
              "name": "get_tokens_data",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_tokens_price",
          "description": "Fetch token(s) price from Token Metrics API. Provide token_id.",
          "parameters": [
            {
              "name": "get_tokens_price",
              "required": false,
              "type": "string"
            },
            {
              "name": "token_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_tokens_trader_grade",
          "description": "Fetch token(s) trader grade including the 24h percent change for the trader grade for a specific date or date range from Token Metrics API.",
          "parameters": [
            {
              "name": "token_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "marketcap",
              "required": false,
              "type": "string"
            },
            {
              "name": "startDate",
              "required": false,
              "type": "string"
            },
            {
              "name": "traderGrade",
              "required": false,
              "type": "string"
            },
            {
              "name": "traderGradePercentChange",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_tokens_hourly_ohlcv",
          "description": "Fetch hourly OHLCV (Open, High, Low, Close, Volume) data for token(s) for a specific date or date range from Token Metrics API.",
          "parameters": [
            {
              "name": "get_tokens_hourly_ohlcv",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_tokens_daily_ohlcv",
          "description": "Fetch daily OHLCV (Open, High, Low, Close, Volume) data for token(s) for a specific date or date range from Token Metrics API.",
          "parameters": [
            {
              "name": "get_tokens_daily_ohlcv",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_tokens_investor_grade",
          "description": "Fetch token(s) long term grades, including Technology and Fundamental metrics for a specific date or date range from Token Metrics API.",
          "parameters": [
            {
              "name": "get_tokens_investor_grade",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_market_metrics",
          "description": "Fetch Market Analytics from Token Metrics API. They provide insight into the full Crypto Market, including the Bullish/Bearish Market indicator for a specific date or date range.",
          "parameters": [
            {
              "name": "get_market_metrics",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_tokens_trading_signal",
          "description": "Fetch token(s) AI generated trading signals for long and short positions for a specific date or date range from Token Metrics API.",
          "parameters": [
            {
              "name": "get_tokens_trading_signal",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_tokens_ai_report",
          "description": "Fetch token(s) AI-generated reports providing comprehensive analyses of cryptocurrency tokens, including deep dives, investment analyses, and code reviews from Token Metrics API.",
          "parameters": [
            {
              "name": "get_tokens_ai_report",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_crypto_investors",
          "description": "Fetch the latest list of crypto investors and their scores from Token Metrics API.",
          "parameters": [
            {
              "name": "get_crypto_investors",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_top_tokens_by_market_cap",
          "description": "Fetch the the list of coins with top market cap from Token Metrics API.",
          "parameters": [
            {
              "name": "get_top_tokens_by_market_cap",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_tokens_resistance_and_support",
          "description": "Fetch token(s) historical levels of resistance and support from Token Metrics API. Provide token_id or symbol.",
          "parameters": [
            {
              "name": "get_tokens_resistance_and_support",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_sentiment",
          "description": "Fetch the hourly sentiment score for Twitter, Reddit, and all the News, including quick summary of what happened from Token Metrics API.",
          "parameters": [
            {
              "name": "get_sentiment",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_tokens_quant_metrics",
          "description": "Fetch the latest quantitative metrics for token(s). Note that Token Metrics pricing data starts on 2019-01-01 for most tokens. More historical data will be available soon.",
          "parameters": [
            {
              "name": "get_tokens_quant_metrics",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_tokens_scenario_analysis",
          "description": "Fetch tokens(s) price prediction based on different Crypto Market scenarios from Token Metrics API.",
          "parameters": [
            {
              "name": "get_tokens_scenario_analysis",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_tokens_correlation",
          "description": "Fetch token(s) Top 10 and Bottom 10 correlated tokens from the top 100 market cap tokens from Token Metrics API.",
          "parameters": [
            {
              "name": "get_tokens_correlation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_indices",
          "description": "Fetch active and passive crypto indices with performance and market data from Token Metrics API.",
          "parameters": [
            {
              "name": "get_indices",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_indices_holdings",
          "description": "Fetch the current holdings of the given Index, along with their respective weight in percentage from Token Metrics API.",
          "parameters": [
            {
              "name": "get_indices_holdings",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_indices_performance",
          "description": "Fetch historical performance data for a given index, including cumulative return on investment (ROI) over time from Token Metrics API. This data is useful for analyzing index trends and evaluating investment performance.",
          "parameters": [
            {
              "name": "get_indices_performance",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_tokens_hourly_trading_signals",
          "description": "Fetch token(s) hourly AI generated trading signals for long and short positions from Token Metrics API.",
          "parameters": [
            {
              "name": "get_tokens_hourly_trading_signals",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@token-metrics/mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "apiKey",
          "required": true,
          "description": "Your Token Metrics API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@token-metrics/mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0583.@token-metrics_mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 569
  }
}