{
  "labels": {
    "analysis": "The MCP Server is primarily designed to facilitate interaction with the Solana blockchain, enabling AI models and applications to perform various blockchain operations. Key functionalities include querying balances, retrieving account information and transaction history, transferring tokens, creating wallets, and minting custom tokens. The server also provides real-time updates via WebSocket and a REST API, making it suitable for seamless integration with AI applications. Its core focus is on blockchain operations and data retrieval/manipulation within the Solana ecosystem.",
    "reasoning": "The primary label \"Cryptocurrency & Blockchain\" was chosen because the server's main functionality revolves around interacting with the Solana blockchain, which is a central focus of this category. The secondary label \"API Integration\" is included because the server also provides a REST API for blockchain operations, making it suitable for integration with other applications. The secondary label \"WebSocket\" is also included because the server provides real-time updates through WebSocket, which is a distinct feature. A custom label is not needed as the predefined categories cover the server's functionality well.",
    "primary_label": "Cryptocurrency & Blockchain",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": "WebSocket",
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 680,
    "server_name": "Solana Blockchain Interaction Server",
    "rank_by_usage": 681,
    "usage_count": "12",
    "original_file": "../crawler/smithery/@nitriot_solanamcpservice.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@nitriot/solanamcpservice/mcp?config=eyJzb2xhbmFOZXR3b3JrIjogImRldm5ldCIsICJwdW1wZnVuUHJpdmF0ZUtleSI6ICIifQ==&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "getNetworkStatus",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "getBalance",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "minLength": 32,
                "maxLength": 44
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "getAccountInfo",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "minLength": 32,
                "maxLength": 44
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "getTransactions",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "minLength": 32,
                "maxLength": 44
              },
              "limit": {
                "type": "integer",
                "exclusiveMinimum": 0,
                "maximum": 100,
                "default": 10
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "transferSol",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "minLength": 32,
                "maxLength": 44
              },
              "to": {
                "type": "string",
                "minLength": 32,
                "maxLength": 44
              },
              "amount": {
                "type": "number",
                "exclusiveMinimum": 0
              },
              "privateKey": {
                "type": "string",
                "minLength": 87,
                "maxLength": 88
              }
            },
            "required": [
              "from",
              "to",
              "amount",
              "privateKey"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "getTokenBalance",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "minLength": 32,
                "maxLength": 44
              },
              "mintAddress": {
                "type": "string",
                "minLength": 32,
                "maxLength": 44
              }
            },
            "required": [
              "address",
              "mintAddress"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "createWallet",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "createPumpFunToken",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 1
              },
              "symbol": {
                "type": "string",
                "minLength": 1
              },
              "description": {
                "type": "string",
                "default": ""
              },
              "imagePath": {
                "type": "string"
              },
              "imageBase64": {
                "type": "string"
              },
              "twitter": {
                "type": "string"
              },
              "telegram": {
                "type": "string"
              },
              "website": {
                "type": "string"
              },
              "amount": {
                "type": "string",
                "default": "0.1"
              },
              "slippage": {
                "type": "string",
                "default": "10"
              },
              "priorityFee": {
                "type": "string",
                "default": "0.0005"
              },
              "privateKey": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "symbol"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 8,
      "tool_names": [
        "getNetworkStatus",
        "getBalance",
        "getAccountInfo",
        "getTransactions",
        "transferSol",
        "getTokenBalance",
        "createWallet",
        "createPumpFunToken"
      ]
    },
    "server_info_crawled": {
      "id": 680,
      "name": "Solana Blockchain Interaction Server",
      "author": "@nitriot/solanamcpservice",
      "overview": "Enable AI models to interact seamlessly with the Solana blockchain by querying balances, sending tokens, retrieving transaction history, and creating custom tokens. Provide real-time updates via WebSocket and a comprehensive REST API for blockchain operations. Simplify integration with AI applications through a secure and robust MCP server interface.",
      "repository_url": "https://github.com/nitriot/SolanaMcpService",
      "homepage": "https://smithery.ai/server/@nitriot/solanamcpservice",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "12",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@nitriot_solanamcpservice.json",
      "tools_count": 8,
      "tools": [
        {
          "name": "getNetworkStatus",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "getBalance",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "minLength": 32,
                "maxLength": 44
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "getAccountInfo",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "minLength": 32,
                "maxLength": 44
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "getTransactions",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "minLength": 32,
                "maxLength": 44
              },
              "limit": {
                "type": "integer",
                "exclusiveMinimum": 0,
                "maximum": 100,
                "default": 10
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "transferSol",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "minLength": 32,
                "maxLength": 44
              },
              "to": {
                "type": "string",
                "minLength": 32,
                "maxLength": 44
              },
              "amount": {
                "type": "number",
                "exclusiveMinimum": 0
              },
              "privateKey": {
                "type": "string",
                "minLength": 87,
                "maxLength": 88
              }
            },
            "required": [
              "from",
              "to",
              "amount",
              "privateKey"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "getTokenBalance",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "minLength": 32,
                "maxLength": 44
              },
              "mintAddress": {
                "type": "string",
                "minLength": 32,
                "maxLength": 44
              }
            },
            "required": [
              "address",
              "mintAddress"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "createWallet",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "createPumpFunToken",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 1
              },
              "symbol": {
                "type": "string",
                "minLength": 1
              },
              "description": {
                "type": "string",
                "default": ""
              },
              "imagePath": {
                "type": "string"
              },
              "imageBase64": {
                "type": "string"
              },
              "twitter": {
                "type": "string"
              },
              "telegram": {
                "type": "string"
              },
              "website": {
                "type": "string"
              },
              "amount": {
                "type": "string",
                "default": "0.1"
              },
              "slippage": {
                "type": "string",
                "default": "10"
              },
              "priorityFee": {
                "type": "string",
                "default": "0.0005"
              },
              "privateKey": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "symbol"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"solanaNetwork\": \"devnet\",\n  \"pumpfunPrivateKey\": \"\"\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@nitriot/solanamcpservice/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"solanaNetwork\": \"devnet\",\n  \"pumpfunPrivateKey\": \"\"\n}",
      "python_sdk_url": "https://server.smithery.ai/@nitriot/solanamcpservice/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "0681.@nitriot_solanamcpservice_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 665
  }
}