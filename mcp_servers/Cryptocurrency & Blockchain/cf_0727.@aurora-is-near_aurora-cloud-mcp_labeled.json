{
  "labels": {
    "analysis": "The Aurora Cloud Console API MCP Server primarily provides programmatic access to Aurora Cloud's services, including deal management, silo operations, token bridging, and wallet interactions. It reflects a comprehensive blockchain or decentralized storage management platform, focusing on automated workflows for deals, tokens, and permissioned interactions on Aurora Cloud. The built-in tools emphasize CRUD operations for deals, silos, and rules, making it crucial for developers and administrators managing Aurora Cloud resources.",
    "reasoning": "The primary label \"Cryptocurrency & Blockchain\" is chosen because Aurora Cloud's operations align with blockchain or similar distributed ledger functionalities (tokens, silos, and transactions). Additionally, \"API Integration\" is added due to the server's role in bridging with external services, and \"Development Tools\" is selected as the server supports iterative testing and interaction via a web client, appealing to developers. No custom label is needed as predefined categories cover the functionality well.",
    "primary_label": "Cryptocurrency & Blockchain",
    "secondary_labels": [
      "API Integration",
      "Development Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 726,
    "server_name": "Aurora Cloud Console API",
    "rank_by_usage": 727,
    "usage_count": "10",
    "original_file": "../crawler/smithery/@aurora-is-near_aurora-cloud-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@aurora-is-near/aurora-cloud-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 726,
      "name": "Aurora Cloud Console API",
      "author": "@aurora-is-near/aurora-cloud-mcp",
      "overview": "Provide seamless access to Aurora Cloud's API endpoints through a standardized MCP server interface. Enable integration with Aurora Cloud's deals, silos, rules, tokens, and more via both stdio and HTTP transports. Facilitate interactive testing with a built-in web client for easy exploration and development.",
      "repository_url": "https://github.com/aurora-is-near/aurora-cloud-mcp",
      "homepage": "https://smithery.ai/server/@aurora-is-near/aurora-cloud-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "10",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@aurora-is-near_aurora-cloud-mcp.json",
      "tools_count": 36,
      "tools": [
        {
          "name": "getDeals",
          "description": "Deploy Server Aurora Cloud Console API @aurora-is-near/aurora-cloud-mcp Try in Playground",
          "parameters": [
            {
              "name": "getDeals",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "createDeal",
          "description": "**Required scopes:** `deals:write`",
          "parameters": [
            {
              "name": "createDeal",
              "required": false,
              "type": "string"
            },
            {
              "name": "requestBody",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getDeal",
          "description": "Deploy Server Aurora Cloud Console API @aurora-is-near/aurora-cloud-mcp Try in Playground",
          "parameters": [
            {
              "name": "getDeals",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "updateDeal",
          "description": "**Required scopes:** `deals:write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestBody",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getRules",
          "description": "**Required scopes:** `deals:read`",
          "parameters": [
            {
              "name": "getRules",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "createRule",
          "description": "**Required scopes:** `deals:write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestBody",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "updateRule",
          "description": "**Required scopes:** `deals:write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "rule_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestBody",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getSilos",
          "description": "**Required scopes:** `silos:read`",
          "parameters": [
            {
              "name": "getSilos",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getSilo",
          "description": "**Required scopes:** `silos:read`",
          "parameters": [
            {
              "name": "getSilos",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getSiloBridgedTokens",
          "description": "**Required scopes:** `silos:read`",
          "parameters": [
            {
              "name": "getSiloBridgedTokens",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getSiloBridgedTokenRequests",
          "description": "**Required scopes:** `silos:read`",
          "parameters": [
            {
              "name": "getSiloBridgedTokenRequests",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "bridgeSiloToken",
          "description": "**Required scopes:** `silos:write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestBody",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getSiloOracle",
          "description": "**Required scopes:** `silos:read`",
          "parameters": [
            {
              "name": "getSiloOracle",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "createSiloOracle",
          "description": "**Required scopes:** `silos:write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestBody",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getWidget",
          "description": "**Required scopes:** `silos:read`",
          "parameters": [
            {
              "name": "getWidget",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "updateWidget",
          "description": "**Required scopes:** `silos:write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestBody",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getWallets",
          "description": "**Required scopes:** `transactions:read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "offset",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getWallet",
          "description": "**Required scopes:** `transactions:read`",
          "parameters": [
            {
              "name": "getWallets",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "uploadSiloAsset",
          "description": "**Required scopes:** `assets:write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestBody",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getSiloTransactions",
          "description": "**Required scopes:** `transactions:read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "interval",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "toggleSiloPermissions",
          "description": "**Required scopes:** `silo:write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestBody",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "addAddressToPermissionsWhitelist",
          "description": "**Required scopes:** `silo:write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestBody",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "removeAddressFromPermissionsWhitelist",
          "description": "**Required scopes:** `silo:write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestBody",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getSiloCollectedGas",
          "description": "**Required scopes:** `transactions:read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "endDate",
              "required": true,
              "type": "string"
            },
            {
              "name": "startDate",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getSiloCollectedGasTotal",
          "description": "**Required scopes:** `transactions:read`",
          "parameters": [
            {
              "name": "getSiloCollectedGasTotal",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getSiloFailureRate",
          "description": "**Required scopes:** `silos:read`",
          "parameters": [
            {
              "name": "getSiloFailureRate",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getSiloLatency",
          "description": "**Required scopes:** `silos:read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "interval",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getSiloRpcRequests",
          "description": "**Required scopes:** `silos:read`",
          "parameters": [
            {
              "name": "getSiloRpcRequests",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getForwarderAddress",
          "description": "**Required scopes:** `forwarder:read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "targetAddress",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "createForwarderAddress",
          "description": "**Required scopes:** `forwarder:write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestBody",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getForwarderTokens",
          "description": "**Required scopes:** `forwarder:read`",
          "parameters": [
            {
              "name": "getForwarderTokens",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "updateForwarderTokens",
          "description": "**Required scopes:** `forwarder:write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestBody",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "addForwarderTokens",
          "description": "**Required scopes:** `forwarder:write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestBody",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "removeForwarderTokens",
          "description": "**Required scopes:** `forwarder:write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestBody",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "healthcheck",
          "description": "**Required scopes:** `silos:read`",
          "parameters": [
            {
              "name": "healthcheck",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "repair",
          "description": "**Required scopes:** `silos:write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestBody",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@aurora-is-near/aurora-cloud-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "accApiKey",
          "required": true,
          "description": "Your ACC API key generated from settings page."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@aurora-is-near/aurora-cloud-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0727.@aurora-is-near_aurora-cloud-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 710
  }
}