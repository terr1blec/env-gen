{
  "labels": {
    "analysis": "The MCP Server focuses on interacting with Safe smart contract wallets, providing tools to query transaction history, retrieve multisig details, and decode transaction data. It serves as a utility for managing and analyzing Safe wallet transactions, leveraging the Safe API for seamless integration. This makes it particularly useful for users who need to monitor or audit their asset management operations in a decentralized environment.",
    "reasoning": "The primary function of querying and managing Safe wallet transactions fits best under \"Blockchain Interaction\" or \"Cryptocurrency & Blockchain.\" The available tools are specialized for multisig wallet operations, which are integral to blockchain security and asset management. A secondary label for \"Data Analysis & Processing\" is added due to the decoding and retrieval capabilities that help users process transaction data. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Cryptocurrency & Blockchain",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1312,
    "server_name": "Safe MCP Server",
    "rank_by_usage": 1313,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@5ajaki_safe-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@5ajaki/safe-mcp-server/mcp?config=eyJzYWZlQXBpVXJsIjogImh0dHBzOi8vc2FmZS10cmFuc2FjdGlvbi1tYWlubmV0LnNhZmUuZ2xvYmFsL2FwaS92MSJ9&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "getSafeTransactions",
          "description": "Get all transactions for a Safe address",
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "Safe address"
              },
              "limit": {
                "type": "number",
                "description": "Number of transactions to return"
              },
              "offset": {
                "type": "number",
                "description": "Offset for pagination"
              }
            },
            "required": [
              "address"
            ]
          },
          "annotations": null
        },
        {
          "name": "getMultisigTransaction",
          "description": "Get details of a specific multisig transaction",
          "input_schema": {
            "type": "object",
            "properties": {
              "safeTxHash": {
                "type": "string",
                "description": "Safe transaction hash"
              }
            },
            "required": [
              "safeTxHash"
            ]
          },
          "annotations": null
        },
        {
          "name": "decodeTransactionData",
          "description": "Decode transaction data using Safe API",
          "input_schema": {
            "type": "object",
            "properties": {
              "data": {
                "type": "string",
                "description": "Transaction data in hex format"
              },
              "to": {
                "type": "string",
                "description": "Optional contract address"
              }
            },
            "required": [
              "data"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 3,
      "tool_names": [
        "getSafeTransactions",
        "getMultisigTransaction",
        "decodeTransactionData"
      ]
    },
    "server_info_crawled": {
      "id": 1312,
      "name": "Safe MCP Server",
      "author": "@5ajaki/safe-mcp-server",
      "overview": "Interact with Safe smart contract wallets to query transactions, retrieve multisig details, and decode transaction data. Simplify your operations with seamless integration to the Safe API, allowing for efficient management of your digital assets.",
      "repository_url": "https://github.com/5ajaki/safe-mcp-server",
      "homepage": "https://smithery.ai/server/@5ajaki/safe-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@5ajaki_safe-mcp-server.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "getSafeTransactions",
          "description": "Get all transactions for a Safe address",
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "Safe address"
              },
              "limit": {
                "type": "number",
                "description": "Number of transactions to return"
              },
              "offset": {
                "type": "number",
                "description": "Offset for pagination"
              }
            },
            "required": [
              "address"
            ]
          },
          "annotations": null
        },
        {
          "name": "getMultisigTransaction",
          "description": "Get details of a specific multisig transaction",
          "input_schema": {
            "type": "object",
            "properties": {
              "safeTxHash": {
                "type": "string",
                "description": "Safe transaction hash"
              }
            },
            "required": [
              "safeTxHash"
            ]
          },
          "annotations": null
        },
        {
          "name": "decodeTransactionData",
          "description": "Decode transaction data using Safe API",
          "input_schema": {
            "type": "object",
            "properties": {
              "data": {
                "type": "string",
                "description": "Transaction data in hex format"
              },
              "to": {
                "type": "string",
                "description": "Optional contract address"
              }
            },
            "required": [
              "data"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"safeApiUrl\": \"https://safe-transaction-mainnet.safe.global/api/v1\"\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@5ajaki/safe-mcp-server/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"safeApiUrl\": \"https://safe-transaction-mainnet.safe.global/api/v1\"\n}",
      "python_sdk_url": "https://server.smithery.ai/@5ajaki/safe-mcp-server/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "1313.@5ajaki_safe-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1245
  }
}