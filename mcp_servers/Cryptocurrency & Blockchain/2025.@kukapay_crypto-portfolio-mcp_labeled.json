{
  "labels": {
    "analysis": "The MCP Server is designed for cryptocurrency portfolio management, allowing users to track their crypto holdings, monitor current values, and visualize portfolio performance. It integrates with Binance prices to provide real-time data and AI-driven insights for investment decisions. The core functionality revolves around portfolio tracking, value calculation, and market analysis.",
    "reasoning": "The primary label \"Cryptocurrency & Blockchain\" is chosen because the server is specifically designed for managing and analyzing crypto portfolios and fetch prices from Binance. The secondary labels \"Data Analysis & Processing\" and \"AI/ML Tools\" are selected because the server provides analytical tools (price history charts) and likely uses AI for investment insights. There is no need for a custom label as the predefined categories adequately describe the server's functionality.",
    "primary_label": "Cryptocurrency & Blockchain",
    "secondary_labels": [
      "Data Analysis & Processing",
      "AI/ML Tools"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2024,
    "server_name": "Crypto Portfolio",
    "rank_by_usage": 2025,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@kukapay_crypto-portfolio-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@kukapay/crypto-portfolio-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_portfolio_summary",
          "description": "\n    Get current portfolio summary with total value using Binance prices.\n    \n    Returns:\n        A string containing a formatted summary of all holdings with current\n        prices and total portfolio value in USDT.\n    \n    Example:\n        \"Portfolio Summary (Binance Prices):\nBTC/USDT: 0.1 @ $60000.00 = $6000.00\nETH/USDT: 2.0 @ $2000.00 = $4000.00\nTotal Value: $10000.00\"\n    ",
          "input_schema": {
            "properties": {},
            "title": "get_portfolio_summaryArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "add_holding",
          "description": "\n    Add a cryptocurrency holding to the portfolio.\n    \n    Parameters:\n        coin_symbol (str): The trading pair symbol (e.g., \"BTC/USDT\" or \"btc\").\n            If no \"/USDT\" is provided, it will be appended automatically.\n            Case-insensitive.\n        amount (float): The quantity of the cryptocurrency to add.\n            Must be a positive number.\n    \n    Returns:\n        A confirmation message indicating the holding was added.\n    \n    Example:\n        add_holding(\"BTC\", 0.1) -> \"Added 0.1 BTC/USDT to portfolio\"\n    ",
          "input_schema": {
            "properties": {
              "coin_symbol": {
                "title": "Coin Symbol",
                "type": "string"
              },
              "amount": {
                "title": "Amount",
                "type": "number"
              }
            },
            "required": [
              "coin_symbol",
              "amount"
            ],
            "title": "add_holdingArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_price",
          "description": "\n    Get current price for a cryptocurrency from Binance.\n    \n    Parameters:\n        coin_symbol (str): The trading pair symbol (e.g., \"ETH/USDT\" or \"eth\").\n            If no \"/USDT\" is provided, it will be appended automatically.\n            Case-insensitive.\n    \n    Returns:\n        A string with the current price in USDT.\n    \n    Example:\n        get_price(\"ETH\") -> \"Current price of ETH/USDT on Binance: $2000.50\"\n    ",
          "input_schema": {
            "properties": {
              "coin_symbol": {
                "title": "Coin Symbol",
                "type": "string"
              }
            },
            "required": [
              "coin_symbol"
            ],
            "title": "get_priceArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "portfolio_value_history",
          "description": "\n    Generate a chart of portfolio value over time using Binance prices.\n    \n    Parameters:\n        ctx (Context): MCP context object for progress reporting.\n            Automatically provided by the MCP framework.\n    \n    Returns:\n        An Image object containing a PNG chart of portfolio value history.\n    \n    Notes:\n        - Uses current prices for historical points (simplified implementation)\n        - Chart shows value progression as holdings were added\n    ",
          "input_schema": {
            "properties": {},
            "title": "portfolio_value_historyArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 4,
      "tool_names": [
        "get_portfolio_summary",
        "add_holding",
        "get_price",
        "portfolio_value_history"
      ]
    },
    "server_info_crawled": {
      "id": 2024,
      "name": "Crypto Portfolio",
      "author": "@kukapay/crypto-portfolio-mcp",
      "overview": "Track and manage your cryptocurrency portfolio allocations effortlessly. Optimize your investment strategies in real-time with AI-driven insights and analysis. Visualize your portfolio's performance and make informed decisions based on current market trends.",
      "repository_url": "https://github.com/kukapay/crypto-portfolio-mcp",
      "homepage": "https://smithery.ai/server/@kukapay/crypto-portfolio-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@kukapay_crypto-portfolio-mcp.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "get_portfolio_summary",
          "description": "\n    Get current portfolio summary with total value using Binance prices.\n    \n    Returns:\n        A string containing a formatted summary of all holdings with current\n        prices and total portfolio value in USDT.\n    \n    Example:\n        \"Portfolio Summary (Binance Prices):\nBTC/USDT: 0.1 @ $60000.00 = $6000.00\nETH/USDT: 2.0 @ $2000.00 = $4000.00\nTotal Value: $10000.00\"\n    ",
          "input_schema": {
            "properties": {},
            "title": "get_portfolio_summaryArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "add_holding",
          "description": "\n    Add a cryptocurrency holding to the portfolio.\n    \n    Parameters:\n        coin_symbol (str): The trading pair symbol (e.g., \"BTC/USDT\" or \"btc\").\n            If no \"/USDT\" is provided, it will be appended automatically.\n            Case-insensitive.\n        amount (float): The quantity of the cryptocurrency to add.\n            Must be a positive number.\n    \n    Returns:\n        A confirmation message indicating the holding was added.\n    \n    Example:\n        add_holding(\"BTC\", 0.1) -> \"Added 0.1 BTC/USDT to portfolio\"\n    ",
          "input_schema": {
            "properties": {
              "coin_symbol": {
                "title": "Coin Symbol",
                "type": "string"
              },
              "amount": {
                "title": "Amount",
                "type": "number"
              }
            },
            "required": [
              "coin_symbol",
              "amount"
            ],
            "title": "add_holdingArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_price",
          "description": "\n    Get current price for a cryptocurrency from Binance.\n    \n    Parameters:\n        coin_symbol (str): The trading pair symbol (e.g., \"ETH/USDT\" or \"eth\").\n            If no \"/USDT\" is provided, it will be appended automatically.\n            Case-insensitive.\n    \n    Returns:\n        A string with the current price in USDT.\n    \n    Example:\n        get_price(\"ETH\") -> \"Current price of ETH/USDT on Binance: $2000.50\"\n    ",
          "input_schema": {
            "properties": {
              "coin_symbol": {
                "title": "Coin Symbol",
                "type": "string"
              }
            },
            "required": [
              "coin_symbol"
            ],
            "title": "get_priceArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "portfolio_value_history",
          "description": "\n    Generate a chart of portfolio value over time using Binance prices.\n    \n    Parameters:\n        ctx (Context): MCP context object for progress reporting.\n            Automatically provided by the MCP framework.\n    \n    Returns:\n        An Image object containing a PNG chart of portfolio value history.\n    \n    Notes:\n        - Uses current prices for historical points (simplified implementation)\n        - Chart shows value progression as holdings were added\n    ",
          "input_schema": {
            "properties": {},
            "title": "portfolio_value_historyArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@kukapay/crypto-portfolio-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@kukapay/crypto-portfolio-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "2025.@kukapay_crypto-portfolio-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1768
  }
}