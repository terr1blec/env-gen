{
  "labels": {
    "analysis": "The Flow RPC Server is designed to facilitate interactions with the Flow EVM (Ethereum Virtual Machine) blockchain using standardized JSON-RPC methods. Its primary purpose is to enable seamless data transmission and interaction with blockchain networks, allowing AI applications to access blockchain information effortlessly. The available tools cover a wide range of functionalities, including retrieving network and account information, executing contract calls, sending transactions, and checking account types. This server is particularly focused on providing blockchain-related APIs for developers and applications interested in interacting with the Flow EVM network.",
    "reasoning": "The primary label \"Cryptocurrency & Blockchain\" was chosen because the server's core functionality revolves around interacting with a blockchain network (Flow EVM), which is central to cryptocurrency operations. The secondary labels \"Browser Automation\" and \"API Integration\" were added because the server provides standardized RPC methods that can be integrated into applications, similar to API endpoints, and the capabilities include automated interaction with blockchain data. The custom label \"Flow EVM Integration\" was added to highlight the server's specific focus on the Flow blockchain ecosystem, which is unique compared to general blockchain RPC servers.",
    "primary_label": "Cryptocurrency & Blockchain",
    "secondary_labels": [
      "API Integration",
      "Browser Automation"
    ],
    "custom_label": "Flow EVM Integration",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1856,
    "server_name": "Flow RPC Server",
    "rank_by_usage": 1857,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@diegofornalha_flow-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@diegofornalha/flow-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "flow_getNetworkInfo",
          "description": "Retrieves information about the current Flow EVM network configuration",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "flow_getCode",
          "description": "Retrieves the code at a given Flow EVM address",
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "pattern": "^0x[a-fA-F0-9]{40}$",
                "description": "The Flow EVM address to get code from"
              },
              "blockParameter": {
                "type": "string",
                "default": "latest",
                "description": "Block parameter (default: \"latest\")"
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "flow_chainId",
          "description": "Retrieves the current chain ID of the Flow EVM network",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "flow_gasPrice",
          "description": "Retrieves the current gas price in Flow EVM",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "flow_getBalance",
          "description": "Retrieves the balance of a given Flow EVM address",
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "pattern": "^0x[a-fA-F0-9]{40}$",
                "description": "The Flow EVM address to check balance"
              },
              "blockParameter": {
                "type": "string",
                "default": "latest",
                "description": "Block parameter (default: \"latest\")"
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "flow_call",
          "description": "Executes a call to a contract function without creating a transaction",
          "input_schema": {
            "type": "object",
            "properties": {
              "transaction": {
                "type": "object",
                "properties": {
                  "from": {
                    "type": "string",
                    "pattern": "^0x[a-fA-F0-9]{40}$",
                    "description": "The address the transaction is sent from"
                  },
                  "to": {
                    "type": "string",
                    "pattern": "^0x[a-fA-F0-9]{40}$",
                    "description": "The address the transaction is directed to"
                  },
                  "gas": {
                    "type": "string",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "description": "Integer of the gas provided for the transaction execution in hex"
                  },
                  "gasPrice": {
                    "type": "string",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "description": "Integer of the gas price used for each paid gas in hex"
                  },
                  "value": {
                    "type": "string",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "description": "Integer of the value sent with this transaction in hex"
                  },
                  "data": {
                    "type": "string",
                    "pattern": "^0x[a-fA-F0-9]*$",
                    "description": "The compiled code of a contract OR the hash of the invoked method signature and encoded parameters"
                  }
                },
                "required": [
                  "to",
                  "data"
                ],
                "additionalProperties": false,
                "description": "The transaction call object"
              },
              "blockParameter": {
                "type": "string",
                "default": "latest",
                "description": "Block parameter (default: \"latest\")"
              }
            },
            "required": [
              "transaction"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "flow_getLogs",
          "description": "Retrieves logs matching the given filter criteria",
          "input_schema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "object",
                "properties": {
                  "fromBlock": {
                    "type": "string",
                    "description": "Block number in hex or \"latest\", \"earliest\" or \"pending\""
                  },
                  "toBlock": {
                    "type": "string",
                    "description": "Block number in hex or \"latest\", \"earliest\" or \"pending\""
                  },
                  "address": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "^0x[a-fA-F0-9]{40}$"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "pattern": "^0x[a-fA-F0-9]{40}$"
                        }
                      }
                    ],
                    "description": "Contract address or a list of addresses from which logs should originate"
                  },
                  "topics": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "type": "string",
                          "pattern": "^0x[a-fA-F0-9]{64}$"
                        },
                        {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": "^0x[a-fA-F0-9]{64}$"
                          }
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "description": "Array of 32 Bytes DATA topics"
                  }
                },
                "additionalProperties": false,
                "description": "The filter options"
              }
            },
            "required": [
              "filter"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "flow_sendRawTransaction",
          "description": "Submits a signed transaction to the Flow EVM network",
          "input_schema": {
            "type": "object",
            "properties": {
              "signedTransactionData": {
                "type": "string",
                "pattern": "^0x[a-fA-F0-9]+$",
                "description": "The signed transaction data"
              }
            },
            "required": [
              "signedTransactionData"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "flow_blockNumber",
          "description": "Gets the latest block number on the Flow EVM network",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "flow_checkCOA",
          "description": "Checks if an address is a Cadence-Owned Account (COA)",
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "pattern": "^0x[a-fA-F0-9]{40}$",
                "description": "The Flow EVM address to check"
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 10,
      "tool_names": [
        "flow_getNetworkInfo",
        "flow_getCode",
        "flow_chainId",
        "flow_gasPrice",
        "flow_getBalance",
        "flow_call",
        "flow_getLogs",
        "flow_sendRawTransaction",
        "flow_blockNumber",
        "flow_checkCOA"
      ]
    },
    "server_info_crawled": {
      "id": 1856,
      "name": "Flow RPC Server",
      "author": "@diegofornalha/flow-mcp",
      "overview": "Transmita dados de blockchain sem problemas. Utilize métodos JSON-RPC padronizados para interagir com EVM onFlow permitindo que seus aplicativos de IA acessem informações de blockchain sem esforço.",
      "repository_url": "https://github.com/diegofornalha/flow-mcp",
      "homepage": "https://smithery.ai/server/@diegofornalha/flow-mcp",
      "remote_or_local": "Remote",
      "license": "https://smithery.ai/server/@diegofornalha/flow-mcp/tools",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@diegofornalha_flow-mcp.json",
      "tools_count": 10,
      "tools": [
        {
          "name": "flow_getNetworkInfo",
          "description": "Retrieves information about the current Flow EVM network configuration",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "flow_getCode",
          "description": "Retrieves the code at a given Flow EVM address",
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "pattern": "^0x[a-fA-F0-9]{40}$",
                "description": "The Flow EVM address to get code from"
              },
              "blockParameter": {
                "type": "string",
                "default": "latest",
                "description": "Block parameter (default: \"latest\")"
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "flow_chainId",
          "description": "Retrieves the current chain ID of the Flow EVM network",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "flow_gasPrice",
          "description": "Retrieves the current gas price in Flow EVM",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "flow_getBalance",
          "description": "Retrieves the balance of a given Flow EVM address",
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "pattern": "^0x[a-fA-F0-9]{40}$",
                "description": "The Flow EVM address to check balance"
              },
              "blockParameter": {
                "type": "string",
                "default": "latest",
                "description": "Block parameter (default: \"latest\")"
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "flow_call",
          "description": "Executes a call to a contract function without creating a transaction",
          "input_schema": {
            "type": "object",
            "properties": {
              "transaction": {
                "type": "object",
                "properties": {
                  "from": {
                    "type": "string",
                    "pattern": "^0x[a-fA-F0-9]{40}$",
                    "description": "The address the transaction is sent from"
                  },
                  "to": {
                    "type": "string",
                    "pattern": "^0x[a-fA-F0-9]{40}$",
                    "description": "The address the transaction is directed to"
                  },
                  "gas": {
                    "type": "string",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "description": "Integer of the gas provided for the transaction execution in hex"
                  },
                  "gasPrice": {
                    "type": "string",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "description": "Integer of the gas price used for each paid gas in hex"
                  },
                  "value": {
                    "type": "string",
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "description": "Integer of the value sent with this transaction in hex"
                  },
                  "data": {
                    "type": "string",
                    "pattern": "^0x[a-fA-F0-9]*$",
                    "description": "The compiled code of a contract OR the hash of the invoked method signature and encoded parameters"
                  }
                },
                "required": [
                  "to",
                  "data"
                ],
                "additionalProperties": false,
                "description": "The transaction call object"
              },
              "blockParameter": {
                "type": "string",
                "default": "latest",
                "description": "Block parameter (default: \"latest\")"
              }
            },
            "required": [
              "transaction"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "flow_getLogs",
          "description": "Retrieves logs matching the given filter criteria",
          "input_schema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "object",
                "properties": {
                  "fromBlock": {
                    "type": "string",
                    "description": "Block number in hex or \"latest\", \"earliest\" or \"pending\""
                  },
                  "toBlock": {
                    "type": "string",
                    "description": "Block number in hex or \"latest\", \"earliest\" or \"pending\""
                  },
                  "address": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "^0x[a-fA-F0-9]{40}$"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "pattern": "^0x[a-fA-F0-9]{40}$"
                        }
                      }
                    ],
                    "description": "Contract address or a list of addresses from which logs should originate"
                  },
                  "topics": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "type": "string",
                          "pattern": "^0x[a-fA-F0-9]{64}$"
                        },
                        {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": "^0x[a-fA-F0-9]{64}$"
                          }
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "description": "Array of 32 Bytes DATA topics"
                  }
                },
                "additionalProperties": false,
                "description": "The filter options"
              }
            },
            "required": [
              "filter"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "flow_sendRawTransaction",
          "description": "Submits a signed transaction to the Flow EVM network",
          "input_schema": {
            "type": "object",
            "properties": {
              "signedTransactionData": {
                "type": "string",
                "pattern": "^0x[a-fA-F0-9]+$",
                "description": "The signed transaction data"
              }
            },
            "required": [
              "signedTransactionData"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "flow_blockNumber",
          "description": "Gets the latest block number on the Flow EVM network",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "flow_checkCOA",
          "description": "Checks if an address is a Cadence-Owned Account (COA)",
          "input_schema": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "pattern": "^0x[a-fA-F0-9]{40}$",
                "description": "The Flow EVM address to check"
              }
            },
            "required": [
              "address"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@diegofornalha/flow-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@diegofornalha/flow-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1857.@diegofornalha_flow-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1647
  }
}