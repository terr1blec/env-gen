{
  "labels": {
    "analysis": "The Coin MCP Server is primarily designed to provide real-time cryptocurrency data and announcements for crypto enthusiasts and traders. It offers tools to fetch current cryptocurrency prices, detailed coin information (including transferability, supported chains, and withdrawal/deposit details), and announcements related to various cryptocurrency events. The server leverages Bitget's API to deliver fast and accurate data, making it valuable for market tracking, trading decisions, and staying updated on crypto-related news.",
    "reasoning": "The primary functionality of fetching real-time cryptocurrency prices and accessing detailed coin information aligns closely with **Cryptocurrency & Blockchain** operations. The announcement tools are relevant to staying updated on market events, which is also a key aspect of crypto trading and investment. Therefore, these labels accurately represent the server's core use cases. No custom label is needed as the predefined categories sufficiently cover the functionality.",
    "primary_label": "Cryptocurrency & Blockchain",
    "secondary_labels": [
      "News & Media",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 357,
    "server_name": "Coin MCP Server",
    "rank_by_usage": 358,
    "usage_count": "81",
    "original_file": "../crawler/smithery/@pwh-pwh_coin-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@pwh-pwh/coin-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "getTokenPrice",
          "description": "get the current price of cryptocurrency",
          "input_schema": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string"
              }
            },
            "required": [
              "token"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "getAnnoucements",
          "description": "Search for cryptocurrency announcements within one month .parameter anType is announcement type\nAnnouncement type\nlatest_news: Latest events\ncoin_listings: New coin listings\ntrading_competitions_promotions: Trading competitions and promotions\nmaintenance_system_updates: maintenance/system upgrades\nsymbol_delisting: Delisting information\nempty string for all announcements",
          "input_schema": {
            "type": "object",
            "properties": {
              "anType": {
                "type": "string",
                "enum": [
                  "latest_news",
                  "coin_listings",
                  "trading_competitions_promotions",
                  "maintenance_system_updates",
                  "symbol_delisting",
                  ""
                ]
              }
            },
            "required": [
              "anType"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "getCoinInfo",
          "description": "Get spot coin information。Parameter：coin - Coin name\nResponse Parameters \n- coin: Token name  \n- transfer: Transferability  \n- chains: Support chain list  \n  - chain: Chain name  \n  - needTag: Need tag  \n  - withdrawable: Withdrawal supported  \n  - rechargeable: Deposit supported  \n  - withdrawFee: Withdrawal transaction fee  \n  - extraWithdrawFee: Extra charge (e.g., 0.1 means 10% on-chain destruction)  \n  - browserUrl: Blockchain explorer address  \n  - contractAddress: Coin contract address  \n  - withdrawStep: Withdrawal count step (if not 0, withdrawal size must be a multiple of this value; if 0, no such limit)  \n  - withdrawMinScale: Decimal places of withdrawal amount  \n  - congestion: Chain network status (normal: normal, congested: congestion)",
          "input_schema": {
            "type": "object",
            "properties": {
              "coin": {
                "type": "string"
              }
            },
            "required": [
              "coin"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 3,
      "tool_names": [
        "getTokenPrice",
        "getAnnoucements",
        "getCoinInfo"
      ]
    },
    "server_info_crawled": {
      "id": 357,
      "name": "Coin MCP Server",
      "author": "@pwh-pwh/coin-mcp-server",
      "overview": "Fetch the latest cryptocurrency prices effortlessly using our server. Simply provide a token symbol, and receive real-time price data from Bitget’s API. It's fast, simple, and designed for crypto enthusiasts and traders alike!",
      "repository_url": "https://github.com/pwh-pwh/coin-mcp-server",
      "homepage": "https://smithery.ai/server/@pwh-pwh/coin-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "81",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@pwh-pwh_coin-mcp-server.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "getTokenPrice",
          "description": "get the current price of cryptocurrency",
          "input_schema": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string"
              }
            },
            "required": [
              "token"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "getAnnoucements",
          "description": "Search for cryptocurrency announcements within one month .parameter anType is announcement type\nAnnouncement type\nlatest_news: Latest events\ncoin_listings: New coin listings\ntrading_competitions_promotions: Trading competitions and promotions\nmaintenance_system_updates: maintenance/system upgrades\nsymbol_delisting: Delisting information\nempty string for all announcements",
          "input_schema": {
            "type": "object",
            "properties": {
              "anType": {
                "type": "string",
                "enum": [
                  "latest_news",
                  "coin_listings",
                  "trading_competitions_promotions",
                  "maintenance_system_updates",
                  "symbol_delisting",
                  ""
                ]
              }
            },
            "required": [
              "anType"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "getCoinInfo",
          "description": "Get spot coin information。Parameter：coin - Coin name\nResponse Parameters \n- coin: Token name  \n- transfer: Transferability  \n- chains: Support chain list  \n  - chain: Chain name  \n  - needTag: Need tag  \n  - withdrawable: Withdrawal supported  \n  - rechargeable: Deposit supported  \n  - withdrawFee: Withdrawal transaction fee  \n  - extraWithdrawFee: Extra charge (e.g., 0.1 means 10% on-chain destruction)  \n  - browserUrl: Blockchain explorer address  \n  - contractAddress: Coin contract address  \n  - withdrawStep: Withdrawal count step (if not 0, withdrawal size must be a multiple of this value; if 0, no such limit)  \n  - withdrawMinScale: Decimal places of withdrawal amount  \n  - congestion: Chain network status (normal: normal, congested: congestion)",
          "input_schema": {
            "type": "object",
            "properties": {
              "coin": {
                "type": "string"
              }
            },
            "required": [
              "coin"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@pwh-pwh/coin-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@pwh-pwh/coin-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0358.@pwh-pwh_coin-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 354
  }
}