{
  "labels": {
    "analysis": "The MCP Server described as \"Lark Tools\" focuses on integrating Feishu (a popular Chinese collaboration platform) operations with AI agents. Its core functionality includes document reading, message sending, contract approval, and data processing within the Feishu ecosystem. The available tool \"get_feishu_doc_raw\" suggests that the server can retrieve raw document data from Feishu, enabling efficient task management and information retrieval. The server acts as a bridge between AI agents and Feishu, enhancing automation and interaction within the platform.",
    "reasoning": "The primary label \"Communication Tools\" is chosen because the server's main functionality revolves around integrating and automating communication processes within Feishu (e.g., message sending, document reading). \"Operating System\" is a secondary label because it handles operations that resemble system-level tasks like file/document processing. A custom label \"Feishu Integration\" is added to specifically highlight its unique role as an MCP Server tailored for Feishu operations.",
    "primary_label": "Communication Tools",
    "secondary_labels": [
      "Operating System"
    ],
    "custom_label": "Feishu Integration",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1509,
    "server_name": "Lark Tools",
    "rank_by_usage": 1510,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@Li-vien_lark-tools-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Li-vien/lark-tools-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1509,
      "name": "Lark Tools",
      "author": "@Li-vien/lark-tools-mcp",
      "overview": "Integrate Feishu operations with AI agents to enhance document reading, message sending, contract approval, and data processing. Empower your LLM to interact seamlessly with Feishu for efficient task management and information retrieval.",
      "repository_url": "https://github.com/Li-vien/lark-tools-mcp",
      "homepage": "https://smithery.ai/server/@Li-vien/lark-tools-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Li-vien_lark-tools-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_feishu_doc_raw",
          "description": "Deploy Server Claim Server @Li-vien/lark-tools-mcp Try in Playground get_feishu_doc_raw",
          "parameters": [
            {
              "name": "get_feishu_doc_raw",
              "required": false,
              "type": "string"
            },
            {
              "name": "docId",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Li-vien/lark-tools-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "feishuAppSecret",
          "required": true,
          "description": "Feishu App Secret"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Li-vien/lark-tools-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1510.@Li-vien_lark-tools-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1391
  }
}