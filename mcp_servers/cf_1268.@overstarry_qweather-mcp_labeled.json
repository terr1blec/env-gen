{
  "labels": {
    "analysis": "The MCP Server primarily focuses on providing comprehensive weather and air quality data through various APIs. It offers real-time and forecasted information including weather conditions, precipitation, hourly/daily forecasts, weather warnings, life indices (like sport suitability, car wash recommendations, etc.), and air quality data (current, hourly, and daily). These tools make it particularly useful for applications that need weather-related data for planning, monitoring, or decision-making purposes. The server acts as a gateway to accessing detailed meteorological and environmental information from the QWeather API.",
    "reasoning": "The primary label \"Weather\" is chosen because the core functionality of the server revolves around providing weather-related data and forecasts, which is the most dominant theme across all available tools. The secondary label \"Data Analysis & Processing\" is included because the tools provide detailed, structured data that can be used for further analysis (like forecasting, air quality monitoring, etc.). The \"Environmental Monitoring\" custom label is added to highlight the server's focus on real-world environmental data beyond just weather (e.g., air quality, pollution levels).",
    "primary_label": "Weather",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": "Environmental Monitoring",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1267,
    "server_name": "QWeather API MCP Server",
    "rank_by_usage": 1268,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@overstarry_qweather-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@overstarry/qweather-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1267,
      "name": "QWeather API MCP Server",
      "author": "@overstarry/qweather-mcp",
      "overview": "Access real-time weather information effortlessly. Query city details and current weather conditions using a simple command-line interface. Enhance your applications with reliable weather data from QWeather.",
      "repository_url": "https://github.com/overstarry/qweather-mcp",
      "homepage": "https://smithery.ai/server/@overstarry/qweather-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@overstarry_qweather-mcp.json",
      "tools_count": 9,
      "tools": [
        {
          "name": "get-weather-now",
          "description": "Deploy Server QWeather API MCP Server @overstarry/qweather-mcp Try in Playground get-weather-now",
          "parameters": []
        },
        {
          "name": "get-weather-forecast",
          "description": "Weather forecast API provides detailed weather predictions for global cities, supporting forecasts from 3 to 30 days. Available data includes: sunrise/sunset times, moonrise/moonset times, temperature range, weather conditions, wind direction and speed, relative humidity, precipitation, atmospheric pressure, cloud cover, and UV index. The forecast is updated daily to ensure accuracy.",
          "parameters": []
        },
        {
          "name": "get-minutely-precipitation",
          "description": "Minute-level precipitation forecast API provides precise precipitation predictions for the next 2 hours in global cities. Available data includes precipitation type (rain/snow) and precipitation amount for each minute. This high-precision forecast is particularly useful for outdoor activity planning and real-time weather monitoring.",
          "parameters": [
            {
              "name": "cityName",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-hourly-forecast",
          "description": "Hourly weather forecast API provides detailed weather information for global cities for the next 24-168 hours. Available data includes: temperature, weather conditions, wind force, wind speed, wind direction, relative humidity, atmospheric pressure, precipitation probability, dew point temperature, and cloud cover. The forecast data is updated hourly to ensure accuracy.",
          "parameters": []
        },
        {
          "name": "get-weather-warning",
          "description": "Weather Warning API provides real-time weather warning data issued by official authorities in China and multiple countries/regions worldwide. The data includes warning issuer, publication time, warning title, detailed warning information, warning level, warning type, and other relevant information.",
          "parameters": []
        },
        {
          "name": "get-weather-indices",
          "description": "Weather indices forecast API provides various life indices for cities worldwide. Supports both 1-day and 3-day forecasts. Available indices types: - Type 0: All indices types - Type 1: Sport (Indicates suitability for outdoor sports activities) - Type 2: Car Wash (Suggests whether it's suitable for washing cars) - Type 3: Dressing (Provides clothing recommendations based on weather) - Type 4: Fishing (Shows how favorable conditions are for fishing) - Type 5: UV (Ultraviolet radiation intensity level) - Type 6: Travel (Indicates suitability for traveling and sightseeing) - Type 7: Allergy (Risk level for allergies and pollen) - Type 8: Cold Risk (Risk level for catching a cold) - Type 9: Comfort (Overall comfort level of the weather) - Type 10: Wind (Wind conditions and their effects) - Type 11: Sunglasses (Need for wearing sunglasses) - Type 12: Makeup (How weather affects makeup wear) - Type 13: Sunscreen (Need for sun protection) - Type 14: Traffic (Weather impact on traffic conditions) - Type 15: Sports Spectating (Suitability for watching outdoor sports) - Type 16: Air Quality (Air pollution diffusion conditions) Note: Not all indices are available for every city. International cities mainly support types 1, 2, 4, and 5.",
          "parameters": []
        },
        {
          "name": "get-air-quality",
          "description": "Real-time Air Quality API provides air quality data for specific locations with 1x1 kilometer precision. Includes AQI based on local standards of different countries/regions, AQI levels, colors, primary pollutants, QWeather universal AQI, pollutant concentrations, sub-indices, health advice, and related monitoring station information.",
          "parameters": []
        },
        {
          "name": "get-air-quality-hourly",
          "description": "Hourly Air Quality Forecast API provides air quality data for the next 24 hours, including AQI, pollutant concentrations, sub-indices, and health advice. The data includes various air quality standards (such as QAQI, GB-DEFRA, etc.) and specific concentrations of pollutants like PM2.5, PM10, NO2, O3, SO2.",
          "parameters": []
        },
        {
          "name": "get-air-quality-daily",
          "description": "Daily Air Quality Forecast API provides air quality predictions for the next 3 days, including AQI values, pollutant concentrations, and health recommendations. The data includes various air quality standards and specific concentrations of pollutants like PM2.5, PM10, NO2, O3, SO2.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@overstarry/qweather-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "qweatherApiKey",
          "required": true,
          "description": "Your QWeather API key."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@overstarry/qweather-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1268.@overstarry_qweather-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1211
  }
}