{
  "labels": {
    "analysis": "The MCP Financial Data Server is specialized in retrieving financial data, specifically from the Alpha Vantage API. Its core functionality revolves around fetching stock quotes and historical financial data, suggesting it is primarily used for financial analysis, market research, or investment tracking. The tools provided (\"getStockQuote\" and \"getHistoricalData\") indicate a focus on retrieving real-time and historical financial information.",
    "reasoning": "The server's primary functionality aligns with the \"Financial Services\" category, as it deals with financial data retrieval. Additionally, its data-centric nature could also fall under \"Data Analysis & Processing,\" though financial services is a more specific fit. No custom labels are necessary as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Financial Services",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1988,
    "server_name": "Financial Data Server",
    "rank_by_usage": 1989,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/findata-mcp-server_financial-data-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/findata-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1988,
      "name": "Financial Data Server",
      "author": "findata-mcp-server",
      "overview": "MCP server for fetching financial data from Alpha Vantage.",
      "repository_url": "https://github.com/xBlueCode/findata-mcp-server",
      "homepage": "https://smithery.ai/server/findata-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/findata-mcp-server_financial-data-server.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "getStockQuote",
          "description": "Deploy Server Financial Data Server Claim Server findata-mcp-server Try in Playground getStockQuote",
          "parameters": [
            {
              "name": "getStockQuote",
              "required": false,
              "type": "string"
            },
            {
              "name": "symbol",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getHistoricalData",
          "description": "Get historical data for a stock.",
          "parameters": [
            {
              "name": "symbol",
              "required": true,
              "type": "string"
            },
            {
              "name": "interval",
              "required": false,
              "type": "string"
            },
            {
              "name": "outputsize",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/findata-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "alphaVantageApiKey",
          "required": true,
          "description": "Your Alpha Vantage API key to access financial data."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/findata-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1989.findata-mcp-server_financial-data-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1735
  }
}