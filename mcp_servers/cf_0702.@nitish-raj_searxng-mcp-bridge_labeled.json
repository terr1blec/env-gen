{
  "labels": {
    "analysis": "The MCP Server acts as a bridge between compatible clients and a SearXNG instance, enabling users to perform web searches through the configured SearXNG service. Its core functionality is centered around facilitating search operations by connecting to an external search engine instance, which primarily aligns with web search and information retrieval purposes.",
    "reasoning": "The primary functionality involves connecting to and utilizing SearXNG, a privacy-respecting metasearch engine, making \"Web Search & Research\" the most fitting primary label. The server inherently supports research and information gathering via its search capabilities. No secondary labels are needed as the functionality is laser-focused on search bridging.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 701,
    "server_name": "SearXNG Bridge Server",
    "rank_by_usage": 702,
    "usage_count": "11",
    "original_file": "../crawler/smithery/@nitish-raj_searxng-mcp-bridge.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@nitish-raj/searxng-mcp-bridge/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 701,
      "name": "SearXNG Bridge Server",
      "author": "@nitish-raj/searxng-mcp-bridge",
      "overview": "An MCP server that acts as a bridge to a SearxNG instance. Allows compatible clients to perform searches using a configured SearxNG instance.\n\nRequires the searxngInstanceUrl configuration to be set.",
      "repository_url": "https://github.com/nitish-raj/searxng-mcp-bridge",
      "homepage": "https://smithery.ai/server/@nitish-raj/searxng-mcp-bridge",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "11",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@nitish-raj_searxng-mcp-bridge.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "search",
          "description": "Deploy Server SearXNG Bridge Server @nitish-raj/searxng-mcp-bridge Try in Playground",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@nitish-raj/searxng-mcp-bridge/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@nitish-raj/searxng-mcp-bridge/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0702.@nitish-raj_searxng-mcp-bridge_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 685
  }
}