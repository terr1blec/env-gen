{
  "labels": {
    "analysis": "The MCP Server is designed for financial data analysis and visualization, primarily leveraging the DART API to extract and process financial disclosures, detailed financial statements, and business information for listed companies in Korea. Its core functionality revolves around financial analysis tools that enable users to segment revenues, analyze key financial metrics, and perform valuation assessments. The tools support various financial document types (e.g., income statements, cash flow statements) and provide business-related operational details, making it a specialized platform for investors, analysts, or corporate researchers.",
    "reasoning": "The primary label \"Financial Services\" is chosen because the server's primary purpose is to provide financial data analysis and business information, which directly aligns with financial services. The secondary label \"Data Analysis & Processing\" is added due to the server's capability to analyze and transform financial data into actionable insights. The predefined categories sufficiently cover the server's functionality, so no custom label is needed.",
    "primary_label": "Financial Services",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1338,
    "server_name": "그저디버깅용",
    "rank_by_usage": 1339,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@2geonhyup_dart-mcp-test.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@2geonhyup/dart-mcp-test/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1338,
      "name": "그저디버깅용",
      "author": "@2geonhyup/dart-mcp-test",
      "overview": "Enable detailed financial analysis and visualization of listed companies using the DART API. Analyze key financial metrics, segment revenues, and perform valuation assessments with ease. Enhance your financial insights by integrating real-time data queries into your workflow.",
      "repository_url": "https://github.com/2geonhyup/dart-mcp-test",
      "homepage": "https://smithery.ai/server/@2geonhyup/dart-mcp-test",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@2geonhyup_dart-mcp-test.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "search_disclosure",
          "description": "Deploy Server @2geonhyup/dart-mcp-test Try in Playground search_disclosure",
          "parameters": []
        },
        {
          "name": "search_detailed_financial_data",
          "description": "회사의 세부적인 재무 정보를 제공하는 도구. XBRL 파일을 파싱하여 상세한 재무 데이터를 추출합니다. Args: company_name: 회사명 (예: 삼성전자, 네이버 등) start_date: 시작일 (YYYYMMDD 형식, 예: 20230101) end_date: 종료일 (YYYYMMDD 형식, 예: 20231231) ctx: MCP Context 객체 statement_type: 재무제표 유형 (\"재무상태표\", \"손익계산서\", \"현금흐름표\" 중 하나 또는 None) None인 경우 모든 유형의 재무제표 정보를 반환합니다. Returns: 선택한 재무제표 유형(들)의 세부 항목 정보가 포함된 텍스트",
          "parameters": []
        },
        {
          "name": "search_business_information",
          "description": "회사의 사업 관련 현황 정보를 제공하는 도구 Args: company_name: 회사명 (예: 삼성전자, 네이버 등) start_date: 시작일 (YYYYMMDD 형식, 예: 20230101) end_date: 종료일 (YYYYMMDD 형식, 예: 20231231) information_type: 조회할 정보 유형 '사업의 개요' - 회사의 전반적인 사업 내용 '주요 제품 및 서비스' - 회사의 주요 제품과 서비스 정보 '원재료 및 생산설비' - 원재료 조달 및 생산 설비 현황 '매출 및 수주상황' - 매출과 수주 현황 정보 '위험관리 및 파생거래' - 리스크 관리 방안 및 파생상품 거래 정보 '주요계약 및 연구개발활동' - 주요 계약 현황 및 R&D 활동 '기타 참고사항' - 기타 사업 관련 참고 정보 ctx: MCP Context 객체 Returns: 요청한 정보 유형에 대한 해당 회사의 사업 정보 텍스트",
          "parameters": []
        },
        {
          "name": "get_current_date",
          "description": "현재 날짜를 YYYYMMDD 형식으로 반환하는 도구 Args: ctx: MCP Context 객체 (선택 사항) Returns: YYYYMMDD 형식의 현재 날짜 문자열",
          "parameters": []
        },
        {
          "name": "search_json_financial_data",
          "description": "회사의 재무 정보를 JSON API를 통해 제공하는 실패시 보완하는 보조 도구. search_disclosure, search_detailed_financial_data이 2023년 9월 이전 자료 분석에 실패했을 때 대안으로 활용. Args: company_name: 회사명 (예: 삼성전자, 네이버 등) bsns_year: 사업연도 (4자리, 예: \"2023\") ctx: MCP Context 객체 reprt_code: 보고서 코드 (\"11011\": 사업보고서, \"11012\": 반기보고서, \"11013\": 1분기보고서, \"11014\": 3분기보고서) fs_div: 개별/연결구분 (\"OFS\": 재무제표, \"CFS\": 연결재무제표) statement_type: 재무제표 유형 (\"BS\": 재무상태표, \"IS\": 손익계산서, \"CIS\": 포괄손익계산서, \"CF\": 현금흐름표, \"SCE\": 자본변동표) None인 경우 모든 유형의 재무제표 정보를 반환합니다. Returns: 선택한 재무제표 유형(들)의 세부 항목 정보가 포함된 텍스트 (당기 데이터만 표시)",
          "parameters": []
        },
        {
          "name": "test_connection_to_dart",
          "description": "DART 서버와의 연결 상태를 테스트하는 도구 Args: ctx: MCP Context 객체 Returns: 연결 테스트 과정 및 결과에 대한 상세 메시지",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@2geonhyup/dart-mcp-test/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "dartApiKey",
          "required": true,
          "description": "DART API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@2geonhyup/dart-mcp-test/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1339.@2geonhyup_dart-mcp-test_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1264
  }
}