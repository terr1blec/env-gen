{
  "labels": {
    "analysis": "The Groww MCP Server is designed to integrate the Groww financial platform with language models to enhance financial decision-making and automation. It provides a comprehensive suite of tools for market data analysis, order management, and technical indicators, specifically tailored for trading and investment activities. The server enables users to execute financial operations, access market data, perform technical analysis, and manage their investment portfolios through an API-driven interface.",
    "reasoning": "The primary functionality of the server revolves around financial operations and trading, making \"Financial Services\" the most appropriate primary label. Secondary labels include \"Data Analysis & Processing\" due to the extensive analysis tools provided and \"API Integration\" as the server leverages the Groww API for core operations. The custom label \"Stock/Investment Analysis\" was chosen to highlight its specialized financial analysis and trading capabilities beyond generic financial services.",
    "primary_label": "Financial Services",
    "secondary_labels": [
      "Data Analysis & Processing",
      "API Integration"
    ],
    "custom_label": "Stock/Investment Analysis",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 287,
    "server_name": "Groww MCP Server",
    "rank_by_usage": 288,
    "usage_count": "123",
    "original_file": "../crawler/smithery/@arkapravasinha_groww-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@arkapravasinha/groww-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 287,
      "name": "Groww MCP Server",
      "author": "@arkapravasinha/groww-mcp-server",
      "overview": "Enable seamless integration of Groww platform data and tools with language models to enhance financial decision-making and automation. Provide access to Groww-specific resources, execute financial operations, and utilize predefined prompts for investment workflows. Simplify interaction with Groww services through a standardized protocol for LLM applications.",
      "repository_url": "https://github.com/arkapravasinha/groww-mcp-server",
      "homepage": "https://smithery.ai/server/@arkapravasinha/groww-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "123",
      "success_rate": "99.24%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@arkapravasinha_groww-mcp-server.json",
      "tools_count": 32,
      "tools": [
        {
          "name": "download_instruments_csv",
          "description": "Deploy Server Groww MCP Server @arkapravasinha/groww-mcp-server Try in Playground download_instruments_csv",
          "parameters": [
            {
              "name": "download_instruments_csv",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_instruments",
          "description": "Search for instruments by name, trading symbol, groww symbol, or other criteria from the loaded instruments data",
          "parameters": [
            {
              "name": "search_instruments",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_instrument_details",
          "description": "Get detailed information about a specific instrument by trading symbol",
          "parameters": [
            {
              "name": "get_instrument_details",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "place_order",
          "description": "Place a new order in the market (stocks, F&O, etc.) - Official Groww API: POST /v1/order/create",
          "parameters": [
            {
              "name": "place_order",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "modify_order",
          "description": "Modify an existing pending or open order",
          "parameters": [
            {
              "name": "segment",
              "required": true,
              "type": "string"
            },
            {
              "name": "quantity",
              "required": false,
              "type": "string"
            },
            {
              "name": "order_type",
              "required": false,
              "type": "string"
            },
            {
              "name": "trigger_price",
              "required": false,
              "type": "string"
            },
            {
              "name": "groww_order_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "cancel_order",
          "description": "Cancel an existing pending or open order",
          "parameters": [
            {
              "name": "segment",
              "required": true,
              "type": "string"
            },
            {
              "name": "groww_order_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_order_status",
          "description": "Get the status of an order by Groww order ID",
          "parameters": [
            {
              "name": "segment",
              "required": true,
              "type": "string"
            },
            {
              "name": "groww_order_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_order_status_by_reference",
          "description": "Get the status of an order by user reference ID",
          "parameters": [
            {
              "name": "get_order_status_by_reference",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_order_list",
          "description": "Get list of all orders for the day",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "segment",
              "required": false,
              "type": "string"
            },
            {
              "name": "page_size",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_order_details",
          "description": "Get detailed information about a specific order",
          "parameters": [
            {
              "name": "segment",
              "required": true,
              "type": "string"
            },
            {
              "name": "groww_order_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_order_trades",
          "description": "Get all trades/executions for a specific order",
          "parameters": [
            {
              "name": "get_order_trades",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_holdings",
          "description": "Get current stock holdings in DEMAT account",
          "parameters": [
            {
              "name": "get_holdings",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_positions",
          "description": "Get all trading positions for the user",
          "parameters": [
            {
              "name": "get_positions",
              "required": false,
              "type": "string"
            },
            {
              "name": "segment",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_position_by_symbol",
          "description": "Get position for a specific trading symbol",
          "parameters": [
            {
              "name": "segment",
              "required": false,
              "type": "string"
            },
            {
              "name": "trading_symbol",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_user_margin",
          "description": "Get available margin details for the user",
          "parameters": [
            {
              "name": "get_user_margin",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_margin_requirement",
          "description": "Calculate required margin for orders (single or basket)",
          "parameters": [
            {
              "name": "calculate_margin_requirement",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_live_quote",
          "description": "Get complete live market data for an instrument",
          "parameters": [
            {
              "name": "get_live_quote",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_ltp",
          "description": "Get Last Traded Price for multiple instruments (up to 50)",
          "parameters": [
            {
              "name": "get_ltp",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_ohlc",
          "description": "Get OHLC data for multiple instruments (up to 50)",
          "parameters": [
            {
              "name": "segment",
              "required": true,
              "type": "string"
            },
            {
              "name": "exchange_symbols",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_current_date",
          "description": "Get current date and time information for reference in historical data requests",
          "parameters": [
            {
              "name": "get_current_date",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_historical_data",
          "description": "Get historical candle data for an instrument. CONSTRAINTS: 1min(3days,3mo), 5min(15days,3mo), 10min(30days,3mo), 1hr(150days,3mo), 4hr(365days,3mo), daily(1080days,unlimited), weekly(unlimited,unlimited)",
          "parameters": [
            {
              "name": "get_historical_data",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_moving_averages",
          "description": "Calculate Simple Moving Average (SMA) and Exponential Moving Average (EMA) for historical data",
          "parameters": [
            {
              "name": "calculate_moving_averages",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_rsi",
          "description": "Calculate Relative Strength Index (RSI) for technical analysis",
          "parameters": [
            {
              "name": "calculate_rsi",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_bollinger_bands",
          "description": "Calculate Bollinger Bands for volatility analysis",
          "parameters": [
            {
              "name": "calculate_bollinger_bands",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_support_resistance",
          "description": "Identify support and resistance levels from historical price data",
          "parameters": [
            {
              "name": "calculate_support_resistance",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_volatility_metrics",
          "description": "Calculate various volatility metrics for risk assessment",
          "parameters": [
            {
              "name": "calculate_volatility_metrics",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_macd",
          "description": "Calculate MACD (Moving Average Convergence Divergence) for trend and momentum analysis",
          "parameters": [
            {
              "name": "calculate_macd",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_stochastic",
          "description": "Calculate Stochastic Oscillator for momentum analysis",
          "parameters": [
            {
              "name": "calculate_stochastic",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_williams_r",
          "description": "Calculate Williams %R for momentum analysis",
          "parameters": [
            {
              "name": "calculate_williams_r",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_adx",
          "description": "Calculate ADX (Average Directional Index) for trend strength analysis",
          "parameters": [
            {
              "name": "calculate_adx",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_fibonacci_levels",
          "description": "Calculate Fibonacci retracement and extension levels for support/resistance analysis",
          "parameters": [
            {
              "name": "calculate_fibonacci_levels",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "analyze_candlestick_patterns",
          "description": "Identify common candlestick patterns for reversal and continuation signals",
          "parameters": [
            {
              "name": "analyze_candlestick_patterns",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@arkapravasinha/groww-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "apiKey",
          "required": true,
          "description": "API key for the Groww API"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@arkapravasinha/groww-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0288.@arkapravasinha_groww-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 284
  }
}