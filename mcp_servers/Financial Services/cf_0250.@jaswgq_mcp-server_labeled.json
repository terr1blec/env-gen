{
  "labels": {
    "analysis": "The MCP Financial Datasets Server provides comprehensive financial data including income statements, balance sheets, cash flow statements, stock prices, and market news for both stocks and cryptocurrencies. It offers both real-time and historical financial information, catering to financial analysis, investment decision-making, and market research. The tools support detailed financial statement extraction, price data retrieval, news aggregation, and SEC filing access, making it a powerful resource for quantitative analysis and investment research.",
    "reasoning": "The primary label \"Financial Services\" is chosen because the server's core functionality revolves around providing financial data and market information, which is a fundamental aspect of financial services. \"Cryptocurrency & Blockchain\" is selected as a secondary label due to the server's support for crypto price data and tickers. \"Data Analysis & Processing\" is also relevant as many tools enable data extraction and analysis for financial research. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Financial Services",
    "secondary_labels": [
      "Cryptocurrency & Blockchain",
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 249,
    "server_name": "Financial Datasets Server",
    "rank_by_usage": 250,
    "usage_count": "157",
    "original_file": "../crawler/smithery/@jaswgq_mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@jaswgq/mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 249,
      "name": "Financial Datasets Server",
      "author": "@jaswgq/mcp-server",
      "overview": "Provide real-time and historical financial data including income statements, balance sheets, cash flow statements, stock prices, and market news for companies and cryptocurrencies. Enable AI assistants to access comprehensive stock market and crypto information seamlessly. Enhance financial analysis and decision-making with direct MCP integration.",
      "repository_url": "https://github.com/jaswgq/mcp-server",
      "homepage": "https://smithery.ai/server/@jaswgq/mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "157",
      "success_rate": "99.44%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@jaswgq_mcp-server.json",
      "tools_count": 11,
      "tools": [
        {
          "name": "get_income_statements",
          "description": "Deploy Server Financial Datasets Server @jaswgq/mcp-server Try in Playground get_income_statements",
          "parameters": []
        },
        {
          "name": "get_balance_sheets",
          "description": "Get balance sheets for a company. Args: ticker: Ticker symbol of the company (e.g. AAPL, GOOGL) period: Period of the balance sheet (e.g. annual, quarterly, ttm) limit: Number of balance sheets to return (default: 4)",
          "parameters": []
        },
        {
          "name": "get_cash_flow_statements",
          "description": "Get cash flow statements for a company. Args: ticker: Ticker symbol of the company (e.g. AAPL, GOOGL) period: Period of the cash flow statement (e.g. annual, quarterly, ttm) limit: Number of cash flow statements to return (default: 4)",
          "parameters": []
        },
        {
          "name": "get_current_stock_price",
          "description": "Get the current / latest price of a company. Args: ticker: Ticker symbol of the company (e.g. AAPL, GOOGL)",
          "parameters": []
        },
        {
          "name": "get_historical_stock_prices",
          "description": "Gets historical stock prices for a company. Args: ticker: Ticker symbol of the company (e.g. AAPL, GOOGL) start_date: Start date of the price data (e.g. 2020-01-01) end_date: End date of the price data (e.g. 2020-12-31) interval: Interval of the price data (e.g. minute, hour, day, week, month) interval_multiplier: Multiplier of the interval (e.g. 1, 2, 3)",
          "parameters": []
        },
        {
          "name": "get_company_news",
          "description": "Get news for a company. Args: ticker: Ticker symbol of the company (e.g. AAPL, GOOGL)",
          "parameters": [
            {
              "name": "ticker",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_available_crypto_tickers",
          "description": "Gets all available crypto tickers.",
          "parameters": []
        },
        {
          "name": "get_crypto_prices",
          "description": "Gets historical prices for a crypto currency.",
          "parameters": []
        },
        {
          "name": "get_historical_crypto_prices",
          "description": "Gets historical prices for a crypto currency. Args: ticker: Ticker symbol of the crypto currency (e.g. BTC-USD). The list of available crypto tickers can be retrieved via the get_available_crypto_tickers tool. start_date: Start date of the price data (e.g. 2020-01-01) end_date: End date of the price data (e.g. 2020-12-31) interval: Interval of the price data (e.g. minute, hour, day, week, month) interval_multiplier: Multiplier of the interval (e.g. 1, 2, 3)",
          "parameters": []
        },
        {
          "name": "get_current_crypto_price",
          "description": "Get the current / latest price of a crypto currency. Args: ticker: Ticker symbol of the crypto currency (e.g. BTC-USD). The list of available crypto tickers can be retrieved via the get_available_crypto_tickers tool.",
          "parameters": []
        },
        {
          "name": "get_sec_filings",
          "description": "Get all SEC filings for a company. Args: ticker: Ticker symbol of the company (e.g. AAPL, GOOGL) limit: Number of SEC filings to return (default: 10) filing_type: Type of SEC filing (e.g. 10-K, 10-Q, 8-K)",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@jaswgq/mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "apiKey",
          "required": true,
          "description": "Financial Datasets API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@jaswgq/mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0250.@jaswgq_mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 246
  }
}