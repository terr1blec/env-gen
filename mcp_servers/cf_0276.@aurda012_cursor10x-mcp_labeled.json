{
  "labels": {
    "analysis": "The MCP Server \"Cursor10x Memory System\" is designed to enhance development workflows by providing AI-powered contextual memory management. It specializes in storing, retrieving, and managing various types of project-related information (messages, files, decisions, milestones, etc.) to maintain a comprehensive understanding of development contexts over time. The tools focus on memory retention, contextual recall, and workflow automation for developers.",
    "reasoning": "The primary label \"Memory Management\" was chosen because the server's core functionality revolves around storing, retrieving, and organizing memory-related data for development projects. The secondary label \"Development Tools\" is appropriate as it supports developer workflows and contextual awareness. No custom label is needed as the predefined labels sufficiently cover the server's functionality.",
    "primary_label": "Memory Management",
    "secondary_labels": [
      "Development Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 275,
    "server_name": "Cursor10x Memory System",
    "rank_by_usage": 276,
    "usage_count": "135",
    "original_file": "../crawler/smithery/@aurda012_cursor10x-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@aurda012/cursor10x-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 275,
      "name": "Cursor10x Memory System",
      "author": "@aurda012/cursor10x-mcp",
      "overview": "Transform your development process with AI-powered autonomous systems. Retain and recall project context seamlessly, enabling more productive and contextually aware assistance throughout your development workflows.",
      "repository_url": "https://github.com/aurda012/cursor10x-mcp",
      "homepage": "https://smithery.ai/server/@aurda012/cursor10x-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "135",
      "success_rate": "99.24%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@aurda012_cursor10x-mcp.json",
      "tools_count": 16,
      "tools": [
        {
          "name": "generateBanner",
          "description": "Deploy Server Cursor10x Memory System Claim Server @aurda012/cursor10x-mcp Try in Playground generateBanner",
          "parameters": [
            {
              "name": "generateBanner",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "checkHealth",
          "description": "Checks the health of the memory system and its database",
          "parameters": [
            {
              "name": "checkHealth",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "initConversation",
          "description": "Initializes a conversation by storing the user message, generating a banner, and retrieving context in one operation",
          "parameters": [
            {
              "name": "content",
              "required": true,
              "type": "string"
            },
            {
              "name": "metadata",
              "required": false,
              "type": "string"
            },
            {
              "name": "importance",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "endConversation",
          "description": "Ends a conversation by storing the assistant message, recording a milestone, and logging an episode in one operation",
          "parameters": [
            {
              "name": "endConversation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "storeUserMessage",
          "description": "Stores a user message in the short-term memory",
          "parameters": [
            {
              "name": "content",
              "required": true,
              "type": "string"
            },
            {
              "name": "metadata",
              "required": false,
              "type": "string"
            },
            {
              "name": "importance",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "storeAssistantMessage",
          "description": "Stores an assistant message in the short-term memory",
          "parameters": [
            {
              "name": "storeAssistantMessage",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "trackActiveFile",
          "description": "Tracks an active file being accessed by the user",
          "parameters": [
            {
              "name": "action",
              "required": true,
              "type": "string"
            },
            {
              "name": "filename",
              "required": true,
              "type": "string"
            },
            {
              "name": "metadata",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getRecentMessages",
          "description": "Retrieves recent messages from the short-term memory",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "importance",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getActiveFiles",
          "description": "Retrieves active files from the short-term memory",
          "parameters": [
            {
              "name": "getActiveFiles",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "storeMilestone",
          "description": "Stores a project milestone in the long-term memory",
          "parameters": [
            {
              "name": "storeMilestone",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "storeDecision",
          "description": "Stores a project decision in the long-term memory",
          "parameters": [
            {
              "name": "storeDecision",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "storeRequirement",
          "description": "Stores a project requirement in the long-term memory",
          "parameters": [
            {
              "name": "storeRequirement",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "recordEpisode",
          "description": "Records an episode (action) in the episodic memory",
          "parameters": [
            {
              "name": "recordEpisode",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getRecentEpisodes",
          "description": "Retrieves recent episodes from the episodic memory",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "context",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getComprehensiveContext",
          "description": "Retrieves comprehensive context from all memory systems",
          "parameters": [
            {
              "name": "getComprehensiveContext",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getMemoryStats",
          "description": "Retrieves statistics about the memory system",
          "parameters": [
            {
              "name": "getMemoryStats",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@aurda012/cursor10x-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "tursoAuthToken",
          "required": true,
          "description": "Authentication token for Turso access"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@aurda012/cursor10x-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0276.@aurda012_cursor10x-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 272
  }
}