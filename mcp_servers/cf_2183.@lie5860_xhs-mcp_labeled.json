{
  "labels": {
    "analysis": "The small red book (Xiaohongshu) MCP server focuses on enabling direct interaction and data retrieval from the Xiaohongshu platform without complex browser automation. It provides tools for searching notes, retrieving content and comments, and posting comments using lightweight HTTP requests with reverse-engineered authentication. The primary functionality revolves around accessing and managing user-generated content on Xiaohongshu efficiently.",
    "reasoning": "The primary label \"Social Media\" was chosen because the server's tools are specifically designed for interacting with content on Xiaohongshu, which is a social media platform. The secondary label \"Web Search & Research\" is added due to the server's ability to search and retrieve notes based on keywords. The \"API Integration\" label is included because the MCP server allows direct HTTP interactions with Xiaohongshu's underlying API. The custom label \"Xiaohongshu Data Interaction\" is used to specifically highlight the unique functionality related to this social platform.",
    "primary_label": "Social Media",
    "secondary_labels": [
      "Web Search & Research",
      "API Integration"
    ],
    "custom_label": "Xiaohongshu Data Interaction",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2182,
    "server_name": "小红书MCP服务",
    "rank_by_usage": 2183,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@lie5860_xhs-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@lie5860/xhs-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2182,
      "name": "小红书MCP服务",
      "author": "@lie5860/xhs-mcp",
      "overview": "Enable searching, retrieving, and interacting with 小红书 (Xiaohongshu) notes and comments through a lightweight MCP server without heavy browser automation. Seamlessly fetch note content, comments, and post comments using direct HTTP requests with reverse-engineered authentication. Simplify integration with 小红书's platform for enhanced data access and interaction.",
      "repository_url": "https://github.com/lie5860/xhs-mcp",
      "homepage": "https://smithery.ai/server/@lie5860/xhs-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@lie5860_xhs-mcp.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "check_cookie",
          "description": "Deploy Server @lie5860/xhs-mcp Try in Playground check_cookie",
          "parameters": []
        },
        {
          "name": "search_notes",
          "description": "根据关键词搜索笔记\n\n        Args:\n            keywords: 搜索关键词",
          "parameters": [
            {
              "name": "keywords",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_note_content",
          "description": "获取笔记内容 Args: note_id: 笔记 note_id xsec_token: 笔记 xsec_token",
          "parameters": []
        },
        {
          "name": "get_note_comments",
          "description": "获取笔记评论 Args: note_id: 笔记 note_id xsec_token: 笔记 xsec_token",
          "parameters": []
        },
        {
          "name": "post_comment",
          "description": "发布评论到指定笔记\n\n    Args:\n        note_id: 笔记 note_id\n        comment: 要发布的评论内容",
          "parameters": [
            {
              "name": "comment",
              "required": true,
              "type": "string"
            },
            {
              "name": "note_id",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@lie5860/xhs-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@lie5860/xhs-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2183.@lie5860_xhs-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1885
  }
}