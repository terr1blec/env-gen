{
  "labels": {
    "analysis": "The MCP Server is primarily designed to fetch, parse, and extract content from websites, offering advanced web scraping capabilities. It can handle dynamic content, bypass bot detection, and structure extracted data. The integration with Cursor AI suggests enhanced data retrieval features. Its core functionality centers around automated web data collection and processing, with some basic server management options via optional settings.",
    "reasoning": "The primary label \"Web Scraping & Data Extraction\" is chosen because the server's main purpose is to extract and process web content. The secondary label \"Browser Automation\" is included because the tool likely involves automated web interaction, while \"API Integration\" is selected due to the implied integration capabilities (e.g., with Cursor AI). No custom label is needed as the predefined categories adequately cover its functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Browser Automation",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1901,
    "server_name": "Website Information MCP Server",
    "rank_by_usage": 1902,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@cancelei_mcp_test_booking.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@cancelei/mcp_test_booking/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1901,
      "name": "Website Information MCP Server",
      "author": "@cancelei/mcp_test_booking",
      "overview": "Fetch and parse content from any website effortlessly. Utilize advanced web scraping capabilities to extract structured data, bypass bot detection, and access dynamic content. Integrate seamlessly with Cursor AI for enhanced data retrieval.",
      "repository_url": "https://github.com/cancelei/mcp_test_booking",
      "homepage": "https://smithery.ai/server/@cancelei/mcp_test_booking",
      "remote_or_local": "Remote",
      "license": "Not specified",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@cancelei_mcp_test_booking.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "Optional Settings",
          "description": "Access and manage servers by signing in.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@cancelei/mcp_test_booking/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "AGENTQL_API_KEY",
          "required": true,
          "description": "API key for AgentQL service for enhanced web scraping capabilities"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@cancelei/mcp_test_booking/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1902.@cancelei_mcp_test_booking_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1679
  }
}