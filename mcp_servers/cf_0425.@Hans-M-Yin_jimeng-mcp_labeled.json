{
  "labels": {
    "analysis": "The MCP Server is primarily focused on providing AI-powered image generation capabilities through integration with the Jimeng AI service. It allows users to generate high-quality images from text prompts, blend images using references, and access multiple AI models with flexible parameter controls. The core functionality revolves around image synthesis, enhancement, and processing, leveraging AI/ML technologies.",
    "reasoning": "The primary label \"AI/ML Tools\" was chosen because the server's core functionality is centered around machine learning models for image generation. While image generation is a form of content creation, the AI-driven nature of the service makes \"AI/ML Tools\" the more precise fit. No custom labels are needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "AI/ML Tools",
    "secondary_labels": [
      "Content Creation"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 424,
    "server_name": "Jimeng AI Image Generation Server",
    "rank_by_usage": 425,
    "usage_count": "51",
    "original_file": "../crawler/smithery/@Hans-M-Yin_jimeng-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Hans-M-Yin/jimeng-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 424,
      "name": "Jimeng AI Image Generation Server",
      "author": "@Hans-M-Yin/jimeng-mcp",
      "overview": "Provide advanced AI-powered image generation capabilities by directly integrating with the Jimeng AI service. Generate high-quality images from text prompts or blend images using local or online references with flexible parameter controls. Enhance your applications with seamless access to multiple Jimeng AI models and automatic image processing features.",
      "repository_url": "https://github.com/Hans-M-Yin/jimeng-mcp",
      "homepage": "https://smithery.ai/server/@Hans-M-Yin/jimeng-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "51",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Hans-M-Yin_jimeng-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "hello",
          "description": "Deploy Server Jimeng AI Image Generation Server @Hans-M-Yin/jimeng-mcp Try in Playground",
          "parameters": [
            {
              "name": "hello",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "generateImage",
          "description": "Description not available",
          "parameters": [
            {
              "name": "height",
              "required": false,
              "type": "string"
            },
            {
              "name": "prompt",
              "required": true,
              "type": "string"
            },
            {
              "name": "filePath",
              "required": false,
              "type": "string"
            },
            {
              "name": "negative_prompt",
              "required": false,
              "type": "string"
            },
            {
              "name": "sample_strength",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Hans-M-Yin/jimeng-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "JIMENG_API_TOKEN",
          "required": true,
          "description": "jimeng api token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Hans-M-Yin/jimeng-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0425.@Hans-M-Yin_jimeng-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 419
  }
}