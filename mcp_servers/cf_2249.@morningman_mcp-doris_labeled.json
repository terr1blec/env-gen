{
  "labels": {
    "analysis": "The Apache Doris MCP Server is designed specifically for interacting with Apache Doris, a powerful MPP-based analytics database. Its core functionality revolves around data querying, database management, and aggregation of information through SQL operations. The available tools—show_databases, show_tables, and execute_query—indicate that the server is primarily used for database operations, enabling users to list databases and tables and run complex queries efficiently. This makes it a tool for data management, querying, and analytics.",
    "reasoning": "The primary label \"Database Operations\" was chosen because the server's primary purpose is interacting with Apache Doris through SQL queries, listing databases, and tables—core functionalities of database management systems. \"Data Analysis & Processing\" is a secondary label as it enables running analytical queries. \"API Integration\" could also be considered secondary since it serves as an interface to interact with the Apache Doris database programmatically.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Data Analysis & Processing",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2248,
    "server_name": "Apache Doris MCP Server",
    "rank_by_usage": 2249,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@morningman_mcp-doris.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@morningman/mcp-doris/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2248,
      "name": "Apache Doris MCP Server",
      "author": "@morningman/mcp-doris",
      "overview": "Connect to Apache Doris seamlessly and leverage its powerful data processing capabilities. Simplify your data interactions and enhance your applications with a robust MCP server tailored for Doris. Experience efficient data management and querying with minimal setup.",
      "repository_url": "https://github.com/morningman/mcp-doris",
      "homepage": "https://smithery.ai/server/@morningman/mcp-doris",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@morningman_mcp-doris.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "show_databases",
          "description": "Deploy Server Apache Doris MCP Server @morningman/mcp-doris Try in Playground show_databases",
          "parameters": []
        },
        {
          "name": "show_tables",
          "description": "List all tables in the specified database. Args: database: The database name like: Optional pattern to filter table names Returns: List[Dict]: A list of table information dictionaries",
          "parameters": []
        },
        {
          "name": "execute_query",
          "description": "Run a SELECT query against Doris with timeout protection. Args: query: The SQL query to execute Returns: List[Dict]: The query results",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@morningman/mcp-doris/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@morningman/mcp-doris/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2249.@morningman_mcp-doris_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1936
  }
}