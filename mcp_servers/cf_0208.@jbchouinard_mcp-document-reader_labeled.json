{
  "labels": {
    "analysis": "The MCP Server is designed to facilitate document handling and processing within an IDE environment. It specializes in reading and extracting information from PDF and EPUB formats, including metadata retrieval, specific page content extraction, and term searching. The tools focus on making document interaction seamless and integrated with development workflows.",
    "reasoning": "The primary label \"Document Handling\" was chosen because the server's core functionality revolves around operations typically associated with document management, such as reading, searching, and metadata extraction. The secondary labels \"Web Search & Research\" and \"File Management\" were chosen because the server enables searching for specific terms within documents, making it useful for research purposes, and involves file operations, which is integral to the file management category.",
    "primary_label": "File Management",
    "secondary_labels": [
      "Web Search & Research",
      "File Management"
    ],
    "custom_label": "Text Extraction & Document Processing",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 207,
    "server_name": "Document Reader",
    "rank_by_usage": 208,
    "usage_count": "217",
    "original_file": "../crawler/smithery/@jbchouinard_mcp-document-reader.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@jbchouinard/mcp-document-reader/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 207,
      "name": "Document Reader",
      "author": "@jbchouinard/mcp-document-reader",
      "overview": "Interact with PDF and EPUB documents seamlessly. Enhance your workflow by reading and processing documents directly within your IDE using this MCP server.",
      "repository_url": "https://github.com/jbchouinard/mcp-document-reader",
      "homepage": "https://smithery.ai/server/@jbchouinard/mcp-document-reader",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "217",
      "success_rate": "99.44%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@jbchouinard_mcp-document-reader.json",
      "tools_count": 8,
      "tools": [
        {
          "name": "get_epub_metadata",
          "description": "Deploy Server Document Reader Claim Server @jbchouinard/mcp-document-reader Try in Playground get_epub_metadata",
          "parameters": []
        },
        {
          "name": "read_epub_page_range",
          "description": "Read a range of pages from an EPUB file. Args: epub_path: Path to the EPUB file start_page: First page to read (inclusive) end_page: Last page to read (inclusive) Returns: Formatted string containing the content of the specified page range",
          "parameters": []
        },
        {
          "name": "read_epub_pages",
          "description": "Read specific pages from an EPUB file. Args: epub_path: Path to the EPUB file pages: List of page numbers to read Returns: Formatted string containing the content of the specified pages",
          "parameters": []
        },
        {
          "name": "get_pdf_metadata",
          "description": "Get metadata from a PDF file. Args: pdf_path: Path to the PDF file Returns: Formatted string containing the PDF metadata",
          "parameters": []
        },
        {
          "name": "read_pdf_page_range",
          "description": "Read a range of pages from a PDF file. Args: pdf_path: Path to the PDF file start_page: First page to read (inclusive) end_page: Last page to read (inclusive) Returns: Formatted string containing the content of the specified page range",
          "parameters": []
        },
        {
          "name": "read_pdf_pages",
          "description": "Read specific pages from a PDF file. Args: pdf_path: Path to the PDF file pages: List of page numbers to read Returns: Formatted string containing the content of the specified pages",
          "parameters": []
        },
        {
          "name": "search_pdf",
          "description": "Search for terms in a PDF file and return pages containing them. Args: pdf_path: Path to the PDF file terms: Search term(s) - either a single term as a string or multiple terms as a comma-separated string Returns: Formatted search results showing page numbers and matching terms",
          "parameters": []
        },
        {
          "name": "search_epub",
          "description": "Search for terms in an EPUB file and return pages containing them. Args: epub_path: Path to the EPUB file terms: Search term(s) - either a single term as a string or multiple terms as a comma-separated string Returns: Formatted search results showing page numbers and matching terms",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@jbchouinard/mcp-document-reader/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@jbchouinard/mcp-document-reader/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0208.@jbchouinard_mcp-document-reader_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 204
  }
}