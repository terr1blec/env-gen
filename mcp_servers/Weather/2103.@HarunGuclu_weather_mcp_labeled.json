{
  "labels": {
    "analysis": "The MCP Server is primarily focused on providing real-time weather information and forecasts. It allows users to retrieve detailed current weather conditions, multi-day forecasts, and search for locations to get accurate meteorological data. The available tools are specifically designed to handle weather-related queries and enhance applications that require weather insights for decision-making and user experience optimization.",
    "reasoning": "The server's primary functionality aligns closely with the \"Weather\" predefined category as it delivers weather data, forecasts, and location-based queries. The core purpose of the server is to provide accurate meteorological information, making \"Weather\" the most appropriate primary label. There are no secondary labels needed as the functionality is uniquely focused on weather data, and no custom label is required as the predefined categories adequately cover the server's purpose.",
    "primary_label": "Weather",
    "secondary_labels": [],
    "custom_label": "No additional labels needed",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2102,
    "server_name": "Weather Information Server",
    "rank_by_usage": 2103,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@HarunGuclu_weather_mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@HarunGuclu/weather_mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_current_weather_tool",
          "description": "\n    Get current weather information for a specific city.\n\n    Args:\n        city: Name of the city to get weather for\n\n    Returns:\n        Current weather data including temperature, conditions, humidity, wind, etc.\n    ",
          "input_schema": {
            "properties": {
              "city": {
                "title": "City",
                "type": "string"
              }
            },
            "required": [
              "city"
            ],
            "title": "get_current_weather_toolArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_weather_forecast_tool",
          "description": "\n    Get weather forecast for a specific city.\n\n    Args:\n        city: Name of the city to get forecast for\n        days: Number of days to forecast (1-10, default: 3)\n\n    Returns:\n        Weather forecast data for the specified number of days\n    ",
          "input_schema": {
            "properties": {
              "city": {
                "title": "City",
                "type": "string"
              },
              "days": {
                "default": 3,
                "title": "Days",
                "type": "integer"
              }
            },
            "required": [
              "city"
            ],
            "title": "get_weather_forecast_toolArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_locations_tool",
          "description": "\n    Search for locations by name.\n\n    Args:\n        query: Location name or partial name to search for\n\n    Returns:\n        List of matching locations with their details\n    ",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_locations_toolArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_live_temp",
          "description": "\n    Legacy tool: Get current temperature for a city (for backward compatibility).\n    Use get_current_weather_tool for more detailed information.\n    ",
          "input_schema": {
            "properties": {
              "city": {
                "title": "City",
                "type": "string"
              }
            },
            "required": [
              "city"
            ],
            "title": "get_live_tempArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 4,
      "tool_names": [
        "get_current_weather_tool",
        "get_weather_forecast_tool",
        "search_locations_tool",
        "get_live_temp"
      ]
    },
    "server_info_crawled": {
      "id": 2102,
      "name": "Weather Information Server",
      "author": "@HarunGuclu/weather_mcp",
      "overview": "Provide real-time weather data and forecasts to enhance your applications with accurate meteorological information. Enable seamless integration of weather insights for better decision-making and user experience. Access comprehensive weather details through a standardized protocol interface.",
      "repository_url": "https://github.com/HarunGuclu/weather_mcp",
      "homepage": "https://smithery.ai/server/@HarunGuclu/weather_mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@HarunGuclu_weather_mcp.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "get_current_weather_tool",
          "description": "\n    Get current weather information for a specific city.\n\n    Args:\n        city: Name of the city to get weather for\n\n    Returns:\n        Current weather data including temperature, conditions, humidity, wind, etc.\n    ",
          "input_schema": {
            "properties": {
              "city": {
                "title": "City",
                "type": "string"
              }
            },
            "required": [
              "city"
            ],
            "title": "get_current_weather_toolArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_weather_forecast_tool",
          "description": "\n    Get weather forecast for a specific city.\n\n    Args:\n        city: Name of the city to get forecast for\n        days: Number of days to forecast (1-10, default: 3)\n\n    Returns:\n        Weather forecast data for the specified number of days\n    ",
          "input_schema": {
            "properties": {
              "city": {
                "title": "City",
                "type": "string"
              },
              "days": {
                "default": 3,
                "title": "Days",
                "type": "integer"
              }
            },
            "required": [
              "city"
            ],
            "title": "get_weather_forecast_toolArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_locations_tool",
          "description": "\n    Search for locations by name.\n\n    Args:\n        query: Location name or partial name to search for\n\n    Returns:\n        List of matching locations with their details\n    ",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_locations_toolArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_live_temp",
          "description": "\n    Legacy tool: Get current temperature for a city (for backward compatibility).\n    Use get_current_weather_tool for more detailed information.\n    ",
          "input_schema": {
            "properties": {
              "city": {
                "title": "City",
                "type": "string"
              }
            },
            "required": [
              "city"
            ],
            "title": "get_live_tempArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@HarunGuclu/weather_mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@HarunGuclu/weather_mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "2103.@HarunGuclu_weather_mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1828
  }
}