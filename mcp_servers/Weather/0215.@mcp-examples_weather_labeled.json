{
  "labels": {
    "analysis": "The MCP Server provides tools for retrieving real-time weather data, including forecasts and alerts for specific locations. Its primary function is to deliver weather-related information that can be integrated into applications, enhancing user experiences with accurate and timely data.",
    "reasoning": "The primary functionality of the server is centered around weather data delivery, which aligns best with the \"Weather\" category. While it could also be considered an API integration tool due to its data-providing nature, the core purpose is weather-specific. No custom label is needed as the predefined categories sufficiently describe its function.",
    "primary_label": "Weather",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 214,
    "server_name": "Weather",
    "rank_by_usage": 215,
    "usage_count": "209",
    "original_file": "../crawler/smithery/@mcp-examples_weather.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@mcp-examples/weather/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get-alerts",
          "description": "Get weather alerts for a state",
          "input_schema": {
            "type": "object",
            "properties": {
              "state": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "description": "Two-letter state code (e.g. CA, NY)"
              }
            },
            "required": [
              "state"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-forecast",
          "description": "Get weather forecast for a location",
          "input_schema": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number",
                "minimum": -90,
                "maximum": 90,
                "description": "Latitude of the location"
              },
              "longitude": {
                "type": "number",
                "minimum": -180,
                "maximum": 180,
                "description": "Longitude of the location"
              }
            },
            "required": [
              "latitude",
              "longitude"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 2,
      "tool_names": [
        "get-alerts",
        "get-forecast"
      ]
    },
    "server_info_crawled": {
      "id": 214,
      "name": "Weather",
      "author": "@mcp-examples/weather",
      "overview": "Provide real-time weather information to your applications. Integrate weather data seamlessly and enhance user experiences with accurate forecasts and conditions.",
      "repository_url": "https://github.com/mcp-examples/weather",
      "homepage": "https://smithery.ai/server/@mcp-examples/weather",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "209",
      "success_rate": "96.82%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@mcp-examples_weather.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "get-alerts",
          "description": "Get weather alerts for a state",
          "input_schema": {
            "type": "object",
            "properties": {
              "state": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "description": "Two-letter state code (e.g. CA, NY)"
              }
            },
            "required": [
              "state"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-forecast",
          "description": "Get weather forecast for a location",
          "input_schema": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number",
                "minimum": -90,
                "maximum": 90,
                "description": "Latitude of the location"
              },
              "longitude": {
                "type": "number",
                "minimum": -180,
                "maximum": 180,
                "description": "Longitude of the location"
              }
            },
            "required": [
              "latitude",
              "longitude"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@mcp-examples/weather/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@mcp-examples/weather/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0215.@mcp-examples_weather_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 211
  }
}