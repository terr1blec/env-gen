{
  "labels": {
    "analysis": "The MCP Server is primarily focused on providing weather forecast services, with a particular emphasis on delivering real-time meteorological data. The available tool, \"getLiveTemperature,\" allows users to retrieve current temperature data for specific geographic locations based on latitude and longitude coordinates. This functionality suggests that the server is designed to serve applications needing accurate and up-to-date weather information seamlessly.",
    "reasoning": "The primary label is \"Weather\" because the server's core functionality revolves around providing weather-related data. The secondary label \"API Integration\" is included because the server appears to provide a standardized protocol for accessing weather information, indicating it may be designed for integration into other applications. No custom label is necessary as the predefined \"Weather\" category sufficiently captures the serverâ€™s primary purpose.",
    "primary_label": "Weather",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 939,
    "server_name": "Weather Forecast Service",
    "rank_by_usage": 940,
    "usage_count": "3",
    "original_file": "../crawler/smithery/@kayracihanbaskan_mcp-weatherforecast.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@kayracihanbaskan/mcp-weatherforecast/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "getLiveTemperature",
          "description": "\n    Get live temperature for a specific location.\n\n    Args:\n        latitude: The latitude coordinate (e.g., 40.7128 for New York)\n        longitude: The longitude coordinate (e.g., -74.0060 for New York)\n\n    Returns:\n        A dictionary containing temperature information or an error message\n    ",
          "input_schema": {
            "properties": {
              "latitude": {
                "title": "Latitude",
                "type": "number"
              },
              "longitude": {
                "title": "Longitude",
                "type": "number"
              }
            },
            "required": [
              "latitude",
              "longitude"
            ],
            "title": "getLiveTemperatureArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "getLiveTemperature"
      ]
    },
    "server_info_crawled": {
      "id": 939,
      "name": "Weather Forecast Service",
      "author": "@kayracihanbaskan/mcp-weatherforecast",
      "overview": "Provide accurate and up-to-date weather forecasts to enhance your applications with real-time meteorological data. Enable seamless integration of weather information through a standardized protocol for improved decision-making and user experience. Simplify access to weather data with easy-to-use tools and resources.",
      "repository_url": "https://github.com/kayracihanbaskan/MCP-WeatherForecast",
      "homepage": "https://smithery.ai/server/@kayracihanbaskan/mcp-weatherforecast",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "3",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@kayracihanbaskan_mcp-weatherforecast.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "getLiveTemperature",
          "description": "\n    Get live temperature for a specific location.\n\n    Args:\n        latitude: The latitude coordinate (e.g., 40.7128 for New York)\n        longitude: The longitude coordinate (e.g., -74.0060 for New York)\n\n    Returns:\n        A dictionary containing temperature information or an error message\n    ",
          "input_schema": {
            "properties": {
              "latitude": {
                "title": "Latitude",
                "type": "number"
              },
              "longitude": {
                "title": "Longitude",
                "type": "number"
              }
            },
            "required": [
              "latitude",
              "longitude"
            ],
            "title": "getLiveTemperatureArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@kayracihanbaskan/mcp-weatherforecast/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@kayracihanbaskan/mcp-weatherforecast/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0940.@kayracihanbaskan_mcp-weatherforecast_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 919
  }
}