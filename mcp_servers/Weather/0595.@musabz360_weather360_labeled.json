{
  "labels": {
    "analysis": "The Weather360 Server provides real-time weather data through a simple API interface. It allows applications to access live weather details based on geographic coordinates (latitude and longitude). The core functionality revolves around fetching and delivering accurate weather updates, enhancing applications that rely on weather data for user experience or decision-making.",
    "reasoning": "The primary functionality of fetching real-time weather data clearly fits the \"Weather\" category from the predefined list. Since the server offers API-based access to weather information, it also aligns with \"API Integration.\" There is no unique functionality that requires a custom label.",
    "primary_label": "Weather",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 594,
    "server_name": "Weather360 Server",
    "rank_by_usage": 595,
    "usage_count": "18",
    "original_file": "../crawler/smithery/@musabz360_weather360.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@musabz360/weather360/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_live_weather",
          "description": "\n    Get live weather detailes for a given latitude and longitude.\n    ",
          "input_schema": {
            "properties": {
              "latitude": {
                "title": "Latitude",
                "type": "number"
              },
              "longitude": {
                "title": "Longitude",
                "type": "number"
              }
            },
            "required": [
              "latitude",
              "longitude"
            ],
            "title": "get_live_weatherArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get_live_weather"
      ]
    },
    "server_info_crawled": {
      "id": 594,
      "name": "Weather360 Server",
      "author": "@musabz360/weather360",
      "overview": "Provide real-time weather data and forecasts through a simple API interface. Enable applications to access comprehensive weather information seamlessly. Enhance user experience with accurate and timely weather updates.",
      "repository_url": "https://github.com/musabz360/Weather360",
      "homepage": "https://smithery.ai/server/@musabz360/weather360",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "18",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@musabz360_weather360.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_live_weather",
          "description": "\n    Get live weather detailes for a given latitude and longitude.\n    ",
          "input_schema": {
            "properties": {
              "latitude": {
                "title": "Latitude",
                "type": "number"
              },
              "longitude": {
                "title": "Longitude",
                "type": "number"
              }
            },
            "required": [
              "latitude",
              "longitude"
            ],
            "title": "get_live_weatherArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@musabz360/weather360/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@musabz360/weather360/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0595.@musabz360_weather360_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 581
  }
}