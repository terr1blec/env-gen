{
  "labels": {
    "analysis": "The MCP Server is designed to manage and interact with model context protocols, allowing applications to integrate with external data and tools seamlessly. The available tools include querying weather information based on city input and performing simple arithmetic operations (adding numbers). This suggests a primary focus on **data retrieval and processing** with a secondary capability in **basic computations** or utility functions.",
    "reasoning": "The primary label \"Weather\" is chosen because the server's most prominent tool (`query_weather`) directly provides weather data retrieval functionality. The secondary label \"Data Analysis & Processing\" is selected because the server facilitates integration with external data and simple computations (e.g., `add`). No predefined custom label is necessary, as the server's functionality is well-covered by existing categories.",
    "primary_label": "Weather",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1236,
    "server_name": "mcp服务",
    "rank_by_usage": 1237,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@ly729027676_mcp-serve-testweather.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ly729027676/mcp-serve-testweather/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "query_weather",
          "description": "\n    输入指定城市的英文名称，返回今日天气查询结果。\n    :param city: 城市名称（需使用英文）\n    :return: 格式化后的天气信息\n    ",
          "input_schema": {
            "properties": {
              "city": {
                "title": "City",
                "type": "string"
              }
            },
            "required": [
              "city"
            ],
            "title": "query_weatherArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "add",
          "description": "Add two numbers",
          "input_schema": {
            "properties": {
              "a": {
                "title": "A",
                "type": "integer"
              },
              "b": {
                "title": "B",
                "type": "integer"
              }
            },
            "required": [
              "a",
              "b"
            ],
            "title": "addArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 2,
      "tool_names": [
        "query_weather",
        "add"
      ]
    },
    "server_info_crawled": {
      "id": 1236,
      "name": "mcp服务",
      "author": "@ly729027676/mcp-serve-testweather",
      "overview": "Provide a service for managing and interacting with model context protocols. Enhance your applications by integrating with external data and tools seamlessly.",
      "repository_url": "https://github.com/ly729027676/mcp-serve",
      "homepage": "https://smithery.ai/server/@ly729027676/mcp-serve-testweather",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ly729027676_mcp-serve-testweather.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "query_weather",
          "description": "\n    输入指定城市的英文名称，返回今日天气查询结果。\n    :param city: 城市名称（需使用英文）\n    :return: 格式化后的天气信息\n    ",
          "input_schema": {
            "properties": {
              "city": {
                "title": "City",
                "type": "string"
              }
            },
            "required": [
              "city"
            ],
            "title": "query_weatherArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "add",
          "description": "Add two numbers",
          "input_schema": {
            "properties": {
              "a": {
                "title": "A",
                "type": "integer"
              },
              "b": {
                "title": "B",
                "type": "integer"
              }
            },
            "required": [
              "a",
              "b"
            ],
            "title": "addArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ly729027676/mcp-serve-testweather/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ly729027676/mcp-serve-testweather/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1237.@ly729027676_mcp-serve-testweather_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1186
  }
}