{
  "labels": {
    "analysis": "The MCP Server described, \"AO Generative AI CP3 Smithery Server,\" focuses on integrating generative AI capabilities with external tools, particularly for retrieving and formatting environmental forecasts, warnings, and other location-specific data related to weather, sea states, earthquakes, fire risk, and UV levels in Portugal. The tools provided are highly specialized in meteorological and geophysical data retrieval, making it a valuable resource for applications requiring real-time environmental monitoring or decision-making based on such data.",
    "reasoning": "The primary label of \"Weather\" is chosen because the majority of the tools directly pertain to gathering and formatting weather-related data (forecasts, warnings, UV levels, etc.). The secondary label of \"Environmental Monitoring\" is appropriate given the focus on geophysical events (earthquakes) and fire risk, which expand beyond traditional weather data. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Weather",
    "secondary_labels": [
      "Weather"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 847,
    "server_name": "AO Generative AI CP3 Smithery Server",
    "rank_by_usage": 848,
    "usage_count": "5",
    "original_file": "../crawler/smithery/@HugoGuedesipvc_ao-generativeai-cp3-smithery.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@HugoGuedesipvc/ao-generativeai-cp3-smithery/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_forecast",
          "description": "Get 5-day weather forecast for a Portuguese city.\n\n    Args:\n        city: Name of the city (e.g. Lisboa, Porto, Faro)\n    ",
          "input_schema": {
            "properties": {
              "city": {
                "title": "City",
                "type": "string"
              }
            },
            "required": [
              "city"
            ],
            "title": "get_forecastArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "weather_warnings",
          "description": "\n    Retrieve and format weather warnings from IPMA for Portugal up to 3 days ahead.\n\n    Returns:\n        A formatted string summarizing current weather warnings, with details by area and level.\n    ",
          "input_schema": {
            "properties": {},
            "title": "weather_warningsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_sea_forecast",
          "description": "\n    Get daily sea state forecast for Portugal coastal areas.\n\n    Args:\n        day: 0 = today, 1 = tomorrow, 2 = day after tomorrow\n\n    Returns:\n        Formatted string with forecast info by location.\n    ",
          "input_schema": {
            "properties": {
              "day": {
                "default": 0,
                "title": "Day",
                "type": "integer"
              }
            },
            "title": "get_sea_forecastArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_earthquakes",
          "description": "\n    Get earthquake information for Portugal areas (Azores or Mainland + Madeira).\n\n    Args:\n        area: 3 for Azores, 7 for Mainland + Madeira\n\n    Returns:\n        Formatted string with recent earthquakes (last 30 days).\n    ",
          "input_schema": {
            "properties": {
              "area": {
                "default": 7,
                "title": "Area",
                "type": "integer"
              }
            },
            "title": "get_earthquakesArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_fire_risk_forecast",
          "description": "Get fire risk forecast for Portugal (today or tomorrow).\n\n    Args:\n        day: 1 for today, 2 for tomorrow\n    ",
          "input_schema": {
            "properties": {
              "day": {
                "default": 1,
                "title": "Day",
                "type": "integer"
              }
            },
            "title": "get_fire_risk_forecastArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "uv_forecast",
          "description": "\n    Get the Ultraviolet Index (UV) forecast for Portugal for the next 3 days.\n\n    Returns:\n        A formatted string with UV index levels by date, location, and hour interval.\n    ",
          "input_schema": {
            "properties": {},
            "title": "uv_forecastArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 6,
      "tool_names": [
        "get_forecast",
        "weather_warnings",
        "get_sea_forecast",
        "get_earthquakes",
        "get_fire_risk_forecast",
        "uv_forecast"
      ]
    },
    "server_info_crawled": {
      "id": 847,
      "name": "AO Generative AI CP3 Smithery Server",
      "author": "@HugoGuedesipvc/ao-generativeai-cp3-smithery",
      "overview": "Provide a server implementation that enables integration of generative AI capabilities with external tools and resources. Facilitate dynamic interaction between AI models and real-world data or actions to enhance AI applications. Simplify the deployment of AI-powered workflows with standardized protocol support.",
      "repository_url": "https://github.com/HugoGuedesipvc/AO-GenerativeAI-CP3-smithery",
      "homepage": "https://smithery.ai/server/@HugoGuedesipvc/ao-generativeai-cp3-smithery",
      "remote_or_local": "Remote",
      "license": "AO Generative AI CP3 Smithery Server",
      "usage_count": "5",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@HugoGuedesipvc_ao-generativeai-cp3-smithery.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "get_forecast",
          "description": "Get 5-day weather forecast for a Portuguese city.\n\n    Args:\n        city: Name of the city (e.g. Lisboa, Porto, Faro)\n    ",
          "input_schema": {
            "properties": {
              "city": {
                "title": "City",
                "type": "string"
              }
            },
            "required": [
              "city"
            ],
            "title": "get_forecastArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "weather_warnings",
          "description": "\n    Retrieve and format weather warnings from IPMA for Portugal up to 3 days ahead.\n\n    Returns:\n        A formatted string summarizing current weather warnings, with details by area and level.\n    ",
          "input_schema": {
            "properties": {},
            "title": "weather_warningsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_sea_forecast",
          "description": "\n    Get daily sea state forecast for Portugal coastal areas.\n\n    Args:\n        day: 0 = today, 1 = tomorrow, 2 = day after tomorrow\n\n    Returns:\n        Formatted string with forecast info by location.\n    ",
          "input_schema": {
            "properties": {
              "day": {
                "default": 0,
                "title": "Day",
                "type": "integer"
              }
            },
            "title": "get_sea_forecastArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_earthquakes",
          "description": "\n    Get earthquake information for Portugal areas (Azores or Mainland + Madeira).\n\n    Args:\n        area: 3 for Azores, 7 for Mainland + Madeira\n\n    Returns:\n        Formatted string with recent earthquakes (last 30 days).\n    ",
          "input_schema": {
            "properties": {
              "area": {
                "default": 7,
                "title": "Area",
                "type": "integer"
              }
            },
            "title": "get_earthquakesArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_fire_risk_forecast",
          "description": "Get fire risk forecast for Portugal (today or tomorrow).\n\n    Args:\n        day: 1 for today, 2 for tomorrow\n    ",
          "input_schema": {
            "properties": {
              "day": {
                "default": 1,
                "title": "Day",
                "type": "integer"
              }
            },
            "title": "get_fire_risk_forecastArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "uv_forecast",
          "description": "\n    Get the Ultraviolet Index (UV) forecast for Portugal for the next 3 days.\n\n    Returns:\n        A formatted string with UV index levels by date, location, and hour interval.\n    ",
          "input_schema": {
            "properties": {},
            "title": "uv_forecastArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@HugoGuedesipvc/ao-generativeai-cp3-smithery/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@HugoGuedesipvc/ao-generativeai-cp3-smithery/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0848.@HugoGuedesipvc_ao-generativeai-cp3-smithery_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 829
  }
}