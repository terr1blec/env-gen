{
  "labels": {
    "analysis": "The MCP Server is dedicated to providing real-time weather information and forecasts. Its core functionality revolves around weather data retrieval, including alerts and forecasts for specific locations. The available tools, such as \"get-alerts\" and \"get-forecast,\" enable applications to integrate accurate and up-to-date weather insights seamlessly.",
    "reasoning": "The primary function of this server is clearly tied to weather data, making it a natural fit for the \"Weather\" category. While it provides data that could be useful for decision-making or travel planning, its primary focus is on weather-specific information. No secondary or custom labels are necessary as the predefined \"Weather\" category covers its functionality comprehensively.",
    "primary_label": "Weather",
    "secondary_labels": [],
    "custom_label": "None",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 165,
    "server_name": "Weather",
    "rank_by_usage": 166,
    "usage_count": "306",
    "original_file": "../crawler/smithery/@turkyden_weather.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@turkyden/weather/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get-alerts",
          "description": "Get weather alerts for a state",
          "input_schema": {
            "type": "object",
            "properties": {
              "state": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "description": "Two-letter state code (e.g. CA, NY)"
              }
            },
            "required": [
              "state"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-forecast",
          "description": "Get weather forecast for a location",
          "input_schema": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number",
                "minimum": -90,
                "maximum": 90,
                "description": "Latitude of the location"
              },
              "longitude": {
                "type": "number",
                "minimum": -180,
                "maximum": 180,
                "description": "Longitude of the location"
              }
            },
            "required": [
              "latitude",
              "longitude"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 2,
      "tool_names": [
        "get-alerts",
        "get-forecast"
      ]
    },
    "server_info_crawled": {
      "id": 165,
      "name": "Weather",
      "author": "@turkyden/weather",
      "overview": "Provide real-time weather information and forecasts to your applications. Integrate weather data seamlessly to enhance user experiences and decision-making. Access accurate and up-to-date weather insights effortlessly.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@turkyden/weather",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "306",
      "success_rate": "95.47%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@turkyden_weather.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "get-alerts",
          "description": "Get weather alerts for a state",
          "input_schema": {
            "type": "object",
            "properties": {
              "state": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "description": "Two-letter state code (e.g. CA, NY)"
              }
            },
            "required": [
              "state"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-forecast",
          "description": "Get weather forecast for a location",
          "input_schema": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number",
                "minimum": -90,
                "maximum": 90,
                "description": "Latitude of the location"
              },
              "longitude": {
                "type": "number",
                "minimum": -180,
                "maximum": 180,
                "description": "Longitude of the location"
              }
            },
            "required": [
              "latitude",
              "longitude"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@turkyden/weather/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@turkyden/weather/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0166.@turkyden_weather_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 163
  }
}