{
  "labels": {
    "analysis": "The MCP Server provides a comprehensive set of tools for managing Azure DevOps workflows, encompassing work item management, repository handling, board/gantt interactions, testing and quality assurance, security scanning, artifact management, and AI-enhanced code analysis. Its core functionality revolves around streamlining development processes by automating and intelligentizing key aspects of software development lifecycle (SDLC) management through Azure DevOps integration.",
    "reasoning": "The primary label 'Development Tools' is chosen because the server's tools fundamentally enhance software development workflows, including work item tracking, repository management, and CI/CD pipeline interactions. Secondary labels were selected because the server's capabilities extend into testing ('Data Analysis & Processing'), security checks ('Security & Authentication'), and predictive analytics ('AI/ML Tools'). Though no custom label is needed, the server could be described as an 'Enterprise DevOps Integration Platform' for clustering purposes.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Data Analysis & Processing",
      "Security & Authentication",
      "AI/ML Tools"
    ],
    "custom_label": "Enterprise DevOps Integration Platform",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1558,
    "server_name": "Azure DevOps Integration",
    "rank_by_usage": 1559,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@RyanCardin15_azuredevops-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@RyanCardin15/azuredevops-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1558,
      "name": "Azure DevOps Integration",
      "author": "@RyanCardin15/azuredevops-mcp",
      "overview": "Seamlessly manage work items, repositories, boards, and sprints in Azure DevOps through a powerful API. Enhance your AI assistants and tools with standardized access to Azure DevOps functionalities. Streamline your development workflow and improve team collaboration with easy integration.",
      "repository_url": "https://github.com/RyanCardin15/AzureDevOps-MCP",
      "homepage": "https://smithery.ai/server/@RyanCardin15/azuredevops-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@RyanCardin15_azuredevops-mcp.json",
      "tools_count": 96,
      "tools": [
        {
          "name": "listWorkItems",
          "description": "Deploy Server Azure DevOps Integration @RyanCardin15/azuredevops-mcp Try in Playground listWorkItems",
          "parameters": [
            {
              "name": "listWorkItems",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getWorkItemById",
          "description": "Get a specific work item by ID",
          "parameters": [
            {
              "name": "getWorkItemById",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "searchWorkItems",
          "description": "Search for work items by text",
          "parameters": [
            {
              "name": "top",
              "required": false,
              "type": "string"
            },
            {
              "name": "searchText",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getRecentlyUpdatedWorkItems",
          "description": "Get recently updated work items",
          "parameters": [
            {
              "name": "top",
              "required": false,
              "type": "string"
            },
            {
              "name": "skip",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getMyWorkItems",
          "description": "Get work items assigned to you",
          "parameters": [
            {
              "name": "top",
              "required": false,
              "type": "string"
            },
            {
              "name": "state",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "createWorkItem",
          "description": "Create a new work item",
          "parameters": [
            {
              "name": "createWorkItem",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "updateWorkItem",
          "description": "Update an existing work item",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "fields",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "addWorkItemComment",
          "description": "Add a comment to a work item",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "text",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "updateWorkItemState",
          "description": "Update the state of a work item",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "state",
              "required": true,
              "type": "string"
            },
            {
              "name": "comment",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "assignWorkItem",
          "description": "Assign a work item to a user",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "assignedTo",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "createLink",
          "description": "Create a link between work items",
          "parameters": [
            {
              "name": "comment",
              "required": false,
              "type": "string"
            },
            {
              "name": "linkType",
              "required": true,
              "type": "string"
            },
            {
              "name": "sourceId",
              "required": true,
              "type": "string"
            },
            {
              "name": "targetId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "bulkCreateWorkItems",
          "description": "Create or update multiple work items in a single operation",
          "parameters": [
            {
              "name": "bulkCreateWorkItems",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getBoards",
          "description": "Get all boards for a team",
          "parameters": [
            {
              "name": "getBoards",
              "required": false,
              "type": "string"
            },
            {
              "name": "teamId",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getBoardColumns",
          "description": "Get columns for a specific board",
          "parameters": [
            {
              "name": "teamId",
              "required": false,
              "type": "string"
            },
            {
              "name": "boardId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getBoardItems",
          "description": "Get items on a specific board",
          "parameters": [
            {
              "name": "teamId",
              "required": false,
              "type": "string"
            },
            {
              "name": "boardId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "moveCardOnBoard",
          "description": "Move a card on a board",
          "parameters": [
            {
              "name": "teamId",
              "required": false,
              "type": "string"
            },
            {
              "name": "boardId",
              "required": true,
              "type": "string"
            },
            {
              "name": "columnId",
              "required": true,
              "type": "string"
            },
            {
              "name": "position",
              "required": false,
              "type": "string"
            },
            {
              "name": "workItemId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getSprints",
          "description": "Get all sprints for a team",
          "parameters": [
            {
              "name": "getSprints",
              "required": false,
              "type": "string"
            },
            {
              "name": "teamId",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getCurrentSprint",
          "description": "Get the current sprint",
          "parameters": [
            {
              "name": "getCurrentSprint",
              "required": false,
              "type": "string"
            },
            {
              "name": "Get",
              "required": false,
              "type": "string"
            },
            {
              "name": "the",
              "required": false,
              "type": "string"
            },
            {
              "name": "current",
              "required": false,
              "type": "string"
            },
            {
              "name": "sprint",
              "required": false,
              "type": "string"
            },
            {
              "name": "teamId",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getSprintWorkItems",
          "description": "Get work items in a specific sprint",
          "parameters": [
            {
              "name": "teamId",
              "required": false,
              "type": "string"
            },
            {
              "name": "sprintId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getSprintCapacity",
          "description": "Get capacity for a specific sprint",
          "parameters": [
            {
              "name": "teamId",
              "required": false,
              "type": "string"
            },
            {
              "name": "sprintId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getTeamMembers",
          "description": "Get members of a team",
          "parameters": [
            {
              "name": "getTeamMembers",
              "required": false,
              "type": "string"
            },
            {
              "name": "teamId",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "listProjects",
          "description": "Description not available",
          "parameters": [
            {
              "name": "List",
              "required": false,
              "type": "string"
            },
            {
              "name": "all",
              "required": false,
              "type": "string"
            },
            {
              "name": "projects",
              "required": false,
              "type": "string"
            },
            {
              "name": "top",
              "required": false,
              "type": "string"
            },
            {
              "name": "skip",
              "required": false,
              "type": "string"
            },
            {
              "name": "stateFilter",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getProjectDetails",
          "description": "Get details of a specific project",
          "parameters": [
            {
              "name": "getProjectDetails",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "createProject",
          "description": "Description not available",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "visibility",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "required": false,
              "type": "string"
            },
            {
              "name": "capabilities",
              "required": false,
              "type": "string"
            },
            {
              "name": "processTemplateId",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getAreas",
          "description": "Get areas for a project",
          "parameters": [
            {
              "name": "depth",
              "required": false,
              "type": "string"
            },
            {
              "name": "projectId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getIterations",
          "description": "Get iterations for a project",
          "parameters": [
            {
              "name": "projectId",
              "required": true,
              "type": "string"
            },
            {
              "name": "includeDeleted",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "createArea",
          "description": "Create a new area in a project",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "projectId",
              "required": true,
              "type": "string"
            },
            {
              "name": "parentPath",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "createIteration",
          "description": "Create a new iteration in a project",
          "parameters": [
            {
              "name": "createIteration",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getProcesses",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Get",
              "required": false,
              "type": "string"
            },
            {
              "name": "all",
              "required": false,
              "type": "string"
            },
            {
              "name": "processes",
              "required": false,
              "type": "string"
            },
            {
              "name": "expandIcon",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getWorkItemTypes",
          "description": "Get work item types for a process",
          "parameters": [
            {
              "name": "getWorkItemTypes",
              "required": false,
              "type": "string"
            },
            {
              "name": "processId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getWorkItemTypeFields",
          "description": "Get fields for a work item type",
          "parameters": [
            {
              "name": "processId",
              "required": true,
              "type": "string"
            },
            {
              "name": "witRefName",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "listRepositories",
          "description": "List all repositories",
          "parameters": [
            {
              "name": "listRepositories",
              "required": false,
              "type": "string"
            },
            {
              "name": "List",
              "required": false,
              "type": "string"
            },
            {
              "name": "all",
              "required": false,
              "type": "string"
            },
            {
              "name": "repositories",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getRepository",
          "description": "Get details of a specific repository",
          "parameters": [
            {
              "name": "projectId",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "createRepository",
          "description": "Create a new repository",
          "parameters": [
            {
              "name": "Create",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "new",
              "required": false,
              "type": "string"
            },
            {
              "name": "repository",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "projectId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "listBranches",
          "description": "List branches in a repository",
          "parameters": [
            {
              "name": "top",
              "required": false,
              "type": "string"
            },
            {
              "name": "filter",
              "required": false,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "searchCode",
          "description": "Search for code in repositories",
          "parameters": [
            {
              "name": "searchCode",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "browseRepository",
          "description": "Browse the contents of a repository",
          "parameters": [
            {
              "name": "path",
              "required": false,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "required": true,
              "type": "string"
            },
            {
              "name": "versionDescriptor",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getFileContent",
          "description": "Get the content of a file",
          "parameters": [
            {
              "name": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "required": true,
              "type": "string"
            },
            {
              "name": "versionDescriptor",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getCommitHistory",
          "description": "Get commit history for a repository",
          "parameters": [
            {
              "name": "top",
              "required": false,
              "type": "string"
            },
            {
              "name": "skip",
              "required": false,
              "type": "string"
            },
            {
              "name": "itemPath",
              "required": false,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "listPullRequests",
          "description": "Description not available",
          "parameters": [
            {
              "name": "skip",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "required": false,
              "type": "string"
            },
            {
              "name": "creatorId",
              "required": false,
              "type": "string"
            },
            {
              "name": "reviewerId",
              "required": false,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "createPullRequest",
          "description": "Create a new pull request",
          "parameters": [
            {
              "name": "createPullRequest",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getPullRequest",
          "description": "Get details of a specific pull request",
          "parameters": [
            {
              "name": "repositoryId",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getPullRequestComments",
          "description": "Get comments on a pull request",
          "parameters": [
            {
              "name": "getPullRequestComments",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "approvePullRequest",
          "description": "Approve a pull request",
          "parameters": [
            {
              "name": "Approve",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "pull",
              "required": false,
              "type": "string"
            },
            {
              "name": "request",
              "required": false,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "mergePullRequest",
          "description": "Description not available",
          "parameters": [
            {
              "name": "comment",
              "required": false,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "required": true,
              "type": "string"
            },
            {
              "name": "mergeStrategy",
              "required": false,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "runAutomatedTests",
          "description": "Execute automated test suites",
          "parameters": [
            {
              "name": "runAutomatedTests",
              "required": false,
              "type": "string"
            },
            {
              "name": "Execute",
              "required": false,
              "type": "string"
            },
            {
              "name": "automated",
              "required": false,
              "type": "string"
            },
            {
              "name": "test",
              "required": false,
              "type": "string"
            },
            {
              "name": "suites",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getTestAutomationStatus",
          "description": "Check status of automated test execution",
          "parameters": [
            {
              "name": "getTestAutomationStatus",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "configureTestAgents",
          "description": "Configure and manage test agents",
          "parameters": [
            {
              "name": "configureTestAgents",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "createTestDataGenerator",
          "description": "Generate test data for automated tests",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "dataSchema",
              "required": true,
              "type": "string"
            },
            {
              "name": "recordCount",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "manageTestEnvironments",
          "description": "Manage test environments for different test types",
          "parameters": [
            {
              "name": "manageTestEnvironments",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getTestFlakiness",
          "description": "Analyze and report on test flakiness",
          "parameters": [
            {
              "name": "testId",
              "required": false,
              "type": "string"
            },
            {
              "name": "timeRange",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getTestGapAnalysis",
          "description": "Identify gaps in test coverage",
          "parameters": [
            {
              "name": "areaPath",
              "required": false,
              "type": "string"
            },
            {
              "name": "codeChangesOnly",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "runTestImpactAnalysis",
          "description": "Determine which tests to run based on code changes",
          "parameters": [
            {
              "name": "runTestImpactAnalysis",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getTestHealthDashboard",
          "description": "View overall test health metrics",
          "parameters": [
            {
              "name": "timeRange",
              "required": false,
              "type": "string"
            },
            {
              "name": "includeTrends",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "runTestOptimization",
          "description": "Optimize test suite execution for faster feedback",
          "parameters": [
            {
              "name": "runTestOptimization",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "createExploratorySessions",
          "description": "Create new exploratory testing sessions",
          "parameters": [
            {
              "name": "title",
              "required": true,
              "type": "string"
            },
            {
              "name": "areaPath",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "recordExploratoryTestResults",
          "description": "Record findings during exploratory testing",
          "parameters": [
            {
              "name": "recordExploratoryTestResults",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "convertFindingsToWorkItems",
          "description": "Convert exploratory test findings to work items",
          "parameters": [
            {
              "name": "convertFindingsToWorkItems",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getExploratoryTestStatistics",
          "description": "Get statistics on exploratory testing activities",
          "parameters": [
            {
              "name": "userId",
              "required": false,
              "type": "string"
            },
            {
              "name": "timeRange",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "runSecurityScan",
          "description": "Run security scans on repositories",
          "parameters": [
            {
              "name": "runSecurityScan",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getSecurityScanResults",
          "description": "Get results from security scans",
          "parameters": [
            {
              "name": "scanId",
              "required": true,
              "type": "string"
            },
            {
              "name": "severity",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "trackSecurityVulnerabilities",
          "description": "Track and manage security vulnerabilities",
          "parameters": [
            {
              "name": "trackSecurityVulnerabilities",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "generateSecurityCompliance",
          "description": "Generate security compliance reports",
          "parameters": [
            {
              "name": "generateSecurityCompliance",
              "required": false,
              "type": "string"
            },
            {
              "name": "Generate",
              "required": false,
              "type": "string"
            },
            {
              "name": "security",
              "required": false,
              "type": "string"
            },
            {
              "name": "compliance",
              "required": false,
              "type": "string"
            },
            {
              "name": "reports",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "integrateSarifResults",
          "description": "Import and process SARIF format security results",
          "parameters": [
            {
              "name": "integrateSarifResults",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "runComplianceChecks",
          "description": "Run compliance checks against standards",
          "parameters": [
            {
              "name": "runComplianceChecks",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getComplianceStatus",
          "description": "Get current compliance status",
          "parameters": [
            {
              "name": "standardId",
              "required": false,
              "type": "string"
            },
            {
              "name": "includeHistory",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "createComplianceReport",
          "description": "Create compliance reports for auditing",
          "parameters": [
            {
              "name": "format",
              "required": false,
              "type": "string"
            },
            {
              "name": "standardId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "manageSecurityPolicies",
          "description": "Manage security policies",
          "parameters": [
            {
              "name": "Manage",
              "required": false,
              "type": "string"
            },
            {
              "name": "security",
              "required": false,
              "type": "string"
            },
            {
              "name": "policies",
              "required": false,
              "type": "string"
            },
            {
              "name": "action",
              "required": true,
              "type": "string"
            },
            {
              "name": "policyName",
              "required": true,
              "type": "string"
            },
            {
              "name": "policyDefinition",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "trackSecurityAwareness",
          "description": "Track security awareness and training",
          "parameters": [
            {
              "name": "teamId",
              "required": false,
              "type": "string"
            },
            {
              "name": "timeRange",
              "required": false,
              "type": "string"
            },
            {
              "name": "trainingId",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "rotateSecrets",
          "description": "Rotate secrets and credentials",
          "parameters": [
            {
              "name": "force",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "secretName",
              "required": false,
              "type": "string"
            },
            {
              "name": "secretType",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "auditSecretUsage",
          "description": "Audit usage of secrets across services",
          "parameters": [
            {
              "name": "timeRange",
              "required": false,
              "type": "string"
            },
            {
              "name": "secretName",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "vaultIntegration",
          "description": "Integrate with secret vaults",
          "parameters": [
            {
              "name": "action",
              "required": true,
              "type": "string"
            },
            {
              "name": "vaultUrl",
              "required": true,
              "type": "string"
            },
            {
              "name": "secretPath",
              "required": false,
              "type": "string"
            },
            {
              "name": "secretValue",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "listArtifactFeeds",
          "description": "List artifact feeds in the organization",
          "parameters": [
            {
              "name": "feedType",
              "required": false,
              "type": "string"
            },
            {
              "name": "includeDeleted",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getPackageVersions",
          "description": "Get versions of a package in a feed",
          "parameters": [
            {
              "name": "top",
              "required": false,
              "type": "string"
            },
            {
              "name": "feedId",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "publishPackage",
          "description": "Publish a package to a feed",
          "parameters": [
            {
              "name": "feedId",
              "required": true,
              "type": "string"
            },
            {
              "name": "packagePath",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageType",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "promotePackage",
          "description": "Promote a package version between views",
          "parameters": [
            {
              "name": "promotePackage",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "deletePackageVersion",
          "description": "Delete a version of a package",
          "parameters": [
            {
              "name": "deletePackageVersion",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "listContainerImages",
          "description": "List container images in a repository",
          "parameters": [
            {
              "name": "listContainerImages",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getContainerImageTags",
          "description": "Get tags for a container image",
          "parameters": [
            {
              "name": "top",
              "required": false,
              "type": "string"
            },
            {
              "name": "imageName",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryName",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "scanContainerImage",
          "description": "Scan a container image for vulnerabilities and compliance issues",
          "parameters": [
            {
              "name": "scanContainerImage",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "manageContainerPolicies",
          "description": "Manage policies for container repositories",
          "parameters": [
            {
              "name": "manageContainerPolicies",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "manageUniversalPackages",
          "description": "Manage universal packages",
          "parameters": [
            {
              "name": "manageUniversalPackages",
              "required": false,
              "type": "string"
            },
            {
              "name": "Manage",
              "required": false,
              "type": "string"
            },
            {
              "name": "universal",
              "required": false,
              "type": "string"
            },
            {
              "name": "packages",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "createPackageDownloadReport",
          "description": "Create reports on package downloads",
          "parameters": [
            {
              "name": "createPackageDownloadReport",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "checkPackageDependencies",
          "description": "Check package dependencies and vulnerabilities",
          "parameters": [
            {
              "name": "checkPackageDependencies",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getAICodeReview",
          "description": "Get AI-based code review suggestions",
          "parameters": [
            {
              "name": "getAICodeReview",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "suggestCodeOptimization",
          "description": "Suggest code optimizations using AI",
          "parameters": [
            {
              "name": "suggestCodeOptimization",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "identifyCodeSmells",
          "description": "Identify potential code smells and anti-patterns",
          "parameters": [
            {
              "name": "identifyCodeSmells",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getPredictiveBugAnalysis",
          "description": "Predict potential bugs in code changes",
          "parameters": [
            {
              "name": "getPredictiveBugAnalysis",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getDeveloperProductivity",
          "description": "Measure developer productivity metrics",
          "parameters": [
            {
              "name": "getDeveloperProductivity",
              "required": false,
              "type": "string"
            },
            {
              "name": "Measure",
              "required": false,
              "type": "string"
            },
            {
              "name": "developer",
              "required": false,
              "type": "string"
            },
            {
              "name": "productivity",
              "required": false,
              "type": "string"
            },
            {
              "name": "metrics",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getPredictiveEffortEstimation",
          "description": "AI-based effort estimation for work items",
          "parameters": [
            {
              "name": "getPredictiveEffortEstimation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getCodeQualityTrends",
          "description": "Track code quality trends over time",
          "parameters": [
            {
              "name": "getCodeQualityTrends",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "suggestWorkItemRefinements",
          "description": "Get AI suggestions for work item refinements",
          "parameters": [
            {
              "name": "suggestWorkItemRefinements",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "suggestAutomationOpportunities",
          "description": "Identify opportunities for automation",
          "parameters": [
            {
              "name": "Identify",
              "required": false,
              "type": "string"
            },
            {
              "name": "opportunities",
              "required": false,
              "type": "string"
            },
            {
              "name": "for",
              "required": false,
              "type": "string"
            },
            {
              "name": "automation",
              "required": false,
              "type": "string"
            },
            {
              "name": "projectId",
              "required": false,
              "type": "string"
            },
            {
              "name": "scopeType",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "createIntelligentAlerts",
          "description": "Set up intelligent alerts based on patterns",
          "parameters": [
            {
              "name": "createIntelligentAlerts",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "predictBuildFailures",
          "description": "Predict potential build failures before they occur",
          "parameters": [
            {
              "name": "predictBuildFailures",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "optimizeTestSelection",
          "description": "Intelligently select tests to run based on changes",
          "parameters": [
            {
              "name": "optimizeTestSelection",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@RyanCardin15/azuredevops-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@RyanCardin15/azuredevops-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1559.@RyanCardin15_azuredevops-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1427
  }
}