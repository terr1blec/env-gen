{
  "labels": {
    "analysis": "The MCP Server's core functionality revolves around searching and retrieving detailed information about Airbnb listings. It provides tools for browsing properties with various filters, accessing structured data, and obtaining direct links to listings. This is aimed at travelers planning trips without requiring an API key, adhering to Airbnb's guidelines. The problem it solves is the need for easy access to Airbnb property information for travel planning without bypassing Airbnb's official channels.",
    "reasoning": "The primary label \"Travel & Maps\" was chosen because the server's main purpose is related to travel planning and property searching, which aligns well with location-based services and navigation. The secondary label \"Web Search & Research\" is applicable due to its filtering and data retrieval capabilities. There is no need for a custom label as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Travel & Maps",
    "secondary_labels": [
      "Web Search & Research"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 114,
    "server_name": "Airbnb Search and Listing Server",
    "rank_by_usage": 115,
    "usage_count": "591",
    "original_file": "../crawler/smithery/@openbnb-org_mcp-server-airbnb.json",
    "mode": "smithery",
    "timestamp": 1751937975,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@openbnb-org/mcp-server-airbnb/mcp?config=eyJpZ25vcmVSb2JvdHNUeHQiOiBmYWxzZX0=&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "airbnb_search",
          "description": "Search for Airbnb listings with various filters and pagination. Provide direct links to the user",
          "input_schema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Location to search for (city, state, etc.)"
              },
              "placeId": {
                "type": "string",
                "description": "Google Maps Place ID (overrides the location parameter)"
              },
              "checkin": {
                "type": "string",
                "description": "Check-in date (YYYY-MM-DD)"
              },
              "checkout": {
                "type": "string",
                "description": "Check-out date (YYYY-MM-DD)"
              },
              "adults": {
                "type": "number",
                "description": "Number of adults"
              },
              "children": {
                "type": "number",
                "description": "Number of children"
              },
              "infants": {
                "type": "number",
                "description": "Number of infants"
              },
              "pets": {
                "type": "number",
                "description": "Number of pets"
              },
              "minPrice": {
                "type": "number",
                "description": "Minimum price for the stay"
              },
              "maxPrice": {
                "type": "number",
                "description": "Maximum price for the stay"
              },
              "cursor": {
                "type": "string",
                "description": "Base64-encoded string used for Pagination"
              },
              "ignoreRobotsText": {
                "type": "boolean",
                "description": "Ignore robots.txt rules for this request"
              }
            },
            "required": [
              "location"
            ]
          },
          "annotations": null
        },
        {
          "name": "airbnb_listing_details",
          "description": "Get detailed information about a specific Airbnb listing. Provide direct links to the user",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The Airbnb listing ID"
              },
              "checkin": {
                "type": "string",
                "description": "Check-in date (YYYY-MM-DD)"
              },
              "checkout": {
                "type": "string",
                "description": "Check-out date (YYYY-MM-DD)"
              },
              "adults": {
                "type": "number",
                "description": "Number of adults"
              },
              "children": {
                "type": "number",
                "description": "Number of children"
              },
              "infants": {
                "type": "number",
                "description": "Number of infants"
              },
              "pets": {
                "type": "number",
                "description": "Number of pets"
              },
              "ignoreRobotsText": {
                "type": "boolean",
                "description": "Ignore robots.txt rules for this request"
              }
            },
            "required": [
              "id"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 2,
      "tool_names": [
        "airbnb_search",
        "airbnb_listing_details"
      ]
    },
    "server_info_crawled": {
      "id": 114,
      "name": "Airbnb Search and Listing Server",
      "author": "@openbnb-org/mcp-server-airbnb",
      "overview": "Search for Airbnb listings and get detailed information about specific properties. Effortlessly plan your next trip with structured data and no API key required, while respecting Airbnb's guidelines.",
      "repository_url": "https://github.com/openbnb-org/mcp-server-airbnb",
      "homepage": "https://smithery.ai/server/@openbnb-org/mcp-server-airbnb",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "591",
      "success_rate": "99.93%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@openbnb-org_mcp-server-airbnb.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "airbnb_search",
          "description": "Search for Airbnb listings with various filters and pagination. Provide direct links to the user",
          "input_schema": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Location to search for (city, state, etc.)"
              },
              "placeId": {
                "type": "string",
                "description": "Google Maps Place ID (overrides the location parameter)"
              },
              "checkin": {
                "type": "string",
                "description": "Check-in date (YYYY-MM-DD)"
              },
              "checkout": {
                "type": "string",
                "description": "Check-out date (YYYY-MM-DD)"
              },
              "adults": {
                "type": "number",
                "description": "Number of adults"
              },
              "children": {
                "type": "number",
                "description": "Number of children"
              },
              "infants": {
                "type": "number",
                "description": "Number of infants"
              },
              "pets": {
                "type": "number",
                "description": "Number of pets"
              },
              "minPrice": {
                "type": "number",
                "description": "Minimum price for the stay"
              },
              "maxPrice": {
                "type": "number",
                "description": "Maximum price for the stay"
              },
              "cursor": {
                "type": "string",
                "description": "Base64-encoded string used for Pagination"
              },
              "ignoreRobotsText": {
                "type": "boolean",
                "description": "Ignore robots.txt rules for this request"
              }
            },
            "required": [
              "location"
            ]
          },
          "annotations": null
        },
        {
          "name": "airbnb_listing_details",
          "description": "Get detailed information about a specific Airbnb listing. Provide direct links to the user",
          "input_schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The Airbnb listing ID"
              },
              "checkin": {
                "type": "string",
                "description": "Check-in date (YYYY-MM-DD)"
              },
              "checkout": {
                "type": "string",
                "description": "Check-out date (YYYY-MM-DD)"
              },
              "adults": {
                "type": "number",
                "description": "Number of adults"
              },
              "children": {
                "type": "number",
                "description": "Number of children"
              },
              "infants": {
                "type": "number",
                "description": "Number of infants"
              },
              "pets": {
                "type": "number",
                "description": "Number of pets"
              },
              "ignoreRobotsText": {
                "type": "boolean",
                "description": "Ignore robots.txt rules for this request"
              }
            },
            "required": [
              "id"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"ignoreRobotsTxt\": false\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@openbnb-org/mcp-server-airbnb/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"ignoreRobotsTxt\": false\n}",
      "python_sdk_url": "https://server.smithery.ai/@openbnb-org/mcp-server-airbnb/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "0115.@openbnb-org_mcp-server-airbnb_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 112
  }
}