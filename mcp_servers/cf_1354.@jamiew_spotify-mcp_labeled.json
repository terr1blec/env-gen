{
  "labels": {
    "analysis": "The MCP Server is designed to interact with Spotify's API, allowing users to control music playback, search for content, and manage their music library through various tools. Its core functionality revolves around playlist management and playback control, making it a specialized tool for music lovers who want programmatic access to their Spotify accounts. The available tools cover all aspects of Spotify interaction, from playback management to playlist administration, including custom playlist cover handling.",
    "reasoning": "The primary functionality of this server aligns closely with music streaming and personal music library management, which fits well under the \"Music & Playback\" category (proposed as a custom label, as it's not directly covered by predefined options). As secondary labels, \"Daily Productivity\" is relevant for playlist organization and \"Content Creation\" for playlist curation. These labels collectively capture the server's focus on music management and customization.",
    "primary_label": "Daily Productivity",
    "secondary_labels": [
      "Content Creation"
    ],
    "custom_label": "Music & Playback",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1353,
    "server_name": "Spotify",
    "rank_by_usage": 1354,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@jamiew_spotify-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@jamiew/spotify-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1353,
      "name": "Spotify",
      "author": "@jamiew/spotify-mcp",
      "overview": "Connect to Spotify to control playback and manage your music library. This fork includes playlist management support",
      "repository_url": "https://github.com/jamiew/spotify-mcp",
      "homepage": "https://smithery.ai/server/@jamiew/spotify-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@jamiew_spotify-mcp.json",
      "tools_count": 8,
      "tools": [
        {
          "name": "SpotifyPlayback",
          "description": "Deploy Server @jamiew/spotify-mcp Try in Playground SpotifyPlayback",
          "parameters": []
        },
        {
          "name": "SpotifySearch",
          "description": "Search for tracks, albums, artists, or playlists on Spotify.",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "qtype",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "SpotifyQueue",
          "description": "Manage the playback queue - get the queue or add tracks.",
          "parameters": [
            {
              "name": "action",
              "required": true,
              "type": "string"
            },
            {
              "name": "track_id",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "SpotifyGetInfo",
          "description": "Get detailed information about a Spotify item (track, album, artist, or playlist).",
          "parameters": [
            {
              "name": "SpotifyGetInfo",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "SpotifyPlaylistManage",
          "description": "Manage playlists - create, update details, or get details of playlists.",
          "parameters": [
            {
              "name": "SpotifyPlaylistManage",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "SpotifyPlaylistItems",
          "description": "Manage playlist items - add, remove, or update items in a playlist.",
          "parameters": [
            {
              "name": "SpotifyPlaylistItems",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "SpotifyUserPlaylists",
          "description": "Get a user's playlists.",
          "parameters": [
            {
              "name": "Get",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "offset",
              "required": false,
              "type": "string"
            },
            {
              "name": "user_id",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "SpotifyPlaylistCover",
          "description": "Manage playlist cover image - get or upload custom cover.",
          "parameters": [
            {
              "name": "SpotifyPlaylistCover",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@jamiew/spotify-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "spotifyClientSecret",
          "required": true,
          "description": "Spotify Client Secret for API access"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@jamiew/spotify-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1354.@jamiew_spotify-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1275
  }
}