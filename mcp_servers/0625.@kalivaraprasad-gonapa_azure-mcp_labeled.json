{
  "labels": {
    "analysis": "The MCP Server described is an Azure Integration Server designed to enable natural language interaction with Azure cloud services. It allows users to manage Azure subscriptions, tenants, and resources through conversational commands, providing automatic authentication and robust error handling. The available tools focus on administrative tasks such as listing role assignments, defining roles, querying user permissions, and managing resource groups and resources. These capabilities indicate a strong focus on cloud infrastructure management and access control.",
    "reasoning": "The primary functionality of interacting with Azure cloud services aligns well with the \"Cloud Services\" category, as it handles cloud platform integration and resource management. The administrative and access control aspects also strongly tie into \"Security & Authentication,\" making it a relevant secondary label. Given the specific focus on Azure, a custom label \"Azure Cloud Management\" is added for better categorization and specificity.",
    "primary_label": "Cloud Services",
    "secondary_labels": [
      "Security & Authentication"
    ],
    "custom_label": "Azure Cloud Management",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 624,
    "server_name": "Azure Integration Server",
    "rank_by_usage": 625,
    "usage_count": "16",
    "original_file": "../crawler/smithery/@kalivaraprasad-gonapa_azure-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@kalivaraprasad-gonapa/azure-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "list-role-assignments",
          "description": "List role assignments for the subscription or resource group",
          "input_schema": {
            "type": "object",
            "properties": {
              "scope": {
                "type": "string",
                "description": "Scope for role assignments (subscription, resource group, or resource ID). Leave empty for subscription level."
              }
            },
            "required": []
          },
          "annotations": null
        },
        {
          "name": "get-role-definitions",
          "description": "List available role definitions",
          "input_schema": {
            "type": "object",
            "properties": {
              "scope": {
                "type": "string",
                "description": "Scope for role definitions. Leave empty for subscription level."
              }
            },
            "required": []
          },
          "annotations": null
        },
        {
          "name": "get-user-permissions",
          "description": "Get detailed user permissions by combining role assignments and role definitions",
          "input_schema": {
            "type": "object",
            "properties": {
              "scope": {
                "type": "string",
                "description": "Scope to check permissions for. Leave empty for subscription level."
              }
            },
            "required": []
          },
          "annotations": null
        },
        {
          "name": "run-azure-code",
          "description": "Run Azure code",
          "input_schema": {
            "type": "object",
            "properties": {
              "reasoning": {
                "type": "string",
                "description": "The reasoning behind the code"
              },
              "code": {
                "type": "string",
                "description": "Your job is to answer questions about Azure environment by writing Javascript code using Azure SDK. The code must adhere to a few rules:\n- Use the provided client instances: 'resourceClient' for ResourceManagementClient, 'subscriptionClient' for SubscriptionClient, and 'authorizationClient' for AuthorizationManagementClient\n- DO NOT create new client instances or import Azure SDK packages\n- Use async/await and promises\n- Think step-by-step before writing the code\n- Avoid hardcoded values like Resource IDs\n- Handle errors gracefully\n- Handle pagination correctly using for-await-of loops\n- Data returned must be JSON containing only the minimal amount of data needed\n- Code MUST \"return\" a value: string, number, boolean or JSON object"
              },
              "tenantId": {
                "type": "string",
                "description": "Azure Tenant ID"
              },
              "subscriptionId": {
                "type": "string",
                "description": "Azure Subscription ID"
              }
            },
            "required": [
              "reasoning",
              "code"
            ]
          },
          "annotations": null
        },
        {
          "name": "list-tenants",
          "description": "List all available Azure tenants",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "select-tenant",
          "description": "Select Azure tenant and subscription",
          "input_schema": {
            "type": "object",
            "properties": {
              "tenantId": {
                "type": "string",
                "description": "Azure Tenant ID to select"
              },
              "subscriptionId": {
                "type": "string",
                "description": "Azure Subscription ID to select"
              }
            },
            "required": [
              "tenantId",
              "subscriptionId"
            ]
          },
          "annotations": null
        },
        {
          "name": "list-resource-groups",
          "description": "List all resource groups in the selected subscription",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "get-resource-details",
          "description": "Get detailed information about a specific resource",
          "input_schema": {
            "type": "object",
            "properties": {
              "resourceId": {
                "type": "string",
                "description": "Azure Resource ID"
              }
            },
            "required": [
              "resourceId"
            ]
          },
          "annotations": null
        },
        {
          "name": "create-resource-group",
          "description": "Create a new resource group",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Resource group name"
              },
              "location": {
                "type": "string",
                "description": "Azure region"
              },
              "tags": {
                "type": "object",
                "description": "Resource tags (optional)"
              }
            },
            "required": [
              "name",
              "location"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 9,
      "tool_names": [
        "list-role-assignments",
        "get-role-definitions",
        "get-user-permissions",
        "run-azure-code",
        "list-tenants",
        "select-tenant",
        "list-resource-groups",
        "get-resource-details",
        "create-resource-group"
      ]
    },
    "server_info_crawled": {
      "id": 624,
      "name": "Azure Integration Server",
      "author": "@kalivaraprasad-gonapa/azure-mcp",
      "overview": "Enable natural language interaction with Azure cloud services directly from your chat interface. Manage Azure subscriptions, tenants, and resources seamlessly through conversational commands. Benefit from automatic authentication and robust error handling for a smooth user experience.",
      "repository_url": "https://github.com/kalivaraprasad-gonapa/azure-mcp",
      "homepage": "https://smithery.ai/server/@kalivaraprasad-gonapa/azure-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "16",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@kalivaraprasad-gonapa_azure-mcp.json",
      "tools_count": 9,
      "tools": [
        {
          "name": "list-role-assignments",
          "description": "List role assignments for the subscription or resource group",
          "input_schema": {
            "type": "object",
            "properties": {
              "scope": {
                "type": "string",
                "description": "Scope for role assignments (subscription, resource group, or resource ID). Leave empty for subscription level."
              }
            },
            "required": []
          },
          "annotations": null
        },
        {
          "name": "get-role-definitions",
          "description": "List available role definitions",
          "input_schema": {
            "type": "object",
            "properties": {
              "scope": {
                "type": "string",
                "description": "Scope for role definitions. Leave empty for subscription level."
              }
            },
            "required": []
          },
          "annotations": null
        },
        {
          "name": "get-user-permissions",
          "description": "Get detailed user permissions by combining role assignments and role definitions",
          "input_schema": {
            "type": "object",
            "properties": {
              "scope": {
                "type": "string",
                "description": "Scope to check permissions for. Leave empty for subscription level."
              }
            },
            "required": []
          },
          "annotations": null
        },
        {
          "name": "run-azure-code",
          "description": "Run Azure code",
          "input_schema": {
            "type": "object",
            "properties": {
              "reasoning": {
                "type": "string",
                "description": "The reasoning behind the code"
              },
              "code": {
                "type": "string",
                "description": "Your job is to answer questions about Azure environment by writing Javascript code using Azure SDK. The code must adhere to a few rules:\n- Use the provided client instances: 'resourceClient' for ResourceManagementClient, 'subscriptionClient' for SubscriptionClient, and 'authorizationClient' for AuthorizationManagementClient\n- DO NOT create new client instances or import Azure SDK packages\n- Use async/await and promises\n- Think step-by-step before writing the code\n- Avoid hardcoded values like Resource IDs\n- Handle errors gracefully\n- Handle pagination correctly using for-await-of loops\n- Data returned must be JSON containing only the minimal amount of data needed\n- Code MUST \"return\" a value: string, number, boolean or JSON object"
              },
              "tenantId": {
                "type": "string",
                "description": "Azure Tenant ID"
              },
              "subscriptionId": {
                "type": "string",
                "description": "Azure Subscription ID"
              }
            },
            "required": [
              "reasoning",
              "code"
            ]
          },
          "annotations": null
        },
        {
          "name": "list-tenants",
          "description": "List all available Azure tenants",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "select-tenant",
          "description": "Select Azure tenant and subscription",
          "input_schema": {
            "type": "object",
            "properties": {
              "tenantId": {
                "type": "string",
                "description": "Azure Tenant ID to select"
              },
              "subscriptionId": {
                "type": "string",
                "description": "Azure Subscription ID to select"
              }
            },
            "required": [
              "tenantId",
              "subscriptionId"
            ]
          },
          "annotations": null
        },
        {
          "name": "list-resource-groups",
          "description": "List all resource groups in the selected subscription",
          "input_schema": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "annotations": null
        },
        {
          "name": "get-resource-details",
          "description": "Get detailed information about a specific resource",
          "input_schema": {
            "type": "object",
            "properties": {
              "resourceId": {
                "type": "string",
                "description": "Azure Resource ID"
              }
            },
            "required": [
              "resourceId"
            ]
          },
          "annotations": null
        },
        {
          "name": "create-resource-group",
          "description": "Create a new resource group",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Resource group name"
              },
              "location": {
                "type": "string",
                "description": "Azure region"
              },
              "tags": {
                "type": "object",
                "description": "Resource tags (optional)"
              }
            },
            "required": [
              "name",
              "location"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@kalivaraprasad-gonapa/azure-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@kalivaraprasad-gonapa/azure-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0625.@kalivaraprasad-gonapa_azure-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 610
  }
}