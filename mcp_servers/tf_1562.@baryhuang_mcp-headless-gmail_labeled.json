{
  "labels": {
    "analysis": "The MCP Server specializes in Gmail email operations, enabling users to send and retrieve emails through Gmail's API without requiring local credential storage. It provides tools for accessing recent emails, fetching email content, sending messages, and refreshing authentication tokens. The server is designed for secure, headless operations, making it suitable for marketing or automation tasks that require Gmail functionality without accessing other Google services.",
    "reasoning": "The primary functionality of sending and retrieving emails aligns with communication-focused tools. Since the server is tailored specifically for Gmail, a custom label better captures its niche use case.",
    "primary_label": "Communication Tools",
    "secondary_labels": [
      "Security & Authentication"
    ],
    "custom_label": "Gmail Automation",
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1561,
    "server_name": "Headless Gmail Server",
    "rank_by_usage": 1562,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@baryhuang_mcp-headless-gmail.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@baryhuang/mcp-headless-gmail/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "gmail_refresh_token",
          "description": "Refresh the access token using the refresh token and client credentials",
          "input_schema": {
            "type": "object",
            "properties": {
              "google_access_token": {
                "type": "string",
                "description": "Google OAuth2 access token (optional if expired)"
              },
              "google_refresh_token": {
                "type": "string",
                "description": "Google OAuth2 refresh token"
              },
              "google_client_id": {
                "type": "string",
                "description": "Google OAuth2 client ID for token refresh"
              },
              "google_client_secret": {
                "type": "string",
                "description": "Google OAuth2 client secret for token refresh"
              }
            },
            "required": [
              "google_refresh_token",
              "google_client_id",
              "google_client_secret"
            ]
          },
          "annotations": null
        },
        {
          "name": "gmail_get_recent_emails",
          "description": "Get the most recent emails from Gmail (returns metadata, snippets, and first 1k chars of body)",
          "input_schema": {
            "type": "object",
            "properties": {
              "google_access_token": {
                "type": "string",
                "description": "Google OAuth2 access token"
              },
              "max_results": {
                "type": "integer",
                "description": "Maximum number of emails to return (default: 10)"
              },
              "unread_only": {
                "type": "boolean",
                "description": "Whether to return only unread emails (default: False)"
              }
            },
            "required": [
              "google_access_token"
            ]
          },
          "annotations": null
        },
        {
          "name": "gmail_get_email_body_chunk",
          "description": "Get a 1k character chunk of an email body starting from the specified offset",
          "input_schema": {
            "type": "object",
            "properties": {
              "google_access_token": {
                "type": "string",
                "description": "Google OAuth2 access token"
              },
              "message_id": {
                "type": "string",
                "description": "ID of the message to retrieve"
              },
              "thread_id": {
                "type": "string",
                "description": "ID of the thread to retrieve (will get the first message if multiple exist)"
              },
              "offset": {
                "type": "integer",
                "description": "Offset in characters to start from (default: 0)"
              }
            },
            "required": [
              "google_access_token"
            ]
          },
          "annotations": null
        },
        {
          "name": "gmail_send_email",
          "description": "Send an email via Gmail",
          "input_schema": {
            "type": "object",
            "properties": {
              "google_access_token": {
                "type": "string",
                "description": "Google OAuth2 access token"
              },
              "to": {
                "type": "string",
                "description": "Recipient email address"
              },
              "subject": {
                "type": "string",
                "description": "Email subject"
              },
              "body": {
                "type": "string",
                "description": "Email body content (plain text)"
              },
              "html_body": {
                "type": "string",
                "description": "Email body content in HTML format (optional)"
              }
            },
            "required": [
              "google_access_token",
              "to",
              "subject",
              "body"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 4,
      "tool_names": [
        "gmail_refresh_token",
        "gmail_get_recent_emails",
        "gmail_get_email_body_chunk",
        "gmail_send_email"
      ]
    },
    "server_info_crawled": {
      "id": 1561,
      "name": "Headless Gmail Server",
      "author": "@baryhuang/mcp-headless-gmail",
      "overview": "Access and send emails through Gmail without local credential setup. Operate entirely in headless environments, ensuring a secure separation of credential storage from server operations. Ideal for marketing applications needing focused Gmail functionality without additional Google services.",
      "repository_url": "https://github.com/baryhuang/mcp-headless-gmail",
      "homepage": "https://smithery.ai/server/@baryhuang/mcp-headless-gmail",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@baryhuang_mcp-headless-gmail.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "gmail_refresh_token",
          "description": "Refresh the access token using the refresh token and client credentials",
          "input_schema": {
            "type": "object",
            "properties": {
              "google_access_token": {
                "type": "string",
                "description": "Google OAuth2 access token (optional if expired)"
              },
              "google_refresh_token": {
                "type": "string",
                "description": "Google OAuth2 refresh token"
              },
              "google_client_id": {
                "type": "string",
                "description": "Google OAuth2 client ID for token refresh"
              },
              "google_client_secret": {
                "type": "string",
                "description": "Google OAuth2 client secret for token refresh"
              }
            },
            "required": [
              "google_refresh_token",
              "google_client_id",
              "google_client_secret"
            ]
          },
          "annotations": null
        },
        {
          "name": "gmail_get_recent_emails",
          "description": "Get the most recent emails from Gmail (returns metadata, snippets, and first 1k chars of body)",
          "input_schema": {
            "type": "object",
            "properties": {
              "google_access_token": {
                "type": "string",
                "description": "Google OAuth2 access token"
              },
              "max_results": {
                "type": "integer",
                "description": "Maximum number of emails to return (default: 10)"
              },
              "unread_only": {
                "type": "boolean",
                "description": "Whether to return only unread emails (default: False)"
              }
            },
            "required": [
              "google_access_token"
            ]
          },
          "annotations": null
        },
        {
          "name": "gmail_get_email_body_chunk",
          "description": "Get a 1k character chunk of an email body starting from the specified offset",
          "input_schema": {
            "type": "object",
            "properties": {
              "google_access_token": {
                "type": "string",
                "description": "Google OAuth2 access token"
              },
              "message_id": {
                "type": "string",
                "description": "ID of the message to retrieve"
              },
              "thread_id": {
                "type": "string",
                "description": "ID of the thread to retrieve (will get the first message if multiple exist)"
              },
              "offset": {
                "type": "integer",
                "description": "Offset in characters to start from (default: 0)"
              }
            },
            "required": [
              "google_access_token"
            ]
          },
          "annotations": null
        },
        {
          "name": "gmail_send_email",
          "description": "Send an email via Gmail",
          "input_schema": {
            "type": "object",
            "properties": {
              "google_access_token": {
                "type": "string",
                "description": "Google OAuth2 access token"
              },
              "to": {
                "type": "string",
                "description": "Recipient email address"
              },
              "subject": {
                "type": "string",
                "description": "Email subject"
              },
              "body": {
                "type": "string",
                "description": "Email body content (plain text)"
              },
              "html_body": {
                "type": "string",
                "description": "Email body content in HTML format (optional)"
              }
            },
            "required": [
              "google_access_token",
              "to",
              "subject",
              "body"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@baryhuang/mcp-headless-gmail/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@baryhuang/mcp-headless-gmail/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1562.@baryhuang_mcp-headless-gmail_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1430
  }
}