{
  "labels": {
    "analysis": "The MCP Server, CiteAssist, is focused on retrieving citation data in BibTeX format from sources like CiteAs and Google Scholar. Its primary use case is to automate the process of collecting academic references for research, making it particularly useful for scholars, researchers, and developers who need to integrate citation data into their workflows. The tools provided allow users to fetch citations by resource identifiers (DOI, URL, keyword) or by querying a scholarly database.",
    "reasoning": "The primary label \"Web Search & Research\" is chosen because the server's core functionality revolves around gathering academic and scholarly citation data, which is a research-related task. This aligns with the predefined category of performing searches and retrieving structured data to support research activities. The secondary label \"Database Operations\" is relevant because the server interacts with scholarly databases to extract and format data, effectively managing database queries. No custom label is necessary as the predefined labels adequately cover the server's functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Database Operations"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 279,
    "server_name": "CiteAssist MCP",
    "rank_by_usage": 280,
    "usage_count": "132",
    "original_file": "../crawler/smithery/@ndchikin_reference-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ndchikin/reference-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_citeas_data",
          "description": "Retrieve BibTeX-formatted citation for the specified `resource` (e.g., DOI, URL, keyword) from the CiteAs",
          "input_schema": {
            "properties": {
              "resource": {
                "title": "Resource",
                "type": "string"
              }
            },
            "required": [
              "resource"
            ],
            "title": "get_citeas_dataArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_scholar_data",
          "description": "Retrieve `results` BibTeX-formatted citations for publications matching the `query` from the Google Scholar",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "results": {
                "default": 2,
                "title": "Results",
                "type": "integer"
              }
            },
            "required": [
              "query"
            ],
            "title": "get_scholar_dataArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 2,
      "tool_names": [
        "get_citeas_data",
        "get_scholar_data"
      ]
    },
    "server_info_crawled": {
      "id": 279,
      "name": "CiteAssist MCP",
      "author": "@ndchikin/reference-mcp",
      "overview": "Retrieve citation data effortlessly from CiteAs and Google Scholar. Get BibTeX-formatted citations for your resources with just a few commands. Enhance your research workflow by integrating citation retrieval directly into your applications.",
      "repository_url": "https://github.com/ndchikin/reference-mcp",
      "homepage": "https://smithery.ai/server/@ndchikin/reference-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "132",
      "success_rate": "99.53%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ndchikin_reference-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "get_citeas_data",
          "description": "Retrieve BibTeX-formatted citation for the specified `resource` (e.g., DOI, URL, keyword) from the CiteAs",
          "input_schema": {
            "properties": {
              "resource": {
                "title": "Resource",
                "type": "string"
              }
            },
            "required": [
              "resource"
            ],
            "title": "get_citeas_dataArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_scholar_data",
          "description": "Retrieve `results` BibTeX-formatted citations for publications matching the `query` from the Google Scholar",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "results": {
                "default": 2,
                "title": "Results",
                "type": "integer"
              }
            },
            "required": [
              "query"
            ],
            "title": "get_scholar_dataArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ndchikin/reference-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ndchikin/reference-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0280.@ndchikin_reference-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 276
  }
}