{
  "labels": {
    "analysis": "The 小红书MCP服务 primarily facilitates interaction with the Xiaohongshu (Little Red Book) platform, a Chinese lifestyle, shopping, and social networking app. Its core functionality includes searching notes (similar to blog posts), retrieving note content and comments, and posting comments. The service simplifies data access by providing direct HTTP interfaces, bypassing the need for heavy browser automation. This makes it particularly useful for applications that need to integrate Xiaohongshu's social features and content in a programmatic way.",
    "reasoning": "The primary label \"API Integration\" was chosen because the service provides direct HTTP interfaces for interacting with Xiaohongshu, acting as a middleware layer between applications and the platform. The secondary label \"Social Media\" was selected because the server deals with content and comments from Xiaohongshu, which is a social networking platform focused on lifestyle and shopping. A custom label was not necessary as the predefined labels adequately capture the server's functionality.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Social Media"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2388,
    "server_name": "小红书MCP服务",
    "rank_by_usage": 2389,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@wuxiao2020_xhs-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@wuxiao2020/xhs-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2388,
      "name": "小红书MCP服务",
      "author": "@wuxiao2020/xhs-mcp",
      "overview": "Enable seamless interaction with Xiaohongshu by searching notes, retrieving note content, accessing comments, and posting comments. Simplify data access without heavy browser automation by directly calling HTTP interfaces. Enhance your applications with Xiaohongshu content and social features efficiently.",
      "repository_url": "https://github.com/wuxiao2020/xhs-mcp",
      "homepage": "https://smithery.ai/server/@wuxiao2020/xhs-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@wuxiao2020_xhs-mcp.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "check_cookie",
          "description": "Deploy Server @wuxiao2020/xhs-mcp Try in Playground check_cookie",
          "parameters": []
        },
        {
          "name": "search_notes",
          "description": "根据关键词搜索笔记\n\n        Args:\n            keywords: 搜索关键词",
          "parameters": [
            {
              "name": "keywords",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_note_content",
          "description": "获取笔记内容 Args: note_id: 笔记 note_id xsec_token: 笔记 xsec_token",
          "parameters": []
        },
        {
          "name": "get_note_comments",
          "description": "获取笔记评论 Args: note_id: 笔记 note_id xsec_token: 笔记 xsec_token",
          "parameters": []
        },
        {
          "name": "post_comment",
          "description": "发布评论到指定笔记\n\n    Args:\n        note_id: 笔记 note_id\n        comment: 要发布的评论内容",
          "parameters": [
            {
              "name": "comment",
              "required": true,
              "type": "string"
            },
            {
              "name": "note_id",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@wuxiao2020/xhs-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@wuxiao2020/xhs-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2389.@wuxiao2020_xhs-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 2044
  }
}