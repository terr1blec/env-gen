{
  "labels": {
    "analysis": "The Flyworks Lipsync Server specializes in generating lipsync videos for digital avatars using either audio or text inputs. It enables users to create realistic or cartoon-style avatar animations that synchronize with speech, either in real-time (synchronous mode) or processed later (asynchronous mode). The server's primary function is to automate the creation of avatar video content, likely for applications in virtual assistants, gaming, or digital media. The tools provided focus on converting speech into animated visuals, making it a specialized tool for audio-visual synchronization.",
    "reasoning": "The primary functionality of creating lipsync videos for digital avatars aligns most closely with content creation, particularly in the realm of media generation. The tools provided automate the transformation of audio/text into animated content, which is a core aspect of content creation. While it could also be related to AI/ML tools due to the automation and animation generation, the primary output is media content, justifying the primary label. The ability to integrate with MCP clients for workflow automation suggests a secondary relevance to development tools and API integration. However, these are more peripheral to the core functionality.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "AI/ML Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1232,
    "server_name": "Flyworks Lipsync Server",
    "rank_by_usage": 1233,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@Flyworks-AI_flyworks-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Flyworks-AI/flyworks-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1232,
      "name": "Flyworks Lipsync Server",
      "author": "@Flyworks-AI/flyworks-mcp",
      "overview": "Create fast and free lipsync videos for digital avatars using audio or text inputs. Generate realistic or cartoon-style avatar animations with support for both synchronous and asynchronous processing modes. Easily integrate with MCP clients to automate avatar video creation workflows.",
      "repository_url": "https://github.com/Flyworks-AI/flyworks-mcp",
      "homepage": "https://smithery.ai/server/@Flyworks-AI/flyworks-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Flyworks-AI_flyworks-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "create_lipsync_video_by_audio",
          "description": "Create lipsync video by audio input. The tool will animate a digital human avatar to speak in sync with the provided audio.",
          "parameters": []
        },
        {
          "name": "create_lipsync_video_by_text",
          "description": "Create lipsync video by text input. The tool will generate audio from the text and animate a digital human avatar to speak it.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Flyworks-AI/flyworks-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "flyworksApiToken",
          "required": true,
          "description": "Flyworks API token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Flyworks-AI/flyworks-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1233.@Flyworks-AI_flyworks-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1182
  }
}