{
  "labels": {
    "analysis": "The MCP Server's core functionality revolves around providing real-time weather updates, forecasts, and alerts. The available tools enable users to retrieve weather-related data by location (latitude/longitude) or state codes, which facilitates integration into applications for weather monitoring and alert systems. The server primarily solves the need for accessible, location-specific weather information.",
    "reasoning": "The primary functionality aligns with the predefined \"Weather\" category, which directly matches the server's toolset. The tools also indirectly support \"Travel & Maps\" due to their use in location-based applications and \"News & Media\" since weather updates are often consumed as news. No custom label is necessary as the predefined categories sufficiently cover the server's purpose.",
    "primary_label": "Weather",
    "secondary_labels": [
      "Travel & Maps",
      "News & Media"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1897,
    "server_name": "Weather",
    "rank_by_usage": 1898,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@meowhuman_weather.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@meowhuman/weather/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_alerts",
          "description": "Get weather alerts for a US state.\n\n    Args:\n        state: Two-letter US state code (e.g. CA, NY)\n    ",
          "input_schema": {
            "properties": {
              "state": {
                "title": "State",
                "type": "string"
              }
            },
            "required": [
              "state"
            ],
            "title": "get_alertsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_forecast",
          "description": "Get weather forecast for a location.\n\n    Args:\n        latitude: Latitude of the location\n        longitude: Longitude of the location\n    ",
          "input_schema": {
            "properties": {
              "latitude": {
                "title": "Latitude",
                "type": "number"
              },
              "longitude": {
                "title": "Longitude",
                "type": "number"
              }
            },
            "required": [
              "latitude",
              "longitude"
            ],
            "title": "get_forecastArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 2,
      "tool_names": [
        "get_alerts",
        "get_forecast"
      ]
    },
    "server_info_crawled": {
      "id": 1897,
      "name": "Weather",
      "author": "@meowhuman/weather",
      "overview": "Provide real-time weather updates and forecasts to enhance your applications. Integrate weather data seamlessly and keep your users informed about current conditions and future forecasts.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@meowhuman/weather",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@meowhuman_weather.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "get_alerts",
          "description": "Get weather alerts for a US state.\n\n    Args:\n        state: Two-letter US state code (e.g. CA, NY)\n    ",
          "input_schema": {
            "properties": {
              "state": {
                "title": "State",
                "type": "string"
              }
            },
            "required": [
              "state"
            ],
            "title": "get_alertsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_forecast",
          "description": "Get weather forecast for a location.\n\n    Args:\n        latitude: Latitude of the location\n        longitude: Longitude of the location\n    ",
          "input_schema": {
            "properties": {
              "latitude": {
                "title": "Latitude",
                "type": "number"
              },
              "longitude": {
                "title": "Longitude",
                "type": "number"
              }
            },
            "required": [
              "latitude",
              "longitude"
            ],
            "title": "get_forecastArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@meowhuman/weather/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@meowhuman/weather/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1898.@meowhuman_weather_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1677
  }
}