{
  "labels": {
    "analysis": "The MCP Server's core functionality revolves around providing a simple yet essential tool for pausing or delaying execution for a specified duration. Its primary tool, \"wait\", allows users to delay tasks by a certain number of seconds, which is useful in scenarios where timing synchronization between different tasks or processes is required. The CLI or HTTP server interface makes this functionality accessible for integration into various applications, especially those needing controlled delays or time-based coordination.",
    "reasoning": "The primary label \"Daily Productivity\" is chosen because the delay/wait functionality is often used in productivity scenarios, such as scheduling tasks, controlling workflow timing, or managing processes in an organized manner. While there isn't a perfect predefined fit, this category captures the utility aspect of the server's tools. No secondary labels are needed as the functionality is quite narrow and specific. A custom label wasn't necessary as the predefined categories cover the basic use cases.",
    "primary_label": "Daily Productivity",
    "secondary_labels": [],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 398,
    "server_name": "Wait",
    "rank_by_usage": 399,
    "usage_count": "58",
    "original_file": "../crawler/smithery/@automation-ai-labs_mcp-wait.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@automation-ai-labs/mcp-wait/mcp?config=eyJwb3J0IjogODA4MCwgInRyYW5zcG9ydFR5cGUiOiAic3RkaW8ifQ==&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "wait",
          "description": "Wait for a specified number of seconds, useful for waiting for other tasks to finish",
          "input_schema": {
            "type": "object",
            "properties": {
              "seconds": {
                "type": "number",
                "minimum": 0,
                "maximum": 300,
                "description": "The number of seconds to wait (0-300)"
              }
            },
            "required": [
              "seconds"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "wait"
      ]
    },
    "server_info_crawled": {
      "id": 398,
      "name": "Wait",
      "author": "@automation-ai-labs/mcp-wait",
      "overview": "Pause execution for a specified duration while providing progress updates. Easily integrate waiting functionality into your applications with a simple CLI or HTTP server interface.",
      "repository_url": "https://github.com/automation-ai-labs/mcp-wait",
      "homepage": "https://smithery.ai/server/@automation-ai-labs/mcp-wait",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "58",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@automation-ai-labs_mcp-wait.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "wait",
          "description": "Wait for a specified number of seconds, useful for waiting for other tasks to finish",
          "input_schema": {
            "type": "object",
            "properties": {
              "seconds": {
                "type": "number",
                "minimum": 0,
                "maximum": 300,
                "description": "The number of seconds to wait (0-300)"
              }
            },
            "required": [
              "seconds"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"port\": 8080,\n  \"transportType\": \"stdio\"\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@automation-ai-labs/mcp-wait/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"port\": 8080,\n  \"transportType\": \"stdio\"\n}",
      "python_sdk_url": "https://server.smithery.ai/@automation-ai-labs/mcp-wait/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "0399.@automation-ai-labs_mcp-wait_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 393
  }
}