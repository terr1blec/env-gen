{
  "labels": {
    "analysis": "The MCP Server \"Hacker News\" is designed to fetch and parse stories from the Hacker News platform. Its core functionality revolves around gathering information from a specific web-based news aggregator focused on technology and startup-related content. The primary tool, \"get_stories,\" indicates that the server's main purpose is to retrieve and parse news items, suggesting it's used for aggregating and presenting curated content.",
    "reasoning": "The primary label \"Web Search & Research\" was chosen because the server's functionality aligns with gathering and organizing information from a specific source, which is a form of research. The secondary label \"News & Media\" was selected because Hacker News is a media platform, and the server's tools specifically target news content. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "News & Media"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 571,
    "server_name": "Hacker News",
    "rank_by_usage": 572,
    "usage_count": "20",
    "original_file": "../crawler/smithery/@pskill9_hn-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@pskill9/hn-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_stories",
          "description": "Get stories from Hacker News",
          "input_schema": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of stories to fetch (top, new, ask, show, jobs)",
                "enum": [
                  "top",
                  "new",
                  "ask",
                  "show",
                  "jobs"
                ],
                "default": "top"
              },
              "limit": {
                "type": "number",
                "description": "Number of stories to return (max 30)",
                "minimum": 1,
                "maximum": 30,
                "default": 10
              }
            }
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get_stories"
      ]
    },
    "server_info_crawled": {
      "id": 571,
      "name": "Hacker News",
      "author": "@pskill9/hn-server",
      "overview": "Fetch and parse stories from Hacker News.",
      "repository_url": "https://github.com/pskill9/hn-server",
      "homepage": "https://smithery.ai/server/@pskill9/hn-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "20",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@pskill9_hn-server.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_stories",
          "description": "Get stories from Hacker News",
          "input_schema": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of stories to fetch (top, new, ask, show, jobs)",
                "enum": [
                  "top",
                  "new",
                  "ask",
                  "show",
                  "jobs"
                ],
                "default": "top"
              },
              "limit": {
                "type": "number",
                "description": "Number of stories to return (max 30)",
                "minimum": 1,
                "maximum": 30,
                "default": 10
              }
            }
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@pskill9/hn-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@pskill9/hn-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0572.@pskill9_hn-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 560
  }
}