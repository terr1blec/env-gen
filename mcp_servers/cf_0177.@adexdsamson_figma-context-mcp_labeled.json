{
  "labels": {
    "analysis": "The MCP Server is designed to enable seamless integration between Figma design data and coding tools. Its primary functionality focuses on extracting Figma design metadata and assets, making it easier for coding agents to implement designs programmatically. The key tools allow for retrieving Figma data and downloading design assets, streamlining the process of converting designs into code for various frameworks.",
    "reasoning": "The primary label \"Design-to-Code Integration\" was chosen because the server's main purpose is to bridge the gap between design and development workflows. The secondary label \"Web Development\" is included since it typically involves implementing UI designs in web frameworks. The custom label \"Design Data Extraction\" was created to highlight the server's specific capability of extracting and providing Figma metadata for coding tools.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Development Tools"
    ],
    "custom_label": "Design Data Extraction",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 176,
    "server_name": "Framelink Figma MCP",
    "rank_by_usage": 177,
    "usage_count": "269",
    "original_file": "../crawler/smithery/@adexdsamson_figma-context-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@adexdsamson/figma-context-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 176,
      "name": "Framelink Figma MCP",
      "author": "@adexdsamson/figma-context-mcp",
      "overview": "Give your coding agent access to your Figma design data to implement designs in any framework in one shot. Enhance AI-powered coding tools like Cursor by providing them with simplified and relevant Figma metadata for more accurate and context-aware code generation. Streamline your design-to-code workflow by integrating Figma files directly into your development environment.",
      "repository_url": "https://github.com/adexdsamson/Figma-Context-MCP",
      "homepage": "https://smithery.ai/server/@adexdsamson/figma-context-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "269",
      "success_rate": "98.45%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@adexdsamson_figma-context-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "get_figma_data",
          "description": "Deploy Server Framelink Figma MCP @adexdsamson/figma-context-mcp Try in Playground get_figma_data",
          "parameters": []
        },
        {
          "name": "download_figma_images",
          "description": "Download SVG and PNG images used in a Figma file based on the IDs of image or icon nodes",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@adexdsamson/figma-context-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "figmaApiKey",
          "required": true,
          "description": "Figma API access token required to access Figma's API."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@adexdsamson/figma-context-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0177.@adexdsamson_figma-context-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 173
  }
}