{
  "labels": {
    "analysis": "The MCP Server's core functionality revolves around performing intelligent web searches and extracting specific information from web pages using natural language prompts. It leverages advanced web scraping and crawling capabilities to enhance content analysis and retrieval tasks. The available tool, \"Optional Settings,\" suggests user authentication for server management, which is secondary to the primary search and extraction capabilities.",
    "reasoning": "The primary functionality aligns with web search, research, and information extraction, making \"Web Search & Research\" the most appropriate primary label. The server's use of web scraping and crawling also relates to \"Browser Automation,\" which is why it is included as a secondary label. The custom label \"NLP-Powered Web Extraction\" is added to highlight the natural language processing aspect of the server's search and extraction capabilities.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Browser Automation"
    ],
    "custom_label": "NLP-Powered Web Extraction",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2414,
    "server_name": "WebSearch",
    "rank_by_usage": 2415,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@josemartinrodriguezmortaloni_webSearch-Tools.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@josemartinrodriguezmortaloni/webSearch-Tools/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2414,
      "name": "WebSearch",
      "author": "@josemartinrodriguezmortaloni/webSearch-Tools",
      "overview": "Perform intelligent web searches and extract specific information from web pages using natural language prompts. Leverage advanced web scraping and crawling capabilities to enhance your content analysis and retrieval tasks.",
      "repository_url": "https://github.com/josemartinrodriguezmortaloni/webSearch-Tools",
      "homepage": "https://smithery.ai/server/@josemartinrodriguezmortaloni/webSearch-Tools",
      "remote_or_local": "Remote",
      "license": "Not specified",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@josemartinrodriguezmortaloni_webSearch-Tools.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "Optional Settings",
          "description": "Access and manage servers by signing in.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@josemartinrodriguezmortaloni/webSearch-Tools/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "openaiApiKey",
          "required": true,
          "description": "OpenAI API key"
        },
        {
          "name": "firecrawlApiKey",
          "required": true,
          "description": "Firecrawl API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@josemartinrodriguezmortaloni/webSearch-Tools/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2415.@josemartinrodriguezmortaloni_webSearch-Tools_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 2064
  }
}