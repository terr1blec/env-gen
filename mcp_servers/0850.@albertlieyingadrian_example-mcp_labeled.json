{
  "labels": {
    "analysis": "The MCP Server appears to be a framework or platform designed to integrate Large Language Models (LLMs) with external tools and resources. Its primary functionality is facilitating dynamic interaction between LLMs and external systems through a standardized protocol, allowing for rapid development of tool-integrated AI systems. The example tool \"hello\" suggests basic interaction capabilities, but the core purpose is likely more about enabling the connection between LLMs and a wide range of tools and data sources.",
    "reasoning": "The primary label \"AI/ML Tools\" was chosen because the server's main purpose is to enable and facilitate interactions between LLMs and external tools, which is a core aspect of AI system functionality. The secondary label \"API Integration\" was selected because the standardized protocol for external tool interaction suggests API-like communication. The secondary label \"Development Tools\" fits because the server is designed for rapid development of MCP servers following best practices. No custom label is needed as the functionality is well-covered by existing categories.",
    "primary_label": "AI/ML Tools",
    "secondary_labels": [
      "API Integration",
      "Development Tools"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 849,
    "server_name": "Example MCP Server",
    "rank_by_usage": 850,
    "usage_count": "5",
    "original_file": "../crawler/smithery/@albertlieyingadrian_example-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@albertlieyingadrian/example-mcp/mcp?config=eyJkZWJ1ZyI6IGZhbHNlfQ==&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "hello",
          "description": "Say hello to someone",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name to greet"
              }
            },
            "required": [
              "name"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "hello"
      ]
    },
    "server_info_crawled": {
      "id": 849,
      "name": "Example MCP Server",
      "author": "@albertlieyingadrian/example-mcp",
      "overview": "Provide a fast and easy-to-build MCP server implementation to integrate LLMs with external tools and resources. Enable dynamic interaction with data and actions through a standardized protocol. Facilitate rapid development of MCP servers following best practices.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@albertlieyingadrian/example-mcp",
      "remote_or_local": "Remote",
      "license": "https://smithery.ai/docs/build/getting-started",
      "usage_count": "5",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@albertlieyingadrian_example-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "hello",
          "description": "Say hello to someone",
          "input_schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name to greet"
              }
            },
            "required": [
              "name"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"debug\": false\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@albertlieyingadrian/example-mcp/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"debug\": false\n}",
      "python_sdk_url": "https://server.smithery.ai/@albertlieyingadrian/example-mcp/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "0850.@albertlieyingadrian_example-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 831
  }
}