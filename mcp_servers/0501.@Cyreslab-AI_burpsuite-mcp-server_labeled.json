{
  "labels": {
    "analysis": "The Burpsuite Server is designed to facilitate web security testing and vulnerability scanning through the Burp Suite Professional tool. It allows AI assistants (or users) to automate and interact with security scans, including starting scans, checking scan status, retrieving vulnerability reports, and examining captured HTTP/HTTPS traffic. Additionally, it provides insights into the site structure discovered during scanning, which is crucial for security analysts. The core functionality revolves around web application security testing, making it a specialized tool for cybersecurity professionals.",
    "reasoning": "The primary label is \"Security & Authentication\" because the server's core functionality focuses on vulnerability scanning and assessing web security, which directly relates to security testing and authentication checks. Secondary labels include \"Web Search & Research\" due to its ability to analyze site structures and captured traffic, and \"Data Analysis & Processing\" since it retrieves and processes vulnerability issues for further analysis. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Security & Authentication",
    "secondary_labels": [
      "Web Search & Research",
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 500,
    "server_name": "Burpsuite Server",
    "rank_by_usage": 501,
    "usage_count": "32",
    "original_file": "../crawler/smithery/@Cyreslab-AI_burpsuite-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Cyreslab-AI/burpsuite-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "start_scan",
          "description": "Start a new vulnerability scan on a target URL",
          "input_schema": {
            "type": "object",
            "properties": {
              "target": {
                "type": "string",
                "description": "Target URL to scan (e.g., https://example.com)"
              },
              "scan_type": {
                "type": "string",
                "enum": [
                  "passive",
                  "active",
                  "full"
                ],
                "description": "Type of scan to perform"
              }
            },
            "required": [
              "target"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_scan_status",
          "description": "Check the status of a running scan",
          "input_schema": {
            "type": "object",
            "properties": {
              "scan_id": {
                "type": "string",
                "description": "ID of the scan to check"
              }
            },
            "required": [
              "scan_id"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_scan_issues",
          "description": "Get vulnerability issues found in a scan",
          "input_schema": {
            "type": "object",
            "properties": {
              "scan_id": {
                "type": "string",
                "description": "ID of the scan"
              },
              "severity": {
                "type": "string",
                "enum": [
                  "high",
                  "medium",
                  "low",
                  "info",
                  "all"
                ],
                "description": "Filter issues by severity"
              }
            },
            "required": [
              "scan_id"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_proxy_history",
          "description": "Get HTTP/HTTPS traffic captured by Burp Proxy",
          "input_schema": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string",
                "description": "Filter by host (optional)"
              },
              "method": {
                "type": "string",
                "description": "Filter by HTTP method (optional)"
              },
              "status_code": {
                "type": "number",
                "description": "Filter by HTTP status code (optional)"
              },
              "limit": {
                "type": "number",
                "description": "Maximum number of items to return (default: 10)"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "get_site_map",
          "description": "Get the site structure discovered during scanning and browsing",
          "input_schema": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string",
                "description": "Filter by host (optional)"
              },
              "with_parameters": {
                "type": "boolean",
                "description": "Only show URLs with parameters (optional)"
              },
              "limit": {
                "type": "number",
                "description": "Maximum number of items to return (default: 20)"
              }
            }
          },
          "annotations": null
        }
      ],
      "tool_count": 5,
      "tool_names": [
        "start_scan",
        "get_scan_status",
        "get_scan_issues",
        "get_proxy_history",
        "get_site_map"
      ]
    },
    "server_info_crawled": {
      "id": 500,
      "name": "Burpsuite Server",
      "author": "@Cyreslab-AI/burpsuite-mcp-server",
      "overview": "Enable AI assistants to perform web security testing and vulnerability scanning by interacting with Burpsuite Professional. Start scans, check scan status, retrieve vulnerability issues, and access HTTP/HTTPS traffic captured by Burp Proxy. Explore site structure discovered during scanning to enhance security analysis workflows.",
      "repository_url": "https://github.com/Cyreslab-AI/burpsuite-mcp-server",
      "homepage": "https://smithery.ai/server/@Cyreslab-AI/burpsuite-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "32",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Cyreslab-AI_burpsuite-mcp-server.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "start_scan",
          "description": "Start a new vulnerability scan on a target URL",
          "input_schema": {
            "type": "object",
            "properties": {
              "target": {
                "type": "string",
                "description": "Target URL to scan (e.g., https://example.com)"
              },
              "scan_type": {
                "type": "string",
                "enum": [
                  "passive",
                  "active",
                  "full"
                ],
                "description": "Type of scan to perform"
              }
            },
            "required": [
              "target"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_scan_status",
          "description": "Check the status of a running scan",
          "input_schema": {
            "type": "object",
            "properties": {
              "scan_id": {
                "type": "string",
                "description": "ID of the scan to check"
              }
            },
            "required": [
              "scan_id"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_scan_issues",
          "description": "Get vulnerability issues found in a scan",
          "input_schema": {
            "type": "object",
            "properties": {
              "scan_id": {
                "type": "string",
                "description": "ID of the scan"
              },
              "severity": {
                "type": "string",
                "enum": [
                  "high",
                  "medium",
                  "low",
                  "info",
                  "all"
                ],
                "description": "Filter issues by severity"
              }
            },
            "required": [
              "scan_id"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_proxy_history",
          "description": "Get HTTP/HTTPS traffic captured by Burp Proxy",
          "input_schema": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string",
                "description": "Filter by host (optional)"
              },
              "method": {
                "type": "string",
                "description": "Filter by HTTP method (optional)"
              },
              "status_code": {
                "type": "number",
                "description": "Filter by HTTP status code (optional)"
              },
              "limit": {
                "type": "number",
                "description": "Maximum number of items to return (default: 10)"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "get_site_map",
          "description": "Get the site structure discovered during scanning and browsing",
          "input_schema": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string",
                "description": "Filter by host (optional)"
              },
              "with_parameters": {
                "type": "boolean",
                "description": "Only show URLs with parameters (optional)"
              },
              "limit": {
                "type": "number",
                "description": "Maximum number of items to return (default: 20)"
              }
            }
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Cyreslab-AI/burpsuite-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Cyreslab-AI/burpsuite-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0501.@Cyreslab-AI_burpsuite-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 491
  }
}