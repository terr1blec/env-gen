{
  "labels": {
    "analysis": "The MCP Server described provides the ability to execute and interpret code within AI applications, effectively acting as a code interpreter service. It addresses the need for running code snippets or scripts programmatically within app workflows, which can be crucial for development, automation, or education-related purposes.",
    "reasoning": "The primary functionality centers around coding execution and interpretation, making \"Development Tools\" the best fit. Secondary labels such as \"AI/ML Tools\" and \"Education\" can be considered, as code interpretation can be integral to machine learning workflows and educational applications. No custom label is necessary as the predefined categories adequately cover the functionality.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "AI/ML Tools",
      "Education"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 696,
    "server_name": "Together Code Interpreter MCP Server",
    "rank_by_usage": 697,
    "usage_count": "11",
    "original_file": "../crawler/smithery/@togethercomputer_mcp-server-tci.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@togethercomputer/mcp-server-tci/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 696,
      "name": "Together Code Interpreter MCP Server",
      "author": "@togethercomputer/mcp-server-tci",
      "overview": "Add the ability to execute/interpret code to your AI apps.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@togethercomputer/mcp-server-tci",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "11",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@togethercomputer_mcp-server-tci.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "run-code",
          "description": "Deploy Server Together Code Interpreter MCP Server @togethercomputer/mcp-server-tci Try in Playground",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@togethercomputer/mcp-server-tci/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "togetherApiKey",
          "required": true,
          "description": "API key for Together AI"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@togethercomputer/mcp-server-tci/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0697.@togethercomputer_mcp-server-tci_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 681
  }
}