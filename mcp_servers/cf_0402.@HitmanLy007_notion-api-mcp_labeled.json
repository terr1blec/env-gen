{
  "labels": {
    "analysis": "The MCP Server specializes in integrating with Notion, allowing AI models to manage tasks, organize content, and interact with Notion databases dynamically. It provides a range of tools for creating, retrieving, updating, and archiving pages, managing todo lists, and working with database functionalities. The server primarily enhances productivity by acting as a bridge between AI systems and Notion's organizational capabilities.",
    "reasoning": "The **Primary Label** \"Daily Productivity\" is chosen because the server's core functionality revolves around task and content management, which are fundamental to productivity workflows. The **Secondary Labels** \"File Management\" (due to page and content handling) and \"Database Operations\" (as it interacts with Notion databases) are selected because they represent additional essential aspects of the server's capabilities. A custom label was not necessary as the predefined categories adequately cover the functionality.",
    "primary_label": "Daily Productivity",
    "secondary_labels": [
      "File Management",
      "Database Operations"
    ],
    "custom_label": "Notion API Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 401,
    "server_name": "Notion API Integration Server",
    "rank_by_usage": 402,
    "usage_count": "58",
    "original_file": "../crawler/smithery/@HitmanLy007_notion-api-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@HitmanLy007/notion-api-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 401,
      "name": "Notion API Integration Server",
      "author": "@HitmanLy007/notion-api-mcp",
      "overview": "Enable AI models to manage and organize tasks, databases, and content within Notion workspaces seamlessly. Create, update, and track todos, structure content with Markdown and hierarchical lists, and interact with Notion databases in real-time. Enhance productivity by integrating Notion's powerful features directly into your AI workflows.",
      "repository_url": "https://github.com/HitmanLy007/notion-api-mcp",
      "homepage": "https://smithery.ai/server/@HitmanLy007/notion-api-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "58",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@HitmanLy007_notion-api-mcp.json",
      "tools_count": 17,
      "tools": [
        {
          "name": "create_page",
          "description": "Deploy Server Notion API Integration Server @HitmanLy007/notion-api-mcp Try in Playground create_page",
          "parameters": [
            {
              "name": "parent_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "properties",
              "required": true,
              "type": "string"
            },
            {
              "name": "is_database",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_page",
          "description": "Retrieve a Notion page by its ID",
          "parameters": [
            {
              "name": "get_page",
              "required": false,
              "type": "string"
            },
            {
              "name": "page_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_page",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Update",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "Notion",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "page_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "archived",
              "required": false,
              "type": "string"
            },
            {
              "name": "properties",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "archive_page",
          "description": "Archive a Notion page",
          "parameters": [
            {
              "name": "archive_page",
              "required": false,
              "type": "string"
            },
            {
              "name": "Archive",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "Notion",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "page_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "restore_page",
          "description": "Restore an archived Notion page",
          "parameters": [
            {
              "name": "restore_page",
              "required": false,
              "type": "string"
            },
            {
              "name": "page_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_page_property",
          "description": "Get a page property item",
          "parameters": [
            {
              "name": "page_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "page_size",
              "required": false,
              "type": "string"
            },
            {
              "name": "property_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_todo",
          "description": "Add a new todo with rich features",
          "parameters": [
            {
              "name": "tags",
              "required": false,
              "type": "string"
            },
            {
              "name": "task",
              "required": true,
              "type": "string"
            },
            {
              "name": "due_date",
              "required": false,
              "type": "string"
            },
            {
              "name": "priority",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_todos",
          "description": "Search todos with advanced filtering",
          "parameters": [
            {
              "name": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "sort_by",
              "required": false,
              "type": "string"
            },
            {
              "name": "property_name",
              "required": false,
              "type": "string"
            },
            {
              "name": "sort_direction",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_database",
          "description": "Create a new database with custom schema in a parent page",
          "parameters": [
            {
              "name": "create_database",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "query_database",
          "description": "Query database with filters and sorting",
          "parameters": [
            {
              "name": "sorts",
              "required": false,
              "type": "string"
            },
            {
              "name": "database_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "filter_conditions",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "verify_connection",
          "description": "Verify authentication with Notion API",
          "parameters": [
            {
              "name": "verify_connection",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_database_info",
          "description": "Get information about the configured database",
          "parameters": [
            {
              "name": "get_database_info",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_content_blocks",
          "description": "Add content blocks with positioning support",
          "parameters": [
            {
              "name": "add_content_blocks",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_block_content",
          "description": "Get content of a specific block by its ID",
          "parameters": [
            {
              "name": "get_block_content",
              "required": false,
              "type": "string"
            },
            {
              "name": "block_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_block_children",
          "description": "List all children of a block",
          "parameters": [
            {
              "name": "block_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "page_size",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_block_content",
          "description": "Update a block's content by its ID",
          "parameters": [
            {
              "name": "content",
              "required": true,
              "type": "string"
            },
            {
              "name": "block_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_block",
          "description": "Description not available",
          "parameters": [
            {
              "name": "delete_block",
              "required": false,
              "type": "string"
            },
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "blocks",
              "required": false,
              "type": "string"
            },
            {
              "name": "block_id",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@HitmanLy007/notion-api-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "notionApiKey",
          "required": true,
          "description": "Notion API integration token (ntn_...)"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@HitmanLy007/notion-api-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0402.@HitmanLy007_notion-api-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 396
  }
}