{
  "labels": {
    "analysis": "The MCP Server focuses on providing weather forecast services, specifically live temperature data for given cities. It enables integration of weather data into applications, suggesting its primary use case is for meteorological information retrieval and decision-making. The available tool, get_live_temp, reinforces this by fetching real-time temperature data based on city names.",
    "reasoning": "The primary label \"Weather\" was chosen because the server's core functionality revolves around providing weather-related data. The secondary label \"API Integration\" was selected since the server enables seamless integration of weather data into other applications. The predefined categories accurately cover the server's use case without requiring a custom label.",
    "primary_label": "Weather",
    "secondary_labels": [
      "API Integration",
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1105,
    "server_name": "Weather Forecast Service",
    "rank_by_usage": 1106,
    "usage_count": "1",
    "original_file": "../crawler/smithery/@selckKrml_weather-forecast-mcp5.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@selckKrml/weather-forecast-mcp5/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_live_temp",
          "description": "\n    Verilen şehir adına göre canlı sıcaklık verisini döndürür.\n    Bu, Smithery.ai'deki 'Tools' sekmesinde görüntülenecek fonksiyondur.\n    ",
          "input_schema": {
            "properties": {
              "city_name": {
                "title": "City Name",
                "type": "string"
              }
            },
            "required": [
              "city_name"
            ],
            "title": "get_live_tempArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get_live_temp"
      ]
    },
    "server_info_crawled": {
      "id": 1105,
      "name": "Weather Forecast Service",
      "author": "@selckKrml/weather-forecast-mcp5",
      "overview": "Provide accurate and up-to-date weather forecasts through a standardized protocol. Enable seamless integration of weather data into your applications and agents. Access detailed meteorological information effortlessly to enhance decision-making and user experience.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@selckKrml/weather-forecast-mcp5",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "1",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@selckKrml_weather-forecast-mcp5.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_live_temp",
          "description": "\n    Verilen şehir adına göre canlı sıcaklık verisini döndürür.\n    Bu, Smithery.ai'deki 'Tools' sekmesinde görüntülenecek fonksiyondur.\n    ",
          "input_schema": {
            "properties": {
              "city_name": {
                "title": "City Name",
                "type": "string"
              }
            },
            "required": [
              "city_name"
            ],
            "title": "get_live_tempArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@selckKrml/weather-forecast-mcp5/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@selckKrml/weather-forecast-mcp5/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1106.@selckKrml_weather-forecast-mcp5_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1083
  }
}