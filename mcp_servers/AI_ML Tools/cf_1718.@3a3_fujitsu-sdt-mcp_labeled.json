{
  "labels": {
    "analysis": "The Fujitsu Social Digital Twin Server enables natural language interaction with Fujitsu's Social Digital Twin and Digital Rehearsal API to run, manage, and analyze simulations. It provides tools for listing, starting, retrieving, and comparing simulations, as well as generating simulation configurations from natural language descriptions. The core functionality revolves around traffic simulation, including metrics analysis, scenario comparison, and data management, with a focus on simplifying complex simulations through intuitive LLM-driven commands.",
    "reasoning": "The primary label \"Simulations & Modeling\" was chosen because the server's core functionality is centered around running and analyzing traffic simulations. Secondary labels like \"Data Analysis & Processing\" and \"AI/ML Tools\" were selected because the server involves analyzing simulation results and uses natural language processing to generate configurations. The custom label \"Traffic Simulation Management\" was added to specifically describe the server's specialized domain.",
    "primary_label": "AI/ML Tools",
    "secondary_labels": [
      "Data Analysis & Processing",
      "AI/ML Tools"
    ],
    "custom_label": "Traffic Simulation Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1717,
    "server_name": "Fujitsu Social Digital Twin Server",
    "rank_by_usage": 1718,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@3a3_fujitsu-sdt-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@3a3/fujitsu-sdt-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1717,
      "name": "Fujitsu Social Digital Twin Server",
      "author": "@3a3/fujitsu-sdt-mcp",
      "overview": "Enable natural language interaction with Fujitsu's Social Digital Twin and Digital Rehearsal API to run simulations, analyze results, and manage simulation data. Retrieve simulation lists, start simulations, compare scenarios, and generate simulation configurations from natural language. Simplify complex social and traffic simulations through intuitive LLM-driven commands.",
      "repository_url": "https://github.com/3a3/fujitsu-sdt-mcp",
      "homepage": "https://smithery.ai/server/@3a3/fujitsu-sdt-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@3a3_fujitsu-sdt-mcp.json",
      "tools_count": 10,
      "tools": [
        {
          "name": "list_simulations",
          "description": "Deploy Server Fujitsu Social Digital Twin Server Claim Server @3a3/fujitsu-sdt-mcp Try in Playground list_simulations",
          "parameters": [
            {
              "name": "list_simulations",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "start_simulation",
          "description": "Launches a new traffic simulation using the provided simulation dataset configuration, returning the simulation ID and initial status.",
          "parameters": [
            {
              "name": "start_simulation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_simulation_result",
          "description": "Retrieves the complete results and output files from a finished traffic simulation, including simulation status and generated result files.",
          "parameters": [
            {
              "name": "get_simulation_result",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_metrics",
          "description": "Retrieves comprehensive metrics and analytics data from a completed simulation, including travel statistics, emissions data, and traffic flow information.",
          "parameters": [
            {
              "name": "ctx",
              "required": false,
              "type": "string"
            },
            {
              "name": "simulation_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_simdata",
          "description": "Returns a complete list of all simulation datasets available in the system, which can be used as inputs for running new simulations.",
          "parameters": [
            {
              "name": "list_simdata",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_simdata",
          "description": "Retrieves the complete configuration and parameter set for a specific simulation dataset, including region settings, time ranges, and scenario parameters.",
          "parameters": [
            {
              "name": "get_simdata",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "analyze_traffic_simulation",
          "description": "Conducts comprehensive analysis on simulation results, providing insights on traffic patterns, bottlenecks, and optimization opportunities for the specified parameters.",
          "parameters": [
            {
              "name": "analyze_traffic_simulation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "compare_scenarios",
          "description": "Performs detailed comparative analysis between two simulation scenarios, highlighting differences in traffic flow, emissions, travel times, and other key metrics.",
          "parameters": [
            {
              "name": "compare_scenarios",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_natural_language_simulation_config",
          "description": "Converts a natural language description into a structured simulation configuration, interpreting user requirements into technical parameters for traffic simulation.",
          "parameters": [
            {
              "name": "create_natural_language_simulation_config",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_simulation_from_usecase",
          "description": "指定されたユースケースとアップロードされたファイルからシミュレーションを作成・実行します。",
          "parameters": [
            {
              "name": "create_simulation_from_usecase",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@3a3/fujitsu-sdt-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "fujitsuApiKey",
          "required": true,
          "description": "API key for Fujitsu API"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@3a3/fujitsu-sdt-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1718.@3a3_fujitsu-sdt-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1547
  }
}