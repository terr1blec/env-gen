{
  "labels": {
    "analysis": "The MCP Server \"Qdrant Retrieve\" is designed to perform semantic search operations across multiple collections in a Qdrant vector database. It allows for efficient retrieval of semantically similar documents based on input queries, along with features like multi-query support and configurable result counts. The core functionality revolves around vector-based search and retrieval, which is fundamental for applications involving natural language processing, recommendation systems, or any use case requiring semantic similarity.",
    "reasoning": "The primary label \"AI/ML Tools\" was chosen because the server's main function involves semantic search capabilities powered by vector databases, which aligns with machine learning and artificial intelligence applications. \"Memory Management\" could be considered secondary due to the server's role in handling and retrieving large-scale data, and \"Database Operations\" is relevant because it directly interacts with a vector database (Qdrant). No custom label is needed as the predefined categories adequately describe the server's functionality.",
    "primary_label": "AI/ML Tools",
    "secondary_labels": [
      "Memory Management",
      "Database Operations"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1709,
    "server_name": "Qdrant Retrieve",
    "rank_by_usage": 1710,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@gergelyszerovay_mcp-server-qdrant-retrieve.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@gergelyszerovay/mcp-server-qdrant-retrieve/mcp?config=eyJxZHJhbnRVcmwiOiAiaHR0cDovL2xvY2FsaG9zdDo2MzMzIiwgIm1jcEh0dHBQb3J0IjogMzAwMSwgInFkcmFudEFwaUtleSI6ICIiLCAicmVzdEh0dHBQb3J0IjogMzAwMiwgImVuYWJsZVJlc3RTZXJ2ZXIiOiBmYWxzZSwgImVtYmVkZGluZ01vZGVsVHlwZSI6ICJYZW5vdmEvYWxsLU1pbmlMTS1MNi12MiIsICJlbmFibGVIdHRwVHJhbnNwb3J0IjogZmFsc2UsICJlbmFibGVTdGRpb1RyYW5zcG9ydCI6IHRydWV9&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "qdrant_retrieve",
          "description": "Retrieves semantically similar documents from multiple Qdrant vector store collections based on multiple queries",
          "input_schema": {
            "type": "object",
            "properties": {
              "collectionNames": {
                "type": "array",
                "items": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 100
                },
                "minItems": 1,
                "maxItems": 10,
                "description": "Names of the Qdrant collections to search across"
              },
              "topK": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100,
                "default": 3,
                "description": "Number of top similar documents to retrieve"
              },
              "query": {
                "type": "array",
                "items": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 1000,
                  "description": "Query text to search for"
                },
                "minItems": 1,
                "maxItems": 10,
                "description": "Array of query texts to search for"
              }
            },
            "required": [
              "collectionNames",
              "query"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "qdrant_retrieve"
      ]
    },
    "server_info_crawled": {
      "id": 1709,
      "name": "Qdrant Retrieve",
      "author": "@gergelyszerovay/mcp-server-qdrant-retrieve",
      "overview": "Enable semantic search capabilities across multiple collections in a Qdrant vector database. Retrieve semantically similar documents efficiently and track collection sources for better context. Enhance your applications with powerful multi-query support and configurable result counts.",
      "repository_url": "https://github.com/gergelyszerovay/mcp-server-qdrant-retrieve",
      "homepage": "https://smithery.ai/server/@gergelyszerovay/mcp-server-qdrant-retrieve",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@gergelyszerovay_mcp-server-qdrant-retrieve.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "qdrant_retrieve",
          "description": "Retrieves semantically similar documents from multiple Qdrant vector store collections based on multiple queries",
          "input_schema": {
            "type": "object",
            "properties": {
              "collectionNames": {
                "type": "array",
                "items": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 100
                },
                "minItems": 1,
                "maxItems": 10,
                "description": "Names of the Qdrant collections to search across"
              },
              "topK": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100,
                "default": 3,
                "description": "Number of top similar documents to retrieve"
              },
              "query": {
                "type": "array",
                "items": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 1000,
                  "description": "Query text to search for"
                },
                "minItems": 1,
                "maxItems": 10,
                "description": "Array of query texts to search for"
              }
            },
            "required": [
              "collectionNames",
              "query"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"qdrantUrl\": \"http://localhost:6333\",\n  \"mcpHttpPort\": 3001,\n  \"qdrantApiKey\": \"\",\n  \"restHttpPort\": 3002,\n  \"enableRestServer\": false,\n  \"embeddingModelType\": \"Xenova/all-MiniLM-L6-v2\",\n  \"enableHttpTransport\": false,\n  \"enableStdioTransport\": true\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@gergelyszerovay/mcp-server-qdrant-retrieve/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"qdrantUrl\": \"http://localhost:6333\",\n  \"mcpHttpPort\": 3001,\n  \"qdrantApiKey\": \"\",\n  \"restHttpPort\": 3002,\n  \"enableRestServer\": false,\n  \"embeddingModelType\": \"Xenova/all-MiniLM-L6-v2\",\n  \"enableHttpTransport\": false,\n  \"enableStdioTransport\": true\n}",
      "python_sdk_url": "https://server.smithery.ai/@gergelyszerovay/mcp-server-qdrant-retrieve/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "1710.@gergelyszerovay_mcp-server-qdrant-retrieve_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1539
  }
}