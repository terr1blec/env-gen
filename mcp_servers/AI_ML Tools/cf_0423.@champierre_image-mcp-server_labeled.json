{
  "labels": {
    "analysis": "The MCP Server specializes in analyzing images provided via URLs or local file paths, leveraging advanced image recognition capabilities powered by the GPT-4o-mini model. Its core functionality revolves around extracting detailed insights from images, which positions it as a high-accuracy image processing and validation tool.",
    "reasoning": "The primary label reflects the server's core functionality of image analysis, which aligns with AI/ML tools due to its reliance on advanced machine learning models. The secondary labels of Web Search & Research and AI/ML Tools are included to highlight its role in gathering image data and its machine learning-based processing.",
    "primary_label": "AI/ML Tools",
    "secondary_labels": [
      "Web Search & Research",
      "Browser Automation"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 422,
    "server_name": "Image Analysis Server",
    "rank_by_usage": 423,
    "usage_count": "52",
    "original_file": "../crawler/smithery/@champierre_image-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@champierre/image-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 422,
      "name": "Image Analysis Server",
      "author": "@champierre/image-mcp-server",
      "overview": "Analyze images by providing their URLs and receive detailed insights using advanced image recognition. Leverage the power of the GPT-4o-mini model for high-accuracy image analysis and validation of image URLs.",
      "repository_url": "https://github.com/champierre/image-mcp-server",
      "homepage": "https://smithery.ai/server/@champierre/image-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "52",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@champierre_image-mcp-server.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "analyze_image",
          "description": "Deploy Server Image Analysis Server @champierre/image-mcp-server Try in Playground analyze_image",
          "parameters": [
            {
              "name": "analyze_image",
              "required": false,
              "type": "string"
            },
            {
              "name": "imageUrl",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "analyze_image_from_path",
          "description": "Loads an image from a local file path and analyzes its content using GPT-4o-mini. AI assistants need to provide a valid path for the server execution environment (e.g., Linux path if the server is running on WSL).",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@champierre/image-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "openaiApiKey",
          "required": true,
          "description": "Your OpenAI API key required for image analysis."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@champierre/image-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0423.@champierre_image-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 417
  }
}