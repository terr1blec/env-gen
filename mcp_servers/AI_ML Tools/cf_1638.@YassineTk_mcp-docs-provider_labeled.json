{
  "labels": {
    "analysis": "The MCP Server acts as a Documentation Context Provider, enabling AI models to dynamically access and query local markdown technical documentation. This enhances the model's ability to provide accurate, context-aware responses by integrating up-to-date documentation without requiring server rebuilding. The core functionality revolves around documentation management and AI context integration.",
    "reasoning": "The primary label \"AI/ML Tools\" is chosen because the server's main purpose is to enhance AI model capabilities by providing dynamic documentation access. The secondary label \"Memory Management\" is selected due to its role in storing and retrieving documentation context. \"Database Operations\" is considered secondary as it involves querying the stored documentation.",
    "primary_label": "AI/ML Tools",
    "secondary_labels": [
      "Memory Management",
      "Database Operations"
    ],
    "custom_label": "Documentation Context Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1637,
    "server_name": "Documentation Context Provider",
    "rank_by_usage": 1638,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@YassineTk_mcp-docs-provider.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@YassineTk/mcp-docs-provider/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1637,
      "name": "Documentation Context Provider",
      "author": "@YassineTk/mcp-docs-provider",
      "overview": "Enable AI models to seamlessly access and query your local markdown technical documentation. This server allows for dynamic integration of documentation into LLM workflows, enhancing the model's ability to provide accurate and context-aware responses. Update your documentation without needing to rebuild the server, ensuring your AI always has the latest information.",
      "repository_url": "https://github.com/YassineTk/mcp-docs-provider",
      "homepage": "https://smithery.ai/server/@YassineTk/mcp-docs-provider",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@YassineTk_mcp-docs-provider.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "query-docs",
          "description": "Deploy Server Documentation Context Provider @YassineTk/mcp-docs-provider Try in Playground",
          "parameters": [
            {
              "name": "question",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@YassineTk/mcp-docs-provider/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@YassineTk/mcp-docs-provider/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1638.@YassineTk_mcp-docs-provider_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1485
  }
}