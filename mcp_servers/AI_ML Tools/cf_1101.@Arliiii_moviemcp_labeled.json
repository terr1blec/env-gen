{
  "labels": {
    "analysis": "The MCP Server described is focused on providing comprehensive movie and TV show data through a variety of search, discovery, and detail retrieval tools. It enables users to find trending content, search by specific criteria, and access detailed information including cast, production details, and media. The server supports multi-language functionality and handles content discovery through filtering options.",
    "reasoning": "The primary label \"Media & Entertainment\" was chosen because the server's core functionality revolves around movie and TV show data, which falls under media content consumption. The secondary label \"Data Analysis & Processing\" was selected due to the server's ability to process and filter content based on various parameters. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "AI/ML Tools",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1100,
    "server_name": "Movie & TV Data Server",
    "rank_by_usage": 1101,
    "usage_count": "1",
    "original_file": "../crawler/smithery/@Arliiii_moviemcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Arliiii/moviemcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1100,
      "name": "Movie & TV Data Server",
      "author": "@Arliiii/moviemcp",
      "overview": "Provide comprehensive search, discovery, and detailed information about movies and TV shows with rich media support. Enable users to find trending content, explore genres, and access high-quality images and production details. Enhance movie and TV data integration with multi-language support and professional error handling.",
      "repository_url": "https://github.com/Arliiii/movieMcp",
      "homepage": "https://smithery.ai/server/@Arliiii/moviemcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "1",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Arliiii_moviemcp.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "search_movies",
          "description": "Deploy Server Movie & TV Data Server @Arliiii/moviemcp Try in Playground search_movies",
          "parameters": []
        },
        {
          "name": "search_tv_shows",
          "description": "Search for TV shows by name with optional year filtering. Args: query: TV show name to search for (required) first_air_date_year: First air date year to filter by (optional) page: Page number for pagination (default: 1) Returns: JSON string with TV show search results including names, air dates, overviews, ratings, and image URLs",
          "parameters": []
        },
        {
          "name": "get_movie_details",
          "description": "Get detailed information about a specific movie including cast, crew, and production details. Args: movie_id: TMDb movie ID (required) Returns: JSON string with complete movie information including cast, crew, genres, runtime, budget, revenue",
          "parameters": []
        },
        {
          "name": "get_tv_show_details",
          "description": "Get detailed information about a specific TV show including cast, seasons, and network details. Args: tv_id: TMDb TV show ID (required) Returns: JSON string with complete TV show information including cast, seasons, networks, creators",
          "parameters": []
        },
        {
          "name": "get_trending",
          "description": "Get trending movies or TV shows. Args: media_type: Type of media - \"movie\" or \"tv\" (required) time_window: Time window - \"day\" or \"week\" (default: \"day\") Returns: JSON string with trending content including popularity scores and rankings",
          "parameters": []
        },
        {
          "name": "discover_content",
          "description": "Discover movies or TV shows based on filters. Args: content_type: Type of content - \"movie\" or \"tv\" (required) genre_id: Genre ID to filter by (optional) year: Year to filter by (optional) - release year for movies, first air date year for TV sort_by: Sort order (default: \"popularity.desc\") Returns: JSON string with curated content based on filters",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Arliiii/moviemcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "apiKey",
          "required": true,
          "description": "Get your free API key from https://www.themoviedb.org/settings/api"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Arliiii/moviemcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1101.@Arliiii_moviemcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1078
  }
}