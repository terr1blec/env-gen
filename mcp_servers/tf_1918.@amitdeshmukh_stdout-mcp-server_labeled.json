{
  "labels": {
    "analysis": "The MCP Server is designed primarily for capturing, managing, and analyzing application logs in real-time. It offers functionalities to monitor multiple processes and retrieve logs through a named pipe with optional filtering. The core purpose is to streamline debugging and log management, making it easier to track and analyze system or application behavior.",
    "reasoning": "The primary label \"Operating System\" is chosen because the server deals with monitoring processes and managing application logs, which are core tasks related to system operations. The secondary label \"Development Tools\" is appropriate because log management is crucial for debugging and development workflows. The MCP Server doesn't have unique functionality that warrants a custom label, as its features are well-covered by predefined categories.",
    "primary_label": "Operating System",
    "secondary_labels": [
      "Development Tools"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1917,
    "server_name": "stdout-mcp-server",
    "rank_by_usage": 1918,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@amitdeshmukh_stdout-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@amitdeshmukh/stdout-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get-logs",
          "description": "Retrieve logs from the named pipe with optional filtering",
          "input_schema": {
            "type": "object",
            "properties": {
              "lines": {
                "type": "number",
                "default": 50,
                "description": "Number of log lines to return"
              },
              "filter": {
                "type": "string",
                "description": "Text to filter logs by"
              },
              "since": {
                "type": "number",
                "description": "Timestamp to get logs after"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get-logs"
      ]
    },
    "server_info_crawled": {
      "id": 1917,
      "name": "stdout-mcp-server",
      "author": "@amitdeshmukh/stdout-mcp-server",
      "overview": "Capture and manage application logs in real-time. Monitor multiple processes and analyze logs efficiently through a standardized interface. Enhance your debugging experience with easy log retrieval and filtering capabilities.",
      "repository_url": "https://github.com/amitdeshmukh/stdout-mcp-server",
      "homepage": "https://smithery.ai/server/@amitdeshmukh/stdout-mcp-server",
      "remote_or_local": "Remote",
      "license": "@amitdeshmukh/stdout-mcp-server",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@amitdeshmukh_stdout-mcp-server.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get-logs",
          "description": "Retrieve logs from the named pipe with optional filtering",
          "input_schema": {
            "type": "object",
            "properties": {
              "lines": {
                "type": "number",
                "default": 50,
                "description": "Number of log lines to return"
              },
              "filter": {
                "type": "string",
                "description": "Text to filter logs by"
              },
              "since": {
                "type": "number",
                "description": "Timestamp to get logs after"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@amitdeshmukh/stdout-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@amitdeshmukh/stdout-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1918.@amitdeshmukh_stdout-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1692
  }
}