{
  "labels": {
    "analysis": "The MCP Server described is focused on interacting with Linear, a project management tool. It provides a comprehensive set of tools for managing projects, issues, teams, and workflows within Linear. The tools enable querying, creating, updating, and organizing projects and issues, as well as handling comments, labels, and team structures. The primary functionality revolves around project and task management, with a focus on automation and AI-assisted interactions to enhance productivity.",
    "reasoning": "The primary label \"Project Management\" is chosen because the server's core functionality is centered around managing projects, issues, and tasks in Linear. The secondary labels \"Daily Productivity\" and \"Development Tools\" are selected because the tools enhance productivity for users and may be particularly useful for development teams. The custom label \"Linear Integration\" is added to highlight the server's specific focus on integrating with the Linear platform.",
    "primary_label": "Project Management",
    "secondary_labels": [
      "Daily Productivity",
      "Development Tools"
    ],
    "custom_label": "Linear Integration",
    "is_connected": false,
    "is_remote_tool_valid": false
  },
  "metadata": {
    "server_id": 33,
    "server_name": "Linear",
    "rank_by_usage": 34,
    "usage_count": "3,537",
    "original_file": "../crawler/smithery/@tacticlaunch_mcp-linear.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@tacticlaunch/mcp-linear/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 33,
      "name": "Linear",
      "author": "@tacticlaunch/mcp-linear",
      "overview": "Interact with Linear project management through AI assistants. Access and manage your Linear projects, issues, and teams seamlessly with AI-driven commands. Enhance your productivity by automating project management tasks effortlessly.",
      "repository_url": "https://github.com/tacticlaunch/mcp-linear",
      "homepage": "https://smithery.ai/server/@tacticlaunch/mcp-linear",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "3,537",
      "success_rate": "99.98%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@tacticlaunch_mcp-linear.json",
      "tools_count": 32,
      "tools": [
        {
          "name": "linear_getViewer",
          "description": "Deploy Server @tacticlaunch/mcp-linear Try in Playground linear_getViewer",
          "parameters": [
            {
              "name": "linear_getViewer",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_getOrganization",
          "description": "Get information about the current Linear organization",
          "parameters": [
            {
              "name": "linear_getOrganization",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_getUsers",
          "description": "Get a list of users in the Linear organization",
          "parameters": [
            {
              "name": "linear_getUsers",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_getLabels",
          "description": "Get a list of issue labels from Linear",
          "parameters": [
            {
              "name": "linear_getLabels",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_getTeams",
          "description": "Get a list of teams from Linear",
          "parameters": [
            {
              "name": "linear_getTeams",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_getWorkflowStates",
          "description": "Get workflow states for a team",
          "parameters": [
            {
              "name": "teamId",
              "required": true,
              "type": "string"
            },
            {
              "name": "includeArchived",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_getProjects",
          "description": "Get a list of projects from Linear",
          "parameters": [
            {
              "name": "linear_getProjects",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_createProject",
          "description": "Create a new project in Linear",
          "parameters": [
            {
              "name": "linear_createProject",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_updateProject",
          "description": "Update an existing project in Linear",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "name",
              "required": false,
              "type": "string"
            },
            {
              "name": "state",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_addIssueToProject",
          "description": "Add an existing issue to a project",
          "parameters": [
            {
              "name": "issueId",
              "required": true,
              "type": "string"
            },
            {
              "name": "projectId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_getProjectIssues",
          "description": "Get all issues associated with a project",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "projectId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_getCycles",
          "description": "Get a list of all cycles",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "teamId",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_getActiveCycle",
          "description": "Get the currently active cycle for a team",
          "parameters": [
            {
              "name": "linear_getActiveCycle",
              "required": false,
              "type": "string"
            },
            {
              "name": "teamId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_addIssueToCycle",
          "description": "Add an issue to a cycle",
          "parameters": [
            {
              "name": "cycleId",
              "required": true,
              "type": "string"
            },
            {
              "name": "issueId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_getIssues",
          "description": "Get a list of recent issues from Linear",
          "parameters": [
            {
              "name": "linear_getIssues",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_getIssueById",
          "description": "Get a specific issue by ID or identifier (e.g., ABC-123)",
          "parameters": [
            {
              "name": "linear_getIssueById",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_searchIssues",
          "description": "Search for issues with various filters",
          "parameters": [
            {
              "name": "linear_searchIssues",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_createIssue",
          "description": "Create a new issue in Linear",
          "parameters": [
            {
              "name": "linear_createIssue",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_updateIssue",
          "description": "Update an existing issue in Linear",
          "parameters": [
            {
              "name": "linear_updateIssue",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_createComment",
          "description": "Add a comment to an issue in Linear",
          "parameters": [
            {
              "name": "body",
              "required": true,
              "type": "string"
            },
            {
              "name": "issueId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_addIssueLabel",
          "description": "Add a label to an issue in Linear",
          "parameters": [
            {
              "name": "issueId",
              "required": true,
              "type": "string"
            },
            {
              "name": "labelId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_removeIssueLabel",
          "description": "Remove a label from an issue in Linear",
          "parameters": [
            {
              "name": "issueId",
              "required": true,
              "type": "string"
            },
            {
              "name": "labelId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_assignIssue",
          "description": "Assign an issue to a user",
          "parameters": [
            {
              "name": "issueId",
              "required": true,
              "type": "string"
            },
            {
              "name": "assigneeId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_subscribeToIssue",
          "description": "Subscribe to issue updates",
          "parameters": [
            {
              "name": "linear_subscribeToIssue",
              "required": false,
              "type": "string"
            },
            {
              "name": "Subscribe",
              "required": false,
              "type": "string"
            },
            {
              "name": "to",
              "required": false,
              "type": "string"
            },
            {
              "name": "issue",
              "required": false,
              "type": "string"
            },
            {
              "name": "updates",
              "required": false,
              "type": "string"
            },
            {
              "name": "issueId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_convertIssueToSubtask",
          "description": "Convert an issue to a subtask",
          "parameters": [
            {
              "name": "issueId",
              "required": true,
              "type": "string"
            },
            {
              "name": "parentIssueId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_createIssueRelation",
          "description": "Create relations between issues (blocks, is blocked by, etc.)",
          "parameters": [
            {
              "name": "linear_createIssueRelation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_archiveIssue",
          "description": "Description not available",
          "parameters": [
            {
              "name": "linear_archiveIssue",
              "required": false,
              "type": "string"
            },
            {
              "name": "Archive",
              "required": false,
              "type": "string"
            },
            {
              "name": "an",
              "required": false,
              "type": "string"
            },
            {
              "name": "issue",
              "required": false,
              "type": "string"
            },
            {
              "name": "issueId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_setIssuePriority",
          "description": "Set the priority of an issue",
          "parameters": [
            {
              "name": "issueId",
              "required": true,
              "type": "string"
            },
            {
              "name": "priority",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_transferIssue",
          "description": "Transfer an issue to another team",
          "parameters": [
            {
              "name": "teamId",
              "required": true,
              "type": "string"
            },
            {
              "name": "issueId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_duplicateIssue",
          "description": "Description not available",
          "parameters": [
            {
              "name": "linear_duplicateIssue",
              "required": false,
              "type": "string"
            },
            {
              "name": "Duplicate",
              "required": false,
              "type": "string"
            },
            {
              "name": "an",
              "required": false,
              "type": "string"
            },
            {
              "name": "issue",
              "required": false,
              "type": "string"
            },
            {
              "name": "issueId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_getIssueHistory",
          "description": "Get the history of changes made to an issue",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "issueId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "linear_getComments",
          "description": "Get all comments for an issue",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "issueId",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@tacticlaunch/mcp-linear/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "token",
          "required": true,
          "description": "Your Linear API key. Required for Linear API access."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@tacticlaunch/mcp-linear/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0034.@tacticlaunch_mcp-linear_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 33
  }
}