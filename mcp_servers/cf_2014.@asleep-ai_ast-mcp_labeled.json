{
  "labels": {
    "analysis": "The MCP Server appears to be a middleware that facilitates the integration of applications with advanced language models, allowing real-time data access and dynamic tool utilization. Its core functionality revolves around enhancing workflows by enabling seamless interactions between agents and real-world data through predefined tools.",
    "reasoning": "The primary label is chosen because the server's main function is to integrate with LLM systems to perform tasks and access data dynamically. Secondary labels reflect broader operational capabilities related to interacting with APIs and processing data. \"Model Context Protocol\" accurately describes its unique purpose.",
    "primary_label": "AI/ML Tools",
    "secondary_labels": [
      "API Integration",
      "Data Analysis & Processing"
    ],
    "custom_label": "Model Context Protocol",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2013,
    "server_name": "AST Model Context Protocol Server",
    "rank_by_usage": 2014,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@asleep-ai_ast-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@asleep-ai/ast-mcp/mcp?config=eyJwb3J0IjogMzAwMCwgImxvZ0xldmVsIjogImluZm8ifQ==&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2013,
      "name": "AST Model Context Protocol Server",
      "author": "@asleep-ai/ast-mcp",
      "overview": "Integrate your applications with advanced language models to access real-time data and perform actions seamlessly. Enhance your workflows by leveraging tools and resources dynamically, ensuring a more interactive and efficient experience. Empower your agents with the ability to manipulate and reference real-world data effortlessly.",
      "repository_url": "https://github.com/asleep-ai/ast-mcp",
      "homepage": "https://smithery.ai/server/@asleep-ai/ast-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@asleep-ai_ast-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "deep_insight",
          "description": "Deploy Server AST Model Context Protocol Server @asleep-ai/ast-mcp Try in Playground deep_insight",
          "parameters": [
            {
              "name": "deep_insight",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"port\": 3000,\n  \"logLevel\": \"info\"\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@asleep-ai/ast-mcp/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"port\": 3000,\n  \"logLevel\": \"info\"\n}",
      "python_sdk_url": "https://server.smithery.ai/@asleep-ai/ast-mcp/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "cf_2014.@asleep-ai_ast-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1757
  }
}