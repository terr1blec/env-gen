{
  "labels": {
    "analysis": "The MCP Server is focused on travel planning, primarily enabling flight searches through the Duffel API. It provides tools to search for one-way, round-trip, and multi-city flights, as well as related functionalities like searching for accommodations (stays) and retrieving reviews. The core functionality revolves around booking-related services, which typically fall under travel and booking systems.",
    "reasoning": "The primary label \"Travel & Maps\" was chosen because the server's main purpose is flight and stay searches, which are core travel-related activities. As for secondary labels, \"E-commerce\" is relevant because booking flights and stays isn't just informational but involves transactional elements. \"API Integration\" is also relevant since it relies heavily on the Duffel API for its operations.",
    "primary_label": "Travel & Maps",
    "secondary_labels": [
      "E-commerce",
      "API Integration"
    ],
    "custom_label": "Travel Booking Automation",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 330,
    "server_name": "Flight & Stay Search Server (Duffel API)",
    "rank_by_usage": 331,
    "usage_count": "96",
    "original_file": "../crawler/smithery/@clockworked247_flights-mcp-ts.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@clockworked247/flights-mcp-ts/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 330,
      "name": "Flight & Stay Search Server (Duffel API)",
      "author": "@clockworked247/flights-mcp-ts",
      "overview": "A TypeScript implementation of a flight & stay search MCP server that uses the Duffel API to search for flights. This MCP server provides tools to search for one-way, round-trip, and multi-city flights.",
      "repository_url": "https://github.com/clockworked247/flights-mcp-ts",
      "homepage": "https://smithery.ai/server/@clockworked247/flights-mcp-ts",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "96",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@clockworked247_flights-mcp-ts.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "search_flights",
          "description": "Deploy Server Flight & Stay Search Server (Duffel API) @clockworked247/flights-mcp-ts Try in Playground search_flights",
          "parameters": [
            {
              "name": "search_flights",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_offer_details",
          "description": "Description not available",
          "parameters": [
            {
              "name": "get_offer_details",
              "required": false,
              "type": "string"
            },
            {
              "name": "offerId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_multi_city",
          "description": "Description not available",
          "parameters": [
            {
              "name": "adults",
              "required": false,
              "type": "string"
            },
            {
              "name": "segments",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "cabinClass",
              "required": true,
              "type": "string"
            },
            {
              "name": "maxConnections",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_stays",
          "description": "Description not available",
          "parameters": [
            {
              "name": "guests",
              "required": true,
              "type": "string"
            },
            {
              "name": "location",
              "required": true,
              "type": "string"
            },
            {
              "name": "radius_km",
              "required": false,
              "type": "string"
            },
            {
              "name": "check_in_date",
              "required": true,
              "type": "string"
            },
            {
              "name": "check_out_date",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_stay_reviews",
          "description": "Description not available",
          "parameters": [
            {
              "name": "after",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "before",
              "required": false,
              "type": "string"
            },
            {
              "name": "stay_id",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@clockworked247/flights-mcp-ts/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "duffelApiKey",
          "required": true,
          "description": "The API key for accessing the Duffel flight search service."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@clockworked247/flights-mcp-ts/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0331.@clockworked247_flights-mcp-ts_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 327
  }
}