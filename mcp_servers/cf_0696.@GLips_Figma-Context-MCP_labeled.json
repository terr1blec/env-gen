{
  "labels": {
    "analysis": "The MCP Server is designed to bridge the gap between Figma design files and code implementation by providing access to Figma metadata and assets. It focuses on extracting relevant design data (like node IDs and images) to enable AI-powered coding tools to generate more accurate and context-aware code for various frameworks. The core functionality revolves around fetching Figma file information and downloading design assets, making it particularly useful for developers working with design systems and AI-assisted coding workflows.",
    "reasoning": "The primary label was chosen because the server's initial and most prominent functionality is enabling developers to fetch and utilize Figma design data for coding purposes, which aligns with getting the tools ready to build content from the designs. The secondary labels reflect the server's role in supporting developer workflows and managing design assets, while the custom label highlights its unique niche in design-to-code integration.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "Development Tools",
      "File Management"
    ],
    "custom_label": "Design-to-Code Integration",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 695,
    "server_name": "Framelink Figma MCP",
    "rank_by_usage": 696,
    "usage_count": "11",
    "original_file": "../crawler/smithery/@GLips_Figma-Context-MCP.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@GLips/Figma-Context-MCP/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 695,
      "name": "Framelink Figma MCP",
      "author": "@GLips/Figma-Context-MCP",
      "overview": "Give your coding agent access to your Figma design data to implement designs in any framework in one shot. Enhance AI-powered coding tools by providing them with simplified and relevant Figma metadata for more accurate and context-aware code generation. Easily integrate with your IDE to fetch and utilize Figma file information seamlessly.",
      "repository_url": "https://github.com/GLips/Figma-Context-MCP",
      "homepage": "https://smithery.ai/server/@GLips/Figma-Context-MCP",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "11",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@GLips_Figma-Context-MCP.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "get_figma_data",
          "description": "Deploy Server Framelink Figma MCP Claim Server @GLips/Figma-Context-MCP Try in Playground get_figma_data",
          "parameters": []
        },
        {
          "name": "download_figma_images",
          "description": "Download SVG and PNG images used in a Figma file based on the IDs of image or icon nodes",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@GLips/Figma-Context-MCP/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "figmaApiKey",
          "required": true,
          "description": "Figma API key for authenticating with the Figma API"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@GLips/Figma-Context-MCP/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0696.@GLips_Figma-Context-MCP_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 680
  }
}