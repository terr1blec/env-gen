{
  "labels": {
    "analysis": "The MCP Server primarily provides a PDF to Markdown conversion service, enabling users to convert PDF documents into structured Markdown format. It supports both local files and URLs, with batch processing capabilities. The tools available allow for preservation of document structure and layout, including optional OCR for text extraction from scanned documents. This server facilitates document processing and content adaptation for various use cases, particularly in content creation, information retrieval, and documentation workflows.",
    "reasoning": "The primary label \"Content Creation\" was chosen because the server's core functionality revolves around transforming PDF documents into Markdown, which is a common task in content creation workflows. The \"File Management\" secondary label is relevant due to its ability to process local files and directories. Additionally, \"API Integration\" is considered as a secondary label due to its mention of seamless integration with LLM clients, suggesting potential API-centric usage.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "File Management",
      "API Integration"
    ],
    "custom_label": "Document Conversion",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2250,
    "server_name": "PDF to Markdown Conversion Service",
    "rank_by_usage": 2251,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@FutureUnreal_mcp-pdf2md.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@FutureUnreal/mcp-pdf2md/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2250,
      "name": "PDF to Markdown Conversion Service",
      "author": "@FutureUnreal/mcp-pdf2md",
      "overview": "Convert PDF files to structured Markdown format effortlessly. Process local files and URLs in batches while preserving the original document structure and layout. Integrate seamlessly with LLM clients for enhanced functionality.",
      "repository_url": "https://github.com/FutureUnreal/mcp-pdf2md",
      "homepage": "https://smithery.ai/server/@FutureUnreal/mcp-pdf2md",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@FutureUnreal_mcp-pdf2md.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "convert_pdf_url",
          "description": "Deploy Server PDF to Markdown Conversion Service @FutureUnreal/mcp-pdf2md Try in Playground convert_pdf_url",
          "parameters": []
        },
        {
          "name": "convert_pdf_file",
          "description": "Convert local PDF file to Markdown, supports single file or file list\n    \n    Args:\n        file_path: PDF file local path or path list, can be separated by spaces, commas, or newlines\n        enable_ocr: Whether to enable OCR (default: True)\n\n    Returns:\n        dict: Conversion result information",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@FutureUnreal/mcp-pdf2md/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "mineruApiKey",
          "required": true,
          "description": "API key for MinerU. Must be provided as a Bearer token without the 'Bearer ' prefix."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@FutureUnreal/mcp-pdf2md/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2251.@FutureUnreal_mcp-pdf2md_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1937
  }
}