{
  "labels": {
    "analysis": "The 小红书MCP服务 is designed to facilitate interactions with the 小红书 platform (a popular Chinese lifestyle-sharing social network) through API calls rather than browser automation. Its core functionality includes searching notes, retrieving note content and comments, and posting comments using extracted authentication tokens. This server eliminates the need for complex web scraping by providing direct HTTP API access to 小红书's data, making it ideal for applications that require lightweight yet effective integration with the platform.",
    "reasoning": "The primary label is \"Social Media\" because the server's tools are specifically built around interacting with a social media platform (小红书). The secondary label \"API Integration\" is added because the server provides a direct API layer for accessing platform data, which is a key aspect of its functionality. No custom label is needed, as the predefined categories adequately cover the server's purpose.",
    "primary_label": "Social Media",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 918,
    "server_name": "小红书MCP服务",
    "rank_by_usage": 919,
    "usage_count": "4",
    "original_file": "../crawler/smithery/@578440613_xhs-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@578440613/xhs-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 918,
      "name": "小红书MCP服务",
      "author": "@578440613/xhs-mcp",
      "overview": "Enable seamless interaction with 小红书 by searching notes, retrieving note content and comments, and posting comments. Simplify access to 小红书's data without heavy browser automation. Enhance your applications with direct HTTP API calls using extracted authentication tokens.",
      "repository_url": "https://github.com/578440613/xhs-mcp",
      "homepage": "https://smithery.ai/server/@578440613/xhs-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "4",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@578440613_xhs-mcp.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "check_cookie",
          "description": "Deploy Server @578440613/xhs-mcp Try in Playground check_cookie",
          "parameters": []
        },
        {
          "name": "search_notes",
          "description": "根据关键词搜索笔记\n\n        Args:\n            keywords: 搜索关键词",
          "parameters": [
            {
              "name": "keywords",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_note_content",
          "description": "获取笔记内容 Args: note_id: 笔记 note_id xsec_token: 笔记 xsec_token",
          "parameters": []
        },
        {
          "name": "get_note_comments",
          "description": "获取笔记评论 Args: note_id: 笔记 note_id xsec_token: 笔记 xsec_token",
          "parameters": []
        },
        {
          "name": "post_comment",
          "description": "发布评论到指定笔记\n\n    Args:\n        note_id: 笔记 note_id\n        comment: 要发布的评论内容",
          "parameters": [
            {
              "name": "comment",
              "required": true,
              "type": "string"
            },
            {
              "name": "note_id",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@578440613/xhs-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@578440613/xhs-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0919.@578440613_xhs-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 899
  }
}