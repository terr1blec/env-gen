{
  "labels": {
    "analysis": "The MCP Server described is focused on generating high-quality AI-powered image assets, primarily for game or web development. The single available tool, generateImage, allows users to create custom visual assets (like logos) by providing descriptive text prompts. This streamlines the creative workflow for developers and designers who need visual content quickly. The server solves the problem of time-consuming manual design work by automating image generation.",
    "reasoning": "The primary functionality of the server is content creation, particularly AI-generated visuals. The secondary label of AI/ML Tools is included because the image generation relies on machine learning models. There's no need for a custom label as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "AI/ML Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1058,
    "server_name": "Asset Image Generator",
    "rank_by_usage": 1059,
    "usage_count": "1",
    "original_file": "../crawler/smithery/@jbrower95_mcp-asset-gen.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@jbrower95/mcp-asset-gen/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1058,
      "name": "Asset Image Generator",
      "author": "@jbrower95/mcp-asset-gen",
      "overview": "Generate high-quality image assets using AI for game or web development. Easily create custom logos and visuals by providing descriptive prompts. Streamline your asset creation workflow with automated image generation.",
      "repository_url": "https://github.com/jbrower95/mcp-asset-gen",
      "homepage": "https://smithery.ai/server/@jbrower95/mcp-asset-gen",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "1",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@jbrower95_mcp-asset-gen.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "generateImage",
          "description": "Deploy Server Asset Image Generator Claim Server @jbrower95/mcp-asset-gen Try in Playground generateImage",
          "parameters": [
            {
              "name": "size",
              "required": false,
              "type": "string"
            },
            {
              "name": "prompt",
              "required": true,
              "type": "string"
            },
            {
              "name": "quality",
              "required": false,
              "type": "string"
            },
            {
              "name": "outputPathAbsolute",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@jbrower95/mcp-asset-gen/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "apiKey",
          "required": true,
          "description": "OpenAI API key for accessing the OpenAI image API"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@jbrower95/mcp-asset-gen/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1059.@jbrower95_mcp-asset-gen_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1037
  }
}