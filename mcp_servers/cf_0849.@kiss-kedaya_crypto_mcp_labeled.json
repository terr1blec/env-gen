{
  "labels": {
    "analysis": "The MCP Server primarily focuses on providing comprehensive cryptocurrency data and analysis tools. Its core functionality revolves around fetching real-time prices, market trends, and detailed K-line charts for various cryptocurrencies. It also offers tools for accessing contract market information through Coinglass API, including position data, trading volumes, and exchange distributions. The server is designed to support informed trading decisions by delivering structured data on demand.",
    "reasoning": "The primary label \"Cryptocurrency & Blockchain\" is chosen because the server's tools are centered around cryptocurrency market data, trading analytics, and blockchain-related information. \"Data Analysis & Processing\" is added as a secondary label due to the K-line analysis and other market data processing capabilities. \"Financial Services\" is included as a secondary label because the tools enable financial decision-making. No custom label is needed as the functionality is well-covered by predefined categories.",
    "primary_label": "Cryptocurrency & Blockchain",
    "secondary_labels": [
      "Data Analysis & Processing",
      "Financial Services"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 848,
    "server_name": "Crypto Price Query Server",
    "rank_by_usage": 849,
    "usage_count": "5",
    "original_file": "../crawler/smithery/@kiss-kedaya_crypto_mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@kiss-kedaya/crypto_mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "Connection timeout (20 seconds)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 848,
      "name": "Crypto Price Query Server",
      "author": "@kiss-kedaya/crypto_mcp",
      "overview": "Fetch cryptocurrency prices, market trends, and detailed information effortlessly. Utilize various tools to access real-time data and K-line charts for informed trading decisions.",
      "repository_url": "https://github.com/kiss-kedaya/crypto_mcp",
      "homepage": "https://smithery.ai/server/@kiss-kedaya/crypto_mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "5",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@kiss-kedaya_crypto_mcp.json",
      "tools_count": 12,
      "tools": [
        {
          "name": "get_coin_price",
          "description": "Deploy Server Crypto Price Query Server Claim Server @kiss-kedaya/crypto_mcp Try in Playground get_coin_price",
          "parameters": []
        },
        {
          "name": "get_trending_coins",
          "description": "获取当前热门虚拟币列表\n\n    Returns:\n        包含热门虚拟币信息的字符串",
          "parameters": []
        },
        {
          "name": "get_coin_detail",
          "description": "获取虚拟币的详细信息 Args: coin_id: 虚拟币的ID (例如 bitcoin, ethereum) Returns: 包含详细信息的字符串",
          "parameters": []
        },
        {
          "name": "get_global_market_data",
          "description": "获取全球加密货币市场数据\n\n    Returns:\n        包含市场数据的字符串",
          "parameters": []
        },
        {
          "name": "search_coins",
          "description": "搜索虚拟币 Args: query: 搜索关键词 limit: 返回结果数量上限, 默认10 Returns: 包含搜索结果的字符串",
          "parameters": []
        },
        {
          "name": "get_common_coins_prices",
          "description": "获取常见虚拟币的价格信息\n\n    Returns:\n        包含常见虚拟币价格的字符串",
          "parameters": []
        },
        {
          "name": "get_coin_info",
          "description": "获取虚拟币的合约市场信息 (Coinglass API) Args: symbol: 币种符号，例如BTC、ETH Returns: 包含币种在合约市场的详细信息",
          "parameters": []
        },
        {
          "name": "get_kline_data",
          "description": "获取虚拟币合约的K线数据 (Coinglass API) Args: symbol: 币种符号，例如BTC、ETH granularity: K线粒度，默认1h (可选: 1m, 3m, 5m, 15m, 30m, 1h, 4h, 6h, 12h, 24h, 1d, 1w等) lookback_count: 需要获取的K线数量，默认100条 Returns: 包含K线数据的格式化信息",
          "parameters": []
        },
        {
          "name": "get_position_info",
          "description": "获取虚拟币合约的持仓信息 (Coinglass API) Args: symbol: 币种符号，例如BTC、ETH granularity: K线粒度，默认1h (可选: 1m, 3m, 5m, 15m, 30m, 1h, 4h, 6h, 12h, 24h, 1d, 1w等) lookback_count: 需要获取的K线数量，默认100条 Returns: 包含持仓信息的格式化数据",
          "parameters": []
        },
        {
          "name": "get_trade_volume",
          "description": "获取虚拟币合约的成交量信息 (Coinglass API) Args: symbol: 币种符号，例如BTC、ETH granularity: K线粒度，默认1h (可选: 1m, 3m, 5m, 15m, 30m, 1h, 4h, 6h, 12h, 24h, 1d, 1w等) lookback_count: 需要获取的K线数量，默认100条 Returns: 包含成交量信息的格式化数据",
          "parameters": []
        },
        {
          "name": "get_trade_amount",
          "description": "获取虚拟币的成交额信息 (Coinglass API) Args: symbol: 币种符号，例如BTC、ETH granularity: K线粒度，默认1h (可选: 1m, 3m, 5m, 15m, 30m, 1h, 4h, 6h, 12h, 24h, 1d, 1w等) lookback_count: 需要获取的K线数量，默认100条 Returns: 包含成交额信息的格式化数据",
          "parameters": [
            {
              "name": "symbol",
              "required": true,
              "type": "string"
            },
            {
              "name": "granularity",
              "required": false,
              "type": "string"
            },
            {
              "name": "lookback_count",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_exchange_position",
          "description": "获取虚拟币在各交易所的持仓分布 (Coinglass API) Args: symbol: 币种符号，例如BTC、ETH Returns: 包含各交易所持仓分布的格式化信息",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@kiss-kedaya/crypto_mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@kiss-kedaya/crypto_mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0849.@kiss-kedaya_crypto_mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 830
  }
}