{
  "labels": {
    "analysis": "The MCP Server acts as an API integration hub for the Pylon platform, focusing on customer support and knowledge management. Its primary functionality revolves around managing users, contacts, support issues, knowledge bases, and teams within the Pylon ecosystem. The server provides extensive tools for creating, retrieving, updating, and organizing these elements programatically, enabling efficient workflow automation for customer support operations.",
    "reasoning": "The primary label \"Customer Support & Management\" was chosen because the server's core functionality is centered around handling customer support operations, including ticket management, contact organization, and knowledge base maintenance. \"Workflow Automation\" was added as a secondary label due to the server's emphasis on automating repetitive support tasks. \"API Integration\" is included as another secondary label because the server exposes this functionality as APIs for external application integration.",
    "primary_label": "E-commerce",
    "secondary_labels": [
      "Browser Automation",
      "API Integration"
    ],
    "custom_label": "Customer Support Automation",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 289,
    "server_name": "Pylon Server",
    "rank_by_usage": 290,
    "usage_count": "120",
    "original_file": "../crawler/smithery/@marcinwyszynski_pylon-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@marcinwyszynski/pylon-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 289,
      "name": "Pylon Server",
      "author": "@marcinwyszynski/pylon-mcp",
      "overview": "Integrate your applications with the Pylon API to manage users, contacts, issues, and knowledge base articles seamlessly. Access and manipulate Pylon data through a comprehensive set of tools designed for efficient workflow automation. Enhance your productivity by leveraging this server to interact with Pylon's platform programmatically.",
      "repository_url": "https://github.com/marcinwyszynski/pylon-mcp",
      "homepage": "https://smithery.ai/server/@marcinwyszynski/pylon-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "120",
      "success_rate": "99.49%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@marcinwyszynski_pylon-mcp.json",
      "tools_count": 29,
      "tools": [
        {
          "name": "pylon_get_me",
          "description": "Deploy Server Pylon Server @marcinwyszynski/pylon-mcp Try in Playground pylon_get_me",
          "parameters": [
            {
              "name": "pylon_get_me",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_get_contacts",
          "description": "Get customer contacts from Pylon. Use this to find customers who have submitted support tickets or inquiries. Returns contact details like name, email, company, and contact history.",
          "parameters": [
            {
              "name": "pylon_get_contacts",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_create_contact",
          "description": "Create a new customer contact in Pylon. Use this when adding a new customer who will submit support requests or access your customer portal.",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "email",
              "required": true,
              "type": "string"
            },
            {
              "name": "portal_role",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_get_issues",
          "description": "Get support issues/tickets from Pylon. Returns a list of customer support requests with details like title, status, priority, and assigned team member. Use this to see your workload or find specific issues.",
          "parameters": [
            {
              "name": "pylon_get_issues",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_create_issue",
          "description": "Create a new support issue/ticket in Pylon. Use this to log customer problems, bug reports, or feature requests that need to be tracked and resolved.",
          "parameters": [
            {
              "name": "pylon_create_issue",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_get_knowledge_bases",
          "description": "Get all knowledge bases from Pylon. Knowledge bases contain help articles, FAQs, and documentation that customers can access. Returns list of available knowledge bases with their names and article counts.",
          "parameters": [
            {
              "name": "pylon_get_knowledge_bases",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_get_knowledge_base_articles",
          "description": "Get help articles from a specific knowledge base. Use this to find existing documentation that might help resolve customer issues or to see what self-service content is available.",
          "parameters": [
            {
              "name": "pylon_get_knowledge_base_articles",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_create_knowledge_base_article",
          "description": "Create a new help article in a knowledge base. Use this to add new documentation, FAQs, or troubleshooting guides that customers can access for self-service support.",
          "parameters": [
            {
              "name": "pylon_create_knowledge_base_article",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_get_teams",
          "description": "Get all support teams from Pylon. Teams are groups of support agents that handle different types of issues (e.g., Technical, Billing, Sales). Returns team names, member counts, and specializations.",
          "parameters": [
            {
              "name": "pylon_get_teams",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_get_team",
          "description": "Get detailed information about a specific support team. Returns team members, their roles, current workload, and team performance metrics.",
          "parameters": [
            {
              "name": "pylon_get_teams",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_create_team",
          "description": "Create a new support team in Pylon. Use this to organize support agents into specialized groups for handling different types of customer issues (e.g., Technical Support, Billing, Enterprise accounts).",
          "parameters": [
            {
              "name": "pylon_create_team",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_get_accounts",
          "description": "Get all customer accounts from Pylon. Accounts represent companies or organizations that use your service. Returns account details like company name, subscription level, and contact information.",
          "parameters": [
            {
              "name": "pylon_get_accounts",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_get_account",
          "description": "Get detailed information about a specific customer account. Returns company details, subscription info, billing status, and associated contacts and issues.",
          "parameters": [
            {
              "name": "pylon_get_accounts",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_search_users",
          "description": "Search for team members and support agents in Pylon. Use this to find colleagues by name, email, or department when assigning issues or checking availability.",
          "parameters": [
            {
              "name": "pylon_search_users",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_get_users",
          "description": "Get all team members and support agents in your Pylon workspace. Returns user profiles including names, roles, teams, and availability status.",
          "parameters": [
            {
              "name": "pylon_get_users",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_search_contacts",
          "description": "Search for customer contacts in Pylon by name, email, company, or other details. Use this to quickly find a specific customer when you need to view their information or create an issue for them.",
          "parameters": [
            {
              "name": "pylon_search_contacts",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_search_issues",
          "description": "Search for support issues/tickets in Pylon by keywords, customer name, or issue content. Use this to find related issues, check for duplicates, or research similar problems.",
          "parameters": [
            {
              "name": "pylon_search_issues",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_get_issue",
          "description": "Get complete details of a specific support issue/ticket. Returns full issue information including title, description, status, priority, assignee, customer info, and conversation history.",
          "parameters": [
            {
              "name": "pylon_get_issues",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_update_issue",
          "description": "Update an existing support issue/ticket. Use this to change status (e.g., mark as resolved), reassign to different team members, update priority, or modify details as you work on the issue.",
          "parameters": [
            {
              "name": "pylon_update_issue",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_snooze_issue",
          "description": "Temporarily hide an issue until a future date/time. Use this for issues that cannot be worked on now but need follow-up later (e.g., waiting for customer response, scheduled maintenance, feature release).",
          "parameters": [
            {
              "name": "pylon_snooze_issue",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_get_issue_messages",
          "description": "Get the conversation history for a specific support issue. Returns all messages between customer and support team, including timestamps and sender information. Use this to understand the context and progress of an issue.",
          "parameters": [
            {
              "name": "pylon_get_issue_messages",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_create_issue_message",
          "description": "Add a new message/reply to a support issue conversation. Use this to respond to customers, add internal notes, or provide updates on issue progress.",
          "parameters": [
            {
              "name": "pylon_create_issue_message",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_get_tags",
          "description": "Get all available tags for categorizing issues and contacts. Tags help organize and filter support tickets by topic, urgency, or type (e.g., \"bug\", \"feature-request\", \"billing\", \"urgent\").",
          "parameters": [
            {
              "name": "pylon_get_tags",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_create_tag",
          "description": "Create a new tag for categorizing issues and contacts. Use this to add new categories that help organize and filter your support tickets effectively.",
          "parameters": [
            {
              "name": "pylon_create_tag",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_get_ticket_forms",
          "description": "Get all ticket submission forms available to customers. Forms define what information customers provide when creating new support requests (e.g., bug report form, billing inquiry form).",
          "parameters": [
            {
              "name": "pylon_get_ticket_forms",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_create_ticket_form",
          "description": "Create a new ticket submission form for customers. Use this to customize what information customers provide when creating different types of support requests (bug reports, feature requests, billing questions).",
          "parameters": [
            {
              "name": "pylon_create_ticket_form",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_get_webhooks",
          "description": "Get all configured webhooks in Pylon. Webhooks automatically send notifications to external systems when events occur (e.g., new issues created, status changes, messages added).",
          "parameters": [
            {
              "name": "pylon_get_webhooks",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_create_webhook",
          "description": "Create a new webhook to automatically notify external systems when events occur in Pylon. Use this to integrate with Slack, Discord, email systems, or custom applications.",
          "parameters": [
            {
              "name": "pylon_create_webhook",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pylon_delete_webhook",
          "description": "Delete an existing webhook to stop sending notifications to an external system. Use this when removing integrations or cleaning up unused webhooks.",
          "parameters": [
            {
              "name": "pylon_delete_webhook",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@marcinwyszynski/pylon-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "pylonApiToken",
          "required": true,
          "description": "The API key for the Pylon MCP server."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@marcinwyszynski/pylon-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0290.@marcinwyszynski_pylon-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 286
  }
}