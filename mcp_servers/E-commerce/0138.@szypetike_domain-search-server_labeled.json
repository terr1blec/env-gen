{
  "labels": {
    "analysis": "The MCP Server is designed to check the availability of domain names without requiring an API key. It provides a simple tool to verify if a domain is available for registration and offers pricing information. This is primarily a utility for domain registration purposes, streamlining the process of determining domain availability.",
    "reasoning": "The primary function of the server is clearly around domain availability checks, which fits best under the \"E-commerce\" category as it relates to product management (domains being products). The \"Web Search & Research\" category is also relevant as the tool helps users gather information about domain availability. No custom label is necessary as the predefined categories sufficiently describe its functionality.",
    "primary_label": "E-commerce",
    "secondary_labels": [
      "Web Search & Research"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 137,
    "server_name": "Domain Search - No API key required.",
    "rank_by_usage": 138,
    "usage_count": "428",
    "original_file": "../crawler/smithery/@szypetike_domain-search-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@szypetike/domain-search-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "check_domain_availability",
          "description": "Check if a domain name is available for registration and get pricing information",
          "input_schema": {
            "type": "object",
            "properties": {
              "domain": {
                "type": "string",
                "description": "Domain name to check (e.g., \"example.com\", \"mydomain.org\")"
              }
            },
            "required": [
              "domain"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "check_domain_availability"
      ]
    },
    "server_info_crawled": {
      "id": 137,
      "name": "Domain Search - No API key required.",
      "author": "@szypetike/domain-search-server",
      "overview": "Want to look for a domain with your favorite AI client? Why stop at inventing names when you can check if the domain is actually avaliable! No API key required.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@szypetike/domain-search-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "428",
      "success_rate": "99.90%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@szypetike_domain-search-server.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "check_domain_availability",
          "description": "Check if a domain name is available for registration and get pricing information",
          "input_schema": {
            "type": "object",
            "properties": {
              "domain": {
                "type": "string",
                "description": "Domain name to check (e.g., \"example.com\", \"mydomain.org\")"
              }
            },
            "required": [
              "domain"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@szypetike/domain-search-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@szypetike/domain-search-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0138.@szypetike_domain-search-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 135
  }
}