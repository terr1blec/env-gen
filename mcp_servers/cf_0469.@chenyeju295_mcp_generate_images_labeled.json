{
  "labels": {
    "analysis": "The MCP Server is primarily focused on AI-powered image generation, leveraging Together AI's capabilities. It is specifically designed to integrate with Cursor IDE, which suggests a development or content creation context. The tools available allow for customization of image aspect ratios and save paths, indicating functionality targeted at producing high-quality images tailored to user needs.",
    "reasoning": "The primary label \"AI/ML Tools\" was chosen as the server's core functionality is centered around AI-generated content, specifically image generation. The secondary label \"Development Tools\" was selected due to the integration with Cursor IDE, suggesting use in a development environment. No custom label is needed, as the predefined categories adequately cover the server's functionality.",
    "primary_label": "AI/ML Tools",
    "secondary_labels": [
      "Development Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 468,
    "server_name": "AI Image Generation Service",
    "rank_by_usage": 469,
    "usage_count": "39",
    "original_file": "../crawler/smithery/@chenyeju295_mcp_generate_images.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@chenyeju295/mcp_generate_images/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 468,
      "name": "AI Image Generation Service",
      "author": "@chenyeju295/mcp_generate_images",
      "overview": "An image generation service based on Together AI, specially designed to integrate with Cursor IDE. Supports customizing image aspect ratios, save paths, and provides high-quality image generation capabilities.",
      "repository_url": "https://github.com/chenyeju295/mcp_generate_images",
      "homepage": "https://smithery.ai/server/@chenyeju295/mcp_generate_images",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "39",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@chenyeju295_mcp_generate_images.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "use_description",
          "description": "Deploy Server AI Image Generation Service @chenyeju295/mcp_generate_images Try in Playground use_description",
          "parameters": [
            {
              "name": "use_description",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "generate_image",
          "description": "Deploy Server AI Image Generation Service @chenyeju295/mcp_generate_images Try in Playground use_description",
          "parameters": [
            {
              "name": "Tools",
              "required": false,
              "type": "string"
            },
            {
              "name": "use_description",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@chenyeju295/mcp_generate_images/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@chenyeju295/mcp_generate_images/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0469.@chenyeju295_mcp_generate_images_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 460
  }
}