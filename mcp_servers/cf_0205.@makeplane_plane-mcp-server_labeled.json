{
  "labels": {
    "analysis": "The MCP Server described is specifically designed to integrate with Plane APIs, a project management platform. It offers a comprehensive suite of tools focused on managing projects, issues, states, labels, modules, cycles, and work logs. The functionality primarily revolves around creating, updating, tracking, and interacting with various project management components. The server enables users to streamline team collaboration and enhance productivity through direct API interactions with Plane's ecosystem. The available tools cover a wide range of operations such as issue management, state transitions, label management, cycle tracking, worklog logging, and user/project details retrieval.",
    "reasoning": "The primary label \"Project Management\" was chosen because the server's core functionality is centered around managing projects and related workflows, which aligns closely with project management tools. Secondary labels \"Team Collaboration\" and \"Daily Productivity\" were selected because the server facilitates collaborative work and enhances individual productivity through efficient project tracking and work logging. The custom label \"Plane API Integration\" was added to specifically highlight the server's unique focus on interacting with Plane's APIs.",
    "primary_label": "Project Management",
    "secondary_labels": [
      "Communication Tools",
      "Daily Productivity"
    ],
    "custom_label": "Plane API Integration",
    "is_connected": false,
    "is_remote_tool_valid": false
  },
  "metadata": {
    "server_id": 204,
    "server_name": "Plane Server",
    "rank_by_usage": 205,
    "usage_count": "220",
    "original_file": "../crawler/smithery/@makeplane_plane-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@makeplane/plane-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 204,
      "name": "Plane Server",
      "author": "@makeplane/plane-mcp-server",
      "overview": "Enable seamless integration with Plane APIs to manage projects, work items, automations, and team collaboration. Create, update, and track projects, issues, states, labels, modules, cycles, and work logs efficiently. Build AI-powered tools that interact directly with Plane's ecosystem to enhance productivity and project management workflows.",
      "repository_url": "https://github.com/makeplane/plane-mcp-server",
      "homepage": "https://smithery.ai/server/@makeplane/plane-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "220",
      "success_rate": "99.42%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@makeplane_plane-mcp-server.json",
      "tools_count": 46,
      "tools": [
        {
          "name": "list_issue_types",
          "description": "Deploy Server Plane Server Claim Server @makeplane/plane-mcp-server Try in Playground list_issue_types",
          "parameters": [
            {
              "name": "list_issue_types",
              "required": false,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_issue_type",
          "description": "Get details of a specific issue type",
          "parameters": [
            {
              "name": "type_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_issue_type",
          "description": "Create a new issue type in a project",
          "parameters": [
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "issue_type_data",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_issue_type",
          "description": "Update an existing issue type",
          "parameters": [
            {
              "name": "type_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "issue_type_data",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_issue_type",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "an",
              "required": false,
              "type": "string"
            },
            {
              "name": "issue",
              "required": false,
              "type": "string"
            },
            {
              "name": "type",
              "required": false,
              "type": "string"
            },
            {
              "name": "type_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_states",
          "description": "Get all states for a specific project",
          "parameters": [
            {
              "name": "list_states",
              "required": false,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_state",
          "description": "Get details of a specific state",
          "parameters": [
            {
              "name": "state_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_state",
          "description": "Create a new state in a project",
          "parameters": [
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "state_data",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_state",
          "description": "Update an existing state",
          "parameters": [
            {
              "name": "Update",
              "required": false,
              "type": "string"
            },
            {
              "name": "an",
              "required": false,
              "type": "string"
            },
            {
              "name": "existing",
              "required": false,
              "type": "string"
            },
            {
              "name": "state",
              "required": false,
              "type": "string"
            },
            {
              "name": "state_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "state_data",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_state",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "state",
              "required": false,
              "type": "string"
            },
            {
              "name": "state_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_labels",
          "description": "Get all labels for a specific project",
          "parameters": [
            {
              "name": "list_labels",
              "required": false,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_label",
          "description": "Get details of a specific label",
          "parameters": [
            {
              "name": "label_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_label",
          "description": "Create a new label in a project",
          "parameters": [
            {
              "name": "label_data",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_label",
          "description": "Update an existing label",
          "parameters": [
            {
              "name": "Update",
              "required": false,
              "type": "string"
            },
            {
              "name": "an",
              "required": false,
              "type": "string"
            },
            {
              "name": "existing",
              "required": false,
              "type": "string"
            },
            {
              "name": "label",
              "required": false,
              "type": "string"
            },
            {
              "name": "label_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "label_data",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_label",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "label",
              "required": false,
              "type": "string"
            },
            {
              "name": "label_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_user",
          "description": "Get the current user's information",
          "parameters": [
            {
              "name": "get_user",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_workspace_members",
          "description": "Get all members in the current workspace",
          "parameters": [
            {
              "name": "get_workspace_members",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_projects",
          "description": "Get all projects for the current user",
          "parameters": [
            {
              "name": "get_projects",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_project",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Create",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "new",
              "required": false,
              "type": "string"
            },
            {
              "name": "project",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "identifier",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_modules",
          "description": "Get all modules for a specific project",
          "parameters": [
            {
              "name": "list_modules",
              "required": false,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_module",
          "description": "Get details of a specific module",
          "parameters": [
            {
              "name": "module_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_module",
          "description": "Create a new module in a project",
          "parameters": [
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "module_data",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_module",
          "description": "Update an existing module",
          "parameters": [
            {
              "name": "Update",
              "required": false,
              "type": "string"
            },
            {
              "name": "an",
              "required": false,
              "type": "string"
            },
            {
              "name": "existing",
              "required": false,
              "type": "string"
            },
            {
              "name": "module",
              "required": false,
              "type": "string"
            },
            {
              "name": "module_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "module_data",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_module",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "module",
              "required": false,
              "type": "string"
            },
            {
              "name": "module_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_module_issues",
          "description": "Get all issues for a specific module",
          "parameters": [
            {
              "name": "module_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_module_issues",
          "description": "Add issues to a module. Assign module to issues.",
          "parameters": [
            {
              "name": "add_module_issues",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_module_issue",
          "description": "Remove an issue from a module. Unassign module from issue.",
          "parameters": [
            {
              "name": "delete_module_issue",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_issue_using_readable_identifier",
          "description": "Get all issues for a specific project. When issue identifier is provided something like FIRST-123, ABC-123, etc. For FIRST-123, project_identifier is FIRST and issue_identifier is 123",
          "parameters": [
            {
              "name": "get_issue_using_readable_identifier",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_issue_comments",
          "description": "Get all comments for a specific issue. This requests project_id and issue_id as uuid parameters. If you have a readable identifier, you can use the get_issue_using_readable_identifier tool to get the issue_id and project_id",
          "parameters": [
            {
              "name": "get_issue_comments",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_issue_comment",
          "description": "Add a comment to a specific issue. This requests project_id and issue_id as uuid parameters. If you have a readable identifier, you can use the get_issue_using_readable_identifier tool to get the issue_id and project_id",
          "parameters": [
            {
              "name": "add_issue_comment",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_issue",
          "description": "Create an issue. This requests project_id as uuid parameter. If you have a readable identifier for project, you can use the get_projects tool to get the project_id from it",
          "parameters": [
            {
              "name": "create_issue_type",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_issue",
          "description": "Update an issue. This requests project_id and issue_id as uuid parameters. If you have a readable identifier, you can use the get_issue_using_readable_identifier tool to get the issue_id and project_id",
          "parameters": [
            {
              "name": "update_issue_type",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_cycles",
          "description": "Get all cycles for a specific project",
          "parameters": [
            {
              "name": "list_cycles",
              "required": false,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_cycle",
          "description": "Get details of a specific cycle",
          "parameters": [
            {
              "name": "cycle_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_cycle",
          "description": "Create a new cycle in a project",
          "parameters": [
            {
              "name": "cycle_data",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_cycle",
          "description": "Update an existing cycle",
          "parameters": [
            {
              "name": "Update",
              "required": false,
              "type": "string"
            },
            {
              "name": "an",
              "required": false,
              "type": "string"
            },
            {
              "name": "existing",
              "required": false,
              "type": "string"
            },
            {
              "name": "cycle",
              "required": false,
              "type": "string"
            },
            {
              "name": "cycle_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "cycle_data",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_cycle",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "cycle",
              "required": false,
              "type": "string"
            },
            {
              "name": "cycle_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "transfer_cycle_issues",
          "description": "Transfer issues from one cycle to another",
          "parameters": [
            {
              "name": "transfer_cycle_issues",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_cycle_issues",
          "description": "Get all issues for a specific cycle",
          "parameters": [
            {
              "name": "cycle_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_cycle_issues",
          "description": "Add issues to a cycle",
          "parameters": [
            {
              "name": "issues",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "cycle_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_cycle_issue",
          "description": "Remove an issue from a cycle",
          "parameters": [
            {
              "name": "cycle_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "issue_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_issue_worklogs",
          "description": "Get all worklogs for a specific issue",
          "parameters": [
            {
              "name": "issue_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_total_worklogs",
          "description": "Get total logged time for a project",
          "parameters": [
            {
              "name": "get_total_worklogs",
              "required": false,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_worklog",
          "description": "Create a new worklog for an issue",
          "parameters": [
            {
              "name": "issue_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "worklog_data",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_worklog",
          "description": "Update an existing worklog",
          "parameters": [
            {
              "name": "issue_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "worklog_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "worklog_data",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_worklog",
          "description": "Description not available",
          "parameters": [
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "worklog",
              "required": false,
              "type": "string"
            },
            {
              "name": "issue_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "project_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "worklog_id",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@makeplane/plane-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "planeApiKey",
          "required": true,
          "description": "Your Plane API token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@makeplane/plane-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0205.@makeplane_plane-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 201
  }
}