{
  "labels": {
    "analysis": "The MCP Server is specifically designed to integrate AI assistants with Notion's API, allowing for seamless creation, updating, and management of Notion pages, blocks, and databases. Its core functionality revolves around enabling AI-driven automation of Notion workspaces, with a focus on batch operations and efficient data manipulation. The available tools cover a wide range of Notion operations, from basic page management to advanced database querying and batch processing.",
    "reasoning": "The primary label \"Content Management\" was chosen because the server's core functionality is centered around managing Notion content (pages, blocks, databases) through an API. The secondary label \"Productivity\" is appropriate as the server enhances workflow efficiency by automating repetitive tasks in Notion. The custom label \"Notion API Integration\" was selected to emphasize the server's specialized nature of working with Notion's API infrastructure.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "Daily Productivity"
    ],
    "custom_label": "Notion API Integration",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 144,
    "server_name": "Notion MCP Server",
    "rank_by_usage": 145,
    "usage_count": "396",
    "original_file": "../crawler/smithery/@awkoy_notion-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@awkoy/notion-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 144,
      "name": "Notion MCP Server",
      "author": "@awkoy/notion-mcp-server",
      "overview": "Integrate your AI assistants with Notion's API to create, update, and manage pages and blocks effortlessly. Streamline your workflow by enabling your AI to interact with Notion databases and perform batch operations. Enhance your productivity with powerful tools designed for seamless Notion integration.",
      "repository_url": "https://github.com/awkoy/notion-mcp-server",
      "homepage": "https://smithery.ai/server/@awkoy/notion-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "396",
      "success_rate": "67.49%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@awkoy_notion-mcp-server.json",
      "tools_count": 17,
      "tools": [
        {
          "name": "create_page",
          "description": "Deploy Server Notion MCP Server @awkoy/notion-mcp-server Try in Playground create_page",
          "parameters": [
            {
              "name": "cover",
              "required": false,
              "type": "string"
            },
            {
              "name": "parent",
              "required": false,
              "type": "string"
            },
            {
              "name": "children",
              "required": false,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "properties",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "archive_page",
          "description": "Archive (trash) a Notion page",
          "parameters": [
            {
              "name": "archive_page",
              "required": false,
              "type": "string"
            },
            {
              "name": "pageId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_page_properties",
          "description": "Update the properties of a Notion page",
          "parameters": [
            {
              "name": "pageId",
              "required": true,
              "type": "string"
            },
            {
              "name": "properties",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "restore_page",
          "description": "Restore a previously archived Notion page",
          "parameters": [
            {
              "name": "restore_page",
              "required": false,
              "type": "string"
            },
            {
              "name": "pageId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_pages",
          "description": "Search for pages and databases in Notion by title",
          "parameters": [
            {
              "name": "search_pages",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "append_block_children",
          "description": "Append child blocks to a parent block in Notion",
          "parameters": [
            {
              "name": "append_block_children",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "retrieve_block",
          "description": "Retrieve a block from Notion by ID",
          "parameters": [
            {
              "name": "retrieve_block",
              "required": false,
              "type": "string"
            },
            {
              "name": "blockId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "retrieve_block_children",
          "description": "Retrieve the children of a block from Notion",
          "parameters": [
            {
              "name": "retrieve_block_children",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_block",
          "description": "Update a block's content in Notion",
          "parameters": [
            {
              "name": "data",
              "required": true,
              "type": "string"
            },
            {
              "name": "blockId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_block",
          "description": "Delete (move to trash) a block in Notion",
          "parameters": [
            {
              "name": "delete_block",
              "required": false,
              "type": "string"
            },
            {
              "name": "blockId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_database",
          "description": "Create a new database in Notion",
          "parameters": [
            {
              "name": "create_database",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "query_database",
          "description": "Query a database in Notion",
          "parameters": [
            {
              "name": "query_database",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_database",
          "description": "Update a database in Notion",
          "parameters": [
            {
              "name": "update_database",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "batch_append_block_children",
          "description": "Append children to multiple blocks in a single operation",
          "parameters": [
            {
              "name": "batch_append_block_children",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "batch_update_blocks",
          "description": "Update multiple blocks in a single operation",
          "parameters": [
            {
              "name": "operations",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "batch_delete_blocks",
          "description": "Delete multiple blocks in a single operation",
          "parameters": [
            {
              "name": "blockIds",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "batch_mixed_operations",
          "description": "Perform a mix of append, update, and delete operations in a single request",
          "parameters": [
            {
              "name": "batch_mixed_operations",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@awkoy/notion-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "notionToken",
          "required": true,
          "description": "The API key for the Notion API."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@awkoy/notion-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0145.@awkoy_notion-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 142
  }
}