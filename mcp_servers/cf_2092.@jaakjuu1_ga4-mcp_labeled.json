{
  "labels": {
    "analysis": "The MCP Server described is specifically designed to interact with Google Analytics 4 data, providing tools for querying and analyzing user metrics, traffic sources, demographics, page performance, conversions, and more. It addresses the need for businesses and developers to access detailed Google Analytics data programmatically, enabling data-driven insights without manual data extraction.",
    "reasoning": "The primary functionality revolves around querying and processing Google Analytics data, which aligns most closely with the 'Data Analysis & Processing' category due to its focus on analytics and data transformation. Secondary relationships include 'API Integration' (for seamless GA4 data access) and 'Web Search & Research' (for user behavioral insights and demographics research).",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "API Integration",
      "Web Search & Research"
    ],
    "custom_label": "Google Analytics Query Tools",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2091,
    "server_name": "Google Analytics Data Server",
    "rank_by_usage": 2092,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@jaakjuu1_ga4-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@jaakjuu1/ga4-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2091,
      "name": "Google Analytics Data Server",
      "author": "@jaakjuu1/ga4-mcp",
      "overview": "Provide powerful tools to query and analyze Google Analytics 4 data seamlessly. Access real-time user metrics, traffic sources, user demographics, page performance, and conversion data through flexible and customizable queries. Enable data-driven insights for your applications with easy integration and secure authentication.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@jaakjuu1/ga4-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@jaakjuu1_ga4-mcp.json",
      "tools_count": 8,
      "tools": [
        {
          "name": "query_analytics",
          "description": "Deploy Server Google Analytics Data Server @jaakjuu1/ga4-mcp Try in Playground query_analytics",
          "parameters": [
            {
              "name": "query_analytics",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_realtime_data",
          "description": "Get real-time Google Analytics data for active users and current activity",
          "parameters": [
            {
              "name": "get_realtime_data",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_traffic_sources",
          "description": "Analyze traffic sources and acquisition channels",
          "parameters": [
            {
              "name": "get_traffic_sources",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_user_demographics",
          "description": "Get user demographic data including age, gender, and location",
          "parameters": [
            {
              "name": "get_user_demographics",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_page_performance",
          "description": "Analyze page performance metrics including pageviews, bounce rate, and time on page",
          "parameters": [
            {
              "name": "get_page_performance",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_conversion_data",
          "description": "Get conversion and goal completion data",
          "parameters": [
            {
              "name": "get_conversion_data",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_custom_report",
          "description": "Generate custom reports with advanced filtering and segmentation",
          "parameters": [
            {
              "name": "get_custom_report",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_metadata",
          "description": "List available GA4 dimensions and metrics for the configured property. Useful for discovering valid field names before crafting a query.",
          "parameters": [
            {
              "name": "list_metadata",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@jaakjuu1/ga4-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "googleCredentialsPath",
          "required": true,
          "description": "Path to service account key JSON file inside the container"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@jaakjuu1/ga4-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2092.@jaakjuu1_ga4-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1822
  }
}