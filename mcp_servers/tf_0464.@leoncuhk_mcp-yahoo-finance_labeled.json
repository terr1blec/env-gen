{
  "labels": {
    "analysis": "The MCP Server provides tools for retrieving comprehensive financial data from Yahoo Finance, including real-time and historical stock prices, financial statements, dividends, earnings dates, and news. It also offers advanced visualization features such as market sentiment dashboards, portfolio tracking reports, and technical analysis charts. The server is designed to support investment decision-making by delivering actionable insights through data analytics and visual reporting. It integrates with popular MCP clients for seamless financial data interaction.",
    "reasoning": "The primary label \"Financial Services\" was chosen because the server's core functionality revolves around providing financial data and analytics tools essential for investment decisions and portfolio management. The secondary label \"Data Analysis & Processing\" is appropriate due to its advanced analytics and reporting capabilities. \"Visualization\" is added as a custom label to highlight the server's key feature of generating insightful visual charts and dashboards that are not explicitly covered by predefined categories.",
    "primary_label": "Financial Services",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": "Visualization",
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 463,
    "server_name": "Yahoo Finance Data and Visualization Server",
    "rank_by_usage": 464,
    "usage_count": "40",
    "original_file": "../crawler/smithery/@leoncuhk_mcp-yahoo-finance.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@leoncuhk/mcp-yahoo-finance/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_current_stock_price",
          "description": "Get the current stock price based on stock symbol.\n\n    Args:\n        symbol (str): Stock symbol in Yahoo Finance format.\n    ",
          "input_schema": {
            "properties": {
              "symbol": {
                "title": "Symbol",
                "type": "string"
              }
            },
            "required": [
              "symbol"
            ],
            "title": "get_current_stock_priceArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_stock_price_by_date",
          "description": "Get the stock price for a given stock symbol on a specific date.\n\n    Args:\n        symbol (str): Stock symbol in Yahoo Finance format.\n        date (str): The date in YYYY-MM-DD format.\n    ",
          "input_schema": {
            "properties": {
              "symbol": {
                "title": "Symbol",
                "type": "string"
              },
              "date": {
                "title": "Date",
                "type": "string"
              }
            },
            "required": [
              "symbol",
              "date"
            ],
            "title": "get_stock_price_by_dateArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_stock_price_date_range",
          "description": "Get the stock prices for a given date range for a given stock symbol.\n\n    Args:\n        symbol (str): Stock symbol in Yahoo Finance format.\n        start_date (str): The start date in YYYY-MM-DD format.\n        end_date (str): The end date in YYYY-MM-DD format.\n    ",
          "input_schema": {
            "properties": {
              "symbol": {
                "title": "Symbol",
                "type": "string"
              },
              "start_date": {
                "title": "Start Date",
                "type": "string"
              },
              "end_date": {
                "title": "End Date",
                "type": "string"
              }
            },
            "required": [
              "symbol",
              "start_date",
              "end_date"
            ],
            "title": "get_stock_price_date_rangeArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_historical_stock_prices",
          "description": "Get historical stock prices for a given stock symbol.\n\n    Args:\n        symbol (str): Stock symbol in Yahoo Finance format.\n        period (str): The period for historical data. Defaults to \"1mo\".\n                Valid periods: \"1d\", \"5d\", \"1mo\", \"3mo\", \"6mo\", \"1y\", \"2y\", \"5y\", \"10y\", \"ytd\", \"max\"\n        interval (str): The interval beween data points. Defaults to \"1d\".\n                Valid intervals: \"1d\", \"5d\", \"1wk\", \"1mo\", \"3mo\"\n    ",
          "input_schema": {
            "properties": {
              "symbol": {
                "title": "Symbol",
                "type": "string"
              },
              "period": {
                "default": "1mo",
                "enum": [
                  "1d",
                  "5d",
                  "1mo",
                  "3mo",
                  "6mo",
                  "1y",
                  "2y",
                  "5y",
                  "10y",
                  "ytd",
                  "max"
                ],
                "title": "Period",
                "type": "string"
              },
              "interval": {
                "default": "1d",
                "enum": [
                  "1d",
                  "5d",
                  "1wk",
                  "1mo",
                  "3mo"
                ],
                "title": "Interval",
                "type": "string"
              }
            },
            "required": [
              "symbol"
            ],
            "title": "get_historical_stock_pricesArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_dividends",
          "description": "Get dividends for a given stock symbol.\n\n    Args:\n        symbol (str): Stock symbol in Yahoo Finance format.\n    ",
          "input_schema": {
            "properties": {
              "symbol": {
                "title": "Symbol",
                "type": "string"
              }
            },
            "required": [
              "symbol"
            ],
            "title": "get_dividendsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_income_statement",
          "description": "Get income statement for a given stock symbol.\n\n    Args:\n        symbol (str): Stock symbol in Yahoo Finance format.\n        freq (str): At what frequency to get cashflow statements. Defaults to \"yearly\".\n                Valid freqencies: \"yearly\", \"quarterly\", \"trainling\"\n    ",
          "input_schema": {
            "properties": {
              "symbol": {
                "title": "Symbol",
                "type": "string"
              },
              "freq": {
                "default": "yearly",
                "enum": [
                  "yearly",
                  "quarterly",
                  "trainling"
                ],
                "title": "Freq",
                "type": "string"
              }
            },
            "required": [
              "symbol"
            ],
            "title": "get_income_statementArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_cashflow",
          "description": "Get cashflow for a given stock symbol.\n\n    Args:\n        symbol (str): Stock symbol in Yahoo Finance format.\n        freq (str): At what frequency to get cashflow statements. Defaults to \"yearly\".\n                Valid freqencies: \"yearly\", \"quarterly\", \"trainling\"\n    ",
          "input_schema": {
            "properties": {
              "symbol": {
                "title": "Symbol",
                "type": "string"
              },
              "freq": {
                "default": "yearly",
                "enum": [
                  "yearly",
                  "quarterly",
                  "trainling"
                ],
                "title": "Freq",
                "type": "string"
              }
            },
            "required": [
              "symbol"
            ],
            "title": "get_cashflowArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_earning_dates",
          "description": "Get earning dates.\n\n    Args:\n        symbol (str): Stock symbol in Yahoo Finance format.\n        limit (int): max amount of upcoming and recent earnings dates to return. Default value 12 should return next 4 quarters and last 8 quarters. Increase if more history is needed.\n    ",
          "input_schema": {
            "properties": {
              "symbol": {
                "title": "Symbol",
                "type": "string"
              },
              "limit": {
                "default": 12,
                "title": "Limit",
                "type": "integer"
              }
            },
            "required": [
              "symbol"
            ],
            "title": "get_earning_datesArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_news",
          "description": "Get news for a given stock symbol.\n\n    Args:\n        symbol (str): Stock symbol in Yahoo Finance format.\n    ",
          "input_schema": {
            "properties": {
              "symbol": {
                "title": "Symbol",
                "type": "string"
              }
            },
            "required": [
              "symbol"
            ],
            "title": "get_newsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "generate_market_dashboard",
          "description": "Generate a market sentiment dashboard image (base64 PNG).\n\n    Args:\n        indices (str): Comma-separated list of index symbols (default: \"^GSPC,^DJI,^IXIC\")\n    ",
          "input_schema": {
            "properties": {
              "indices": {
                "default": "^GSPC,^DJI,^IXIC",
                "title": "Indices",
                "type": "string"
              }
            },
            "title": "generate_market_dashboardArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "generate_portfolio_report",
          "description": "Generate a portfolio performance tracking report image (base64 PNG).\n\n    Args:\n        symbols (str): Comma-separated list of stock symbols (default: \"AAPL,MSFT,GOOGL,AMZN,NVDA\")\n    ",
          "input_schema": {
            "properties": {
              "symbols": {
                "default": "AAPL,MSFT,GOOGL,AMZN,NVDA",
                "title": "Symbols",
                "type": "string"
              }
            },
            "title": "generate_portfolio_reportArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "generate_stock_technical_analysis",
          "description": "Generate a deep technical analysis report image (base64 PNG).\n\n    Args:\n        symbol (str): Stock symbol in Yahoo Finance format (default: \"TSLA\")\n    ",
          "input_schema": {
            "properties": {
              "symbol": {
                "default": "TSLA",
                "title": "Symbol",
                "type": "string"
              }
            },
            "title": "generate_stock_technical_analysisArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 12,
      "tool_names": [
        "get_current_stock_price",
        "get_stock_price_by_date",
        "get_stock_price_date_range",
        "get_historical_stock_prices",
        "get_dividends",
        "get_income_statement",
        "get_cashflow",
        "get_earning_dates",
        "get_news",
        "generate_market_dashboard",
        "generate_portfolio_report",
        "generate_stock_technical_analysis"
      ]
    },
    "server_info_crawled": {
      "id": 463,
      "name": "Yahoo Finance Data and Visualization Server",
      "author": "@leoncuhk/mcp-yahoo-finance",
      "overview": "Provide real-time and historical financial data along with advanced visual analytics for stocks and portfolios. Generate insightful market sentiment dashboards, portfolio tracking reports, and technical analysis charts to support informed investment decisions. Seamlessly integrate with popular MCP clients like Claude Desktop, VS Code, and Cursor for enhanced financial data interaction.",
      "repository_url": "https://github.com/leoncuhk/mcp-yahoo-finance",
      "homepage": "https://smithery.ai/server/@leoncuhk/mcp-yahoo-finance",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "40",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@leoncuhk_mcp-yahoo-finance.json",
      "tools_count": 12,
      "tools": [
        {
          "name": "get_current_stock_price",
          "description": "Get the current stock price based on stock symbol.\n\n    Args:\n        symbol (str): Stock symbol in Yahoo Finance format.\n    ",
          "input_schema": {
            "properties": {
              "symbol": {
                "title": "Symbol",
                "type": "string"
              }
            },
            "required": [
              "symbol"
            ],
            "title": "get_current_stock_priceArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_stock_price_by_date",
          "description": "Get the stock price for a given stock symbol on a specific date.\n\n    Args:\n        symbol (str): Stock symbol in Yahoo Finance format.\n        date (str): The date in YYYY-MM-DD format.\n    ",
          "input_schema": {
            "properties": {
              "symbol": {
                "title": "Symbol",
                "type": "string"
              },
              "date": {
                "title": "Date",
                "type": "string"
              }
            },
            "required": [
              "symbol",
              "date"
            ],
            "title": "get_stock_price_by_dateArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_stock_price_date_range",
          "description": "Get the stock prices for a given date range for a given stock symbol.\n\n    Args:\n        symbol (str): Stock symbol in Yahoo Finance format.\n        start_date (str): The start date in YYYY-MM-DD format.\n        end_date (str): The end date in YYYY-MM-DD format.\n    ",
          "input_schema": {
            "properties": {
              "symbol": {
                "title": "Symbol",
                "type": "string"
              },
              "start_date": {
                "title": "Start Date",
                "type": "string"
              },
              "end_date": {
                "title": "End Date",
                "type": "string"
              }
            },
            "required": [
              "symbol",
              "start_date",
              "end_date"
            ],
            "title": "get_stock_price_date_rangeArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_historical_stock_prices",
          "description": "Get historical stock prices for a given stock symbol.\n\n    Args:\n        symbol (str): Stock symbol in Yahoo Finance format.\n        period (str): The period for historical data. Defaults to \"1mo\".\n                Valid periods: \"1d\", \"5d\", \"1mo\", \"3mo\", \"6mo\", \"1y\", \"2y\", \"5y\", \"10y\", \"ytd\", \"max\"\n        interval (str): The interval beween data points. Defaults to \"1d\".\n                Valid intervals: \"1d\", \"5d\", \"1wk\", \"1mo\", \"3mo\"\n    ",
          "input_schema": {
            "properties": {
              "symbol": {
                "title": "Symbol",
                "type": "string"
              },
              "period": {
                "default": "1mo",
                "enum": [
                  "1d",
                  "5d",
                  "1mo",
                  "3mo",
                  "6mo",
                  "1y",
                  "2y",
                  "5y",
                  "10y",
                  "ytd",
                  "max"
                ],
                "title": "Period",
                "type": "string"
              },
              "interval": {
                "default": "1d",
                "enum": [
                  "1d",
                  "5d",
                  "1wk",
                  "1mo",
                  "3mo"
                ],
                "title": "Interval",
                "type": "string"
              }
            },
            "required": [
              "symbol"
            ],
            "title": "get_historical_stock_pricesArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_dividends",
          "description": "Get dividends for a given stock symbol.\n\n    Args:\n        symbol (str): Stock symbol in Yahoo Finance format.\n    ",
          "input_schema": {
            "properties": {
              "symbol": {
                "title": "Symbol",
                "type": "string"
              }
            },
            "required": [
              "symbol"
            ],
            "title": "get_dividendsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_income_statement",
          "description": "Get income statement for a given stock symbol.\n\n    Args:\n        symbol (str): Stock symbol in Yahoo Finance format.\n        freq (str): At what frequency to get cashflow statements. Defaults to \"yearly\".\n                Valid freqencies: \"yearly\", \"quarterly\", \"trainling\"\n    ",
          "input_schema": {
            "properties": {
              "symbol": {
                "title": "Symbol",
                "type": "string"
              },
              "freq": {
                "default": "yearly",
                "enum": [
                  "yearly",
                  "quarterly",
                  "trainling"
                ],
                "title": "Freq",
                "type": "string"
              }
            },
            "required": [
              "symbol"
            ],
            "title": "get_income_statementArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_cashflow",
          "description": "Get cashflow for a given stock symbol.\n\n    Args:\n        symbol (str): Stock symbol in Yahoo Finance format.\n        freq (str): At what frequency to get cashflow statements. Defaults to \"yearly\".\n                Valid freqencies: \"yearly\", \"quarterly\", \"trainling\"\n    ",
          "input_schema": {
            "properties": {
              "symbol": {
                "title": "Symbol",
                "type": "string"
              },
              "freq": {
                "default": "yearly",
                "enum": [
                  "yearly",
                  "quarterly",
                  "trainling"
                ],
                "title": "Freq",
                "type": "string"
              }
            },
            "required": [
              "symbol"
            ],
            "title": "get_cashflowArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_earning_dates",
          "description": "Get earning dates.\n\n    Args:\n        symbol (str): Stock symbol in Yahoo Finance format.\n        limit (int): max amount of upcoming and recent earnings dates to return. Default value 12 should return next 4 quarters and last 8 quarters. Increase if more history is needed.\n    ",
          "input_schema": {
            "properties": {
              "symbol": {
                "title": "Symbol",
                "type": "string"
              },
              "limit": {
                "default": 12,
                "title": "Limit",
                "type": "integer"
              }
            },
            "required": [
              "symbol"
            ],
            "title": "get_earning_datesArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_news",
          "description": "Get news for a given stock symbol.\n\n    Args:\n        symbol (str): Stock symbol in Yahoo Finance format.\n    ",
          "input_schema": {
            "properties": {
              "symbol": {
                "title": "Symbol",
                "type": "string"
              }
            },
            "required": [
              "symbol"
            ],
            "title": "get_newsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "generate_market_dashboard",
          "description": "Generate a market sentiment dashboard image (base64 PNG).\n\n    Args:\n        indices (str): Comma-separated list of index symbols (default: \"^GSPC,^DJI,^IXIC\")\n    ",
          "input_schema": {
            "properties": {
              "indices": {
                "default": "^GSPC,^DJI,^IXIC",
                "title": "Indices",
                "type": "string"
              }
            },
            "title": "generate_market_dashboardArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "generate_portfolio_report",
          "description": "Generate a portfolio performance tracking report image (base64 PNG).\n\n    Args:\n        symbols (str): Comma-separated list of stock symbols (default: \"AAPL,MSFT,GOOGL,AMZN,NVDA\")\n    ",
          "input_schema": {
            "properties": {
              "symbols": {
                "default": "AAPL,MSFT,GOOGL,AMZN,NVDA",
                "title": "Symbols",
                "type": "string"
              }
            },
            "title": "generate_portfolio_reportArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "generate_stock_technical_analysis",
          "description": "Generate a deep technical analysis report image (base64 PNG).\n\n    Args:\n        symbol (str): Stock symbol in Yahoo Finance format (default: \"TSLA\")\n    ",
          "input_schema": {
            "properties": {
              "symbol": {
                "default": "TSLA",
                "title": "Symbol",
                "type": "string"
              }
            },
            "title": "generate_stock_technical_analysisArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@leoncuhk/mcp-yahoo-finance/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@leoncuhk/mcp-yahoo-finance/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0464.@leoncuhk_mcp-yahoo-finance_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 455
  }
}