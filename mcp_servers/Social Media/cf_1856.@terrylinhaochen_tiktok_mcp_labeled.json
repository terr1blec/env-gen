{
  "labels": {
    "analysis": "The MCP Server specializes in TikTok video search functionality, allowing users to find videos by hashtags and retrieve trending content. It includes anti-bot detection, proxy support, and automated management of API sessions to handle rate limiting and errors. This ensures reliable video discovery and integrates with Claude Desktop for enhanced metadata extraction. The server's core purpose is centered around content discovery and automation within the TikTok platform.",
    "reasoning": "The primary label \"Social Media\" was chosen because the server's functionality is directly tied to TikTok, a major social media platform. The secondary label \"API Integration\" is relevant due to its use of automated API session management. No custom label is needed as the predefined categories cover the server's functionality well.",
    "primary_label": "Social Media",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1855,
    "server_name": "TikTok Video Search",
    "rank_by_usage": 1856,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@terrylinhaochen_tiktok_mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@terrylinhaochen/tiktok_mcp/mcp?config=eyJwb3J0IjogMCwgImxvZ0xldmVsIjogImluZm8iLCAiZW5hYmxlSGVhbHRoQ2hlY2siOiBmYWxzZX0=&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "Connection timeout (20 seconds)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1855,
      "name": "TikTok Video Search",
      "author": "@terrylinhaochen/tiktok_mcp",
      "overview": "Search TikTok videos by hashtags and retrieve trending content with built-in anti-bot detection and proxy support. Automatically manage API sessions and handle rate limiting and errors to ensure reliable video discovery. Monitor service health and seamlessly integrate with Claude Desktop for enhanced video metadata extraction.",
      "repository_url": "https://github.com/terrylinhaochen/tiktok_mcp",
      "homepage": "https://smithery.ai/server/@terrylinhaochen/tiktok_mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@terrylinhaochen_tiktok_mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "Optional Settings",
          "description": "Access and manage servers by signing in.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"port\": 0,\n  \"logLevel\": \"info\",\n  \"enableHealthCheck\": false\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@terrylinhaochen/tiktok_mcp/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"port\": 0,\n  \"logLevel\": \"info\",\n  \"enableHealthCheck\": false\n}",
      "python_sdk_url": "https://server.smithery.ai/@terrylinhaochen/tiktok_mcp/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "cf_1856.@terrylinhaochen_tiktok_mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1646
  }
}