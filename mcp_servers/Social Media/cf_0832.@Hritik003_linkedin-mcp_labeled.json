{
  "labels": {
    "analysis": "The MCP Server is specifically designed for LinkedIn interactions, offering tools to fetch user profiles, retrieve feed posts, and analyze resumes. Its primary functionality revolves around accessing and managing LinkedIn data for job search, profile management, and resume analysis purposes. The server acts as an intermediary to streamline LinkedIn-related tasks, reducing manual effort in data retrieval and processing.",
    "reasoning": "The primary functionality of fetching LinkedIn profiles, posts, and analyzing resumes aligns with the \"Social Media\" category due to its focus on LinkedIn interactions. The server's tools are also relevant to \"Web Search & Research\" as they help gather professional data, and optionally \"Daily Productivity\" since they assist with job search and profile management. Given the server's tight integration with LinkedIn, no custom label is needed as it fits well within the predefined social media category.",
    "primary_label": "Social Media",
    "secondary_labels": [
      "Web Search & Research",
      "Daily Productivity"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 831,
    "server_name": "LinkedIn MCP Server",
    "rank_by_usage": 832,
    "usage_count": "6",
    "original_file": "../crawler/smithery/@Hritik003_linkedin-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Hritik003/linkedin-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 831,
      "name": "LinkedIn MCP Server",
      "author": "@Hritik003/linkedin-mcp",
      "overview": "Fetch user profiles, search for jobs, and retrieve feed posts seamlessly. Analyze resumes to extract key information and enhance your LinkedIn experience. Streamline your job search and profile management with advanced features tailored for LinkedIn users.",
      "repository_url": "https://github.com/Hritik003/linkedin-mcp",
      "homepage": "https://smithery.ai/server/@Hritik003/linkedin-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "6",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Hritik003_linkedin-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "get_profile",
          "description": "Deploy Server LinkedIn MCP Server Claim Server @Hritik003/linkedin-mcp Try in Playground get_profile",
          "parameters": [
            {
              "name": "Retrieves",
              "required": false,
              "type": "string"
            },
            {
              "name": "the",
              "required": false,
              "type": "string"
            },
            {
              "name": "User",
              "required": false,
              "type": "string"
            },
            {
              "name": "Profile",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_feed_posts",
          "description": "Retrieve LinkedIn feed posts. :return: List of feed post details",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Hritik003/linkedin-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Hritik003/linkedin-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0832.@Hritik003_linkedin-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 813
  }
}