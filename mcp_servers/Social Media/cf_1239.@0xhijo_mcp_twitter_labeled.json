{
  "labels": {
    "analysis": "The MCP Server is specifically designed to facilitate AI model interactions with Twitter (now known as X). It provides a standardized API for various Twitter operations, including creating posts, replying to tweets, following users, and retrieving tweet data. The core functionality revolves around enabling automated or AI-driven Twitter engagement, content management, and user interaction tracking.",
    "reasoning": "The primary function of this server is to enable automated Twitter interactions, which aligns closely with the \"Social Media\" category. Additionally, the server offers extensive data retrieval capabilities from Twitter, which fits well with \"Web Search & Research.\" The focus on automated posting and interaction suggests it's also relevant to \"API Integration\" as it facilitates programmatic access to Twitter's platform.",
    "primary_label": "Social Media",
    "secondary_labels": [
      "API Integration",
      "Web Search & Research"
    ],
    "custom_label": "Twitter Automation",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1238,
    "server_name": "Twitter Interaction Server",
    "rank_by_usage": 1239,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@0xhijo_mcp_twitter.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@0xhijo/mcp_twitter/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1238,
      "name": "Twitter Interaction Server",
      "author": "@0xhijo/mcp_twitter",
      "overview": "Enable your AI models to seamlessly interact with Twitter. Create posts, follow users, and retrieve tweets effortlessly through a standardized API. Enhance your applications with powerful Twitter functionalities at your fingertips.",
      "repository_url": "https://github.com/0xhijo/mcp_twitter",
      "homepage": "https://smithery.ai/server/@0xhijo/mcp_twitter",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@0xhijo_mcp_twitter.json",
      "tools_count": 11,
      "tools": [
        {
          "name": "create_twitter_post",
          "description": "Deploy Server Twitter Interaction Server Claim Server @0xhijo/mcp_twitter Try in Playground create_twitter_post",
          "parameters": [
            {
              "name": "create_twitter_post",
              "required": false,
              "type": "string"
            },
            {
              "name": "Create",
              "required": false,
              "type": "string"
            },
            {
              "name": "new",
              "required": false,
              "type": "string"
            },
            {
              "name": "post",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "reply_twitter_tweet",
          "description": "Reply to specific X/Twitter post by ID",
          "parameters": [
            {
              "name": "tweet_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "response_text",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_last_tweet",
          "description": "Get most recent post from specified X/Twitter account",
          "parameters": [
            {
              "name": "get_last_tweet",
              "required": false,
              "type": "string"
            },
            {
              "name": "account_name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_last_tweets_options",
          "description": "Get specified number of posts matching search query",
          "parameters": [
            {
              "name": "get_last_tweets_options",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_and_post_twitter_thread",
          "description": "Create and publish X/Twitter thread",
          "parameters": [
            {
              "name": "thread",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "follow_twitter_from_username",
          "description": "Follow X/Twitter user by username",
          "parameters": [
            {
              "name": "follow_twitter_from_username",
              "required": false,
              "type": "string"
            },
            {
              "name": "username",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_twitter_profile_from_username",
          "description": "Get full X/Twitter profile data by username",
          "parameters": [
            {
              "name": "get_twitter_profile_from_username",
              "required": false,
              "type": "string"
            },
            {
              "name": "username",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_twitter_user_id_from_username",
          "description": "Get X/Twitter user ID from username",
          "parameters": [
            {
              "name": "get_twitter_user_id_from_username",
              "required": false,
              "type": "string"
            },
            {
              "name": "username",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_last_tweet_and_replies_from_user",
          "description": "Get recent X/Twitter posts and replies from user",
          "parameters": [
            {
              "name": "get_last_tweet_and_replies_from_user",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_last_tweet_from_user",
          "description": "Get recent X/Twitter posts from user",
          "parameters": [
            {
              "name": "username",
              "required": true,
              "type": "string"
            },
            {
              "name": "maxTweets",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_own_twitter_account_info",
          "description": "Get current account profile data",
          "parameters": [
            {
              "name": "get_own_twitter_account_info",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@0xhijo/mcp_twitter/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@0xhijo/mcp_twitter/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1239.@0xhijo_mcp_twitter_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1188
  }
}