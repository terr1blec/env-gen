{
  "labels": {
    "analysis": "The MCP Server described provides real-time access to the top trending topics on Weibo (a popular Chinese social media platform), without requiring user authentication. The primary functionality is retrieving and displaying the top 10 hot search items from Weibo. This server is useful for gathering real-time social media insights, monitoring public sentiment, and integrating trending data into AI workflows or applications.",
    "reasoning": "The primary label \"Social Media\" was chosen because the server directly interacts with Weibo, a social media platform, and provides data about its trending topics. \"Web Search & Research\" is a valid secondary label because the service enables users to quickly gather and research trending information from social media, which is a common task in web research. There is no need for a custom label as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Social Media",
    "secondary_labels": [
      "Web Search & Research"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 651,
    "server_name": "Weibo Hot Search Service - 获取微博热搜",
    "rank_by_usage": 652,
    "usage_count": "14",
    "original_file": "../crawler/smithery/@RusianHu_weibo_hotsearch_mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@RusianHu/weibo_hotsearch_mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_hot_search",
          "description": "\n    获取微博热搜榜前10条内容\n\n    Returns:\n        List[str]: 热搜列表，如果获取失败则返回错误信息\n    ",
          "input_schema": {
            "properties": {},
            "title": "get_hot_searchArguments",
            "type": "object"
          },
          "annotations": {}
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get_hot_search"
      ]
    },
    "server_info_crawled": {
      "id": 651,
      "name": "Weibo Hot Search Service - 获取微博热搜",
      "author": "@RusianHu/weibo_hotsearch_mcp",
      "overview": "Provide real-time access to the top 10 trending topics on Weibo without requiring user authentication. Easily integrate trending data into AI assistants supporting MCP protocol for enhanced social media insights. Analyze and explore popular topics effortlessly within your AI workflows.",
      "repository_url": "https://github.com/RusianHu/weibo_hotsearch_mcp",
      "homepage": "https://smithery.ai/server/@RusianHu/weibo_hotsearch_mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "14",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@RusianHu_weibo_hotsearch_mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_hot_search",
          "description": "\n    获取微博热搜榜前10条内容\n\n    Returns:\n        List[str]: 热搜列表，如果获取失败则返回错误信息\n    ",
          "input_schema": {
            "properties": {},
            "title": "get_hot_searchArguments",
            "type": "object"
          },
          "annotations": {}
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@RusianHu/weibo_hotsearch_mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@RusianHu/weibo_hotsearch_mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0652.@RusianHu_weibo_hotsearch_mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 637
  }
}