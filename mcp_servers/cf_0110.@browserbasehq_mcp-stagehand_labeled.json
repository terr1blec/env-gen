{
  "labels": {
    "analysis": "The MCP Server \"Stagehand\" is designed to facilitate cloud-based browser automation. Its core functionality revolves around enabling LLMs to interact with web pages by automating navigation, element interaction, text extraction, and screenshot capture in a cloud browser environment. The available tools allow for precise actions like clicking buttons, typing into inputs, extracting text, observing interactable elements, and taking screenshots. This is particularly useful for web scraping, automated testing, and navigating complex web interfaces.",
    "reasoning": "The primary functionality of Stagehand aligns closely with browser automation, as it enables programmatic control over web interactions. Additionally, its capabilities in web scraping and interaction with web pages justify secondary labels in those areas. The custom label \"Cloud-based Browser Automation\" is used to emphasize the server's unique aspect of operating in a cloud browser environment.",
    "primary_label": "Browser Automation",
    "secondary_labels": [
      "Web Search & Research",
      "Web Search & Research"
    ],
    "custom_label": "Cloud-based Browser Automation",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 109,
    "server_name": "Stagehand",
    "rank_by_usage": 110,
    "usage_count": "626",
    "original_file": "../crawler/smithery/@browserbasehq_mcp-stagehand.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@browserbasehq/mcp-stagehand/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 109,
      "name": "Stagehand",
      "author": "@browserbasehq/mcp-stagehand",
      "overview": "Provides cloud browser automation capabilities using Stagehand, enabling LLMs to interact with web pages, take screenshots, and execute JavaScript in a cloud browser environment.",
      "repository_url": "https://github.com/browserbase/mcp-server-browserbase",
      "homepage": "https://smithery.ai/server/@browserbasehq/mcp-stagehand",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "626",
      "success_rate": "99.89%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@browserbasehq_mcp-stagehand.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "stagehand_navigate",
          "description": "Deploy Server @browserbasehq/mcp-stagehand Try in Playground stagehand_navigate",
          "parameters": [
            {
              "name": "stagehand_navigate",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "stagehand_act",
          "description": "Performs an action on a web page element. Act actions should be as atomic and specific as possible, i.e. \"Click the sign in button\" or \"Type 'hello' into the search input\". AVOID actions that are more than one step, i.e. \"Order me pizza\" or \"Send an email to Paul asking him to call me\".",
          "parameters": []
        },
        {
          "name": "stagehand_extract",
          "description": "Extracts all of the text from the current page.",
          "parameters": [
            {
              "name": "stagehand_extract",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "stagehand_observe",
          "description": "Observes elements on the web page. Use this tool to observe elements that you can later use in an action. Use observe instead of extract when dealing with actionable (interactable) elements rather than text. More often than not, you'll want to use extract instead of observe when dealing with scraping or extracting structured text.",
          "parameters": [
            {
              "name": "stagehand_observe",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "screenshot",
          "description": "Takes a screenshot of the current page. Use this tool to learn where you are on the page when controlling the browser with Stagehand. Only use this tool when the other tools are not sufficient to get the information you need.",
          "parameters": [
            {
              "name": "screenshot",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@browserbasehq/mcp-stagehand/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "openaiApiKey",
          "required": true,
          "description": "API key for OpenAI"
        },
        {
          "name": "browserbaseApiKey",
          "required": true,
          "description": "API key for Browserbase"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@browserbasehq/mcp-stagehand/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0110.@browserbasehq_mcp-stagehand_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 107
  }
}