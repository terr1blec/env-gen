{
  "labels": {
    "analysis": "The MCP Server \"Serper Search and Scrape\" is designed to provide web search and webpage scraping functionalities through the Serper API. Its primary tools, \"google_search\" and \"scrape,\" enable users to perform web searches and extract content from webpages. This server is integrated with various MCP-compatible clients, making it accessible for automated and interactive web research and data extraction tasks.",
    "reasoning": "The primary label \"Web Search & Research\" is chosen because the server's core functionality revolves around performing web searches and gathering information. The secondary label \"Browser Automation\" is included since the \"scrape\" tool allows for automated content extraction from webpages. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Browser Automation"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 68,
    "server_name": "Serper Search and Scrape",
    "rank_by_usage": 69,
    "usage_count": "1,230",
    "original_file": "../crawler/smithery/@marcopesani_mcp-server-serper.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@marcopesani/mcp-server-serper/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 68,
      "name": "Serper Search and Scrape",
      "author": "@marcopesani/mcp-server-serper",
      "overview": "A TypeScript-based MCP server that provides web search and webpage scraping capabilities using the Serper API. This server integrates with Cursor, Cline, Claude Desktop, and any MCP-compatible client to enable powerful web search and content extraction features in one convenient package.",
      "repository_url": "https://github.com/marcopesani/mcp-server-serper",
      "homepage": "https://smithery.ai/server/@marcopesani/mcp-server-serper",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "1,230",
      "success_rate": "82.43%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@marcopesani_mcp-server-serper.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "google_search",
          "description": "Deploy Server Serper Search and Scrape @marcopesani/mcp-server-serper Try in Playground google_search",
          "parameters": []
        },
        {
          "name": "scrape",
          "description": "Deploy Server Serper Search and Scrape @marcopesani/mcp-server-serper Try in Playground google_search",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@marcopesani/mcp-server-serper/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "serperApiKey",
          "required": true,
          "description": "The API key for the Serper MCP server."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@marcopesani/mcp-server-serper/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0069.@marcopesani_mcp-server-serper_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 68
  }
}