{
  "labels": {
    "analysis": "The MCP Server is designed to integrate Devin AI capabilities with Slack, enabling users to automate task management, maintain context in Slack threads, and send messages between Devin sessions and Slack. It solves workflow automation problems by bridging AI-powered tasks with Slack's communication platform, facilitating seamless collaboration and task tracking.",
    "reasoning": "The primary functionality revolves around communication and task management within Slack, making \"Communication Tools\" the most fitting primary label. The server also facilitates browser automation (via Slack task posting) and daily productivity enhancements, hence the additional secondary labels. No custom label is needed as the predefined categories sufficiently cover the server's functionality.",
    "primary_label": "Communication Tools",
    "secondary_labels": [
      "Daily Productivity",
      "Browser Automation"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1414,
    "server_name": "Devin AI Slack Integration Server",
    "rank_by_usage": 1415,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@kazuph_mcp-devin.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@kazuph/mcp-devin/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1414,
      "name": "Devin AI Slack Integration Server",
      "author": "@kazuph/mcp-devin",
      "overview": "Integrate Devin AI sessions seamlessly with Slack to automate task posting, maintain thread context, and manage sessions efficiently. Post Devin tasks to Slack channels with mentions, send messages to Devin sessions and Slack threads simultaneously, and retrieve session and organization information. Enhance your workflow by bridging Devin AI capabilities directly into your Slack workspace.",
      "repository_url": "https://github.com/kazuph/mcp-devin",
      "homepage": "https://smithery.ai/server/@kazuph/mcp-devin",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@kazuph_mcp-devin.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "create_devin_session",
          "description": "Deploy Server Devin AI Slack Integration Server Claim Server @kazuph/mcp-devin Try in Playground create_devin_session",
          "parameters": [
            {
              "name": "create_devin_session",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_devin_session",
          "description": "Get information about an existing Devin session and optionally fetch associated Slack messages",
          "parameters": [
            {
              "name": "get_devin_session",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_devin_sessions",
          "description": "List all Devin sessions",
          "parameters": [
            {
              "name": "List",
              "required": false,
              "type": "string"
            },
            {
              "name": "all",
              "required": false,
              "type": "string"
            },
            {
              "name": "Devin",
              "required": false,
              "type": "string"
            },
            {
              "name": "sessions",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "offset",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "send_message_to_session",
          "description": "Send a message to an existing Devin session and optionally to the associated Slack thread",
          "parameters": [
            {
              "name": "send_message_to_session",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_organization_info",
          "description": "Get information about the current Devin organization",
          "parameters": [
            {
              "name": "get_organization_info",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@kazuph/mcp-devin/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "devinApiKey",
          "required": true,
          "description": "API key for Devin"
        },
        {
          "name": "slackBotToken",
          "required": true,
          "description": "Slack Bot User OAuth Token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@kazuph/mcp-devin/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1415.@kazuph_mcp-devin_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1320
  }
}