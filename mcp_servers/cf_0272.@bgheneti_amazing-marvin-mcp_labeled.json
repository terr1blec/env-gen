{
  "labels": {
    "analysis": "The MCP Server is designed to integrate with Amazing Marvin, a productivity application, providing AI-enhanced task and project management capabilities. Its core functionality revolves around task organization, time tracking, and productivity analytics. The available tools allow users to manage tasks, projects, labels, goals, and time tracking, making it a comprehensive system for personal and professional productivity. The server also includes features for gamification (e.g., reward points, kudos) and productivity analysis, which are uniquely tailored for users who want a data-driven approach to their workflow.",
    "reasoning": "The primary label \"Daily Productivity\" was chosen because the server's primary functionality is centered around task and project management, which are core aspects of productivity tools. Secondary labels \"Time & Calendar\" and \"Database Operations\" were added due to the server's time tracking capabilities and its extensive data querying features. The custom label \"Productivity Analytics\" was included to highlight the server's unique features for tracking and analyzing productivity patterns, which goes beyond basic task management.",
    "primary_label": "Daily Productivity",
    "secondary_labels": [
      "Time & Calendar",
      "Database Operations"
    ],
    "custom_label": "Productivity Analytics",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 271,
    "server_name": "Amazing Marvin MCP",
    "rank_by_usage": 272,
    "usage_count": "139",
    "original_file": "../crawler/smithery/@bgheneti_amazing-marvin-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@bgheneti/amazing-marvin-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 271,
      "name": "Amazing Marvin MCP",
      "author": "@bgheneti/amazing-marvin-mcp",
      "overview": "Provide your Amazing Marvin productivity data such as tasks, projects, and categories to AI models for enhanced context-aware assistance. Streamline your workflow by integrating your task management seamlessly with AI assistants. Easily install and configure with support for efficient data streaming via Server-Sent Events.",
      "repository_url": "https://github.com/bgheneti/Amazing-Marvin-MCP",
      "homepage": "https://smithery.ai/server/@bgheneti/amazing-marvin-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "139",
      "success_rate": "98.41%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@bgheneti_amazing-marvin-mcp.json",
      "tools_count": 28,
      "tools": [
        {
          "name": "get_tasks",
          "description": "Deploy Server Amazing Marvin MCP @bgheneti/amazing-marvin-mcp Try in Playground",
          "parameters": []
        },
        {
          "name": "get_projects",
          "description": "Get all projects (categories with type 'project'). Use when you need project list for organization or project selection. For detailed project analysis, use get_project_overview(project_id).",
          "parameters": []
        },
        {
          "name": "get_categories",
          "description": "Get categories from Amazing Marvin",
          "parameters": [
            {
              "name": "debug",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_due_items",
          "description": "Get overdue and due tasks only (past due date). Use when you need to focus specifically on urgent/overdue items. For complete daily view including today's tasks, use get_daily_productivity_overview().",
          "parameters": []
        },
        {
          "name": "get_child_tasks",
          "description": "Get child tasks of a specific parent task or project (experimental). Use when you need to see subtasks within a project or parent task. Returns both tasks and sub-projects. Set recursive=True for deep hierarchy. Args: parent_id: ID of the parent task or project recursive: If True, recursively get all descendants (can be expensive) Note: This is an experimental endpoint and may not work for all parent types.",
          "parameters": []
        },
        {
          "name": "get_all_tasks",
          "description": "Use when you need only today's scheduled items without overdue or completed items. For comprehensive daily overview, use get_daily_productivity_overview() instead. For all tasks across projects, use get_all_tasks().",
          "parameters": [
            {
              "name": "debug",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_labels",
          "description": "Get all labels from Amazing Marvin",
          "parameters": [
            {
              "name": "debug",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_goals",
          "description": "Get all goals from Amazing Marvin",
          "parameters": [
            {
              "name": "debug",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_account_info",
          "description": "Get account information from Amazing Marvin",
          "parameters": [
            {
              "name": "debug",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_currently_tracked_item",
          "description": "Use when beginning focused work on a task to measure time spent. Check current tracking status with get_currently_tracked_item() or time_tracking_summary(). Stop tracking with stop_time_tracking(task_id).",
          "parameters": [
            {
              "name": "debug",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_task",
          "description": "Create a new task in Amazing Marvin. Args: title: Task title (required) project_id: Optional project ID to assign task to category_id: Optional category ID for organization due_date: Optional due date in YYYY-MM-DD format note: Optional task notes/description For creating multiple tasks, use batch_create_tasks() instead. For creating a project with tasks, use create_project_with_tasks().",
          "parameters": []
        },
        {
          "name": "mark_task_done",
          "description": "Mark a task as completed in Amazing Marvin. Args: item_id: Task ID to mark as done timezone_offset: Timezone offset in minutes from UTC (e.g., -480 for PST) For completing multiple tasks, use batch_mark_done(task_ids) instead.",
          "parameters": []
        },
        {
          "name": "test_api_connection",
          "description": "Test the API connection and credentials. Use when troubleshooting connection issues or verifying API setup. Returns \"OK\" if successful or error details if failed.",
          "parameters": []
        },
        {
          "name": "start_time_tracking",
          "description": "Start time tracking for a specific task. Use when beginning focused work on a task to measure time spent. Check current tracking status with get_currently_tracked_item() or time_tracking_summary(). Stop tracking with stop_time_tracking(task_id).",
          "parameters": [
            {
              "name": "Stop",
              "required": false,
              "type": "string"
            },
            {
              "name": "tracking",
              "required": false,
              "type": "string"
            },
            {
              "name": "with",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "stop_time_tracking",
          "description": "Use when beginning focused work on a task to measure time spent. Check current tracking status with get_currently_tracked_item() or time_tracking_summary(). Stop tracking with stop_time_tracking(task_id).",
          "parameters": []
        },
        {
          "name": "get_time_tracks",
          "description": "Get time tracking data for specific tasks",
          "parameters": [
            {
              "name": "debug",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "task_ids",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "claim_reward_points",
          "description": "Claim reward points for completing a task",
          "parameters": [
            {
              "name": "claim_reward_points",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_kudos_info",
          "description": "Get kudos and achievement information",
          "parameters": [
            {
              "name": "debug",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_project",
          "description": "For creating multiple tasks, use batch_create_tasks() instead. For creating a project with tasks, use create_project_with_tasks().",
          "parameters": []
        },
        {
          "name": "create_project_with_tasks",
          "description": "For creating multiple tasks, use batch_create_tasks() instead. For creating a project with tasks, use create_project_with_tasks().",
          "parameters": []
        },
        {
          "name": "get_project_overview",
          "description": "Use when you need project list for organization or project selection. For detailed project analysis, use get_project_overview(project_id).",
          "parameters": []
        },
        {
          "name": "get_daily_productivity_overview",
          "description": "Use when you need only today's scheduled items without overdue or completed items. For comprehensive daily overview, use get_daily_productivity_overview() instead. For all tasks across projects, use get_all_tasks().",
          "parameters": [
            {
              "name": "debug",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "batch_create_tasks",
          "description": "For creating multiple tasks, use batch_create_tasks() instead. For creating a project with tasks, use create_project_with_tasks().",
          "parameters": []
        },
        {
          "name": "batch_mark_done",
          "description": "Mark multiple tasks as done at once",
          "parameters": []
        },
        {
          "name": "time_tracking_summary",
          "description": "Use when beginning focused work on a task to measure time spent. Check current tracking status with get_currently_tracked_item() or time_tracking_summary(). Stop tracking with stop_time_tracking(task_id).",
          "parameters": [
            {
              "name": "Stop",
              "required": false,
              "type": "string"
            },
            {
              "name": "tracking",
              "required": false,
              "type": "string"
            },
            {
              "name": "with",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_completed_tasks",
          "description": "Get completed tasks from past 7 days with efficient date filtering and categorization. Use when you need to review recent accomplishments or productivity patterns. For specific date, use get_completed_tasks_for_date(date). For custom time ranges, use get_productivity_summary_for_time_range().",
          "parameters": []
        },
        {
          "name": "get_productivity_summary_for_time_range",
          "description": "Use when you need to review recent accomplishments or productivity patterns. For specific date, use get_completed_tasks_for_date(date). For custom time ranges, use get_productivity_summary_for_time_range().",
          "parameters": []
        },
        {
          "name": "get_completed_tasks_for_date",
          "description": "Use when you need to review recent accomplishments or productivity patterns. For specific date, use get_completed_tasks_for_date(date). For custom time ranges, use get_productivity_summary_for_time_range().",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@bgheneti/amazing-marvin-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "amazingMarvinApiKey",
          "required": true,
          "description": "Amazing Marvin API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@bgheneti/amazing-marvin-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0272.@bgheneti_amazing-marvin-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 268
  }
}