{
  "labels": {
    "analysis": "The Grok Server is designed to integrate with Grok AI for various AI-driven functionalities. Its core tools allow users to interact with Grok's models for chat completions, text completions, embeddings, and model management. The server enables seamless integration into applications or IDEs, making it suitable for enhanced productivity through AI capabilities. The primary use cases involve AI deployments, real-time streaming responses, and multi-modal input support.",
    "reasoning": "The primary label \"AI/ML Tools\" was chosen because the server's main purpose is to facilitate interactions with Grok's AI models, which are central to machine learning and artificial intelligence workflows. The secondary label \"Development Tools\" was included because the server allows integration into applications or IDEs, making it useful for developers. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "AI/ML Tools",
    "secondary_labels": [
      "Development Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1448,
    "server_name": "Grok Server",
    "rank_by_usage": 1449,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@BrewMyTech_grok-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@BrewMyTech/grok-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1448,
      "name": "Grok Server",
      "author": "@BrewMyTech/grok-mcp",
      "overview": "Enable advanced AI capabilities by integrating with the Grok API for chat completions, text completions, embeddings, and model management. Streamline your AI workflows with real-time streaming responses and multi-modal input support. Seamlessly connect your applications or IDEs to powerful Grok AI models for enhanced productivity.",
      "repository_url": "https://github.com/BrewMyTech/grok-mcp",
      "homepage": "https://smithery.ai/server/@BrewMyTech/grok-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@BrewMyTech_grok-mcp.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "list_models",
          "description": "Deploy Server Grok Server @BrewMyTech/grok-mcp Try in Playground list_models",
          "parameters": [
            {
              "name": "list_models",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_model",
          "description": "Get details about a specific model",
          "parameters": [
            {
              "name": "get_model",
              "required": false,
              "type": "string"
            },
            {
              "name": "model_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_chat_completion",
          "description": "Create a chat completion with the Grok API",
          "parameters": []
        },
        {
          "name": "create_completion",
          "description": "Create a text completion with the Grok API",
          "parameters": []
        },
        {
          "name": "create_embeddings",
          "description": "Create embeddings for text with the Grok API",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@BrewMyTech/grok-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "grokApiKey",
          "required": true,
          "description": "Your Grok API key for accessing the Grok API"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@BrewMyTech/grok-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1449.@BrewMyTech_grok-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1345
  }
}