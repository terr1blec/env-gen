{
  "labels": {
    "analysis": "The MCP Server for Heroku Platform is designed to interact with Heroku's resources through natural language commands, providing an interface for managing applications, dynos, add-ons, databases, and deployment pipelines. The server's tools cover application lifecycle management, database operations, deployment automation, and team/organizational workflows. It primarily serves as a management and automation layer for Heroku's platform services, enabling users to perform various administrative tasks programmatically.",
    "reasoning": "The primary label \"Cloud Services\" was chosen because the MCP Server interacts with and manages Heroku's cloud platform resources. The secondary labels \"Development Tools\" and \"Database Operations\" were selected because many of the tools are focused on software development workflows and database management within the Heroku environment. The functionality is highly specialized to Heroku's ecosystem, so no custom label was necessary.",
    "primary_label": "Cloud Services",
    "secondary_labels": [
      "Development Tools",
      "Database Operations"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2267,
    "server_name": "Heroku Platform MCP Server",
    "rank_by_usage": 2268,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@heroku_heroku-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@heroku/heroku-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2267,
      "name": "Heroku Platform MCP Server",
      "author": "@heroku/heroku-mcp-server",
      "overview": "Interact seamlessly with Heroku Platform resources using natural language. Manage applications, dynos, add-ons, and more through LLM-driven tools. Enhance your development workflow with secure access to Heroku APIs.",
      "repository_url": "https://github.com/heroku/heroku-mcp-server",
      "homepage": "https://smithery.ai/server/@heroku/heroku-mcp-server",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@heroku_heroku-mcp-server.json",
      "tools_count": 34,
      "tools": [
        {
          "name": "list_apps",
          "description": "Deploy Server Heroku Platform MCP Server Claim Server @heroku/heroku-mcp-server Try in Playground",
          "parameters": [
            {
              "name": "list_apps",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_app_info",
          "description": "Get comprehensive information about a Heroku application. Use this tool when you need to: 1) View app configuration and settings, 2) Check dyno formation and scaling, 3) List add-ons and buildpacks, 4) View collaborators and access details, 5) Check domains and certificates. Accepts app name and optional JSON format. Returns detailed app status and configuration.",
          "parameters": [
            {
              "name": "team",
              "required": false,
              "type": "string"
            },
            {
              "name": "space",
              "required": false,
              "type": "string"
            },
            {
              "name": "personal",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_app",
          "description": "Create a new Heroku application with customizable settings. Use this tool when a user wants to: 1) Create a new app with a specific name, 2) Create an app in a particular region (US/EU), 3) Create an app within a team, or 4) Create an app in a private space. The tool handles name generation if not specified and returns the new app's details.",
          "parameters": [
            {
              "name": "app",
              "required": false,
              "type": "string"
            },
            {
              "name": "team",
              "required": false,
              "type": "string"
            },
            {
              "name": "space",
              "required": false,
              "type": "string"
            },
            {
              "name": "region",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "rename_app",
          "description": "Rename an existing Heroku application. Use this tool when a user needs to: 1) Change an app's name, or 2) Resolve naming conflicts. Requires both current app name and desired new name. The tool validates name availability and handles the rename process.",
          "parameters": [
            {
              "name": "rename_app",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "transfer_app",
          "description": "Transfer ownership of a Heroku application. Use this tool when a user wants to: 1) Transfer an app to another user's account, 2) Move an app to a team, 3) Change app ownership for organizational purposes. Requires the app name and recipient (email for users, name for teams). The current user must be the app owner or a team admin to perform the transfer.",
          "parameters": [
            {
              "name": "transfer_app",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "maintenance_on",
          "description": "Enable maintenance mode for Heroku applications. Use this tool when you need to: 1) Redirect traffic to a maintenance page, 2) Prepare for system updates or deployments, 3) Schedule planned maintenance windows, 4) Gracefully handle service interruptions. The tool manages traffic routing and process states while preserving running operations.",
          "parameters": [
            {
              "name": "maintenance_on",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "maintenance_off",
          "description": "Disable maintenance mode for Heroku applications. Use this tool when you need to: 1) Restore normal application traffic routing, 2) Resume dyno operations after maintenance, 3) Complete deployment processes, 4) Verify application health after maintenance. The tool handles service restoration and process resumption.",
          "parameters": [
            {
              "name": "maintenance_off",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_app_logs",
          "description": "View application logs with flexible filtering options. Use this tool when you need to: 1) Monitor application activity in real-time, 2) Debug issues by viewing recent logs, 3) Filter logs by dyno, process type, or source.",
          "parameters": [
            {
              "name": "get_app_logs",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_private_spaces",
          "description": "List Heroku Private Spaces available to the user. Use this tool when you need to: 1) View all private spaces, 2) Get space details like CIDR blocks and regions, 3) Check space compliance features, or 4) View space capacity information. Supports JSON output for detailed metadata. Essential for enterprise space management.",
          "parameters": [
            {
              "name": "list_private_spaces",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_teams",
          "description": "List Heroku Teams the user belongs to. Use this tool when you need to: 1) View all accessible teams, 2) Check team membership, 3) Get team metadata and enterprise relationships, or 4) Verify team access for app operations. Supports JSON output for detailed team information.",
          "parameters": [
            {
              "name": "list_teams",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_addons",
          "description": "List Heroku add-ons with flexible filtering options. Use this tool when you need to: 1) View all add-ons across your apps, 2) List add-ons for a specific app, 3) Get detailed add-on metadata in JSON format.",
          "parameters": [
            {
              "name": "list_addons",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_addon_info",
          "description": "Get comprehensive information about a Heroku add-on. Use this tool when you need to: 1) View add-on details, 2) Check plan details and state, 3) View billing information. Accepts add-on ID, name, or attachment name.",
          "parameters": [
            {
              "name": "get_addon_info",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_addon",
          "description": "Create a new Heroku add-on for an application. Use this tool when you need to: 1) Provision a new add-on for your app, 2) Specify a particular service and plan, 3) Set a custom name for the add-on or attachment. The tool handles the provisioning process and returns the new add-on's details.",
          "parameters": [
            {
              "name": "create_addon",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_addon_services",
          "description": "List available Heroku add-on services. Use this tool when you need to view all available add-on services. Returns a list of add-on services with their basic information.",
          "parameters": [
            {
              "name": "list_addon_services",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_addon_plans",
          "description": "List available plans for a specific Heroku add-on service. Use this tool when you need to: 1) View all plans for a service, 2) Compare plan pricing, 3) Check plan availability. Requires add-on service slug and returns detailed plan information.",
          "parameters": [
            {
              "name": "list_addon_plans",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pg_psql",
          "description": "Execute SQL queries against Heroku PostgreSQL databases. Use this tool when you need to: 1) Run SQL queries for database analysis, 2) Investigate database locks and performance, 3) Make schema modifications or updates, 4) Execute complex database operations. The tool provides direct SQL access with support for file-based queries and credential management.",
          "parameters": [
            {
              "name": "pg_psql",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pg_info",
          "description": "Display detailed information about Heroku PostgreSQL databases. Use this tool when you need to: 1) View comprehensive database configuration and status, 2) Monitor database performance metrics, 3) Check connection and resource utilization, 4) Assess database health and capacity. The tool provides detailed insights into database operations and configuration.",
          "parameters": [
            {
              "name": "pg_info",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pg_ps",
          "description": "Monitor active database queries and processes. Use this tool when you need to: 1) View currently executing queries, 2) Track query progress and resource usage, 3) Identify long-running or blocked queries, 4) Debug performance issues in real-time. The tool provides detailed visibility into database activity with optional verbose output.",
          "parameters": [
            {
              "name": "pg_psql",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pg_locks",
          "description": "Analyze database locks and blocking transactions. Use this tool when you need to: 1) Identify blocked queries and lock chains, 2) Investigate deadlock situations, 3) Monitor transaction lock states, 4) Resolve blocking issues affecting performance. The tool helps diagnose and resolve database concurrency problems.",
          "parameters": [
            {
              "name": "pg_locks",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pg_outliers",
          "description": "Identify resource-intensive database operations. Use this tool when you need to: 1) Find slow or expensive queries, 2) Analyze query performance patterns, 3) Optimize database workload, 4) Track query statistics over time. The tool helps identify opportunities for performance optimization.",
          "parameters": [
            {
              "name": "pg_outliers",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pg_credentials",
          "description": "Manage database access credentials and security. Use this tool when you need to: 1) View current database credentials, 2) Configure database access permissions, 3) Rotate credentials for security compliance, 4) Set up monitoring access. The tool helps maintain secure database access and credential management.",
          "parameters": [
            {
              "name": "pg_credentials",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pg_kill",
          "description": "Terminate specific database processes. Use this tool when you need to: 1) Stop problematic or stuck queries, 2) Clear blocking transactions, 3) Manage resource-intensive operations, 4) Handle runaway processes safely. The tool provides controlled process termination with optional force mode.",
          "parameters": [
            {
              "name": "pg_kill",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pg_maintenance",
          "description": "Monitor database maintenance status and operations. Use this tool when you need to: 1) Check current maintenance windows, 2) View scheduled maintenance activities, 3) Track maintenance operation progress, 4) Plan database maintenance tasks. The tool provides visibility into database maintenance state and scheduling.",
          "parameters": [
            {
              "name": "pg_maintenance",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pg_backups",
          "description": "Manage database backup operations and schedules. Use this tool when you need to: 1) View existing database backups, 2) Monitor backup schedules and status, 3) Track backup operation progress, 4) Verify backup availability. The tool helps maintain database backup operations and disaster recovery readiness.",
          "parameters": [
            {
              "name": "pg_backups",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pg_upgrade",
          "description": "Upgrade PostgreSQL database version. Use this tool when you need to: 1) Migrate to a newer PostgreSQL version, 2) Plan version upgrade paths, 3) Execute controlled version migrations, 4) Verify upgrade compatibility. The tool manages safe database version upgrades with confirmation protection.",
          "parameters": [
            {
              "name": "pg_upgrade",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "ps_list",
          "description": "List and monitor Heroku application dynos. Use this tool when you need to: 1) View all running dynos for an app, 2) Check dyno status and health, 3) Monitor application process states, 4) Verify dyno configurations. The tool provides process visibility with optional JSON output format.",
          "parameters": [
            {
              "name": "ps_list",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "ps_scale",
          "description": "Scale and resize Heroku application dynos. Use this tool when you need to: 1) Adjust dyno quantities up or down, 2) Change dyno sizes for performance, 3) View current formation details, 4) Manage resource allocation. The tool handles dyno scaling with support for type-specific adjustments.",
          "parameters": [
            {
              "name": "ps_scale",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "ps_restart",
          "description": "Restart Heroku application processes. Use this tool when you need to: 1) Restart specific dynos by name, 2) Restart all dynos of a process type, 3) Perform full application restarts, 4) Reset dyno states selectively. The tool manages process restarts with flexible targeting options.",
          "parameters": [
            {
              "name": "ps_restart",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pipelines_create",
          "description": "Create new Heroku deployment pipelines. Use this tool when you need to: 1) Set up new deployment workflows, 2) Create staged application environments, 3) Organize apps by development stages, 4) Configure team-based pipeline structures. The tool manages pipeline creation with optional team and initial app configuration.",
          "parameters": [
            {
              "name": "pipelines_create",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pipelines_promote",
          "description": "Promote applications through pipeline stages. Use this tool when you need to: 1) Deploy code to staging or production environments, 2) Manage staged releases, 3) Coordinate multi-app promotions, 4) Control deployment workflows. The tool handles safe promotion of apps between pipeline stages.",
          "parameters": [
            {
              "name": "pipelines_promote",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pipelines_list",
          "description": "View available Heroku pipelines. Use this tool when you need to: 1) List accessible pipelines, 2) Check pipeline ownership and access, 3) View pipeline organization, 4) Find specific pipeline configurations. The tool provides pipeline visibility with optional JSON output format.",
          "parameters": [
            {
              "name": "pipelines_list",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pipelines_info",
          "description": "Display detailed pipeline configuration. Use this tool when you need to: 1) View pipeline stage configuration, 2) Check connected applications, 3) Verify pipeline settings, 4) Monitor pipeline status. The tool provides comprehensive pipeline information and structure details.",
          "parameters": [
            {
              "name": "pipelines_info",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "deploy_to_heroku",
          "description": "Deploy projects to Heroku, replaces manual git push workflows. Use this tool when you need to: 1) Deploy a new application with specific app.json configuration, 2) Update an existing application with new code, 3) Configure team or private space deployments, or 4) Set up environment-specific configurations. Important: Check for an app.json file first. If an app.json does not exist in the workspace, you must create one and pass it in via the appJson parameter. The tool handles app creation, source code deployment, and environment setup. Requires valid app.json in workspace or provided via configuration. Supports team deployments, private spaces, and custom environment variables.Use apps_list tool with the \"all\" param to get a list of apps for the user to choose from when deploying to an existing app and the app name was not provided.",
          "parameters": [
            {
              "name": "deploy_to_heroku",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "deploy_one_off_dyno",
          "description": "Execute code or a command on a Heroku one-off dyno in a sandboxed environment with network and filesystem access. **Requirements:** - Display command output to the user. - Determine app language using the 'app_info' tool to identify the Heroku buildpack. - Use shell commands for environment setup (e.g., package installations) before execution. - Output must utilize standard input/output. **Capabilities:** - Network and filesystem access - Environment variables support - File creation and execution in supported languages - Temporary directory management **Guidelines:** 1. Use the appropriate Heroku-supported language runtime. 2. Ensure correct syntax and module imports for the chosen language. 3. Organize code into classes/functions, executed from the top level. 4. For external packages: - Specify in the appropriate package manager file. - Minimize dependencies. - Prefer native modules when possible. **Example (Node.js package manager file):** ```json \"type\": \"module\", \"dependencies\": { \"axios\": \"^1.6.0\"",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@heroku/heroku-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "herokuApiKey",
          "required": true,
          "description": "Heroku API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@heroku/heroku-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2268.@heroku_heroku-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1951
  }
}