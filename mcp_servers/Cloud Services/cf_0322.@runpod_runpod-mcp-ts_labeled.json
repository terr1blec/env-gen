{
  "labels": {
    "analysis": "The MCP Server for RunPod is designed to manage cloud resources on the RunPod platform. It provides tools to interact with pods, serverless endpoints, templates, network volumes, and container registry authentications. The server allows users to create, list, update, start, stop, and delete these resources, enabling efficient cloud infrastructure management through natural language commands. This aligns closely with cloud service management and cloud resource orchestration.",
    "reasoning": "The primary functionality is managing cloud resources, specifically on the RunPod platform, which fits under the \"Cloud Services\" category. Given that the tools are heavily focused on cloud infrastructure management, this is the most accurate primary label. There are no predefined secondary categories that perfectly complement this, but \"Operating System\" could be loosely applied due to the resource management aspect. A custom label might capture the server's specific focus on RunPod's cloud orchestration.",
    "primary_label": "Cloud Services",
    "secondary_labels": [
      "Operating System"
    ],
    "custom_label": "RunPod Cloud Orchestration",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 321,
    "server_name": "RunPod",
    "rank_by_usage": 322,
    "usage_count": "99",
    "original_file": "../crawler/smithery/@runpod_runpod-mcp-ts.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@runpod/runpod-mcp-ts/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 321,
      "name": "RunPod",
      "author": "@runpod/runpod-mcp-ts",
      "overview": "Manage your RunPod cloud resources directly through an MCP-compatible client. Create, list, update, start, stop, and delete pods, serverless endpoints, templates, network volumes, and container registry authentications with ease. Streamline your RunPod operations using natural language commands via Claude or other MCP clients.",
      "repository_url": "https://github.com/runpod/runpod-mcp-ts",
      "homepage": "https://smithery.ai/server/@runpod/runpod-mcp-ts",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "99",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@runpod_runpod-mcp-ts.json",
      "tools_count": 26,
      "tools": [
        {
          "name": "list-pods",
          "description": "Deploy Server @runpod/runpod-mcp-ts Try in Playground",
          "parameters": []
        },
        {
          "name": "get-pod",
          "description": "Description not available",
          "parameters": [
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "includeNetworkVolume",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create-pod",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "update-pod",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "start-pod",
          "description": "Description not available",
          "parameters": [
            {
              "name": "podId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "stop-pod",
          "description": "Description not available",
          "parameters": [
            {
              "name": "podId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete-pod",
          "description": "Description not available",
          "parameters": [
            {
              "name": "podId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list-endpoints",
          "description": "Description not available",
          "parameters": [
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "includeTemplate",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-endpoint",
          "description": "Description not available",
          "parameters": [
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "includeTemplate",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create-endpoint",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "update-endpoint",
          "description": "Description not available",
          "parameters": [
            {
              "name": "scalerType",
              "required": false,
              "type": "string"
            },
            {
              "name": "workersMax",
              "required": false,
              "type": "string"
            },
            {
              "name": "workersMin",
              "required": false,
              "type": "string"
            },
            {
              "name": "idleTimeout",
              "required": false,
              "type": "string"
            },
            {
              "name": "scalerValue",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete-endpoint",
          "description": "Description not available",
          "parameters": [
            {
              "name": "endpointId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list-templates",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "get-template",
          "description": "Description not available",
          "parameters": [
            {
              "name": "templateId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create-template",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "update-template",
          "description": "Description not available",
          "parameters": [
            {
              "name": "ports",
              "required": false,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "readme",
              "required": false,
              "type": "string"
            },
            {
              "name": "imageName",
              "required": false,
              "type": "string"
            },
            {
              "name": "templateId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete-template",
          "description": "Description not available",
          "parameters": [
            {
              "name": "templateId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list-network-volumes",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "get-network-volume",
          "description": "Description not available",
          "parameters": [
            {
              "name": "networkVolumeId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create-network-volume",
          "description": "Description not available",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "size",
              "required": true,
              "type": "string"
            },
            {
              "name": "dataCenterId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "update-network-volume",
          "description": "Description not available",
          "parameters": [
            {
              "name": "name",
              "required": false,
              "type": "string"
            },
            {
              "name": "size",
              "required": false,
              "type": "string"
            },
            {
              "name": "networkVolumeId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete-network-volume",
          "description": "Description not available",
          "parameters": [
            {
              "name": "networkVolumeId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list-container-registry-auths",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "get-container-registry-auth",
          "description": "Description not available",
          "parameters": [
            {
              "name": "containerRegistryAuthId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create-container-registry-auth",
          "description": "Description not available",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "password",
              "required": true,
              "type": "string"
            },
            {
              "name": "username",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete-container-registry-auth",
          "description": "Description not available",
          "parameters": [
            {
              "name": "containerRegistryAuthId",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@runpod/runpod-mcp-ts/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "runpodApiKey",
          "required": true,
          "description": "Your RunPod API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@runpod/runpod-mcp-ts/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0322.@runpod_runpod-mcp-ts_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 318
  }
}