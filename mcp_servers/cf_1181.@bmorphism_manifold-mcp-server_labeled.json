{
  "labels": {
    "analysis": "The MCP Server primarily functions as a platform for interacting with prediction markets on Manifold Markets. Its tools enable users to create, manage, and trade in markets, as well as interact with market data and liquidity. The server leverages collective intelligence features to enhance decision-making in predictive scenarios. Key functionalities include market creation, betting, liquidity management, and user interactions like following markets or awarding bounties. The tools are focused on facilitating trading and market participation rather than broader financial services or trading of traditional assets.",
    "reasoning": "The primary label \"Prediction Markets\" was chosen as it directly reflects the core functionality of creating, managing, and trading in prediction markets. The secondary label \"Cryptocurrency & Blockchain\" was selected due to the presence of \"mana\" as an in-platform resource, similar to cryptocurrency, and liquidity pool interactions. The secondary label \"Financial Services\" was also considered valid for trading and market operations, but \"Cryptocurrency & Blockchain\" was deemed more specific. No predefined labels perfectly capture the unique aspect of prediction markets, but a custom label \"Collective Intelligence\" is added to highlight the server's focus on leveraging group decision-making.",
    "primary_label": "AI/ML Tools",
    "secondary_labels": [
      "Cryptocurrency & Blockchain",
      "Financial Services"
    ],
    "custom_label": "Collective Intelligence",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1180,
    "server_name": "Manifold Markets MCP Server",
    "rank_by_usage": 1181,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@bmorphism_manifold-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@bmorphism/manifold-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1180,
      "name": "Manifold Markets MCP Server",
      "author": "@bmorphism/manifold-mcp-server",
      "overview": "Interact with prediction markets seamlessly. Create, manage, and trade in markets while leveraging collective intelligence features for enhanced decision-making.",
      "repository_url": "https://github.com/bmorphism/manifold-mcp-server",
      "homepage": "https://smithery.ai/server/@bmorphism/manifold-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@bmorphism_manifold-mcp-server.json",
      "tools_count": 18,
      "tools": [
        {
          "name": "create_market",
          "description": "Deploy Server Manifold Markets MCP Server Claim Server @bmorphism/manifold-mcp-server Try in Playground create_market",
          "parameters": [
            {
              "name": "create_market",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_markets",
          "description": "Search for prediction markets with optional filters",
          "parameters": [
            {
              "name": "sort",
              "required": false,
              "type": "string"
            },
            {
              "name": "term",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "filter",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_market",
          "description": "Get detailed information about a specific market",
          "parameters": [
            {
              "name": "get_market",
              "required": false,
              "type": "string"
            },
            {
              "name": "marketId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_user",
          "description": "Get user information by username",
          "parameters": [
            {
              "name": "get_user",
              "required": false,
              "type": "string"
            },
            {
              "name": "username",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "place_bet",
          "description": "Place a bet on a market",
          "parameters": [
            {
              "name": "amount",
              "required": true,
              "type": "string"
            },
            {
              "name": "outcome",
              "required": true,
              "type": "string"
            },
            {
              "name": "marketId",
              "required": true,
              "type": "string"
            },
            {
              "name": "limitProb",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "cancel_bet",
          "description": "Cancel a limit order bet",
          "parameters": [
            {
              "name": "cancel_bet",
              "required": false,
              "type": "string"
            },
            {
              "name": "betId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "sell_shares",
          "description": "Sell shares in a market",
          "parameters": [
            {
              "name": "shares",
              "required": false,
              "type": "string"
            },
            {
              "name": "outcome",
              "required": false,
              "type": "string"
            },
            {
              "name": "marketId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_liquidity",
          "description": "Add mana to market liquidity pool",
          "parameters": [
            {
              "name": "amount",
              "required": true,
              "type": "string"
            },
            {
              "name": "marketId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_positions",
          "description": "Get user positions across markets",
          "parameters": [
            {
              "name": "get_positions",
              "required": false,
              "type": "string"
            },
            {
              "name": "userId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "unresolve_market",
          "description": "Unresolve a previously resolved market",
          "parameters": [
            {
              "name": "answerId",
              "required": false,
              "type": "string"
            },
            {
              "name": "contractId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "close_market",
          "description": "Close a market for trading",
          "parameters": [
            {
              "name": "closeTime",
              "required": false,
              "type": "string"
            },
            {
              "name": "contractId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_answer",
          "description": "Add a new answer to a multiple choice market",
          "parameters": [
            {
              "name": "text",
              "required": true,
              "type": "string"
            },
            {
              "name": "contractId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "follow_market",
          "description": "Follow or unfollow a market",
          "parameters": [
            {
              "name": "follow",
              "required": true,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "contractId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_bounty",
          "description": "Add bounty to a market",
          "parameters": [
            {
              "name": "amount",
              "required": true,
              "type": "string"
            },
            {
              "name": "contractId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "award_bounty",
          "description": "Award bounty to a comment",
          "parameters": [
            {
              "name": "amount",
              "required": true,
              "type": "string"
            },
            {
              "name": "commentId",
              "required": true,
              "type": "string"
            },
            {
              "name": "contractId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "remove_liquidity",
          "description": "Remove liquidity from market pool",
          "parameters": [
            {
              "name": "amount",
              "required": true,
              "type": "string"
            },
            {
              "name": "contractId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "react",
          "description": "React to a market or comment",
          "parameters": [
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "contentId",
              "required": true,
              "type": "string"
            },
            {
              "name": "contentType",
              "required": true,
              "type": "string"
            },
            {
              "name": "reactionType",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "send_mana",
          "description": "Send mana to other users",
          "parameters": [
            {
              "name": "toIds",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "amount",
              "required": true,
              "type": "string"
            },
            {
              "name": "message",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@bmorphism/manifold-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "manifoldApiKey",
          "required": true,
          "description": "Manifold Markets API key for authentication. Get your key from your Manifold profile."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@bmorphism/manifold-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1181.@bmorphism_manifold-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1148
  }
}