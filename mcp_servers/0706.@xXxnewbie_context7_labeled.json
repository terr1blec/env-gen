{
  "labels": {
    "analysis": "The MCP Server is designed to fetch up-to-date code documentation and examples directly from source libraries, addressing the problem of outdated or hallucinated code information in LLM prompts. Its core functionality revolves around enhancing coding accuracy by integrating real-time library documentation. The available tools resolve library IDs and fetch documentation, prioritizing accurate, trustworthy, and version-specific code resources.",
    "reasoning": "The primary label \"Development Tools\" was chosen because the server's main purpose is to assist developers by providing accurate, real-time code documentation. \"Code Analysis\" is relevant as a secondary label since it aids in understanding and debugging code. The custom label \"Library Documentation Management\" is added to specify its unique functionality of managing and retrieving up-to-date library docs directly from sources.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": "Library Documentation Management",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 705,
    "server_name": "Context7",
    "rank_by_usage": 706,
    "usage_count": "11",
    "original_file": "../crawler/smithery/@xXxnewbie_context7.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@xXxnewbie/context7/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "resolve-library-id",
          "description": "Resolves a package/product name to a Context7-compatible library ID and returns a list of matching libraries.\n\nYou MUST call this function before 'get-library-docs' to obtain a valid Context7-compatible library ID UNLESS the user explicitly provides a library ID in the format '/org/project' or '/org/project/version' in their query.\n\nSelection Process:\n1. Analyze the query to understand what library/package the user is looking for\n2. Return the most relevant match based on:\n- Name similarity to the query (exact matches prioritized)\n- Description relevance to the query's intent\n- Documentation coverage (prioritize libraries with higher Code Snippet counts)\n- Trust score (consider libraries with scores of 7-10 more authoritative)\n\nResponse Format:\n- Return the selected library ID in a clearly marked section\n- Provide a brief explanation for why this library was chosen\n- If multiple good matches exist, acknowledge this but proceed with the most relevant one\n- If no good matches exist, clearly state this and suggest query refinements\n\nFor ambiguous queries, request clarification before proceeding with a best-guess match.",
          "input_schema": {
            "type": "object",
            "properties": {
              "libraryName": {
                "type": "string",
                "description": "Library name to search for and retrieve a Context7-compatible library ID."
              }
            },
            "required": [
              "libraryName"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-library-docs",
          "description": "Fetches up-to-date documentation for a library. You must call 'resolve-library-id' first to obtain the exact Context7-compatible library ID required to use this tool, UNLESS the user explicitly provides a library ID in the format '/org/project' or '/org/project/version' in their query.",
          "input_schema": {
            "type": "object",
            "properties": {
              "context7CompatibleLibraryID": {
                "type": "string",
                "description": "Exact Context7-compatible library ID (e.g., '/mongodb/docs', '/vercel/next.js', '/supabase/supabase', '/vercel/next.js/v14.3.0-canary.87') retrieved from 'resolve-library-id' or directly from user query in the format '/org/project' or '/org/project/version'."
              },
              "topic": {
                "type": "string",
                "description": "Topic to focus documentation on (e.g., 'hooks', 'routing')."
              },
              "tokens": {
                "type": "number",
                "description": "Maximum number of tokens of documentation to retrieve (default: 10000). Higher values provide more context but consume more tokens."
              },
              "userQuery": {
                "type": "string",
                "description": "Initial user query that triggered this tool call. Provide the user query as it is. Do not modify it or change it in any way. Do not add any additional information to the query."
              }
            },
            "required": [
              "context7CompatibleLibraryID",
              "userQuery"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 2,
      "tool_names": [
        "resolve-library-id",
        "get-library-docs"
      ]
    },
    "server_info_crawled": {
      "id": 705,
      "name": "Context7",
      "author": "@xXxnewbie/context7",
      "overview": "Fetch up-to-date, version-specific code documentation and examples directly from the source to enhance your LLM prompts. Eliminate outdated code, hallucinated APIs, and generic answers by integrating real-time library docs into your coding assistant workflow. Improve code accuracy and productivity with seamless context enrichment.",
      "repository_url": "https://github.com/xXxnewbie/context7",
      "homepage": "https://smithery.ai/server/@xXxnewbie/context7",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "11",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@xXxnewbie_context7.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "resolve-library-id",
          "description": "Resolves a package/product name to a Context7-compatible library ID and returns a list of matching libraries.\n\nYou MUST call this function before 'get-library-docs' to obtain a valid Context7-compatible library ID UNLESS the user explicitly provides a library ID in the format '/org/project' or '/org/project/version' in their query.\n\nSelection Process:\n1. Analyze the query to understand what library/package the user is looking for\n2. Return the most relevant match based on:\n- Name similarity to the query (exact matches prioritized)\n- Description relevance to the query's intent\n- Documentation coverage (prioritize libraries with higher Code Snippet counts)\n- Trust score (consider libraries with scores of 7-10 more authoritative)\n\nResponse Format:\n- Return the selected library ID in a clearly marked section\n- Provide a brief explanation for why this library was chosen\n- If multiple good matches exist, acknowledge this but proceed with the most relevant one\n- If no good matches exist, clearly state this and suggest query refinements\n\nFor ambiguous queries, request clarification before proceeding with a best-guess match.",
          "input_schema": {
            "type": "object",
            "properties": {
              "libraryName": {
                "type": "string",
                "description": "Library name to search for and retrieve a Context7-compatible library ID."
              }
            },
            "required": [
              "libraryName"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-library-docs",
          "description": "Fetches up-to-date documentation for a library. You must call 'resolve-library-id' first to obtain the exact Context7-compatible library ID required to use this tool, UNLESS the user explicitly provides a library ID in the format '/org/project' or '/org/project/version' in their query.",
          "input_schema": {
            "type": "object",
            "properties": {
              "context7CompatibleLibraryID": {
                "type": "string",
                "description": "Exact Context7-compatible library ID (e.g., '/mongodb/docs', '/vercel/next.js', '/supabase/supabase', '/vercel/next.js/v14.3.0-canary.87') retrieved from 'resolve-library-id' or directly from user query in the format '/org/project' or '/org/project/version'."
              },
              "topic": {
                "type": "string",
                "description": "Topic to focus documentation on (e.g., 'hooks', 'routing')."
              },
              "tokens": {
                "type": "number",
                "description": "Maximum number of tokens of documentation to retrieve (default: 10000). Higher values provide more context but consume more tokens."
              },
              "userQuery": {
                "type": "string",
                "description": "Initial user query that triggered this tool call. Provide the user query as it is. Do not modify it or change it in any way. Do not add any additional information to the query."
              }
            },
            "required": [
              "context7CompatibleLibraryID",
              "userQuery"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@xXxnewbie/context7/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@xXxnewbie/context7/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0706.@xXxnewbie_context7_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 689
  }
}