{
  "labels": {
    "analysis": "The MCP Server described is focused on enhancing applications with intelligent agent capabilities, primarily centered around OpenAI's Agents SDK. Its core functionality revolves around accessing, retrieving, and manipulating documentation and code examples related to this SDK. The tools provided enable detailed searches within the documentation, GitHub repository exploration, and retrieval of specific sections of files. The primary use cases include developer assistance, code integration, and documentation management, with additional diagnostic capabilities for maintaining the health of the SDK documentation.",
    "reasoning": "The primary label \"Development Tools\" was chosen because the server's main functionality revolves around assisting with the development process, particularly with OpenAI's Agent SDK. The available tools are specific to code examples, API documentation, and GitHub repository management, which are central to a developer's workflow. \"Web Search & Research\" is a secondary label as the server includes search capabilities across documentation and repositories, though focused on developer resources. \"Database Operations\" was considered but deemed less relevant since the serverâ€™s functionality is more about documentation and code retrieval rather than direct database management or querying.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Web Search & Research"
    ],
    "custom_label": "OpenAI Agent SDK Integration",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1435,
    "server_name": "OpenAI Agent Library",
    "rank_by_usage": 1436,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@Yaxin9Luo_openai_agent_library_mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Yaxin9Luo/openai_agent_library_mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "search_docs",
          "description": "Search for a specific term across OpenAI Agents SDK documentation.",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_docsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_github",
          "description": "Search for a specific term across the GitHub repository.",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_githubArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_section",
          "description": "Get a specific section from a documentation page.",
          "input_schema": {
            "properties": {
              "page": {
                "title": "Page",
                "type": "string"
              },
              "section": {
                "title": "Section",
                "type": "string"
              }
            },
            "required": [
              "page",
              "section"
            ],
            "title": "get_sectionArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_files",
          "description": "Search for files by name across the GitHub repository.\n    \n    Args:\n        filename_pattern: Part of the filename to search for. Can be a full filename or a partial name.\n    \n    Returns:\n        JSON array of matching files with their paths and URLs.\n    ",
          "input_schema": {
            "properties": {
              "filename_pattern": {
                "title": "Filename Pattern",
                "type": "string"
              }
            },
            "required": [
              "filename_pattern"
            ],
            "title": "search_filesArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_code_examples",
          "description": "Get code examples related to a specific OpenAI Agents SDK topic.",
          "input_schema": {
            "properties": {
              "topic": {
                "title": "Topic",
                "type": "string"
              }
            },
            "required": [
              "topic"
            ],
            "title": "get_code_examplesArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_api_docs",
          "description": "Get API documentation for a specific class or function in the OpenAI Agents SDK.",
          "input_schema": {
            "properties": {
              "class_or_function": {
                "title": "Class Or Function",
                "type": "string"
              }
            },
            "required": [
              "class_or_function"
            ],
            "title": "get_api_docsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_github_file",
          "description": "Get content of a specific file from the GitHub repository.",
          "input_schema": {
            "properties": {
              "path": {
                "title": "Path",
                "type": "string"
              }
            },
            "required": [
              "path"
            ],
            "title": "get_github_fileArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_doc_index",
          "description": "Get the index of all OpenAI Agents SDK documentation pages.",
          "input_schema": {
            "properties": {},
            "title": "get_doc_indexArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_doc",
          "description": "Get content of a specific documentation page.",
          "input_schema": {
            "properties": {
              "path": {
                "title": "Path",
                "type": "string"
              }
            },
            "required": [
              "path"
            ],
            "title": "get_docArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "list_github_structure",
          "description": "List the structure of the GitHub repository.",
          "input_schema": {
            "properties": {},
            "title": "list_github_structureArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_diagnostics",
          "description": "Run diagnostics to check the health of the OpenAI Agents SDK documentation and GitHub repository.",
          "input_schema": {
            "properties": {},
            "title": "run_diagnosticsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 11,
      "tool_names": [
        "search_docs",
        "search_github",
        "get_section",
        "search_files",
        "get_code_examples",
        "get_api_docs",
        "get_github_file",
        "get_doc_index",
        "get_doc",
        "list_github_structure",
        "run_diagnostics"
      ]
    },
    "server_info_crawled": {
      "id": 1435,
      "name": "OpenAI Agent Library",
      "author": "@Yaxin9Luo/openai_agent_library_mcp",
      "overview": "Enhance your applications with powerful language model capabilities. Integrate seamlessly with external data and tools to create intelligent agents that can perform complex tasks. Empower your projects with dynamic interactions and real-world data manipulation.",
      "repository_url": "https://github.com/Yaxin9Luo/openai_agent_library_mcp",
      "homepage": "https://smithery.ai/server/@Yaxin9Luo/openai_agent_library_mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Yaxin9Luo_openai_agent_library_mcp.json",
      "tools_count": 11,
      "tools": [
        {
          "name": "search_docs",
          "description": "Search for a specific term across OpenAI Agents SDK documentation.",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_docsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_github",
          "description": "Search for a specific term across the GitHub repository.",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_githubArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_section",
          "description": "Get a specific section from a documentation page.",
          "input_schema": {
            "properties": {
              "page": {
                "title": "Page",
                "type": "string"
              },
              "section": {
                "title": "Section",
                "type": "string"
              }
            },
            "required": [
              "page",
              "section"
            ],
            "title": "get_sectionArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_files",
          "description": "Search for files by name across the GitHub repository.\n    \n    Args:\n        filename_pattern: Part of the filename to search for. Can be a full filename or a partial name.\n    \n    Returns:\n        JSON array of matching files with their paths and URLs.\n    ",
          "input_schema": {
            "properties": {
              "filename_pattern": {
                "title": "Filename Pattern",
                "type": "string"
              }
            },
            "required": [
              "filename_pattern"
            ],
            "title": "search_filesArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_code_examples",
          "description": "Get code examples related to a specific OpenAI Agents SDK topic.",
          "input_schema": {
            "properties": {
              "topic": {
                "title": "Topic",
                "type": "string"
              }
            },
            "required": [
              "topic"
            ],
            "title": "get_code_examplesArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_api_docs",
          "description": "Get API documentation for a specific class or function in the OpenAI Agents SDK.",
          "input_schema": {
            "properties": {
              "class_or_function": {
                "title": "Class Or Function",
                "type": "string"
              }
            },
            "required": [
              "class_or_function"
            ],
            "title": "get_api_docsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_github_file",
          "description": "Get content of a specific file from the GitHub repository.",
          "input_schema": {
            "properties": {
              "path": {
                "title": "Path",
                "type": "string"
              }
            },
            "required": [
              "path"
            ],
            "title": "get_github_fileArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_doc_index",
          "description": "Get the index of all OpenAI Agents SDK documentation pages.",
          "input_schema": {
            "properties": {},
            "title": "get_doc_indexArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_doc",
          "description": "Get content of a specific documentation page.",
          "input_schema": {
            "properties": {
              "path": {
                "title": "Path",
                "type": "string"
              }
            },
            "required": [
              "path"
            ],
            "title": "get_docArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "list_github_structure",
          "description": "List the structure of the GitHub repository.",
          "input_schema": {
            "properties": {},
            "title": "list_github_structureArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_diagnostics",
          "description": "Run diagnostics to check the health of the OpenAI Agents SDK documentation and GitHub repository.",
          "input_schema": {
            "properties": {},
            "title": "run_diagnosticsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Yaxin9Luo/openai_agent_library_mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Yaxin9Luo/openai_agent_library_mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1436.@Yaxin9Luo_openai_agent_library_mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1334
  }
}