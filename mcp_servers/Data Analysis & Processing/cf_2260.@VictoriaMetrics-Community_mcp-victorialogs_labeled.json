{
  "labels": {
    "analysis": "The VictoriaLogs Server is designed for log management, query, and analysis. It provides tools to interact with a VictoriaLogs instance via its APIs, enabling users to search logs, extract metrics, and automate observability workflows. The server's core functionality revolves around querying logs using LogsQL, retrieving field names and values, getting log statistics, and managing log streams. It enhances debugging, monitoring, and automated observability by offering comprehensive log exploration and analysis features.",
    "reasoning": "The primary label \"Data Analysis & Processing\" is chosen because the server's main functionality involves analyzing log data, extracting metrics, and querying statistics. The secondary labels \"Browser Automation\" and \"Observability & Monitoring\" are included because the tools provided enable automation of log-related tasks and support observability workflows. The custom label \"Log Management & Querying\" is added to highlight the server's unique focus on log-specific operations.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "Browser Automation"
    ],
    "custom_label": "Log Management & Querying",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2259,
    "server_name": "VictoriaLogs Server",
    "rank_by_usage": 2260,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@VictoriaMetrics-Community_mcp-victorialogs.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@VictoriaMetrics-Community/mcp-victorialogs/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2259,
      "name": "VictoriaLogs Server",
      "author": "@VictoriaMetrics-Community/mcp-victorialogs",
      "overview": "Provide seamless access to your VictoriaLogs instance for querying logs, exploring data, and retrieving metrics. Enable advanced automation and observability workflows by integrating VictoriaLogs APIs and embedded documentation. Enhance debugging and monitoring tasks with comprehensive tools and pre-defined prompts.",
      "repository_url": "https://github.com/VictoriaMetrics-Community/mcp-victorialogs",
      "homepage": "https://smithery.ai/server/@VictoriaMetrics-Community/mcp-victorialogs",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@VictoriaMetrics-Community_mcp-victorialogs.json",
      "tools_count": 13,
      "tools": [
        {
          "name": "documentation",
          "description": "Deploy Server VictoriaLogs Server @VictoriaMetrics-Community/mcp-victorialogs Try in Playground documentation",
          "parameters": [
            {
              "name": "documentation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "facets",
          "description": "The most frequent values per each log field seen in the logs returned by the given <query> on the given [<start> ... <end>] time range. This tool uses `/select/logsql/facets` endpoint of VictoriaLogs API.",
          "parameters": [
            {
              "name": "facets",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "field_names",
          "description": "Get field names from results of the given <query> on the given [<start> ... <end>] time range. The response also contains the number of log results per every field name. This tool uses `/select/logsql/field_names` endpoint of VictoriaLogs API.",
          "parameters": [
            {
              "name": "end",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "start",
              "required": true,
              "type": "string"
            },
            {
              "name": "tenant",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "field_values",
          "description": "Get unique values for the given <fieldName> field from results of the given <query> on the given [<start> ... <end>] time range. The response also contains the number of log results per every field value. This tool uses `/select/logsql/field_values` endpoint of VictoriaLogs API.",
          "parameters": [
            {
              "name": "field_values",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "flags",
          "description": "List of non-default flags (parameters) of the VictoriaLogs instance. This tools uses `/flags` endpoint of VictoriaLogs API.",
          "parameters": [
            {
              "name": "flags",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "hits",
          "description": "The number of matching log entries for the given <query> on the given [<start> ... <end>] time range grouped by <step> buckets. The returned results are sorted by time. This tool uses `/select/logsql/hits` endpoint of VictoriaLogs API.",
          "parameters": [
            {
              "name": "hits",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "query",
          "description": "Executes LogsQL query expression to search log entries. This tool uses `/select/logsql/query` endpoint of VictoriaLogs API.",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "stats_query",
          "description": "Log stats for the given query at the given timestamp (time) in the format compatible with Prometheus querying API. This tool uses `/select/logsql/stats_query` endpoint of VictoriaLogs API.",
          "parameters": [
            {
              "name": "stats_query",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "stats_query_range",
          "description": "Log stats for the given query on the given [start ... end] time range with the given step interval. The stats is returned in the format compatible with Prometheus querying API. This tool uses `/select/logsql/stats_query_range` endpoint of VictoriaLogs API.",
          "parameters": [
            {
              "name": "stats_query_range",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "stream_field_names",
          "description": "Get log stream field names from results of the given <query> on the given [<start> ... <end>] time range. The response also contains the number of log results per every field name.. This tool uses `/select/logsql/stream_field_names` endpoint of VictoriaLogs API.",
          "parameters": [
            {
              "name": "stream_field_names",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "stream_field_values",
          "description": "Get unique values for the given <fieldName> field from results of the given <query> on the given [<start> ... <end>] time range. The response also contains the number of log results per every field value. This tool uses `/select/logsql/stream_field_values` endpoint of VictoriaLogs API.",
          "parameters": [
            {
              "name": "stream_field_values",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "stream_ids",
          "description": "Get _stream_id values for the log streams from results of the given <query> on the given [<start> ... <end>] time range. The response also contains the number of log results per every _stream_id. This tool uses `/select/logsql/stream_ids` endpoint of VictoriaLogs API.",
          "parameters": [
            {
              "name": "stream_ids",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "streams",
          "description": "Get log streams from results of the given <query> on the given [<start> ... <end>] time range. The response also contains the number of log results per every _stream. This tool uses `/select/logsql/streams` endpoint of VictoriaLogs API.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@VictoriaMetrics-Community/mcp-victorialogs/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@VictoriaMetrics-Community/mcp-victorialogs/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2260.@VictoriaMetrics-Community_mcp-victorialogs_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1944
  }
}