{
  "labels": {
    "analysis": "The MCP Server is designed to facilitate efficient interaction with JSON files by providing tools to split, merge, and manipulate data within conditions. It aims to simplify JSON file management through automation, making it particularly useful in development environments where JSON data manipulation is a common requirement. The tools are lightweight and designed for seamless integration with language models, suggesting a focus on data processing and automation within software development workflows.",
    "reasoning": "The primary functionality revolves around JSON data manipulation, which is a core aspect of data processing. The tools provided align closely with data transformation and automation, particularly in development contexts. The primary label of \"Data Analysis & Processing\" is chosen because the tools are used for splitting and merging JSON data, which are common data processing tasks. The secondary label of \"Development Tools\" is selected because the server is designed to integrate with language models and enhance workflows in a development environment. No custom label is needed as the functionality is well-covered by the predefined categories.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "Development Tools"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1663,
    "server_name": "JSON MCP Server",
    "rank_by_usage": 1664,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@VadimNastoyashchy_json-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@VadimNastoyashchy/json-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "split",
          "description": "Split a JSON file into a specified number of objects",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string"
              },
              "numObjects": {
                "type": "integer",
                "exclusiveMinimum": 0
              }
            },
            "required": [
              "path",
              "numObjects"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "merge",
          "description": "Merge JSON files into a one JSON file",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string"
              }
            },
            "required": [
              "path"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 2,
      "tool_names": [
        "split",
        "merge"
      ]
    },
    "server_info_crawled": {
      "id": 1663,
      "name": "JSON MCP Server",
      "author": "@VadimNastoyashchy/json-mcp",
      "overview": "Enable LLMs to efficiently interact with JSON files by splitting, merging, and finding specific data within conditions. Simplify JSON file management with fast and lightweight tools designed for seamless integration with language models. Enhance your workflows by automating JSON data manipulation directly from your development environment.",
      "repository_url": "https://github.com/VadimNastoyashchy/json-mcp",
      "homepage": "https://smithery.ai/server/@VadimNastoyashchy/json-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@VadimNastoyashchy_json-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "split",
          "description": "Split a JSON file into a specified number of objects",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string"
              },
              "numObjects": {
                "type": "integer",
                "exclusiveMinimum": 0
              }
            },
            "required": [
              "path",
              "numObjects"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "merge",
          "description": "Merge JSON files into a one JSON file",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string"
              }
            },
            "required": [
              "path"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@VadimNastoyashchy/json-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@VadimNastoyashchy/json-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1664.@VadimNastoyashchy_json-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1506
  }
}