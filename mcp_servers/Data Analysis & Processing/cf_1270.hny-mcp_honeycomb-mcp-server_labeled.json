{
  "labels": {
    "analysis": "The Honeycomb MCP Server is designed to interact with Honeycomb observability data, allowing LLM-based systems to query and analyze datasets. The available tools suggest functionalities for listing datasets, querying datasets, analyzing columns, managing boards, markers, SLAs (SLOs), triggers, and recipients. This indicates a primary focus on observability data analysis and management, typically used in software performance monitoring, debugging, and analytics.",
    "reasoning": "The primary label \"Data Analysis & Processing\" was chosen because the server's core functionality revolves around analyzing datasets and running queries, which aligns with data processing tasks. The secondary label \"Operating System\" is included because some tools (like managing SLAs and triggers) could relate to system monitoring, though this is less central. The custom label \"Observability Tools\" is added to highlight the server's specific focus on observability data, which is not explicitly covered in the predefined categories.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "Operating System"
    ],
    "custom_label": "Observability Tools",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1269,
    "server_name": "Honeycomb MCP Server",
    "rank_by_usage": 1270,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/hny-mcp_honeycomb-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/hny-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1269,
      "name": "Honeycomb MCP Server",
      "author": "hny-mcp",
      "overview": "A server for interacting with Honeycomb observability data, enabling LLMs to analyze and query datasets.",
      "repository_url": "https://github.com/austinlparker/hny-mcp",
      "homepage": "https://smithery.ai/server/hny-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/hny-mcp_honeycomb-mcp-server.json",
      "tools_count": 12,
      "tools": [
        {
          "name": "list_datasets",
          "description": "Deploy Server Honeycomb MCP Server Claim Server Try in Playground list_datasets",
          "parameters": [
            {
              "name": "list_datasets",
              "required": false,
              "type": "string"
            },
            {
              "name": "environment",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_columns",
          "description": "Description not available",
          "parameters": [
            {
              "name": "get_columns",
              "required": false,
              "type": "string"
            },
            {
              "name": "dataset",
              "required": true,
              "type": "string"
            },
            {
              "name": "environment",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "run_query",
          "description": "Description not available",
          "parameters": [
            {
              "name": "environment",
              "required": true,
              "type": "string"
            },
            {
              "name": "granularity",
              "required": false,
              "type": "string"
            },
            {
              "name": "calculations",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "filter_combination",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "analyze_column",
          "description": "Description not available",
          "parameters": [
            {
              "name": "column",
              "required": true,
              "type": "string"
            },
            {
              "name": "dataset",
              "required": true,
              "type": "string"
            },
            {
              "name": "timeRange",
              "required": false,
              "type": "string"
            },
            {
              "name": "environment",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_boards",
          "description": "Description not available",
          "parameters": [
            {
              "name": "list_boards",
              "required": false,
              "type": "string"
            },
            {
              "name": "environment",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_board",
          "description": "Description not available",
          "parameters": [
            {
              "name": "get_board",
              "required": false,
              "type": "string"
            },
            {
              "name": "boardId",
              "required": true,
              "type": "string"
            },
            {
              "name": "environment",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_markers",
          "description": "Description not available",
          "parameters": [
            {
              "name": "list_markers",
              "required": false,
              "type": "string"
            },
            {
              "name": "environment",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_recipients",
          "description": "Description not available",
          "parameters": [
            {
              "name": "list_recipients",
              "required": false,
              "type": "string"
            },
            {
              "name": "environment",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_slos",
          "description": "Description not available",
          "parameters": [
            {
              "name": "list_slos",
              "required": false,
              "type": "string"
            },
            {
              "name": "dataset",
              "required": true,
              "type": "string"
            },
            {
              "name": "environment",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_slo",
          "description": "Description not available",
          "parameters": [
            {
              "name": "get_slo",
              "required": false,
              "type": "string"
            },
            {
              "name": "sloId",
              "required": true,
              "type": "string"
            },
            {
              "name": "dataset",
              "required": true,
              "type": "string"
            },
            {
              "name": "environment",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_triggers",
          "description": "Description not available",
          "parameters": [
            {
              "name": "list_triggers",
              "required": false,
              "type": "string"
            },
            {
              "name": "dataset",
              "required": true,
              "type": "string"
            },
            {
              "name": "environment",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_trigger",
          "description": "Description not available",
          "parameters": [
            {
              "name": "get_trigger",
              "required": false,
              "type": "string"
            },
            {
              "name": "dataset",
              "required": true,
              "type": "string"
            },
            {
              "name": "triggerId",
              "required": true,
              "type": "string"
            },
            {
              "name": "environment",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/hny-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/hny-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1270.hny-mcp_honeycomb-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1212
  }
}