{
  "labels": {
    "analysis": "The MCP Server provides tools for retrieving geolocation information based on IP addresses, specifically through two main functions: looking up IP locations and checking the user's own IP location. Additionally, it offers API usage tracking, which is useful for monitoring usage patterns and managing API consumption. The primary focus is on location-based data retrieval and API monitoring, making it useful for applications requiring geolocation insights or network diagnostics.",
    "reasoning": "The primary label is chosen because the server's core functionality revolves around location-based data retrieval using IP addresses, which aligns with a specific data analysis purpose rather than generalized tools. The secondary label of \"API Integration\" is added because the server also provides tools for tracking API usage, which is an essential aspect of integrating and managing third-party services. No custom label is needed as the predefined labels sufficiently cover the server's functionality.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2175,
    "server_name": "IP Find",
    "rank_by_usage": 2176,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@ipfind_ipfind-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ipfind/ipfind-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2175,
      "name": "IP Find",
      "author": "@ipfind/ipfind-mcp-server",
      "overview": "Enable AI assistants to retrieve geolocation information for IP addresses using the IP Find API. Seamlessly integrate IP location lookup capabilities into your AI workflows. Simplify access to IP data with this easy-to-use MCP server.",
      "repository_url": "https://github.com/ipfind/ipfind-mcp-server",
      "homepage": "https://smithery.ai/server/@ipfind/ipfind-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ipfind_ipfind-mcp-server.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "get_ip_location",
          "description": "Deploy Server Claim Server @ipfind/ipfind-mcp-server Try in Playground get_ip_location",
          "parameters": [
            {
              "name": "get_ip_location",
              "required": false,
              "type": "string"
            },
            {
              "name": "ipAddress",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_my_location",
          "description": "Get the location of the current IP address",
          "parameters": [
            {
              "name": "get_my_location",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_api_usage",
          "description": "Get the usage of the API",
          "parameters": [
            {
              "name": "get_api_usage",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ipfind/ipfind-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "ipfindApiKey",
          "required": true,
          "description": "API key for IP Find service"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ipfind/ipfind-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2176.@ipfind_ipfind-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1879
  }
}