{
  "labels": {
    "analysis": "The MCP Server is specialized in nationality detection by analyzing input names and predicting the most likely nationalities associated with them. Its core functionality revolves around identifying and classifying nationalities efficiently, which can be applied in applications requiring demographic classification, user profiling, or data analysis where nationality information is relevant.",
    "reasoning": "The primary label is \"Data Analysis & Processing\" because the server processes input data to derive meaningful insights (nationality predictions). The secondary label \"Database Operations\" is chosen as nationality databases or knowledge bases might be involved in the prediction process. The server does not strictly fit into predefined categories beyond these, so no custom label is needed.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "Database Operations"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1088,
    "server_name": "Nationality Detection Service",
    "rank_by_usage": 1089,
    "usage_count": "1",
    "original_file": "../crawler/smithery/@ahmetcvlk_nationality-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ahmetcvlk/nationality-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_nationality",
          "description": "\n    Verilen isme göre kişinin en olası milliyetlerini tahmin eder.\n    ",
          "input_schema": {
            "properties": {
              "name": {
                "title": "Name",
                "type": "string"
              }
            },
            "required": [
              "name"
            ],
            "title": "get_nationalityArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get_nationality"
      ]
    },
    "server_info_crawled": {
      "id": 1088,
      "name": "Nationality Detection Service",
      "author": "@ahmetcvlk/nationality-mcp",
      "overview": "Provide nationality detection capabilities by analyzing input data. Enable applications to identify and classify nationalities efficiently. Enhance user experience with accurate and fast nationality recognition.",
      "repository_url": "https://github.com/ahmetcvlk/nationality-mcp",
      "homepage": "https://smithery.ai/server/@ahmetcvlk/nationality-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "1",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ahmetcvlk_nationality-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_nationality",
          "description": "\n    Verilen isme göre kişinin en olası milliyetlerini tahmin eder.\n    ",
          "input_schema": {
            "properties": {
              "name": {
                "title": "Name",
                "type": "string"
              }
            },
            "required": [
              "name"
            ],
            "title": "get_nationalityArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ahmetcvlk/nationality-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ahmetcvlk/nationality-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1089.@ahmetcvlk_nationality-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1066
  }
}