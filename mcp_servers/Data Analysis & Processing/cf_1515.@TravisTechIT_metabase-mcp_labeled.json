{
  "labels": {
    "analysis": "The MCP Server acts as an integration layer between AI assistants and the Metabase analytics platform, enabling users to interact with Metabase's data visualization and query capabilities through conversational interfaces. Its core functionality revolves around accessing, manipulating, and managing Metabase's dashboards, cards (questions), databases, and queries. The server provides a wide range of tools for executing SQL queries, managing data visualizations, and organizing analytics content within Metabase.",
    "reasoning": "The primary label is chosen because the server's main purpose is to provide tools for data analysis, querying, and management within Metabase. Secondary labels are included to reflect the server's capabilities for managing dashboards and cards (which are essentially saved queries), and for executing SQL queries. There is no need for a custom label as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "Database Operations",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1514,
    "server_name": "Metabase Analytics Integration Server",
    "rank_by_usage": 1515,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@TravisTechIT_metabase-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@TravisTechIT/metabase-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1514,
      "name": "Metabase Analytics Integration Server",
      "author": "@TravisTechIT/metabase-mcp",
      "overview": "Enable AI assistants to interact directly with your Metabase analytics platform. Access dashboards, cards, databases, and execute queries seamlessly through conversational AI. Manage and manipulate your analytics data with ease using structured JSON responses and robust authentication options.",
      "repository_url": "https://github.com/TravisTechIT/metabase-mcp",
      "homepage": "https://smithery.ai/server/@TravisTechIT/metabase-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@TravisTechIT_metabase-mcp.json",
      "tools_count": 16,
      "tools": [
        {
          "name": "list_dashboards",
          "description": "Deploy Server Metabase Analytics Integration Server @TravisTechIT/metabase-mcp Try in Playground list_dashboards",
          "parameters": [
            {
              "name": "list_dashboards",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_cards",
          "description": "List all questions/cards in Metabase",
          "parameters": [
            {
              "name": "list_cards",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_databases",
          "description": "List all databases in Metabase",
          "parameters": [
            {
              "name": "list_databases",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "execute_card",
          "description": "Execute a Metabase question/card and get results",
          "parameters": [
            {
              "name": "card_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "parameters",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_dashboard_cards",
          "description": "Get all cards in a dashboard",
          "parameters": [
            {
              "name": "get_dashboard_cards",
              "required": false,
              "type": "string"
            },
            {
              "name": "dashboard_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "execute_query",
          "description": "Execute a SQL query against a Metabase database",
          "parameters": [
            {
              "name": "execute_query",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_card",
          "description": "Create a new question/card in Metabase",
          "parameters": [
            {
              "name": "create_card",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_card_visualization",
          "description": "Update visualization settings for a card",
          "parameters": [
            {
              "name": "update_card_visualization",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_card_to_dashboard",
          "description": "Add a card to a dashboard",
          "parameters": [
            {
              "name": "row",
              "required": false,
              "type": "string"
            },
            {
              "name": "size_x",
              "required": false,
              "type": "string"
            },
            {
              "name": "size_y",
              "required": false,
              "type": "string"
            },
            {
              "name": "card_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "dashboard_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_dashboard",
          "description": "Create a new dashboard in Metabase",
          "parameters": [
            {
              "name": "create_dashboard",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_collections",
          "description": "List all collections in Metabase",
          "parameters": [
            {
              "name": "list_collections",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_collection",
          "description": "Create a new collection in Metabase",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "color",
              "required": false,
              "type": "string"
            },
            {
              "name": "parent_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_tables",
          "description": "List all tables in a database",
          "parameters": [
            {
              "name": "list_tables",
              "required": false,
              "type": "string"
            },
            {
              "name": "database_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_table_fields",
          "description": "Get all fields/columns in a table",
          "parameters": [
            {
              "name": "get_table_fields",
              "required": false,
              "type": "string"
            },
            {
              "name": "table_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_dashboard",
          "description": "Update an existing dashboard",
          "parameters": [
            {
              "name": "update_dashboard",
              "required": false,
              "type": "string"
            },
            {
              "name": "Update",
              "required": false,
              "type": "string"
            },
            {
              "name": "an",
              "required": false,
              "type": "string"
            },
            {
              "name": "existing",
              "required": false,
              "type": "string"
            },
            {
              "name": "dashboard",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_dashboard",
          "description": "Description not available",
          "parameters": [
            {
              "name": "delete_dashboard",
              "required": false,
              "type": "string"
            },
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "dashboard",
              "required": false,
              "type": "string"
            },
            {
              "name": "dashboard_id",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@TravisTechIT/metabase-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@TravisTechIT/metabase-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1515.@TravisTechIT_metabase-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1394
  }
}