{
  "labels": {
    "analysis": "The MCP Server \"Yanyue Cigarette Data\" is designed to fetch cigarette-related information from Yanyue.cn based on keyword searches. Its core functionality revolves around retrieving and integrating specific product data (cigarettes) for application workflows. The tool \"searchCigarettes\" provides a focused means to gather this information, suggesting a specialized data retrieval system tailored for tobacco products.",
    "reasoning": "The primary label \"Data Analysis & Processing\" is chosen because the server's main function is retrieving and organizing cigarette data for integration into applications. There is no secondary label needed as the functionality is very specific. A custom label \"Tobacco Industry Data\" is provided to further describe the niche focus on cigarette information.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [],
    "custom_label": "Tobacco Industry Data",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2166,
    "server_name": "Yanyue Cigarette Data",
    "rank_by_usage": 2167,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@gandli_yanyue-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@gandli/yanyue-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "searchCigarettes",
          "description": "根据关键词搜索卷烟信息",
          "input_schema": {
            "type": "object",
            "properties": {
              "keyword": {
                "type": "string",
                "minLength": 1,
                "description": "搜索关键词"
              }
            },
            "required": [
              "keyword"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "searchCigarettes"
      ]
    },
    "server_info_crawled": {
      "id": 2166,
      "name": "Yanyue Cigarette Data",
      "author": "@gandli/yanyue-mcp",
      "overview": "Fetch cigarette data from Yanyue by searching for cigarette information based on keywords. Integrate cigarette data retrieval seamlessly into your MCP client workflows. Enhance your applications with up-to-date cigarette information from Yanyue.cn.",
      "repository_url": "https://github.com/gandli/yanyue-mcp",
      "homepage": "https://smithery.ai/server/@gandli/yanyue-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@gandli_yanyue-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "searchCigarettes",
          "description": "根据关键词搜索卷烟信息",
          "input_schema": {
            "type": "object",
            "properties": {
              "keyword": {
                "type": "string",
                "minLength": 1,
                "description": "搜索关键词"
              }
            },
            "required": [
              "keyword"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@gandli/yanyue-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@gandli/yanyue-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "2167.@gandli_yanyue-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1874
  }
}