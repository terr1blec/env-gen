{
  "labels": {
    "analysis": "The MCP Server specializes in Base64 encoding and decoding operations for both text and images. It provides a utility-focused service for converting data between Base64 representations and their original forms, with specific support for data URLs and image MIME types. The tools are designed for seamless integration via API, making it particularly useful for applications that need efficient data format transformations.",
    "reasoning": "The primary functionality revolves around data encoding/decoding, which aligns with the \"Data Analysis & Processing\" category due to its transformation capabilities. While it involves some file/image operations, its core use is more general-purpose data conversion rather than file management specifically. No custom label is needed as the predefined categories sufficiently cover the functionality.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "File Management"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 731,
    "server_name": "Base64 Encoder and Decoder Server",
    "rank_by_usage": 732,
    "usage_count": "9",
    "original_file": "../crawler/smithery/@liuyazui_base64_server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@liuyazui/base64_server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "Connection timeout (20 seconds)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 731,
      "name": "Base64 Encoder and Decoder Server",
      "author": "@liuyazui/base64_server",
      "overview": "Provide efficient Base64 encoding and decoding services for text and images, including support for Data URL formats. Enable easy integration with clients through a simple API and reusable prompt templates. Simplify handling of Base64 transformations in your applications with this focused server.",
      "repository_url": "https://github.com/liuyazui/base64_server",
      "homepage": "https://smithery.ai/server/@liuyazui/base64_server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "9",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@liuyazui_base64_server.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "base64_encode_text",
          "description": "Deploy Server Base64 Encoder and Decoder Server Claim Server @liuyazui/base64_server Try in Playground base64_encode_text",
          "parameters": [
            {
              "name": "text",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "base64_decode_text",
          "description": "将Base64编码解码为文本\n\n    Args:\n        encoded: Base64编码的字符串\n\n    Returns:\n        解码后的文本",
          "parameters": [
            {
              "name": "encoded",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "base64_encode_image",
          "description": "将图片转换为Base64编码\n\n    Args:\n        image_path: 图片文件路径\n\n    Returns:\n        Base64编码结果",
          "parameters": [
            {
              "name": "image_path",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "base64_decode_image",
          "description": "将Base64编码解码为图片 Args: encoded: Base64编码的字符串 output_path: 输出图片的路径 mime_type: 图片的MIME类型 (默认为image/png) Returns:",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@liuyazui/base64_server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@liuyazui/base64_server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0732.@liuyazui_base64_server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 715
  }
}