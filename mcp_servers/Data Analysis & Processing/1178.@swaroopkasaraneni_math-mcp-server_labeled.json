{
  "labels": {
    "analysis": "The MCP Server is specifically designed to handle basic mathematical operations such as addition and multiplication. Its primary purpose is to provide a standardized protocol for integrating these mathematical functionalities into applications or LLMs, enhancing their computational capabilities. The tools available include fundamental arithmetic operations, suggesting this server is best suited for dynamic math processing tasks.",
    "reasoning": "The primary label \"Data Analysis & Processing\" was chosen because the server's core functionality revolves around performing mathematical operations that are essential for data analysis. The toolset is focused on computation, which aligns well with data processing tasks. No secondary labels or custom labels are necessary as this fully encapsulates the server's purpose.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [],
    "custom_label": "No additional labels are needed",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1177,
    "server_name": "Math Operations Server",
    "rank_by_usage": 1178,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@swaroopkasaraneni_math-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@swaroopkasaraneni/math-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "add",
          "description": "Adds two numbers.",
          "input_schema": {
            "description": "Parameters for math operations.",
            "properties": {
              "a": {
                "description": "First number",
                "title": "A",
                "type": "integer"
              },
              "b": {
                "description": "Second number",
                "title": "B",
                "type": "integer"
              }
            },
            "required": [
              "a",
              "b"
            ],
            "title": "MathOperation",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "multiply",
          "description": "Multiplies two numbers.",
          "input_schema": {
            "description": "Parameters for math operations.",
            "properties": {
              "a": {
                "description": "First number",
                "title": "A",
                "type": "integer"
              },
              "b": {
                "description": "Second number",
                "title": "B",
                "type": "integer"
              }
            },
            "required": [
              "a",
              "b"
            ],
            "title": "MathOperation",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 2,
      "tool_names": [
        "add",
        "multiply"
      ]
    },
    "server_info_crawled": {
      "id": 1177,
      "name": "Math Operations Server",
      "author": "@swaroopkasaraneni/math-mcp-server",
      "overview": "Expose mathematical operations for seamless integration with your applications. Enhance your LLM capabilities by leveraging dynamic math functionalities through a standardized protocol. Start the server and unlock powerful computation features for your projects.",
      "repository_url": "https://github.com/swaroopkasaraneni/math-mcp-server",
      "homepage": "https://smithery.ai/server/@swaroopkasaraneni/math-mcp-server",
      "remote_or_local": "Remote",
      "license": "https://smithery.ai/server/@swaroopkasaraneni/math-mcp-server",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@swaroopkasaraneni_math-mcp-server.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "add",
          "description": "Adds two numbers.",
          "input_schema": {
            "description": "Parameters for math operations.",
            "properties": {
              "a": {
                "description": "First number",
                "title": "A",
                "type": "integer"
              },
              "b": {
                "description": "Second number",
                "title": "B",
                "type": "integer"
              }
            },
            "required": [
              "a",
              "b"
            ],
            "title": "MathOperation",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "multiply",
          "description": "Multiplies two numbers.",
          "input_schema": {
            "description": "Parameters for math operations.",
            "properties": {
              "a": {
                "description": "First number",
                "title": "A",
                "type": "integer"
              },
              "b": {
                "description": "Second number",
                "title": "B",
                "type": "integer"
              }
            },
            "required": [
              "a",
              "b"
            ],
            "title": "MathOperation",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@swaroopkasaraneni/math-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@swaroopkasaraneni/math-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1178.@swaroopkasaraneni_math-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1145
  }
}