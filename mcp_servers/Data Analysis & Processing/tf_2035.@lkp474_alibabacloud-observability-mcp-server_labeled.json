{
  "labels": {
    "analysis": "The MCP Server specializes in observability and monitoring through Alibaba Cloud services, providing tools to interact with Log Service (SLS), Application Real-Time Monitoring Service (ARMS), and Cloud Monitor. Its core functionality revolves around querying, analyzing, and troubleshooting cloud-native applications and infrastructure data. Key features include log management, metrics querying, trace analysis, and natural language processing for query translation.",
    "reasoning": "The primary functionality is cloud observability, which aligns with Data Analysis & Processing and Cloud Services categories. The server uniquely handles natural language translation for observability queries, warranting a custom label for its specialized focus on observability query automation.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "Cloud Services"
    ],
    "custom_label": "Cloud Observability Automation",
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2034,
    "server_name": "Alibaba Cloud Observability Server",
    "rank_by_usage": 2035,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@lkp474_alibabacloud-observability-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@lkp474/alibabacloud-observability-mcp-server/mcp?config=eyJsb2dMZXZlbCI6ICJJTkZPIiwgInRyYW5zcG9ydCI6ICJzdGRpbyIsICJ0cmFuc3BvcnRQb3J0IjogODAwMH0=&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "sls_list_projects",
          "description": "列出阿里云日志服务中的所有项目。\n\n            ## 功能概述\n\n            该工具可以列出指定区域中的所有SLS项目，支持通过项目名进行模糊搜索。如果不提供项目名称，则返回该区域的所有项目。\n\n            ## 使用场景\n\n            - 当需要查找特定项目是否存在时\n            - 当需要获取某个区域下所有可用的SLS项目列表时\n            - 当需要根据项目名称的部分内容查找相关项目时\n\n            ## 返回数据结构\n\n            返回的项目信息包含：\n            - project_name: 项目名称\n            - description: 项目描述\n            - region_id: 项目所在区域\n\n            ## 查询示例\n\n            - \"有没有叫 XXX 的 project\"\n            - \"列出所有SLS项目\"\n\n            Args:\n                ctx: MCP上下文，用于访问SLS客户端\n                project_name_query: 项目名称查询字符串，支持模糊搜索\n                limit: 返回结果的最大数量，范围1-100，默认10\n                region_id: 阿里云区域ID,region id format like \"xx-xxx\",like \"cn-hangzhou\"\n\n            Returns:\n                包含项目信息的字典列表，每个字典包含project_name、description和region_id\n            ",
          "input_schema": {
            "properties": {
              "project_name_query": {
                "default": null,
                "description": "project name,fuzzy search",
                "title": "Project Name Query",
                "type": "string"
              },
              "limit": {
                "default": 10,
                "description": "limit,max is 100",
                "maximum": 100,
                "minimum": 1,
                "title": "Limit",
                "type": "integer"
              },
              "region_id": {
                "description": "aliyun region id",
                "title": "Region Id",
                "type": "string"
              }
            },
            "required": [
              "region_id"
            ],
            "title": "sls_list_projectsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "sls_list_logstores",
          "description": "列出SLS项目中的日志库。\n\n            ## 功能概述\n\n            该工具可以列出指定SLS项目中的所有日志库，如果不选，则默认为日志库类型\n            支持通过日志库名称进行模糊搜索。如果不提供日志库名称，则返回项目中的所有日志库。\n\n            ## 使用场景\n\n            - 当需要查找特定项目下是否存在某个日志库时\n            - 当需要获取项目中所有可用的日志库列表时\n            - 当需要根据日志库名称的部分内容查找相关日志库时\n            - 如果从上下文未指定 project参数，除非用户说了遍历，则可使用 sls_list_projects 工具获取项目列表\n\n            ## 是否指标库\n\n            如果需要查找指标或者时序相关的库,请将is_metric_store参数设置为True\n\n            ## 查询示例\n\n            - \"我想查询有没有 XXX 的日志库\"\n            - \"某个 project 有哪些 log store\"\n\n            Args:\n                ctx: MCP上下文，用于访问SLS客户端\n                project: SLS项目名称，必须精确匹配\n                log_store: 日志库名称，支持模糊搜索\n                limit: 返回结果的最大数量，范围1-100，默认10\n                is_metric_store: 是否指标库，可选值为True或False，默认为False\n                region_id: 阿里云区域ID\n\n            Returns:\n                日志库名称的字符串列表\n            ",
          "input_schema": {
            "properties": {
              "project": {
                "description": "sls project name,must exact match,should not contain chinese characters",
                "title": "Project",
                "type": "string"
              },
              "log_store": {
                "default": null,
                "description": "log store name,fuzzy search",
                "title": "Log Store",
                "type": "string"
              },
              "limit": {
                "default": 10,
                "description": "limit,max is 100",
                "maximum": 100,
                "minimum": 1,
                "title": "Limit",
                "type": "integer"
              },
              "is_metric_store": {
                "default": false,
                "description": "is metric store,default is False,only use want to find metric store",
                "title": "Is Metric Store",
                "type": "boolean"
              },
              "log_store_type": {
                "default": null,
                "description": "log store type,default is logs,should be logs,metrics",
                "title": "Log Store Type",
                "type": "string"
              },
              "region_id": {
                "description": "aliyun region id,region id format like 'xx-xxx',like 'cn-hangzhou'",
                "title": "Region Id",
                "type": "string"
              }
            },
            "required": [
              "project",
              "region_id"
            ],
            "title": "sls_list_logstoresArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "sls_describe_logstore",
          "description": "获取SLS日志库的结构信息。\n\n            ## 功能概述\n\n            该工具用于获取指定SLS项目中日志库的索引信息和结构定义，包括字段类型、别名、是否大小写敏感等信息。\n\n            ## 使用场景\n\n            - 当需要了解日志库的字段结构时\n            - 当需要获取日志库的索引配置信息时\n            - 当构建查询语句前需要了解可用字段时\n            - 当需要分析日志数据结构时\n\n            ## 返回数据结构\n\n            返回一个字典，键为字段名，值包含以下信息：\n            - alias: 字段别名\n            - sensitive: 是否大小写敏感\n            - type: 字段类型\n            - json_keys: JSON字段的子字段信息\n\n            ## 查询示例\n\n            - \"我想查询 XXX 的日志库的 schema\"\n            - \"我想查询 XXX 的日志库的 index\"\n            - \"我想查询 XXX 的日志库的结构信息\"\n\n            Args:\n                ctx: MCP上下文，用于访问SLS客户端\n                project: SLS项目名称，必须精确匹配\n                log_store: SLS日志库名称，必须精确匹配\n                region_id: 阿里云区域ID\n\n            Returns:\n                包含日志库结构信息的字典\n            ",
          "input_schema": {
            "properties": {
              "project": {
                "description": "sls project name,must exact match,not fuzzy search",
                "title": "Project",
                "type": "string"
              },
              "log_store": {
                "description": "sls log store name,must exact match,not fuzzy search",
                "title": "Log Store",
                "type": "string"
              },
              "region_id": {
                "description": "aliyun region id,region id format like 'xx-xxx',like 'cn-hangzhou'",
                "title": "Region Id",
                "type": "string"
              }
            },
            "required": [
              "project",
              "log_store",
              "region_id"
            ],
            "title": "sls_describe_logstoreArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "sls_execute_query",
          "description": "执行SLS日志查询。\n\n            ## 功能概述\n\n            该工具用于在指定的SLS项目和日志库上执行查询语句，并返回查询结果。查询将在指定的时间范围内执行。\n\n            ## 使用场景\n\n            - 当需要根据特定条件查询日志数据时\n            - 当需要分析特定时间范围内的日志信息时\n            - 当需要检索日志中的特定事件或错误时\n            - 当需要统计日志数据的聚合信息时\n\n\n\n            ## 查询语法\n\n            查询必须使用SLS有效的查询语法，而非自然语言。如果不了解日志库的结构，可以先使用sls_describe_logstore工具获取索引信息。\n\n            ## 时间范围\n\n            查询必须指定时间范围：\n            - from_timestamp: 开始时间戳（秒）\n            - to_timestamp: 结束时间戳（秒）\n\n            ## 查询示例\n\n            - \"帮我查询下 XXX 的日志信息\"\n            - \"查找最近一小时内的错误日志\"\n\n            ## 错误处理\n            - Column xxx can not be resolved 如果是 sls_translate_natural_language_to_query 工具生成的查询语句 可能存在查询列未开启统计，可以提示用户增加相对应的信息，或者调用 sls_describe_logstore 工具获取索引信息之后，要用户选择正确的字段或者提示用户对列开启统计。当确定列开启统计之后，可以再次调用sls_translate_natural_language_to_query 工具生成查询语句\n\n            Args:\n                ctx: MCP上下文，用于访问SLS客户端\n                project: SLS项目名称\n                log_store: SLS日志库名称\n                query: SLS查询语句\n                from_timestamp: 查询开始时间戳（秒）\n                to_timestamp: 查询结束时间戳（秒）\n                limit: 返回结果的最大数量，范围1-100，默认10\n                region_id: 阿里云区域ID\n\n            Returns:\n                查询结果列表，每个元素为一条日志记录\n            ",
          "input_schema": {
            "properties": {
              "project": {
                "description": "sls project name",
                "title": "Project",
                "type": "string"
              },
              "log_store": {
                "description": "sls log store name",
                "title": "Log Store",
                "type": "string"
              },
              "query": {
                "description": "query",
                "title": "Query",
                "type": "string"
              },
              "from_timestamp": {
                "description": "from timestamp,unit is second,should be unix timestamp",
                "title": "From Timestamp",
                "type": "integer"
              },
              "to_timestamp": {
                "description": "to timestamp,unit is second,should be unix timestamp",
                "title": "To Timestamp",
                "type": "integer"
              },
              "limit": {
                "default": 10,
                "description": "limit,max is 100",
                "maximum": 100,
                "minimum": 1,
                "title": "Limit",
                "type": "integer"
              },
              "region_id": {
                "description": "aliyun region id,region id format like 'xx-xxx',like 'cn-hangzhou'",
                "title": "Region Id",
                "type": "string"
              }
            },
            "required": [
              "project",
              "log_store",
              "query",
              "from_timestamp",
              "to_timestamp",
              "region_id"
            ],
            "title": "sls_execute_queryArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "sls_translate_natural_language_to_log_query",
          "description": "将自然语言转换为SLS查询语句。\n\n            ## 功能概述\n\n            该工具可以将自然语言描述转换为有效的SLS查询语句，便于用户使用自然语言表达查询需求。用户有任何 SLS 日志查询需求时，都需要优先使用该工具。\n\n            ## 使用场景\n\n            - 当用户不熟悉SLS查询语法时\n            - 当需要快速构建复杂查询时\n            - 当需要从自然语言描述中提取查询意图时\n\n            ## 使用限制\n\n            - 仅支持生成SLS查询，不支持其他数据库的SQL如MySQL、PostgreSQL等\n            - 生成的是查询语句，而非查询结果，需要配合sls_execute_query工具使用\n            - 如果查询涉及ARMS应用，应优先使用arms_generate_trace_query工具\n            - 需要对应的 log_sotre 已经设定了索引信息，如果生成的结果里面有字段没有索引或者开启统计，可能会导致查询失败，需要友好的提示用户增加相对应的索引信息\n\n            ## 最佳实践\n\n            - 提供清晰简洁的自然语言描述\n            - 不要在描述中包含项目或日志库名称\n            - 如有需要，指定查询的时间范围\n            - 首次生成的查询可能不完全符合要求，可能需要多次尝试\n\n            ## 查询示例\n\n            - \"帮我生成下 XXX 的日志查询语句\"\n            - \"查找最近一小时内的错误日志\"\n\n            Args:\n                ctx: MCP上下文，用于访问SLS客户端\n                text: 用于生成查询的自然语言文本\n                project: SLS项目名称\n                log_store: SLS日志库名称\n                region_id: 阿里云区域ID\n\n            Returns:\n                生成的SLS查询语句\n            ",
          "input_schema": {
            "properties": {
              "text": {
                "description": "the natural language text to generate sls log store query",
                "title": "Text",
                "type": "string"
              },
              "project": {
                "description": "sls project name",
                "title": "Project",
                "type": "string"
              },
              "log_store": {
                "description": "sls log store name",
                "title": "Log Store",
                "type": "string"
              },
              "region_id": {
                "description": "aliyun region id,region id format like 'xx-xxx',like 'cn-hangzhou'",
                "title": "Region Id",
                "type": "string"
              }
            },
            "required": [
              "text",
              "project",
              "log_store",
              "region_id"
            ],
            "title": "sls_translate_natural_language_to_log_queryArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "sls_diagnose_query",
          "description": "诊断SLS查询语句。\n\n            ## 功能概述\n\n            当 SLS 查询语句执行失败时，可以调用该工具，根据错误信息，生成诊断结果。诊断结果会包含查询语句的正确性、性能分析、优化建议等信息。\n\n            ## 使用场景\n\n            - 当需要诊断SLS查询语句的正确性时\n            - 当 SQL 执行错误需要查找原因时\n\n            ## 查询示例\n\n            - \"帮我诊断下 XXX 的日志查询语句\"\n            - \"帮我分析下 XXX 的日志查询语句\"\n\n            Args:\n                ctx: MCP上下文，用于访问SLS客户端\n                query: SLS查询语句\n                error_message: 错误信息\n                project: SLS项目名称\n                log_store: SLS日志库名称\n                region_id: 阿里云区域ID\n            ",
          "input_schema": {
            "properties": {
              "query": {
                "description": "sls query",
                "title": "Query",
                "type": "string"
              },
              "error_message": {
                "description": "error message",
                "title": "Error Message",
                "type": "string"
              },
              "project": {
                "description": "sls project name",
                "title": "Project",
                "type": "string"
              },
              "log_store": {
                "description": "sls log store name",
                "title": "Log Store",
                "type": "string"
              },
              "region_id": {
                "description": "aliyun region id,region id format like 'xx-xxx',like 'cn-hangzhou'",
                "title": "Region Id",
                "type": "string"
              }
            },
            "required": [
              "query",
              "error_message",
              "project",
              "log_store",
              "region_id"
            ],
            "title": "sls_diagnose_queryArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "sls_get_current_time",
          "description": "获取当前时间信息。\n\n            ## 功能概述\n\n            该工具用于获取当前的时间戳和格式化的时间字符串，便于在执行SLS查询时指定时间范围。\n\n            ## 使用场景\n\n            - 当需要获取当前时间以设置查询的结束时间\n            - 当需要获取当前时间戳进行时间计算\n            - 在构建查询时间范围时使用当前时间作为参考点\n\n            ## 返回数据格式\n\n            返回包含两个字段的字典：\n            - current_time: 格式化的时间字符串 (YYYY-MM-DD HH:MM:SS)\n            - current_timestamp: 整数形式的Unix时间戳（秒）\n\n            Args:\n                ctx: MCP上下文\n\n            Returns:\n                包含当前时间信息的字典\n            ",
          "input_schema": {
            "properties": {},
            "title": "sls_get_current_timeArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "arms_search_apps",
          "description": "搜索ARMS应用。\n\n            ## 功能概述\n\n            该工具用于根据应用名称搜索ARMS应用，返回应用的基本信息，包括应用名称、PID、用户ID和类型。\n\n            ## 使用场景\n\n            - 当需要查找特定名称的应用时\n            - 当需要获取应用的PID以便进行其他ARMS操作时\n            - 当需要检查用户拥有的应用列表时\n\n            ## 搜索条件\n\n            - app_name_query必须是应用名称的一部分，而非自然语言\n            - 搜索结果将分页返回，可以指定页码和每页大小\n\n            ## 返回数据结构\n\n            返回一个字典，包含以下信息：\n            - total: 符合条件的应用总数\n            - page_size: 每页大小\n            - page_number: 当前页码\n            - trace_apps: 应用列表，每个应用包含app_name、pid、user_id和type\n\n            ## 查询示例\n\n            - \"帮我查询下 XXX 的应用\"\n            - \"找出名称包含'service'的应用\"\n\n            Args:\n                ctx: MCP上下文，用于访问ARMS客户端\n                app_name_query: 应用名称查询字符串\n                region_id: 阿里云区域ID\n                page_size: 每页大小，范围1-100，默认20\n                page_number: 页码，默认1\n\n            Returns:\n                包含应用信息的字典\n            ",
          "input_schema": {
            "properties": {
              "app_name_query": {
                "description": "app name query",
                "title": "App Name Query",
                "type": "string"
              },
              "region_id": {
                "description": "region id,region id format like 'xx-xxx',like 'cn-hangzhou'",
                "title": "Region Id",
                "type": "string"
              },
              "page_size": {
                "default": 20,
                "description": "page size,max is 100",
                "maximum": 100,
                "minimum": 1,
                "title": "Page Size",
                "type": "integer"
              },
              "page_number": {
                "default": 1,
                "description": "page number,default is 1",
                "minimum": 1,
                "title": "Page Number",
                "type": "integer"
              }
            },
            "required": [
              "app_name_query",
              "region_id"
            ],
            "title": "arms_search_appsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "arms_generate_trace_query",
          "description": "生成ARMS应用的调用链查询语句。\n\n            ## 功能概述\n\n            该工具用于将自然语言描述转换为ARMS调用链查询语句，便于分析应用性能和问题。\n\n            ## 使用场景\n\n            - 当需要查询应用的调用链信息时\n            - 当需要分析应用性能问题时\n            - 当需要跟踪特定请求的执行路径时\n            - 当需要分析服务间调用关系时\n\n            ## 查询处理\n\n            工具会将自然语言问题转换为SLS查询，并返回：\n            - 生成的SLS查询语句\n            - 存储调用链数据的项目名\n            - 存储调用链数据的日志库名\n\n            ## 查询上下文\n\n            查询会考虑以下信息：\n            - 应用的PID\n            - 响应时间以纳秒存储，需转换为毫秒\n            - 数据以span记录存储，查询耗时需要对符合条件的span进行求和\n            - 服务相关信息使用serviceName字段\n            - 如果用户明确提出要查询 trace信息，则需要在查询问题上question 上添加说明返回trace信息\n\n            ## 查询示例\n\n            - \"帮我查询下 XXX 的 trace 信息\"\n            - \"分析最近一小时内响应时间超过1秒的调用链\"\n\n            Args:\n                ctx: MCP上下文，用于访问ARMS和SLS客户端\n                user_id: 用户阿里云账号ID\n                pid: 应用的PID\n                region_id: 阿里云区域ID\n                question: 查询调用链的自然语言问题\n\n            Returns:\n                包含查询信息的字典，包括sls_query、project和log_store\n            ",
          "input_schema": {
            "properties": {
              "user_id": {
                "description": "user aliyun account id",
                "title": "User Id",
                "type": "integer"
              },
              "pid": {
                "description": "pid,the pid of the app",
                "title": "Pid",
                "type": "string"
              },
              "region_id": {
                "description": "region id,region id format like 'xx-xxx',like 'cn-hangzhou'",
                "title": "Region Id",
                "type": "string"
              },
              "question": {
                "description": "question,the question to query the trace",
                "title": "Question",
                "type": "string"
              }
            },
            "required": [
              "user_id",
              "pid",
              "region_id",
              "question"
            ],
            "title": "arms_generate_trace_queryArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "cms_translate_natural_language_to_promql",
          "description": "将自然语言转换为Prometheus PromQL查询语句。\n\n            ## 功能概述\n\n            该工具可以将自然语言描述转换为有效的PromQL查询语句，便于用户使用自然语言表达查询需求。\n\n            ## 使用场景\n\n            - 当用户不熟悉PromQL查询语法时\n            - 当需要快速构建复杂查询时\n            - 当需要从自然语言描述中提取查询意图时\n\n            ## 使用限制\n\n            - 仅支持生成PromQL查询\n            - 生成的是查询语句，而非查询结果\n            - 禁止使用sls_execute_query工具执行，两者接口不兼容\n\n            ## 最佳实践\n\n            - 提供清晰简洁的自然语言描述\n            - 不要在描述中包含项目或时序库名称\n            - 首次生成的查询可能不完全符合要求，可能需要多次尝试\n\n            ## 查询示例\n\n            - \"帮我生成 XXX 的PromQL查询语句\"\n            - \"查询每个namespace下的Pod数量\"\n\n            Args:\n                ctx: MCP上下文，用于访问SLS客户端\n                text: 用于生成查询的自然语言文本\n                project: SLS项目名称\n                metric_store: SLS时序库名称\n                region_id: 阿里云区域ID\n\n            Returns:\n                生成的PromQL查询语句\n            ",
          "input_schema": {
            "properties": {
              "text": {
                "description": "the natural language text to generate promql",
                "title": "Text",
                "type": "string"
              },
              "project": {
                "description": "sls project name",
                "title": "Project",
                "type": "string"
              },
              "metric_store": {
                "description": "sls metric store name",
                "title": "Metric Store",
                "type": "string"
              },
              "region_id": {
                "description": "aliyun region id,region id format like 'xx-xxx',like 'cn-hangzhou'",
                "title": "Region Id",
                "type": "string"
              }
            },
            "required": [
              "text",
              "project",
              "metric_store",
              "region_id"
            ],
            "title": "cms_translate_natural_language_to_promqlArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 10,
      "tool_names": [
        "sls_list_projects",
        "sls_list_logstores",
        "sls_describe_logstore",
        "sls_execute_query",
        "sls_translate_natural_language_to_log_query",
        "sls_diagnose_query",
        "sls_get_current_time",
        "arms_search_apps",
        "arms_generate_trace_query",
        "cms_translate_natural_language_to_promql"
      ]
    },
    "server_info_crawled": {
      "id": 2034,
      "name": "Alibaba Cloud Observability Server",
      "author": "@lkp474/alibabacloud-observability-mcp-server",
      "overview": "Provide seamless access to Alibaba Cloud observability products such as Log Service (SLS), Application Real-Time Monitoring Service (ARMS), and Cloud Monitor through a standardized MCP interface. Enable intelligent agents to quickly query, analyze, and interact with observability data to enhance monitoring and troubleshooting workflows. Simplify integration with Alibaba Cloud's monitoring ecosystem for efficient observability management.",
      "repository_url": "https://github.com/lkp474/alibabacloud-observability-mcp-server",
      "homepage": "https://smithery.ai/server/@lkp474/alibabacloud-observability-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@lkp474_alibabacloud-observability-mcp-server.json",
      "tools_count": 10,
      "tools": [
        {
          "name": "sls_list_projects",
          "description": "列出阿里云日志服务中的所有项目。\n\n            ## 功能概述\n\n            该工具可以列出指定区域中的所有SLS项目，支持通过项目名进行模糊搜索。如果不提供项目名称，则返回该区域的所有项目。\n\n            ## 使用场景\n\n            - 当需要查找特定项目是否存在时\n            - 当需要获取某个区域下所有可用的SLS项目列表时\n            - 当需要根据项目名称的部分内容查找相关项目时\n\n            ## 返回数据结构\n\n            返回的项目信息包含：\n            - project_name: 项目名称\n            - description: 项目描述\n            - region_id: 项目所在区域\n\n            ## 查询示例\n\n            - \"有没有叫 XXX 的 project\"\n            - \"列出所有SLS项目\"\n\n            Args:\n                ctx: MCP上下文，用于访问SLS客户端\n                project_name_query: 项目名称查询字符串，支持模糊搜索\n                limit: 返回结果的最大数量，范围1-100，默认10\n                region_id: 阿里云区域ID,region id format like \"xx-xxx\",like \"cn-hangzhou\"\n\n            Returns:\n                包含项目信息的字典列表，每个字典包含project_name、description和region_id\n            ",
          "input_schema": {
            "properties": {
              "project_name_query": {
                "default": null,
                "description": "project name,fuzzy search",
                "title": "Project Name Query",
                "type": "string"
              },
              "limit": {
                "default": 10,
                "description": "limit,max is 100",
                "maximum": 100,
                "minimum": 1,
                "title": "Limit",
                "type": "integer"
              },
              "region_id": {
                "description": "aliyun region id",
                "title": "Region Id",
                "type": "string"
              }
            },
            "required": [
              "region_id"
            ],
            "title": "sls_list_projectsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "sls_list_logstores",
          "description": "列出SLS项目中的日志库。\n\n            ## 功能概述\n\n            该工具可以列出指定SLS项目中的所有日志库，如果不选，则默认为日志库类型\n            支持通过日志库名称进行模糊搜索。如果不提供日志库名称，则返回项目中的所有日志库。\n\n            ## 使用场景\n\n            - 当需要查找特定项目下是否存在某个日志库时\n            - 当需要获取项目中所有可用的日志库列表时\n            - 当需要根据日志库名称的部分内容查找相关日志库时\n            - 如果从上下文未指定 project参数，除非用户说了遍历，则可使用 sls_list_projects 工具获取项目列表\n\n            ## 是否指标库\n\n            如果需要查找指标或者时序相关的库,请将is_metric_store参数设置为True\n\n            ## 查询示例\n\n            - \"我想查询有没有 XXX 的日志库\"\n            - \"某个 project 有哪些 log store\"\n\n            Args:\n                ctx: MCP上下文，用于访问SLS客户端\n                project: SLS项目名称，必须精确匹配\n                log_store: 日志库名称，支持模糊搜索\n                limit: 返回结果的最大数量，范围1-100，默认10\n                is_metric_store: 是否指标库，可选值为True或False，默认为False\n                region_id: 阿里云区域ID\n\n            Returns:\n                日志库名称的字符串列表\n            ",
          "input_schema": {
            "properties": {
              "project": {
                "description": "sls project name,must exact match,should not contain chinese characters",
                "title": "Project",
                "type": "string"
              },
              "log_store": {
                "default": null,
                "description": "log store name,fuzzy search",
                "title": "Log Store",
                "type": "string"
              },
              "limit": {
                "default": 10,
                "description": "limit,max is 100",
                "maximum": 100,
                "minimum": 1,
                "title": "Limit",
                "type": "integer"
              },
              "is_metric_store": {
                "default": false,
                "description": "is metric store,default is False,only use want to find metric store",
                "title": "Is Metric Store",
                "type": "boolean"
              },
              "log_store_type": {
                "default": null,
                "description": "log store type,default is logs,should be logs,metrics",
                "title": "Log Store Type",
                "type": "string"
              },
              "region_id": {
                "description": "aliyun region id,region id format like 'xx-xxx',like 'cn-hangzhou'",
                "title": "Region Id",
                "type": "string"
              }
            },
            "required": [
              "project",
              "region_id"
            ],
            "title": "sls_list_logstoresArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "sls_describe_logstore",
          "description": "获取SLS日志库的结构信息。\n\n            ## 功能概述\n\n            该工具用于获取指定SLS项目中日志库的索引信息和结构定义，包括字段类型、别名、是否大小写敏感等信息。\n\n            ## 使用场景\n\n            - 当需要了解日志库的字段结构时\n            - 当需要获取日志库的索引配置信息时\n            - 当构建查询语句前需要了解可用字段时\n            - 当需要分析日志数据结构时\n\n            ## 返回数据结构\n\n            返回一个字典，键为字段名，值包含以下信息：\n            - alias: 字段别名\n            - sensitive: 是否大小写敏感\n            - type: 字段类型\n            - json_keys: JSON字段的子字段信息\n\n            ## 查询示例\n\n            - \"我想查询 XXX 的日志库的 schema\"\n            - \"我想查询 XXX 的日志库的 index\"\n            - \"我想查询 XXX 的日志库的结构信息\"\n\n            Args:\n                ctx: MCP上下文，用于访问SLS客户端\n                project: SLS项目名称，必须精确匹配\n                log_store: SLS日志库名称，必须精确匹配\n                region_id: 阿里云区域ID\n\n            Returns:\n                包含日志库结构信息的字典\n            ",
          "input_schema": {
            "properties": {
              "project": {
                "description": "sls project name,must exact match,not fuzzy search",
                "title": "Project",
                "type": "string"
              },
              "log_store": {
                "description": "sls log store name,must exact match,not fuzzy search",
                "title": "Log Store",
                "type": "string"
              },
              "region_id": {
                "description": "aliyun region id,region id format like 'xx-xxx',like 'cn-hangzhou'",
                "title": "Region Id",
                "type": "string"
              }
            },
            "required": [
              "project",
              "log_store",
              "region_id"
            ],
            "title": "sls_describe_logstoreArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "sls_execute_query",
          "description": "执行SLS日志查询。\n\n            ## 功能概述\n\n            该工具用于在指定的SLS项目和日志库上执行查询语句，并返回查询结果。查询将在指定的时间范围内执行。\n\n            ## 使用场景\n\n            - 当需要根据特定条件查询日志数据时\n            - 当需要分析特定时间范围内的日志信息时\n            - 当需要检索日志中的特定事件或错误时\n            - 当需要统计日志数据的聚合信息时\n\n\n\n            ## 查询语法\n\n            查询必须使用SLS有效的查询语法，而非自然语言。如果不了解日志库的结构，可以先使用sls_describe_logstore工具获取索引信息。\n\n            ## 时间范围\n\n            查询必须指定时间范围：\n            - from_timestamp: 开始时间戳（秒）\n            - to_timestamp: 结束时间戳（秒）\n\n            ## 查询示例\n\n            - \"帮我查询下 XXX 的日志信息\"\n            - \"查找最近一小时内的错误日志\"\n\n            ## 错误处理\n            - Column xxx can not be resolved 如果是 sls_translate_natural_language_to_query 工具生成的查询语句 可能存在查询列未开启统计，可以提示用户增加相对应的信息，或者调用 sls_describe_logstore 工具获取索引信息之后，要用户选择正确的字段或者提示用户对列开启统计。当确定列开启统计之后，可以再次调用sls_translate_natural_language_to_query 工具生成查询语句\n\n            Args:\n                ctx: MCP上下文，用于访问SLS客户端\n                project: SLS项目名称\n                log_store: SLS日志库名称\n                query: SLS查询语句\n                from_timestamp: 查询开始时间戳（秒）\n                to_timestamp: 查询结束时间戳（秒）\n                limit: 返回结果的最大数量，范围1-100，默认10\n                region_id: 阿里云区域ID\n\n            Returns:\n                查询结果列表，每个元素为一条日志记录\n            ",
          "input_schema": {
            "properties": {
              "project": {
                "description": "sls project name",
                "title": "Project",
                "type": "string"
              },
              "log_store": {
                "description": "sls log store name",
                "title": "Log Store",
                "type": "string"
              },
              "query": {
                "description": "query",
                "title": "Query",
                "type": "string"
              },
              "from_timestamp": {
                "description": "from timestamp,unit is second,should be unix timestamp",
                "title": "From Timestamp",
                "type": "integer"
              },
              "to_timestamp": {
                "description": "to timestamp,unit is second,should be unix timestamp",
                "title": "To Timestamp",
                "type": "integer"
              },
              "limit": {
                "default": 10,
                "description": "limit,max is 100",
                "maximum": 100,
                "minimum": 1,
                "title": "Limit",
                "type": "integer"
              },
              "region_id": {
                "description": "aliyun region id,region id format like 'xx-xxx',like 'cn-hangzhou'",
                "title": "Region Id",
                "type": "string"
              }
            },
            "required": [
              "project",
              "log_store",
              "query",
              "from_timestamp",
              "to_timestamp",
              "region_id"
            ],
            "title": "sls_execute_queryArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "sls_translate_natural_language_to_log_query",
          "description": "将自然语言转换为SLS查询语句。\n\n            ## 功能概述\n\n            该工具可以将自然语言描述转换为有效的SLS查询语句，便于用户使用自然语言表达查询需求。用户有任何 SLS 日志查询需求时，都需要优先使用该工具。\n\n            ## 使用场景\n\n            - 当用户不熟悉SLS查询语法时\n            - 当需要快速构建复杂查询时\n            - 当需要从自然语言描述中提取查询意图时\n\n            ## 使用限制\n\n            - 仅支持生成SLS查询，不支持其他数据库的SQL如MySQL、PostgreSQL等\n            - 生成的是查询语句，而非查询结果，需要配合sls_execute_query工具使用\n            - 如果查询涉及ARMS应用，应优先使用arms_generate_trace_query工具\n            - 需要对应的 log_sotre 已经设定了索引信息，如果生成的结果里面有字段没有索引或者开启统计，可能会导致查询失败，需要友好的提示用户增加相对应的索引信息\n\n            ## 最佳实践\n\n            - 提供清晰简洁的自然语言描述\n            - 不要在描述中包含项目或日志库名称\n            - 如有需要，指定查询的时间范围\n            - 首次生成的查询可能不完全符合要求，可能需要多次尝试\n\n            ## 查询示例\n\n            - \"帮我生成下 XXX 的日志查询语句\"\n            - \"查找最近一小时内的错误日志\"\n\n            Args:\n                ctx: MCP上下文，用于访问SLS客户端\n                text: 用于生成查询的自然语言文本\n                project: SLS项目名称\n                log_store: SLS日志库名称\n                region_id: 阿里云区域ID\n\n            Returns:\n                生成的SLS查询语句\n            ",
          "input_schema": {
            "properties": {
              "text": {
                "description": "the natural language text to generate sls log store query",
                "title": "Text",
                "type": "string"
              },
              "project": {
                "description": "sls project name",
                "title": "Project",
                "type": "string"
              },
              "log_store": {
                "description": "sls log store name",
                "title": "Log Store",
                "type": "string"
              },
              "region_id": {
                "description": "aliyun region id,region id format like 'xx-xxx',like 'cn-hangzhou'",
                "title": "Region Id",
                "type": "string"
              }
            },
            "required": [
              "text",
              "project",
              "log_store",
              "region_id"
            ],
            "title": "sls_translate_natural_language_to_log_queryArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "sls_diagnose_query",
          "description": "诊断SLS查询语句。\n\n            ## 功能概述\n\n            当 SLS 查询语句执行失败时，可以调用该工具，根据错误信息，生成诊断结果。诊断结果会包含查询语句的正确性、性能分析、优化建议等信息。\n\n            ## 使用场景\n\n            - 当需要诊断SLS查询语句的正确性时\n            - 当 SQL 执行错误需要查找原因时\n\n            ## 查询示例\n\n            - \"帮我诊断下 XXX 的日志查询语句\"\n            - \"帮我分析下 XXX 的日志查询语句\"\n\n            Args:\n                ctx: MCP上下文，用于访问SLS客户端\n                query: SLS查询语句\n                error_message: 错误信息\n                project: SLS项目名称\n                log_store: SLS日志库名称\n                region_id: 阿里云区域ID\n            ",
          "input_schema": {
            "properties": {
              "query": {
                "description": "sls query",
                "title": "Query",
                "type": "string"
              },
              "error_message": {
                "description": "error message",
                "title": "Error Message",
                "type": "string"
              },
              "project": {
                "description": "sls project name",
                "title": "Project",
                "type": "string"
              },
              "log_store": {
                "description": "sls log store name",
                "title": "Log Store",
                "type": "string"
              },
              "region_id": {
                "description": "aliyun region id,region id format like 'xx-xxx',like 'cn-hangzhou'",
                "title": "Region Id",
                "type": "string"
              }
            },
            "required": [
              "query",
              "error_message",
              "project",
              "log_store",
              "region_id"
            ],
            "title": "sls_diagnose_queryArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "sls_get_current_time",
          "description": "获取当前时间信息。\n\n            ## 功能概述\n\n            该工具用于获取当前的时间戳和格式化的时间字符串，便于在执行SLS查询时指定时间范围。\n\n            ## 使用场景\n\n            - 当需要获取当前时间以设置查询的结束时间\n            - 当需要获取当前时间戳进行时间计算\n            - 在构建查询时间范围时使用当前时间作为参考点\n\n            ## 返回数据格式\n\n            返回包含两个字段的字典：\n            - current_time: 格式化的时间字符串 (YYYY-MM-DD HH:MM:SS)\n            - current_timestamp: 整数形式的Unix时间戳（秒）\n\n            Args:\n                ctx: MCP上下文\n\n            Returns:\n                包含当前时间信息的字典\n            ",
          "input_schema": {
            "properties": {},
            "title": "sls_get_current_timeArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "arms_search_apps",
          "description": "搜索ARMS应用。\n\n            ## 功能概述\n\n            该工具用于根据应用名称搜索ARMS应用，返回应用的基本信息，包括应用名称、PID、用户ID和类型。\n\n            ## 使用场景\n\n            - 当需要查找特定名称的应用时\n            - 当需要获取应用的PID以便进行其他ARMS操作时\n            - 当需要检查用户拥有的应用列表时\n\n            ## 搜索条件\n\n            - app_name_query必须是应用名称的一部分，而非自然语言\n            - 搜索结果将分页返回，可以指定页码和每页大小\n\n            ## 返回数据结构\n\n            返回一个字典，包含以下信息：\n            - total: 符合条件的应用总数\n            - page_size: 每页大小\n            - page_number: 当前页码\n            - trace_apps: 应用列表，每个应用包含app_name、pid、user_id和type\n\n            ## 查询示例\n\n            - \"帮我查询下 XXX 的应用\"\n            - \"找出名称包含'service'的应用\"\n\n            Args:\n                ctx: MCP上下文，用于访问ARMS客户端\n                app_name_query: 应用名称查询字符串\n                region_id: 阿里云区域ID\n                page_size: 每页大小，范围1-100，默认20\n                page_number: 页码，默认1\n\n            Returns:\n                包含应用信息的字典\n            ",
          "input_schema": {
            "properties": {
              "app_name_query": {
                "description": "app name query",
                "title": "App Name Query",
                "type": "string"
              },
              "region_id": {
                "description": "region id,region id format like 'xx-xxx',like 'cn-hangzhou'",
                "title": "Region Id",
                "type": "string"
              },
              "page_size": {
                "default": 20,
                "description": "page size,max is 100",
                "maximum": 100,
                "minimum": 1,
                "title": "Page Size",
                "type": "integer"
              },
              "page_number": {
                "default": 1,
                "description": "page number,default is 1",
                "minimum": 1,
                "title": "Page Number",
                "type": "integer"
              }
            },
            "required": [
              "app_name_query",
              "region_id"
            ],
            "title": "arms_search_appsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "arms_generate_trace_query",
          "description": "生成ARMS应用的调用链查询语句。\n\n            ## 功能概述\n\n            该工具用于将自然语言描述转换为ARMS调用链查询语句，便于分析应用性能和问题。\n\n            ## 使用场景\n\n            - 当需要查询应用的调用链信息时\n            - 当需要分析应用性能问题时\n            - 当需要跟踪特定请求的执行路径时\n            - 当需要分析服务间调用关系时\n\n            ## 查询处理\n\n            工具会将自然语言问题转换为SLS查询，并返回：\n            - 生成的SLS查询语句\n            - 存储调用链数据的项目名\n            - 存储调用链数据的日志库名\n\n            ## 查询上下文\n\n            查询会考虑以下信息：\n            - 应用的PID\n            - 响应时间以纳秒存储，需转换为毫秒\n            - 数据以span记录存储，查询耗时需要对符合条件的span进行求和\n            - 服务相关信息使用serviceName字段\n            - 如果用户明确提出要查询 trace信息，则需要在查询问题上question 上添加说明返回trace信息\n\n            ## 查询示例\n\n            - \"帮我查询下 XXX 的 trace 信息\"\n            - \"分析最近一小时内响应时间超过1秒的调用链\"\n\n            Args:\n                ctx: MCP上下文，用于访问ARMS和SLS客户端\n                user_id: 用户阿里云账号ID\n                pid: 应用的PID\n                region_id: 阿里云区域ID\n                question: 查询调用链的自然语言问题\n\n            Returns:\n                包含查询信息的字典，包括sls_query、project和log_store\n            ",
          "input_schema": {
            "properties": {
              "user_id": {
                "description": "user aliyun account id",
                "title": "User Id",
                "type": "integer"
              },
              "pid": {
                "description": "pid,the pid of the app",
                "title": "Pid",
                "type": "string"
              },
              "region_id": {
                "description": "region id,region id format like 'xx-xxx',like 'cn-hangzhou'",
                "title": "Region Id",
                "type": "string"
              },
              "question": {
                "description": "question,the question to query the trace",
                "title": "Question",
                "type": "string"
              }
            },
            "required": [
              "user_id",
              "pid",
              "region_id",
              "question"
            ],
            "title": "arms_generate_trace_queryArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "cms_translate_natural_language_to_promql",
          "description": "将自然语言转换为Prometheus PromQL查询语句。\n\n            ## 功能概述\n\n            该工具可以将自然语言描述转换为有效的PromQL查询语句，便于用户使用自然语言表达查询需求。\n\n            ## 使用场景\n\n            - 当用户不熟悉PromQL查询语法时\n            - 当需要快速构建复杂查询时\n            - 当需要从自然语言描述中提取查询意图时\n\n            ## 使用限制\n\n            - 仅支持生成PromQL查询\n            - 生成的是查询语句，而非查询结果\n            - 禁止使用sls_execute_query工具执行，两者接口不兼容\n\n            ## 最佳实践\n\n            - 提供清晰简洁的自然语言描述\n            - 不要在描述中包含项目或时序库名称\n            - 首次生成的查询可能不完全符合要求，可能需要多次尝试\n\n            ## 查询示例\n\n            - \"帮我生成 XXX 的PromQL查询语句\"\n            - \"查询每个namespace下的Pod数量\"\n\n            Args:\n                ctx: MCP上下文，用于访问SLS客户端\n                text: 用于生成查询的自然语言文本\n                project: SLS项目名称\n                metric_store: SLS时序库名称\n                region_id: 阿里云区域ID\n\n            Returns:\n                生成的PromQL查询语句\n            ",
          "input_schema": {
            "properties": {
              "text": {
                "description": "the natural language text to generate promql",
                "title": "Text",
                "type": "string"
              },
              "project": {
                "description": "sls project name",
                "title": "Project",
                "type": "string"
              },
              "metric_store": {
                "description": "sls metric store name",
                "title": "Metric Store",
                "type": "string"
              },
              "region_id": {
                "description": "aliyun region id,region id format like 'xx-xxx',like 'cn-hangzhou'",
                "title": "Region Id",
                "type": "string"
              }
            },
            "required": [
              "text",
              "project",
              "metric_store",
              "region_id"
            ],
            "title": "cms_translate_natural_language_to_promqlArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"logLevel\": \"INFO\",\n  \"transport\": \"stdio\",\n  \"transportPort\": 8000\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@lkp474/alibabacloud-observability-mcp-server/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"logLevel\": \"INFO\",\n  \"transport\": \"stdio\",\n  \"transportPort\": 8000\n}",
      "python_sdk_url": "https://server.smithery.ai/@lkp474/alibabacloud-observability-mcp-server/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "2035.@lkp474_alibabacloud-observability-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1773
  }
}