{
  "labels": {
    "analysis": "The MCP Server is designed for data analysis, research, and content generation. It provides tools to analyze datasets (Excel/CSV), generate research papers, and automate email delivery using AI capabilities. The core focus is on leveraging AI for data-driven research and reporting, making it particularly useful for academics, analysts, and researchers.",
    "reasoning": "The primary label \"Data Analysis & Processing\" is chosen because the server's main functionality revolves around analyzing datasets and deriving insights. The secondary labels \"Content Creation\" and \"Communication Tools\" are relevant due to its ability to generate research papers and automate email delivery. No custom label is needed as the predefined categories sufficiently cover the server's functionality.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "Content Creation",
      "Communication Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1027,
    "server_name": "Gemini Data Analysis & Research",
    "rank_by_usage": 1028,
    "usage_count": "2",
    "original_file": "../crawler/smithery/@falahgs_gemini-data-analysis-research-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@falahgs/gemini-data-analysis-research-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1027,
      "name": "Gemini Data Analysis & Research",
      "author": "@falahgs/gemini-data-analysis-research-mcp-server",
      "overview": "Analyze datasets, generate research papers, and automate email delivery with ease. Leverage advanced AI capabilities for insightful data analysis and professional content creation. Streamline your research and reporting processes directly from your data files.",
      "repository_url": "https://github.com/falahgs/Gemini-Data-Analysis-Research-MCP-Server",
      "homepage": "https://smithery.ai/server/@falahgs/gemini-data-analysis-research-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "2",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@falahgs_gemini-data-analysis-research-mcp-server.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "generate-thinking",
          "description": "Deploy Server Gemini Data Analysis & Research @falahgs/gemini-data-analysis-research-mcp-server Try in Playground generate-thinking",
          "parameters": []
        },
        {
          "name": "send-email",
          "description": "Send an email with AI-generated subject using Gemini Flash 2",
          "parameters": []
        },
        {
          "name": "analyze-data",
          "description": "Analyze Excel/CSV data using EDA and Gemini AI",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@falahgs/gemini-data-analysis-research-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "geminiApiKey",
          "required": true,
          "description": "Google Gemini API key for authenticating with the Gemini service"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@falahgs/gemini-data-analysis-research-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1028.@falahgs_gemini-data-analysis-research-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1006
  }
}