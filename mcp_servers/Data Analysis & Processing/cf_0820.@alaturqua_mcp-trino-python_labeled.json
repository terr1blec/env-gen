{
  "labels": {
    "analysis": "The MCP Server is a Trino Server integration tool specifically designed for advanced data exploration and querying within Trino and Iceberg environments. It provides a range of tools for querying databases, managing table maintenance, and optimizing data workflows. Key functionalities include executing SQL queries, optimizing Iceberg tables, managing snapshots, and retrieving statistics, which collectively support data analysis and processing tasks.",
    "reasoning": "The primary label \"Data Analysis & Processing\" was chosen because the server primarily facilitates querying, analyzing, and optimizing data within Trino and Iceberg environments. The secondary label \"Database Operations\" was included because many of the tools directly interact with database structures (e.g., tables, views, snapshots, and catalogs). No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "Database Operations"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 819,
    "server_name": "Trino Server",
    "rank_by_usage": 820,
    "usage_count": "6",
    "original_file": "../crawler/smithery/@alaturqua_mcp-trino-python.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@alaturqua/mcp-trino-python/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 819,
      "name": "Trino Server",
      "author": "@alaturqua/mcp-trino-python",
      "overview": "Integrate with Trino and Iceberg for advanced data exploration and querying. Automate table maintenance and optimize your data workflows seamlessly. Build AI-powered tools that interact with your Trino databases effortlessly.",
      "repository_url": "https://github.com/alaturqua/mcp-trino-python",
      "homepage": "https://smithery.ai/server/@alaturqua/mcp-trino-python",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "6",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@alaturqua_mcp-trino-python.json",
      "tools_count": 9,
      "tools": [
        {
          "name": "show_create_table",
          "description": "Deploy Server Trino Server @alaturqua/mcp-trino-python Try in Playground show_create_table",
          "parameters": [
            {
              "name": "table",
              "required": true,
              "type": "string"
            },
            {
              "name": "schema",
              "required": false,
              "type": "string"
            },
            {
              "name": "catalog",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "show_create_view",
          "description": "Show the CREATE VIEW statement for a specific view",
          "parameters": [
            {
              "name": "view",
              "required": true,
              "type": "string"
            },
            {
              "name": "schema",
              "required": false,
              "type": "string"
            },
            {
              "name": "catalog",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "execute_query",
          "description": "Execute a SQL query and return results in a readable format",
          "parameters": [
            {
              "name": "execute_query",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "optimize",
          "description": "Optimize an Iceberg table's data files",
          "parameters": [
            {
              "name": "table",
              "required": true,
              "type": "string"
            },
            {
              "name": "schema",
              "required": false,
              "type": "string"
            },
            {
              "name": "catalog",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "optimize_manifests",
          "description": "Optimize manifest files for an Iceberg table",
          "parameters": [
            {
              "name": "table",
              "required": true,
              "type": "string"
            },
            {
              "name": "schema",
              "required": false,
              "type": "string"
            },
            {
              "name": "catalog",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "expire_snapshots",
          "description": "Remove old snapshots from an Iceberg table",
          "parameters": [
            {
              "name": "expire_snapshots",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "show_stats",
          "description": "Show statistics for a table",
          "parameters": [
            {
              "name": "table",
              "required": true,
              "type": "string"
            },
            {
              "name": "schema",
              "required": false,
              "type": "string"
            },
            {
              "name": "catalog",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "show_query_history",
          "description": "Get the history of executed queries",
          "parameters": [
            {
              "name": "show_query_history",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "show_catalog_tree",
          "description": "Show a hierarchical tree view of catalogs, schemas, and tables",
          "parameters": [
            {
              "name": "show_catalog_tree",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@alaturqua/mcp-trino-python/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@alaturqua/mcp-trino-python/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0820.@alaturqua_mcp-trino-python_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 801
  }
}