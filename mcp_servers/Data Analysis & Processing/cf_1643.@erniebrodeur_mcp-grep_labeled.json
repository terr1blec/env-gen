{
  "labels": {
    "analysis": "The MCP Server described is called \"Grep Server\" and is focused on exposing the powerful grep functionality for pattern searching within files and system information. It allows applications to perform advanced data processing using search patterns and regular expressions, making it a specialized tool for text-based pattern recognition and extraction.",
    "reasoning": "The primary label \"Data Analysis & Processing\" was chosen because the grep functionality aligns with data extraction and manipulation capabilities. It complements operations like analytics and data transformation. The secondary label \"Memory Management\" was selected due to its file and data search capabilities, which can be used for knowledge base or data retrieval tasks. No custom label is needed as the predefined categories cover the server's functionality well.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "Memory Management"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1642,
    "server_name": "Grep Server",
    "rank_by_usage": 1643,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@erniebrodeur_mcp-grep.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@erniebrodeur/mcp-grep/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1642,
      "name": "Grep Server",
      "author": "@erniebrodeur/mcp-grep",
      "overview": "Expose powerful grep functionality to your applications. Search for patterns in files and retrieve system grep information seamlessly. Enhance your data processing capabilities with advanced search options and regular expressions.",
      "repository_url": "https://github.com/erniebrodeur/mcp-grep",
      "homepage": "https://smithery.ai/server/@erniebrodeur/mcp-grep",
      "remote_or_local": "Remote",
      "license": "GPL-3.0",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@erniebrodeur_mcp-grep.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "grep",
          "description": "Deploy Server Grep Server Claim Server @erniebrodeur/mcp-grep Try in Playground",
          "parameters": [
            {
              "name": "after_context",
              "required": false,
              "type": "string"
            },
            {
              "name": "fixed_strings",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "before_context",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@erniebrodeur/mcp-grep/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@erniebrodeur/mcp-grep/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1643.@erniebrodeur_mcp-grep_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1489
  }
}