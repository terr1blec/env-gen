{
  "labels": {
    "analysis": "The Quick Chart Server is designed to facilitate data visualization by interacting with the Quick Chart API. Its core functionality revolves around generating and retrieving chart images based on user-provided parameters. This tool solves the problem of creating standardized, visually appealing charts programmatically without the need for manual design work, making it particularly useful for data analysis, reporting, and enhancing AI agents with visualization capabilities.",
    "reasoning": "The primary label \"Data Analysis & Processing\" was chosen because the server's main purpose is to support data visualization, which is a key aspect of data analysis and processing. The secondary label \"Development Tools\" was selected because the server provides a tool for developers to integrate charting capabilities into their applications. A custom label is not needed as the functionality is well-covered by the predefined categories.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "Development Tools"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 541,
    "server_name": "Quick Chart Server",
    "rank_by_usage": 542,
    "usage_count": "25",
    "original_file": "../crawler/smithery/@datafe_quick-chart-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@datafe/quick-chart-mcp/mcp?config=eyJQT1JUIjogMzAwMCwgIk5PREVfRU5WIjogInByb2R1Y3Rpb24iLCAiUVVJQ0tfQ0hBUlRfRFJBV19VUkwiOiAiIiwgIk5FRURfSU5TVEFMTF9RVUlDS19DSEFSVCI6IGZhbHNlfQ==&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "GetChartImgLink",
          "description": "To draw chart and get chart image link by parameters, and parameter grammar follows Quick Chart API (quickchart.io).",
          "input_schema": {
            "type": "object",
            "properties": {
              "json": {
                "description": "quick chart api's (quickchart.io) parameters and format is JSON object. The object does not include any functions, only values."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "GetChartImgLink"
      ]
    },
    "server_info_crawled": {
      "id": 541,
      "name": "Quick Chart Server",
      "author": "@datafe/quick-chart-mcp",
      "overview": "Interact with Quick Chart to generate and retrieve chart images seamlessly. Enhance your AI agents with standardized charting capabilities, making data visualization effortless and efficient.",
      "repository_url": "https://github.com/datafe/quick-chart-mcp",
      "homepage": "https://smithery.ai/server/@datafe/quick-chart-mcp",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "25",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@datafe_quick-chart-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "GetChartImgLink",
          "description": "To draw chart and get chart image link by parameters, and parameter grammar follows Quick Chart API (quickchart.io).",
          "input_schema": {
            "type": "object",
            "properties": {
              "json": {
                "description": "quick chart api's (quickchart.io) parameters and format is JSON object. The object does not include any functions, only values."
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"PORT\": 3000,\n  \"NODE_ENV\": \"production\",\n  \"QUICK_CHART_DRAW_URL\": \"\",\n  \"NEED_INSTALL_QUICK_CHART\": false\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@datafe/quick-chart-mcp/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"PORT\": 3000,\n  \"NODE_ENV\": \"production\",\n  \"QUICK_CHART_DRAW_URL\": \"\",\n  \"NEED_INSTALL_QUICK_CHART\": false\n}",
      "python_sdk_url": "https://server.smithery.ai/@datafe/quick-chart-mcp/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "0542.@datafe_quick-chart-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 530
  }
}