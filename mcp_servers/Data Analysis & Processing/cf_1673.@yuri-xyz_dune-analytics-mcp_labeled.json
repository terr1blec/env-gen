{
  "labels": {
    "analysis": "The MCP Server provides tools to interface with Dune Analytics, a blockchain analytics platform. It enables users to fetch and run Dune queries, returning results in CSV format for easy processing. This allows AI workflows to integrate up-to-date blockchain data seamlessly. The core functionality revolves around querying blockchain analytics data and making it accessible programmatically.",
    "reasoning": "The primary label \"Data Analysis & Processing\" was chosen because the server's main functionality involves running and retrieving analytics queries. \"Cryptocurrency & Blockchain\" is a secondary label since the data being processed is blockchain-related. The server doesn't require additional custom labels as its functionality is well-covered by the predefined categories.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "Cryptocurrency & Blockchain"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1672,
    "server_name": "Dune Analytics",
    "rank_by_usage": 1673,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@yuri-xyz_dune-analytics-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@yuri-xyz/dune-analytics-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1672,
      "name": "Dune Analytics",
      "author": "@yuri-xyz/dune-analytics-mcp",
      "overview": "Bridge Dune Analytics data to AI agents by fetching and running Dune queries with ease. Retrieve query results as CSV-formatted strings for seamless processing and integration. Empower your AI workflows with up-to-date blockchain analytics data.",
      "repository_url": "https://github.com/yuri-xyz/dune-analytics-mcp",
      "homepage": "https://smithery.ai/server/@yuri-xyz/dune-analytics-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@yuri-xyz_dune-analytics-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "get_latest_result",
          "description": "Deploy Server Dune Analytics @yuri-xyz/dune-analytics-mcp Try in Playground get_latest_result",
          "parameters": []
        },
        {
          "name": "run_query",
          "description": "Run a query by ID and return results as a CSV string on dune analytics",
          "parameters": [
            {
              "name": "run_query",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@yuri-xyz/dune-analytics-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "duneApiKey",
          "required": true,
          "description": "Dune Analytics API key for authenticating with the Dune API."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@yuri-xyz/dune-analytics-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1673.@yuri-xyz_dune-analytics-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1514
  }
}