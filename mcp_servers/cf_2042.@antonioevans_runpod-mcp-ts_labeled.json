{
  "labels": {
    "analysis": "The MCP Server described is a \"RunPod Server Manager,\" which allows users to manage resources on the RunPod platform directly from an MCP-compatible client. The server provides tools for managing pods, serverless endpoints, templates, network volumes, and container registry authentications. These tools enable the creation, listing, updating, and deletion of these resources, effectively streamlining the management of cloud-based computing and serverless infrastructure.",
    "reasoning": "The primary functionality of this server revolves around managing cloud-based resources, specifically within the RunPod ecosystem. It fits best under the \"Cloud Services\" category due to its focus on cloud platform integration and resource management. Secondary labels could include \"Operating System\" due to the involvement of container management and \"API Integration\" given its interaction with cloud services via MCP.",
    "primary_label": "Cloud Services",
    "secondary_labels": [
      "Operating System",
      "API Integration"
    ],
    "custom_label": "RunPod Resource Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2041,
    "server_name": "RunPod Server Manager",
    "rank_by_usage": 2042,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@antonioevans_runpod-mcp-ts.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@antonioevans/runpod-mcp-ts/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2041,
      "name": "RunPod Server Manager",
      "author": "@antonioevans/runpod-mcp-ts",
      "overview": "Manage your RunPod resources seamlessly through an MCP-compatible client. Create, list, update, and delete pods, serverless endpoints, templates, network volumes, and container registry authentications with ease. Streamline your RunPod operations directly from your preferred LLM interface.",
      "repository_url": "https://github.com/antonioevans/runpod-mcp-ts",
      "homepage": "https://smithery.ai/server/@antonioevans/runpod-mcp-ts",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@antonioevans_runpod-mcp-ts.json",
      "tools_count": 26,
      "tools": [
        {
          "name": "list-pods",
          "description": "Deploy Server RunPod Server Manager @antonioevans/runpod-mcp-ts Try in Playground",
          "parameters": []
        },
        {
          "name": "get-pod",
          "description": "Description not available",
          "parameters": [
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "includeNetworkVolume",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create-pod",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "update-pod",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "start-pod",
          "description": "Description not available",
          "parameters": [
            {
              "name": "podId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "stop-pod",
          "description": "Description not available",
          "parameters": [
            {
              "name": "podId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete-pod",
          "description": "Description not available",
          "parameters": [
            {
              "name": "podId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list-endpoints",
          "description": "Description not available",
          "parameters": [
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "includeTemplate",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-endpoint",
          "description": "Description not available",
          "parameters": [
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "includeTemplate",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create-endpoint",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "update-endpoint",
          "description": "Description not available",
          "parameters": [
            {
              "name": "scalerType",
              "required": false,
              "type": "string"
            },
            {
              "name": "workersMax",
              "required": false,
              "type": "string"
            },
            {
              "name": "workersMin",
              "required": false,
              "type": "string"
            },
            {
              "name": "idleTimeout",
              "required": false,
              "type": "string"
            },
            {
              "name": "scalerValue",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete-endpoint",
          "description": "Description not available",
          "parameters": [
            {
              "name": "endpointId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list-templates",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "get-template",
          "description": "Description not available",
          "parameters": [
            {
              "name": "templateId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create-template",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "update-template",
          "description": "Description not available",
          "parameters": [
            {
              "name": "ports",
              "required": false,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "readme",
              "required": false,
              "type": "string"
            },
            {
              "name": "imageName",
              "required": false,
              "type": "string"
            },
            {
              "name": "templateId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete-template",
          "description": "Description not available",
          "parameters": [
            {
              "name": "templateId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list-network-volumes",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "get-network-volume",
          "description": "Description not available",
          "parameters": [
            {
              "name": "networkVolumeId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create-network-volume",
          "description": "Description not available",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "size",
              "required": true,
              "type": "string"
            },
            {
              "name": "dataCenterId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "update-network-volume",
          "description": "Description not available",
          "parameters": [
            {
              "name": "name",
              "required": false,
              "type": "string"
            },
            {
              "name": "size",
              "required": false,
              "type": "string"
            },
            {
              "name": "networkVolumeId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete-network-volume",
          "description": "Description not available",
          "parameters": [
            {
              "name": "networkVolumeId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list-container-registry-auths",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "get-container-registry-auth",
          "description": "Description not available",
          "parameters": [
            {
              "name": "containerRegistryAuthId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create-container-registry-auth",
          "description": "Description not available",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "password",
              "required": true,
              "type": "string"
            },
            {
              "name": "username",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete-container-registry-auth",
          "description": "Description not available",
          "parameters": [
            {
              "name": "containerRegistryAuthId",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@antonioevans/runpod-mcp-ts/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "runpodApiKey",
          "required": true,
          "description": "Your RunPod API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@antonioevans/runpod-mcp-ts/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2042.@antonioevans_runpod-mcp-ts_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1779
  }
}