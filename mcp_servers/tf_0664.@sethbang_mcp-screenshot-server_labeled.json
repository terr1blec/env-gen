{
  "labels": {
    "analysis": "The MCP Server is designed to capture screenshots of web pages and local HTML files using the Puppeteer library. Its primary function is automated screenshot generation, which falls under web browsing automation and visual documentation. The tool \"take_screenshot\" suggests direct interaction with web pages or GUI elements, similar to browser-based automation tasks.",
    "reasoning": "The primary label \"Browser Automation\" was chosen because the server automates screenshot capture from web pages, which is a core aspect of browser automation. The secondary label \"Web Search & Research\" is relevant as screenshots are often used for documentation or research purposes. No custom label is necessary as the functionality is well-covered by predefined categories.",
    "primary_label": "Browser Automation",
    "secondary_labels": [
      "Web Search & Research"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 663,
    "server_name": "Screenshot Server",
    "rank_by_usage": 664,
    "usage_count": "13",
    "original_file": "../crawler/smithery/@sethbang_mcp-screenshot-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@sethbang/mcp-screenshot-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "take_screenshot",
          "description": "Capture a screenshot of any web page or local GUI",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL to capture (can be http://, https://, or file:///)"
              },
              "width": {
                "type": "number",
                "description": "Viewport width in pixels",
                "minimum": 1,
                "maximum": 3840
              },
              "height": {
                "type": "number",
                "description": "Viewport height in pixels",
                "minimum": 1,
                "maximum": 2160
              },
              "fullPage": {
                "type": "boolean",
                "description": "Capture full scrollable page"
              },
              "outputPath": {
                "type": "string",
                "description": "Custom output path (optional)"
              }
            },
            "required": [
              "url"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "take_screenshot"
      ]
    },
    "server_info_crawled": {
      "id": 663,
      "name": "Screenshot Server",
      "author": "@sethbang/mcp-screenshot-server",
      "overview": "Capture screenshots of web pages and local HTML files using Puppeteer.",
      "repository_url": "https://github.com/sethbang/mcp-screenshot-server",
      "homepage": "https://smithery.ai/server/@sethbang/mcp-screenshot-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "13",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@sethbang_mcp-screenshot-server.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "take_screenshot",
          "description": "Capture a screenshot of any web page or local GUI",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL to capture (can be http://, https://, or file:///)"
              },
              "width": {
                "type": "number",
                "description": "Viewport width in pixels",
                "minimum": 1,
                "maximum": 3840
              },
              "height": {
                "type": "number",
                "description": "Viewport height in pixels",
                "minimum": 1,
                "maximum": 2160
              },
              "fullPage": {
                "type": "boolean",
                "description": "Capture full scrollable page"
              },
              "outputPath": {
                "type": "string",
                "description": "Custom output path (optional)"
              }
            },
            "required": [
              "url"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@sethbang/mcp-screenshot-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@sethbang/mcp-screenshot-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0664.@sethbang_mcp-screenshot-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 648
  }
}