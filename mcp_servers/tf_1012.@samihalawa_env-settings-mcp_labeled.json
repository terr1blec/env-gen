{
  "labels": {
    "analysis": "The MCP Server described is focused on managing environment variables and application settings securely. Its core functionality revolves around setting, retrieving, listing, deleting, importing, and exporting environment variables, which are essential for application configuration and secret management. This tool simplifies configuration management and enhances security by centralizing control over sensitive settings.",
    "reasoning": "The primary label \"Configuration Management\" was chosen because the server specializes in managing application settings and environment variables, which is a core aspect of configuration management. The secondary labels \"Security & Authentication\" and \"Development Tools\" were selected because the server aids in securely managing sensitive data, which is critical for both security and development workflows.",
    "primary_label": "Others",
    "secondary_labels": [
      "Security & Authentication",
      "Development Tools"
    ],
    "custom_label": "Configuration Management",
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1011,
    "server_name": "Environment Settings Manager",
    "rank_by_usage": 1012,
    "usage_count": "2",
    "original_file": "../crawler/smithery/@samihalawa_env-settings-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@samihalawa/env-settings-mcp/mcp?config=eyJkZWJ1ZyI6IGZhbHNlLCAic3RvcmFnZVBhdGgiOiAiIn0=&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "set_env",
          "description": "Set environment variable or setting",
          "input_schema": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "Environment variable name"
              },
              "value": {
                "type": "string",
                "description": "Environment variable value"
              },
              "description": {
                "type": "string",
                "description": "Optional description for this setting"
              }
            },
            "required": [
              "key",
              "value"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_env",
          "description": "Get environment variable or setting value",
          "input_schema": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "Environment variable name"
              }
            },
            "required": [
              "key"
            ]
          },
          "annotations": null
        },
        {
          "name": "list_env",
          "description": "List all environment variables and settings",
          "input_schema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Filter keys by pattern"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "delete_env",
          "description": "Delete environment variable or setting",
          "input_schema": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "Environment variable name to delete"
              }
            },
            "required": [
              "key"
            ]
          },
          "annotations": null
        },
        {
          "name": "export_env",
          "description": "Export environment variables in various formats",
          "input_schema": {
            "type": "object",
            "properties": {
              "format": {
                "type": "string",
                "enum": [
                  "dotenv",
                  "json",
                  "yaml",
                  "shell"
                ],
                "description": "Export format",
                "default": "dotenv"
              },
              "filter": {
                "type": "string",
                "description": "Filter keys by pattern"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "import_env",
          "description": "Import environment variables from text (dotenv format)",
          "input_schema": {
            "type": "object",
            "properties": {
              "content": {
                "type": "string",
                "description": "Environment variables in dotenv format"
              },
              "overwrite": {
                "type": "boolean",
                "description": "Overwrite existing values",
                "default": false
              }
            },
            "required": [
              "content"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 6,
      "tool_names": [
        "set_env",
        "get_env",
        "list_env",
        "delete_env",
        "export_env",
        "import_env"
      ]
    },
    "server_info_crawled": {
      "id": 1011,
      "name": "Environment Settings Manager",
      "author": "@samihalawa/env-settings-mcp",
      "overview": "Manage environment variables and application settings securely through a hosted MCP server. Simplify configuration and secret management for your applications with centralized control. Enhance security and ease of use by leveraging Smithery.ai hosting.",
      "repository_url": "https://github.com/samihalawa/env-settings-mcp",
      "homepage": "https://smithery.ai/server/@samihalawa/env-settings-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "2",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@samihalawa_env-settings-mcp.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "set_env",
          "description": "Set environment variable or setting",
          "input_schema": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "Environment variable name"
              },
              "value": {
                "type": "string",
                "description": "Environment variable value"
              },
              "description": {
                "type": "string",
                "description": "Optional description for this setting"
              }
            },
            "required": [
              "key",
              "value"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_env",
          "description": "Get environment variable or setting value",
          "input_schema": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "Environment variable name"
              }
            },
            "required": [
              "key"
            ]
          },
          "annotations": null
        },
        {
          "name": "list_env",
          "description": "List all environment variables and settings",
          "input_schema": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Filter keys by pattern"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "delete_env",
          "description": "Delete environment variable or setting",
          "input_schema": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "Environment variable name to delete"
              }
            },
            "required": [
              "key"
            ]
          },
          "annotations": null
        },
        {
          "name": "export_env",
          "description": "Export environment variables in various formats",
          "input_schema": {
            "type": "object",
            "properties": {
              "format": {
                "type": "string",
                "enum": [
                  "dotenv",
                  "json",
                  "yaml",
                  "shell"
                ],
                "description": "Export format",
                "default": "dotenv"
              },
              "filter": {
                "type": "string",
                "description": "Filter keys by pattern"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "import_env",
          "description": "Import environment variables from text (dotenv format)",
          "input_schema": {
            "type": "object",
            "properties": {
              "content": {
                "type": "string",
                "description": "Environment variables in dotenv format"
              },
              "overwrite": {
                "type": "boolean",
                "description": "Overwrite existing values",
                "default": false
              }
            },
            "required": [
              "content"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"debug\": false,\n  \"storagePath\": \"\"\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@samihalawa/env-settings-mcp/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"debug\": false,\n  \"storagePath\": \"\"\n}",
      "python_sdk_url": "https://server.smithery.ai/@samihalawa/env-settings-mcp/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "1012.@samihalawa_env-settings-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 990
  }
}