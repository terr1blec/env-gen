{
  "labels": {
    "analysis": "The MCP Server, Traylinx Search Engine, is designed to provide intelligent search capabilities that extract text, HTML, and media from the web. It offers structured search results and rich content types, making it suitable for integrating search functionality into applications. The primary tool available is focused on deploying the search engine, suggesting its core functionality revolves around enabling web searches and content retrieval.",
    "reasoning": "The primary label is \"Web Search & Research\" because the server's core functionality is centered around web searching and information retrieval. There are no explicit secondary functionalities mentioned that would warrant additional labels. A custom label isn't needed as the predefined categories adequately cover the server's use case.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [],
    "custom_label": "None applicable",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1615,
    "server_name": "Traylinx Search Engine",
    "rank_by_usage": 1616,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@traylinx_traylinx-search-engine-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@traylinx/traylinx-search-engine-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1615,
      "name": "Traylinx Search Engine",
      "author": "@traylinx/traylinx-search-engine-mcp-server",
      "overview": "Leverage intelligent search capabilities to extract text, HTML, and media from the web. Enhance your applications with structured search results and rich content types. Easily integrate with your existing MCP clients for seamless functionality.",
      "repository_url": "https://github.com/traylinx/traylinx-search-engine-mcp-server",
      "homepage": "https://smithery.ai/server/@traylinx/traylinx-search-engine-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@traylinx_traylinx-search-engine-mcp-server.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "search",
          "description": "Deploy Server Traylinx Search Engine @traylinx/traylinx-search-engine-mcp-server Try in Playground",
          "parameters": [
            {
              "name": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "search_recency_filter",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@traylinx/traylinx-search-engine-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "agenticSearchApiKey",
          "required": true,
          "description": "Your API key for the Agentic Search API from Traylinx.com."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@traylinx/traylinx-search-engine-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1616.@traylinx_traylinx-search-engine-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1469
  }
}