{
  "labels": {
    "analysis": "The MCP Server specializes in interacting with SAP ABAP systems, providing tools to retrieve various types of ABAP source code, metadata, and object details. Its core functionality revolves around accessing and managing ABAP-related artifacts, which are central to SAP development environments. The tools allow users to fetch program structures, function modules, classes, types, and table contents, making it valuable for developers and system integrators working with SAP ecosystems.",
    "reasoning": "The primary label was chosen because the server's primary purpose is to interact with a specific type of enterprise software system (SAP ABAP) and retrieve code-related information, which aligns with development tools. Secondary labels were selected because the server deals with structured data about system architectures and objects, and the tools could be seen as part of a broader integration framework. Custom labels were not deemed necessary as the predefined categories sufficiently cover the server's functionality.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "API Integration",
      "Database Operations"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 228,
    "server_name": "ABAP Development Tools Server",
    "rank_by_usage": 229,
    "usage_count": "191",
    "original_file": "../crawler/smithery/@mario-andreschak_mcp-abap-adt.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@mario-andreschak/mcp-abap-adt/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 228,
      "name": "ABAP Development Tools Server",
      "author": "@mario-andreschak/mcp-abap-adt",
      "overview": "Interact with SAP ABAP systems seamlessly. Retrieve source code, table structures, and more through a standardized protocol.",
      "repository_url": "https://github.com/mario-andreschak/mcp-abap-adt",
      "homepage": "https://smithery.ai/server/@mario-andreschak/mcp-abap-adt",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "191",
      "success_rate": "99.63%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@mario-andreschak_mcp-abap-adt.json",
      "tools_count": 12,
      "tools": [
        {
          "name": "GetProgram",
          "description": "Deploy Server ABAP Development Tools Server @mario-andreschak/mcp-abap-adt Try in Playground",
          "parameters": [
            {
              "name": "GetProgram",
              "required": false,
              "type": "string"
            },
            {
              "name": "program_name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "GetClass",
          "description": "Retrieve ABAP class source code",
          "parameters": [
            {
              "name": "GetClass",
              "required": false,
              "type": "string"
            },
            {
              "name": "class_name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "GetFunctionGroup",
          "description": "Retrieve ABAP Function Group source code",
          "parameters": [
            {
              "name": "GetFunctionGroup",
              "required": false,
              "type": "string"
            },
            {
              "name": "function_group",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "GetFunction",
          "description": "Retrieve ABAP Function Module source code",
          "parameters": [
            {
              "name": "GetFunctionGroup",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "GetStructure",
          "description": "Retrieve ABAP Structure",
          "parameters": [
            {
              "name": "GetStructure",
              "required": false,
              "type": "string"
            },
            {
              "name": "Retrieve",
              "required": false,
              "type": "string"
            },
            {
              "name": "ABAP",
              "required": false,
              "type": "string"
            },
            {
              "name": "Structure",
              "required": false,
              "type": "string"
            },
            {
              "name": "structure_name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "GetTable",
          "description": "Retrieve ABAP table structure",
          "parameters": [
            {
              "name": "GetTable",
              "required": false,
              "type": "string"
            },
            {
              "name": "Retrieve",
              "required": false,
              "type": "string"
            },
            {
              "name": "ABAP",
              "required": false,
              "type": "string"
            },
            {
              "name": "table",
              "required": false,
              "type": "string"
            },
            {
              "name": "structure",
              "required": false,
              "type": "string"
            },
            {
              "name": "table_name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "GetTableContents",
          "description": "Retrieve contents of an ABAP table",
          "parameters": [
            {
              "name": "max_rows",
              "required": false,
              "type": "string"
            },
            {
              "name": "table_name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "GetPackage",
          "description": "Retrieve ABAP package details",
          "parameters": [
            {
              "name": "GetPackage",
              "required": false,
              "type": "string"
            },
            {
              "name": "Retrieve",
              "required": false,
              "type": "string"
            },
            {
              "name": "ABAP",
              "required": false,
              "type": "string"
            },
            {
              "name": "package",
              "required": false,
              "type": "string"
            },
            {
              "name": "details",
              "required": false,
              "type": "string"
            },
            {
              "name": "package_name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "GetTypeInfo",
          "description": "Retrieve ABAP type information",
          "parameters": [
            {
              "name": "GetTypeInfo",
              "required": false,
              "type": "string"
            },
            {
              "name": "Retrieve",
              "required": false,
              "type": "string"
            },
            {
              "name": "ABAP",
              "required": false,
              "type": "string"
            },
            {
              "name": "type",
              "required": false,
              "type": "string"
            },
            {
              "name": "information",
              "required": false,
              "type": "string"
            },
            {
              "name": "type_name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "GetInclude",
          "description": "Retrieve ABAP Include Source Code",
          "parameters": [
            {
              "name": "GetInclude",
              "required": false,
              "type": "string"
            },
            {
              "name": "include_name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "SearchObject",
          "description": "Search for ABAP objects using quick search",
          "parameters": [
            {
              "name": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "maxResults",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "GetInterface",
          "description": "Retrieve ABAP interface source code",
          "parameters": [
            {
              "name": "GetInterface",
              "required": false,
              "type": "string"
            },
            {
              "name": "interface_name",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@mario-andreschak/mcp-abap-adt/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@mario-andreschak/mcp-abap-adt/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0229.@mario-andreschak_mcp-abap-adt_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 225
  }
}