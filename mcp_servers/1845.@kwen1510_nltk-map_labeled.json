{
  "labels": {
    "analysis": "The NLTK Model Context Protocol Server enhances natural language processing (NLP) by integrating NLTK with external data and tools. Its core functionality revolves around text processing, specifically word filtering and analysis. The available tool, 'get_longest_word', demonstrates the server's capability to process text data based on constraints (filtering by letters, excluding used words, and identifying the longest word). This suggests the server is primarily focused on text manipulation, word games, or linguistics, with potential applications in puzzle-solving, lexicology, or NLP tasks that require contextual word analysis.",
    "reasoning": "The primary label 'Operating System' is chosen because the tool performs text processing operations similar to system-level utilities that manipulate data. The secondary label 'AI/ML Tools' fits due to the server's integration with NLTK, a popular NLP library used in machine learning. The custom label 'Text Processing & Linguistics' is added to highlight the server's specific focus on word analysis and filtering, which is not fully captured by predefined categories.",
    "primary_label": "Operating System",
    "secondary_labels": [
      "AI/ML Tools"
    ],
    "custom_label": "Text Processing & Linguistics",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1844,
    "server_name": "NLTK Model Context Protocol Server",
    "rank_by_usage": 1845,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@kwen1510_nltk-map.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@kwen1510/nltk-map/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_longest_word",
          "description": "Reads words from 'corpora.txt', filters them using the letters in `letters_array`, excludes those in `used_words`, and returns the longest valid word.",
          "input_schema": {
            "type": "object",
            "properties": {
              "used_words": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of words already used (these won't be returned)"
              },
              "letters_array": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of allowed letters (e.g. ['a', 'p', 'l', 'e'])"
              }
            },
            "required": [
              "used_words",
              "letters_array"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get_longest_word"
      ]
    },
    "server_info_crawled": {
      "id": 1844,
      "name": "NLTK Model Context Protocol Server",
      "author": "@kwen1510/nltk-map",
      "overview": "Integrate NLTK with external data and tools seamlessly. Enhance your natural language processing capabilities by leveraging real-world data and actions through a standardized interface.",
      "repository_url": "https://github.com/kwen1510/nltk-map",
      "homepage": "https://smithery.ai/server/@kwen1510/nltk-map",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@kwen1510_nltk-map.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_longest_word",
          "description": "Reads words from 'corpora.txt', filters them using the letters in `letters_array`, excludes those in `used_words`, and returns the longest valid word.",
          "input_schema": {
            "type": "object",
            "properties": {
              "used_words": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of words already used (these won't be returned)"
              },
              "letters_array": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of allowed letters (e.g. ['a', 'p', 'l', 'e'])"
              }
            },
            "required": [
              "used_words",
              "letters_array"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@kwen1510/nltk-map/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@kwen1510/nltk-map/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1845.@kwen1510_nltk-map_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1638
  }
}