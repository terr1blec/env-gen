{
  "labels": {
    "analysis": "The MCP Server \"Gatherings Expense Manager\" is designed to manage and track expenses for social events among friends or groups.\n    It allows users to create gatherings, add members, record expenses, calculate reimbursements, and settle financial balances.\n    The tools provided focus on simplifying expense sharing and reconciliation, making it easier to track who owes what after social events.",
    "reasoning": "The primary function of the server is to manage and reconcile group expenses, which aligns closely with financial tracking and personal organization.\n    The predefined \"Financial Services\" category is the most appropriate primary label as it deals with money management, albeit in a casual/social context.\n    A secondary label of \"Daily Productivity\" is relevant because the tools help users organize and settle social financial affairs efficiently.\n    No custom label is needed as the predefined categories sufficiently describe the functionality.",
    "primary_label": "Financial Services",
    "secondary_labels": [
      "Daily Productivity"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1412,
    "server_name": "Gatherings Expense Manager",
    "rank_by_usage": 1413,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@abutbul_gatherings-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@abutbul/gatherings-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1412,
      "name": "Gatherings Expense Manager",
      "author": "@abutbul/gatherings-mcp",
      "overview": "Manage social event expenses and payments effortlessly. Track gatherings, add expenses, calculate reimbursements, and settle balances among friends with ease. Simplify expense sharing and reconciliation for your social events.",
      "repository_url": "https://github.com/abutbul/gatherings-mcp",
      "homepage": "https://smithery.ai/server/@abutbul/gatherings-mcp",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@abutbul_gatherings-mcp.json",
      "tools_count": 11,
      "tools": [
        {
          "name": "create_gathering",
          "description": "Deploy Server Gatherings Expense Manager Claim Server @abutbul/gatherings-mcp Try in Playground create_gathering",
          "parameters": [
            {
              "name": "Create",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "new",
              "required": false,
              "type": "string"
            },
            {
              "name": "gathering",
              "required": false,
              "type": "string"
            },
            {
              "name": "members",
              "required": true,
              "type": "string"
            },
            {
              "name": "gathering_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_expense",
          "description": "Add an expense for a member",
          "parameters": [
            {
              "name": "amount",
              "required": true,
              "type": "string"
            },
            {
              "name": "member_name",
              "required": true,
              "type": "string"
            },
            {
              "name": "gathering_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "calculate_reimbursements",
          "description": "Calculate reimbursements for a gathering",
          "parameters": [
            {
              "name": "calculate_reimbursements",
              "required": false,
              "type": "string"
            },
            {
              "name": "gathering_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "record_payment",
          "description": "Record a payment made by a member",
          "parameters": [
            {
              "name": "amount",
              "required": true,
              "type": "string"
            },
            {
              "name": "member_name",
              "required": true,
              "type": "string"
            },
            {
              "name": "gathering_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "rename_member",
          "description": "Rename an unnamed member",
          "parameters": [
            {
              "name": "Rename",
              "required": false,
              "type": "string"
            },
            {
              "name": "an",
              "required": false,
              "type": "string"
            },
            {
              "name": "unnamed",
              "required": false,
              "type": "string"
            },
            {
              "name": "member",
              "required": false,
              "type": "string"
            },
            {
              "name": "new_name",
              "required": true,
              "type": "string"
            },
            {
              "name": "old_name",
              "required": true,
              "type": "string"
            },
            {
              "name": "gathering_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "show_gathering",
          "description": "Show details of a gathering",
          "parameters": [
            {
              "name": "show_gathering",
              "required": false,
              "type": "string"
            },
            {
              "name": "gathering_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_gatherings",
          "description": "Description not available",
          "parameters": [
            {
              "name": "list_gatherings",
              "required": false,
              "type": "string"
            },
            {
              "name": "List",
              "required": false,
              "type": "string"
            },
            {
              "name": "all",
              "required": false,
              "type": "string"
            },
            {
              "name": "gatherings",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "close_gathering",
          "description": "Description not available",
          "parameters": [
            {
              "name": "close_gathering",
              "required": false,
              "type": "string"
            },
            {
              "name": "Close",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "gathering",
              "required": false,
              "type": "string"
            },
            {
              "name": "gathering_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_gathering",
          "description": "Description not available",
          "parameters": [
            {
              "name": "force",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "gathering_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_member",
          "description": "Add a new member to a gathering",
          "parameters": [
            {
              "name": "member_name",
              "required": true,
              "type": "string"
            },
            {
              "name": "gathering_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "remove_member",
          "description": "Remove a member from a gathering",
          "parameters": [
            {
              "name": "member_name",
              "required": true,
              "type": "string"
            },
            {
              "name": "gathering_id",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@abutbul/gatherings-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@abutbul/gatherings-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1413.@abutbul_gatherings-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1319
  }
}