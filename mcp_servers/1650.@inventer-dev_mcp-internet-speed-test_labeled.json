{
  "labels": {
    "analysis": "The MCP Server primarily focuses on network performance measurement, offering tools to test download/upload speeds, latency, and jitter. It provides detailed analytics and JSON reports for internet connection quality assessment. Additionally, it supports server information retrieval and seamless integration with AI models for automated network diagnostics.",
    "reasoning": "The primary label is \"Network Diagnostic\" as it best represents the server's core functionality of testing and analyzing internet connection performance. Secondary labels include \"Data Analysis & Processing\" due to its capability to generate detailed reports and analytics, and \"API Integration\" since it supports integration with AI models and agents.",
    "primary_label": "Operating System",
    "secondary_labels": [
      "Data Analysis & Processing",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1649,
    "server_name": "Internet Speed Test",
    "rank_by_usage": 1650,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@inventer-dev_mcp-internet-speed-test.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@inventer-dev/mcp-internet-speed-test/mcp?config=eyJ1cGxvYWRfdXJsIjogImh0dHBzOi8vaHR0cGJpbi5vcmcvcG9zdCIsICJsYXRlbmN5X3VybCI6ICJodHRwczovL2h0dHBiaW4ub3JnL2dldCIsICJkb3dubG9hZF91cmwiOiAiaHR0cDovL2lwdjQuZG93bmxvYWQudGhpbmticm9hZGJhbmQuY29tLzEwTUIuemlwIn0=&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "measure_download_speed",
          "description": "\n    Measure download speed using incremental file sizes.\n\n    Args:\n        size_limit: Maximum file size to test (default: 100MB)\n\n    Returns:\n        Dictionary with download speed results\n    ",
          "input_schema": {
            "properties": {
              "size_limit": {
                "default": "100MB",
                "title": "Size Limit",
                "type": "string"
              }
            },
            "title": "measure_download_speedArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "measure_upload_speed",
          "description": "\n    Measure upload speed using incremental file sizes.\n\n    Args:\n        url_upload: URL to upload data to\n        size_limit: Maximum file size to test (default: 100MB)\n\n    Returns:\n        Dictionary with upload speed results\n    ",
          "input_schema": {
            "properties": {
              "url_upload": {
                "default": "https://httpi.dev/post",
                "title": "Url Upload",
                "type": "string"
              },
              "size_limit": {
                "default": "100MB",
                "title": "Size Limit",
                "type": "string"
              }
            },
            "title": "measure_upload_speedArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "measure_latency",
          "description": "Measure the latency",
          "input_schema": {
            "properties": {
              "url": {
                "default": "https://httpi.dev/get",
                "title": "Url",
                "type": "string"
              }
            },
            "title": "measure_latencyArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_server_info",
          "description": "\n    Get server information for any URL without performing speed tests.\n\n    Args:\n        url: URL to analyze\n\n    Returns:\n        Dictionary with server information including POP location, CDN info, etc.\n    ",
          "input_schema": {
            "properties": {
              "url": {
                "title": "Url",
                "type": "string"
              }
            },
            "required": [
              "url"
            ],
            "title": "get_server_infoArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "measure_jitter",
          "description": "Jitter is the variation in latency, so we need multiple measurements.",
          "input_schema": {
            "properties": {
              "url": {
                "default": "https://httpi.dev/get",
                "title": "Url",
                "type": "string"
              },
              "samples": {
                "default": 5,
                "title": "Samples",
                "type": "integer"
              }
            },
            "title": "measure_jitterArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_complete_test",
          "description": "\n    Run a complete speed test returning all metrics in a single call.\n\n    This test uses the smart incremental approach inspired by SpeedOf.Me:\n    - First measures download speed with gradually increasing file sizes\n    - Then measures upload speed with gradually increasing data sizes\n    - Measures latency and jitter\n    - Returns comprehensive results with real-time data\n\n    Args:\n        max_size: Maximum file size to test (default: 100MB)\n        url_upload: URL for upload testing\n        url_latency: URL for latency testing\n\n    Returns:\n        Complete test results including download, upload, latency and jitter metrics\n    ",
          "input_schema": {
            "properties": {
              "max_size": {
                "default": "100MB",
                "title": "Max Size",
                "type": "string"
              },
              "url_upload": {
                "default": "https://httpi.dev/post",
                "title": "Url Upload",
                "type": "string"
              },
              "url_latency": {
                "default": "https://httpi.dev/get",
                "title": "Url Latency",
                "type": "string"
              }
            },
            "title": "run_complete_testArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 6,
      "tool_names": [
        "measure_download_speed",
        "measure_upload_speed",
        "measure_latency",
        "get_server_info",
        "measure_jitter",
        "run_complete_test"
      ]
    },
    "server_info_crawled": {
      "id": 1649,
      "name": "Internet Speed Test",
      "author": "@inventer-dev/mcp-internet-speed-test",
      "overview": "Measure and analyze your network's performance with tools for download/upload speed, latency, and jitter testing. Generate detailed JSON reports to understand your internet connection quality. Integrate seamlessly with AI models and agents to automate network diagnostics.",
      "repository_url": "https://github.com/inventer-dev/mcp-internet-speed-test",
      "homepage": "https://smithery.ai/server/@inventer-dev/mcp-internet-speed-test",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@inventer-dev_mcp-internet-speed-test.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "measure_download_speed",
          "description": "\n    Measure download speed using incremental file sizes.\n\n    Args:\n        size_limit: Maximum file size to test (default: 100MB)\n\n    Returns:\n        Dictionary with download speed results\n    ",
          "input_schema": {
            "properties": {
              "size_limit": {
                "default": "100MB",
                "title": "Size Limit",
                "type": "string"
              }
            },
            "title": "measure_download_speedArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "measure_upload_speed",
          "description": "\n    Measure upload speed using incremental file sizes.\n\n    Args:\n        url_upload: URL to upload data to\n        size_limit: Maximum file size to test (default: 100MB)\n\n    Returns:\n        Dictionary with upload speed results\n    ",
          "input_schema": {
            "properties": {
              "url_upload": {
                "default": "https://httpi.dev/post",
                "title": "Url Upload",
                "type": "string"
              },
              "size_limit": {
                "default": "100MB",
                "title": "Size Limit",
                "type": "string"
              }
            },
            "title": "measure_upload_speedArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "measure_latency",
          "description": "Measure the latency",
          "input_schema": {
            "properties": {
              "url": {
                "default": "https://httpi.dev/get",
                "title": "Url",
                "type": "string"
              }
            },
            "title": "measure_latencyArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_server_info",
          "description": "\n    Get server information for any URL without performing speed tests.\n\n    Args:\n        url: URL to analyze\n\n    Returns:\n        Dictionary with server information including POP location, CDN info, etc.\n    ",
          "input_schema": {
            "properties": {
              "url": {
                "title": "Url",
                "type": "string"
              }
            },
            "required": [
              "url"
            ],
            "title": "get_server_infoArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "measure_jitter",
          "description": "Jitter is the variation in latency, so we need multiple measurements.",
          "input_schema": {
            "properties": {
              "url": {
                "default": "https://httpi.dev/get",
                "title": "Url",
                "type": "string"
              },
              "samples": {
                "default": 5,
                "title": "Samples",
                "type": "integer"
              }
            },
            "title": "measure_jitterArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_complete_test",
          "description": "\n    Run a complete speed test returning all metrics in a single call.\n\n    This test uses the smart incremental approach inspired by SpeedOf.Me:\n    - First measures download speed with gradually increasing file sizes\n    - Then measures upload speed with gradually increasing data sizes\n    - Measures latency and jitter\n    - Returns comprehensive results with real-time data\n\n    Args:\n        max_size: Maximum file size to test (default: 100MB)\n        url_upload: URL for upload testing\n        url_latency: URL for latency testing\n\n    Returns:\n        Complete test results including download, upload, latency and jitter metrics\n    ",
          "input_schema": {
            "properties": {
              "max_size": {
                "default": "100MB",
                "title": "Max Size",
                "type": "string"
              },
              "url_upload": {
                "default": "https://httpi.dev/post",
                "title": "Url Upload",
                "type": "string"
              },
              "url_latency": {
                "default": "https://httpi.dev/get",
                "title": "Url Latency",
                "type": "string"
              }
            },
            "title": "run_complete_testArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"upload_url\": \"https://httpbin.org/post\",\n  \"latency_url\": \"https://httpbin.org/get\",\n  \"download_url\": \"http://ipv4.download.thinkbroadband.com/10MB.zip\"\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@inventer-dev/mcp-internet-speed-test/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"upload_url\": \"https://httpbin.org/post\",\n  \"latency_url\": \"https://httpbin.org/get\",\n  \"download_url\": \"http://ipv4.download.thinkbroadband.com/10MB.zip\"\n}",
      "python_sdk_url": "https://server.smithery.ai/@inventer-dev/mcp-internet-speed-test/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "1650.@inventer-dev_mcp-internet-speed-test_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1495
  }
}