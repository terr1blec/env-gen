{
  "labels": {
    "analysis": "The MCP Server is primarily designed as a web search tool that enables AI assistants to access real-time web information through a modular architecture. It provides context-aware searches and structured JSON results for various data types like weather, news, sports, and financial data. The server is intended to enhance AI platforms by integrating live web data, making it a crucial component for AI systems that require up-to-date information.",
    "reasoning": "The primary label \"Web Search & Research\" was chosen because the server's core functionality revolves around performing web searches and delivering structured data for AI assistants. The secondary labels \"News & Media\" and \"Financial Services\" were selected because the server specifically mentions handling weather, news, sports, and financial data, which aligns with these categories. No custom label is needed as the predefined categories cover the server's functionality well.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "News & Media",
      "Financial Services"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 928,
    "server_name": "Web Search Tool",
    "rank_by_usage": 929,
    "usage_count": "3",
    "original_file": "../crawler/smithery/@gabrimatic_mcp-web-search-tool.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@gabrimatic/mcp-web-search-tool/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 928,
      "name": "Web Search Tool",
      "author": "@gabrimatic/mcp-web-search-tool",
      "overview": "Enable AI assistants to access real-time web information through a modular and pluggable search provider architecture. Perform smart, context-aware web searches and receive structured JSON results for up-to-date answers on weather, news, sports, and financial data. Seamlessly integrate with AI platforms to enhance their knowledge with live web data.",
      "repository_url": "https://github.com/gabrimatic/mcp-web-search-tool",
      "homepage": "https://smithery.ai/server/@gabrimatic/mcp-web-search-tool",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "3",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@gabrimatic_mcp-web-search-tool.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "web_search",
          "description": "Deploy Server Web Search Tool Claim Server @gabrimatic/mcp-web-search-tool Try in Playground",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@gabrimatic/mcp-web-search-tool/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "braveApiKey",
          "required": true,
          "description": "Brave Search API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@gabrimatic/mcp-web-search-tool/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0929.@gabrimatic_mcp-web-search-tool_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 908
  }
}