{
  "labels": {
    "analysis": "The MCP Server is designed to facilitate access to academic paper metadata through Crossref's database. Its tools enable searching scholarly works, retrieving detailed metadata, and querying journals and funding organizations. The primary purpose is to support academic research by providing programmatic access to Crossref's extensive scholarly information.",
    "reasoning": "The server's core functionality revolves around academic research and metadata retrieval, making \"Web Search & Research\" the most appropriate primary label. Secondary labels \"Database Operations\" and \"API Integration\" are included because the server interacts with Crossref's database and provides programmatic access via its tools. No custom label is needed as the predefined labels adequately cover the server's functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Database Operations",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1200,
    "server_name": "Crossref MCP Server",
    "rank_by_usage": 1201,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@JackKuo666_crossref-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@JackKuo666/crossref-mcp-server/mcp?config=eyJwb3J0IjogODAwMH0=&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "search_works_by_query",
          "description": "",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "limit": {
                "default": 20,
                "title": "Limit",
                "type": "integer"
              },
              "mailto": {
                "default": null,
                "title": "Mailto",
                "type": "string"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_works_by_queryArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_work_metadata",
          "description": "",
          "input_schema": {
            "properties": {
              "doi": {
                "title": "Doi",
                "type": "string"
              },
              "mailto": {
                "default": null,
                "title": "Mailto",
                "type": "string"
              }
            },
            "required": [
              "doi"
            ],
            "title": "get_work_metadataArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_journals",
          "description": "",
          "input_schema": {
            "properties": {
              "query": {
                "default": null,
                "title": "Query",
                "type": "string"
              },
              "limit": {
                "default": 20,
                "title": "Limit",
                "type": "integer"
              },
              "mailto": {
                "default": null,
                "title": "Mailto",
                "type": "string"
              }
            },
            "title": "search_journalsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_funders",
          "description": "",
          "input_schema": {
            "properties": {
              "query": {
                "default": null,
                "title": "Query",
                "type": "string"
              },
              "limit": {
                "default": 20,
                "title": "Limit",
                "type": "integer"
              },
              "mailto": {
                "default": null,
                "title": "Mailto",
                "type": "string"
              }
            },
            "title": "search_fundersArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 4,
      "tool_names": [
        "search_works_by_query",
        "get_work_metadata",
        "search_journals",
        "search_funders"
      ]
    },
    "server_info_crawled": {
      "id": 1200,
      "name": "Crossref MCP Server",
      "author": "@JackKuo666/crossref-mcp-server",
      "overview": "Enable AI assistants to search and access academic paper metadata through Crossref using a simple interface. Retrieve detailed information about scholarly works, journals, and funding organizations programmatically. Enhance your AI's capabilities in academic research with seamless access to Crossref's extensive database.",
      "repository_url": "https://github.com/JackKuo666/Crossref-MCP-Server",
      "homepage": "https://smithery.ai/server/@JackKuo666/crossref-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@JackKuo666_crossref-mcp-server.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "search_works_by_query",
          "description": "",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "limit": {
                "default": 20,
                "title": "Limit",
                "type": "integer"
              },
              "mailto": {
                "default": null,
                "title": "Mailto",
                "type": "string"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_works_by_queryArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_work_metadata",
          "description": "",
          "input_schema": {
            "properties": {
              "doi": {
                "title": "Doi",
                "type": "string"
              },
              "mailto": {
                "default": null,
                "title": "Mailto",
                "type": "string"
              }
            },
            "required": [
              "doi"
            ],
            "title": "get_work_metadataArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_journals",
          "description": "",
          "input_schema": {
            "properties": {
              "query": {
                "default": null,
                "title": "Query",
                "type": "string"
              },
              "limit": {
                "default": 20,
                "title": "Limit",
                "type": "integer"
              },
              "mailto": {
                "default": null,
                "title": "Mailto",
                "type": "string"
              }
            },
            "title": "search_journalsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "search_funders",
          "description": "",
          "input_schema": {
            "properties": {
              "query": {
                "default": null,
                "title": "Query",
                "type": "string"
              },
              "limit": {
                "default": 20,
                "title": "Limit",
                "type": "integer"
              },
              "mailto": {
                "default": null,
                "title": "Mailto",
                "type": "string"
              }
            },
            "title": "search_fundersArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"port\": 8000\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@JackKuo666/crossref-mcp-server/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"port\": 8000\n}",
      "python_sdk_url": "https://server.smithery.ai/@JackKuo666/crossref-mcp-server/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "1201.@JackKuo666_crossref-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1159
  }
}