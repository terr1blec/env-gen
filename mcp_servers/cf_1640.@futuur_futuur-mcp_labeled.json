{
  "labels": {
    "analysis": "The MCP Server described is primarily focused on enabling betting operations, market data retrieval, and user profile management for a betting platform. The available tools allow users to interact with prediction markets, manage bets, convert currencies, and access market information in real-time. The core functionality revolves around integrating real-time market data, facilitating betting operations, and managing user profiles—clearly indicating its primary use case in the realm of betting and financial market data.",
    "reasoning": "The primary label \"Cryptocurrency & Blockchain\" is chosen because the server environments betting markets and currency conversion tools closely align with blockchain-related financial operations, even if not exclusively crypto-focused. Secondary labels \"Financial Services\" and \"Daily Productivity\" are included due to the financial calculation and user profile management aspects. A custom label \"Betting & Trading\" is added to specifically describe the server's unique betting and market data management functionality.",
    "primary_label": "Cryptocurrency & Blockchain",
    "secondary_labels": [
      "Financial Services",
      "Daily Productivity"
    ],
    "custom_label": "Betting & Trading",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1639,
    "server_name": "Futuur API Integration",
    "rank_by_usage": 1640,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@futuur_futuur-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@futuur/futuur-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1639,
      "name": "Futuur API Integration",
      "author": "@futuur/futuur-mcp",
      "overview": "Integrate real-time market data and manage user profiles seamlessly. Enhance your applications with powerful betting operations and comprehensive market tools.",
      "repository_url": "https://github.com/futuur/Futuur-MCP",
      "homepage": "https://smithery.ai/server/@futuur/futuur-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@futuur_futuur-mcp.json",
      "tools_count": 13,
      "tools": [
        {
          "name": "get_categories",
          "description": "Deploy Server Futuur API Integration @futuur/futuur-mcp Try in Playground get_categories",
          "parameters": [
            {
              "name": "Common",
              "required": false,
              "type": "string"
            },
            {
              "name": "use",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_category_details",
          "description": "Retrieve details and subcategories for a specific category by its ID Common use cases: - When the user wants to see details or subcategories for a specific category. - When building a category navigation or hierarchy. - When the user asks \"What's inside category X?\" or \"Show me subcategories of Y.\" Warning: You must provide a valid category ID; otherwise, the tool will fail. Warning: This tool does not list all categories—use list_categories for that. Warning: If the category ID does not exist, the tool will return an error.",
          "parameters": [
            {
              "name": "Common",
              "required": false,
              "type": "string"
            },
            {
              "name": "use",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "convert_from_usd",
          "description": "Simulate and calculate the amount you would receive when converting a specified USD amount to a target currency, using current exchange rates, without executing the conversion. Common use cases: - When the user wants to know how much a USD amount is in another currency. - When displaying currency conversions for bets or balances. - When the user asks \"How much is $5 in BTC?\" Warning: This tool only simulates the conversion; it does not actually transfer or exchange funds. Warning: Both the USD amount and the target currency must be specified. Warning: Exchange rates may fluctuate; always check for the latest rates.",
          "parameters": [
            {
              "name": "Common",
              "required": false,
              "type": "string"
            },
            {
              "name": "use",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "convert_to_usd",
          "description": "Simulate and calculate the amount you would receive when converting a specified amount from a given currency to USD, using current exchange rates, without executing the conversion. Common use cases: - When the user wants to know how much a given currency amount is in USD. - When displaying USD equivalents for bets or balances. - When the user asks \"How much is 0.01 BTC in USD?\" Warning: This tool only simulates the conversion; it does not actually transfer or exchange funds. Warning: Both the amount and the source currency must be specified. Warning: Exchange rates may fluctuate; always check for the latest rates.",
          "parameters": [
            {
              "name": "Common",
              "required": false,
              "type": "string"
            },
            {
              "name": "use",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_market_details",
          "description": "Retrieve detailed information about a specific market by its ID. Common use cases: - When the user wants detailed information about a specific market. - When displaying a market's details in a UI. - When the user asks \"Show me the details for market X.\" Warning: You must provide a valid market ID; otherwise, the tool will fail. Warning: This tool does not list all markets—use list_markets for that. Warning: If the market ID does not exist, the tool will return an error.",
          "parameters": [
            {
              "name": "Common",
              "required": false,
              "type": "string"
            },
            {
              "name": "use",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_markets",
          "description": "Retrieve and list markets from Futuur, with optional filters such as category, status, and search query, to help you find relevant prediction markets. By default, it will show play money and real money odds (outcomes prices). The tool will return a list of markets with the following markdown format: ## 1. {Market Title} **Chances:** - Real Money: {percentage}% (${price}) - Play Money: {percentage}% (ø{price}) **Trading Volume:** - Real Money: ${amount} - Play Money: ø{amount} **Betting ends:** {formatted date} ## 2. {Next Market Title} Common use cases: - When the user wants to browse or search for markets. - When filtering markets by category, status, or search query. - When building a market listing or search feature. - When the user asks \"What markets are available?\" or \"Show me open markets in category X or get me the top 10 markets by volume or fetch me the top 5 markets in crypto\" Warning: If no filters are provided, the result may be very large. Warning: This tool does not provide detailed information for a single market—use get_market_by_id for that. Warning: Using too many filters may result in no markets being returned.",
          "parameters": []
        },
        {
          "name": "get_user_profile",
          "description": "Retrieve the profile information of the user. Common use cases: - When the user wants to see their profile or account information. - When displaying user details in a dashboard or settings page. - When the user asks \"What's my profile info?\" or \"Show my account details.\" Warning: This tool only retrieves the profile of the currently authenticated user. Warning: It cannot be used to update or change profile information. Warning: If the user is not authenticated, the tool will return an error.",
          "parameters": [
            {
              "name": "Common",
              "required": false,
              "type": "string"
            },
            {
              "name": "use",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_partial_sell_amount",
          "description": "Simulate and calculate the amount you would receive for partially selling a specified number of shares in a bet, without executing the sale. Common use cases: - When the user wants to know how much they would receive for selling part of their bet. - When planning a partial sale before actually executing it. - When the user asks \"If I sell 10 shares of my bet, how much will I get?\" Warning: This tool only simulates the amount you would receive; it does not execute the sale. Warning: Both the bet ID and the number of shares to sell must be specified. Warning: Use the actual sell tool to execute a sale after reviewing the simulation.",
          "parameters": [
            {
              "name": "Common",
              "required": false,
              "type": "string"
            },
            {
              "name": "use",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "place_bet",
          "description": "Place a bet on a market using a previously confirmed simulation payload. This tool calls POST /api/v1/bets/ to execute the bet. It should ONLY be used after the user has reviewed a simulation from 'get_bet_simulation' and confirmed they want to proceed. The primary input for this tool must be the direct JSON object output from the 'get_bet_simulation' tool.",
          "parameters": [
            {
              "name": "bet_location",
              "required": false,
              "type": "string"
            },
            {
              "name": "confirmed_simulation_payload",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_exchange_rates",
          "description": "Retrieve the latest exchange rates for supported currencies. Common use cases: - When the user wants to see current exchange rates for supported currencies. - When displaying conversion rates in a UI. - When the user asks \"What are the current exchange rates?\" Warning: This tool only provides current exchange rates; it does not perform any currency conversion. Warning: Rates are subject to change and may not reflect real-time market conditions. Warning: Historical rates are not available through this tool.",
          "parameters": [
            {
              "name": "Common",
              "required": false,
              "type": "string"
            },
            {
              "name": "use",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "sell_bet",
          "description": "Sell all or part of a bet by specifying the bet ID and optional shares or amount. Common use cases: - When the user wants to sell all or part of a bet after reviewing a simulation. - When executing a sale after previewing the amount to be received. - When the user says \"Yes, sell my shares\" after seeing a simulation. Warning: This tool executes a real sale of your bet; ensure you have simulated and confirmed before using. Warning: Once executed, sales cannot be undone or reversed. Warning: Incomplete or invalid parameters (e.g., missing bet ID) will cause the tool to fail.",
          "parameters": [
            {
              "name": "Common",
              "required": false,
              "type": "string"
            },
            {
              "name": "use",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_bet_simulation",
          "description": "Place a bet on a market using a previously confirmed simulation payload. This tool calls POST /api/v1/bets/ to execute the bet. It should ONLY be used after the user has reviewed a simulation from 'get_bet_simulation' and confirmed they want to proceed. The primary input for this tool must be the direct JSON object output from the 'get_bet_simulation' tool.",
          "parameters": []
        },
        {
          "name": "get_user_bets",
          "description": "Retrieve a list of bets placed by a user, with optional filters for status, currency, and market. Common use cases: - When the user wants to see their betting history or active bets. - When displaying a list of bets in a dashboard or profile. - When the user asks \"Show me my bets\" or \"What bets have I placed?\" Warning: This tool may return a large result set if no filters are applied. Warning: It does not provide detailed information for a single bet—use a bet detail tool for that. Warning: If required parameters are missing, the tool may fail or return incomplete results.",
          "parameters": [
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "past_bets",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "currency_mode",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@futuur/futuur-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "futuurPublicKey",
          "required": true,
          "description": "Your Futuur API public key."
        },
        {
          "name": "futuurPrivateKey",
          "required": true,
          "description": "Your Futuur API private key."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@futuur/futuur-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1640.@futuur_futuur-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1487
  }
}