{
  "labels": {
    "analysis": "The MCP Server focuses on generating high-quality images using Google's Imagen 3.0 model through the Gemini API. It includes features for automatic file management, intelligent naming of images, and creation of HTML previews for local viewing. The server is designed to enhance AI agent capabilities, particularly when integrated with Claude Desktop and other MCP-compatible hosts. It solves problems related to AI-powered image generation, file management, and visualization of generated images.",
    "reasoning": "The primary label \"AI/ML Tools\" was chosen because the server's core functionality revolves around using a machine learning model (Imagen 3.0) for image generation. The secondary label \"Content Creation\" is appropriate since the server enables the creation of visual content. The secondary label \"File Management\" was selected due to the automatic management and naming of generated image files.",
    "primary_label": "AI/ML Tools",
    "secondary_labels": [
      "Content Creation",
      "File Management"
    ],
    "custom_label": "Image Generation Automation",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 226,
    "server_name": "Gemini Imagen 3.0 Image Generation Server",
    "rank_by_usage": 227,
    "usage_count": "193",
    "original_file": "../crawler/smithery/@falahgs_imagen-3-0-generate-google-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@falahgs/imagen-3-0-generate-google-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 226,
      "name": "Gemini Imagen 3.0 Image Generation Server",
      "author": "@falahgs/imagen-3-0-generate-google-mcp-server",
      "overview": "Generate high-quality images using Google's Imagen 3.0 model via the Gemini API. Automatically manage image files with intelligent naming and create HTML previews for easy local viewing. Seamlessly integrate with Claude Desktop and other MCP-compatible hosts to enhance AI agent capabilities.",
      "repository_url": "https://github.com/falahgs/imagen-3.0-generate-google-mcp-server",
      "homepage": "https://smithery.ai/server/@falahgs/imagen-3-0-generate-google-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "193",
      "success_rate": "99.79%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@falahgs_imagen-3-0-generate-google-mcp-server.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "generate_images",
          "description": "Deploy Server Gemini Imagen 3.0 Image Generation Server @falahgs/imagen-3-0-generate-google-mcp-server Try in Playground generate_images",
          "parameters": [
            {
              "name": "prompt",
              "required": true,
              "type": "string"
            },
            {
              "name": "category",
              "required": false,
              "type": "string"
            },
            {
              "name": "numberOfImages",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_image_html",
          "description": "Create HTML img tags from image file paths with gallery view",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@falahgs/imagen-3-0-generate-google-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "geminiApiKey",
          "required": true,
          "description": "Your Google Gemini API key required to authenticate with the Gemini API."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@falahgs/imagen-3-0-generate-google-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0227.@falahgs_imagen-3-0-generate-google-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 223
  }
}