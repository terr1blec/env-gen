{
  "labels": {
    "analysis": "The MCP Server \"PayPal Agent Toolkit\" primarily functions as an integration layer between agents and PayPal's API services. It provides a comprehensive set of tools for managing various PayPal operations such as invoices, payments, subscriptions, products, shipments, orders, and disputes. The server enables developers and agents to automate and streamline PayPal-related workflows without directly interfacing with PayPal's API, offering functionality for creating, managing, and retrieving PayPal records.\n    The core problems it solves include simplifying PayPal integration, automating common PayPal operations, and providing a unified interface for managing different PayPal services. Its toolset is particularly focused on e-commerce and financial transaction management.",
    "reasoning": "The primary label \"Financial Services\" was chosen because the server's tools are deeply integrated with PayPal's financial services, enabling users to manage payments, invoices, subscriptions, and transactions. \"E-commerce\" is a natural secondary label due to the server's focus on order management, product catalogs, and tracking. While \"Automation\" could be considered, it's partially covered by the predefined labels.\n    A custom label of \"Financial Transaction Management\" was added to better represent the server's specific focus on PayPal's financial operations beyond just general financial services.",
    "primary_label": "Financial Services",
    "secondary_labels": [
      "E-commerce"
    ],
    "custom_label": "Financial Transaction Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2014,
    "server_name": "PayPal Agent Toolkit",
    "rank_by_usage": 2015,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@zhanghaonan777_agent-toolkit.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@zhanghaonan777/agent-toolkit/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2014,
      "name": "PayPal Agent Toolkit",
      "author": "@zhanghaonan777/agent-toolkit",
      "overview": "Enable seamless integration with PayPal APIs through function calling in popular agent frameworks and MCP hosts. Access a comprehensive set of tools for managing invoices, payments, disputes, shipments, products, subscriptions, and transactions. Simplify PayPal operations by connecting your agents to PayPal services securely and efficiently.",
      "repository_url": "https://github.com/zhanghaonan777/agent-toolkit",
      "homepage": "https://smithery.ai/server/@zhanghaonan777/agent-toolkit",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@zhanghaonan777_agent-toolkit.json",
      "tools_count": 26,
      "tools": [
        {
          "name": "create_invoice",
          "description": "Deploy Server PayPal Agent Toolkit @zhanghaonan777/agent-toolkit Try in Playground create_invoice",
          "parameters": [
            {
              "name": "Create",
              "required": false,
              "type": "string"
            },
            {
              "name": "Invoices",
              "required": false,
              "type": "string"
            },
            {
              "name": "on",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_invoices",
          "description": "List invoices from PayPal. This function retrieves a list of invoices with optional pagination parameters.",
          "parameters": [
            {
              "name": "List",
              "required": false,
              "type": "string"
            },
            {
              "name": "invoices",
              "required": false,
              "type": "string"
            },
            {
              "name": "from",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_invoice",
          "description": "Get an invoice from PayPal. This function retrieves details of a specific invoice using its ID.",
          "parameters": []
        },
        {
          "name": "send_invoice",
          "description": "Send an invoice to the recipient(s). This function sends a previously created invoice to its intended recipients.",
          "parameters": []
        },
        {
          "name": "send_invoice_reminder",
          "description": "Send a reminder for an invoice. This function sends a reminder for an invoice that has already been sent but hasn't been paid yet.",
          "parameters": []
        },
        {
          "name": "cancel_sent_invoice",
          "description": "Cancel a sent invoice. This function cancels an invoice that has already been sent to the recipient(s).",
          "parameters": [
            {
              "name": "send_to_recipient",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "additional_recipients",
              "required": false,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "generate_invoice_qr_code",
          "description": "Generate a QR code for an invoice. This function generates a QR code for an invoice, which can be used to pay the invoice using a mobile device or scanning app.",
          "parameters": []
        },
        {
          "name": "create_product",
          "description": "Create a product in PayPal using product catalog - create products API. This function creates a new product that will be used in subscription plans, subscriptions. Required parameters are: name (product name), type (product type). High level: - id: (auto-generated or specify SKU of the product) The ID of the product - name: {product_name} (required) - description: {product_description} (optional) - type {DIGITAL | PHYSICAL | SERVICE} (required) - category: {product_category} (optional) - image_url: {image_url} (optional) - home_url: {home_url} (optional) Below is the payload request structure: \"id\": \"#PROD-XYAB12ABSB7868434\", \"name\": \"Video Streaming Service\", \"description\": \"Service for streaming latest series, movies etc.\", \"type\": \"SERVICE\", \"category\": \"SOFTWARE\", \"image_url\": \"https://example.com/streaming.jpg\", \"home_url\": \"https://example.com/home\"",
          "parameters": []
        },
        {
          "name": "list_products",
          "description": "List products from PayPal. This function retrieves a list of products with optional pagination parameters.",
          "parameters": [
            {
              "name": "List",
              "required": false,
              "type": "string"
            },
            {
              "name": "products",
              "required": false,
              "type": "string"
            },
            {
              "name": "from",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_product",
          "description": "Update a product in PayPal. This function updates an existing product using JSON Patch operations.",
          "parameters": []
        },
        {
          "name": "show_product_details",
          "description": "List products from PayPal. This function retrieves a list of products with optional pagination parameters.",
          "parameters": [
            {
              "name": "List",
              "required": false,
              "type": "string"
            },
            {
              "name": "products",
              "required": false,
              "type": "string"
            },
            {
              "name": "from",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_subscription_plan",
          "description": "Create a subsctiption plan in PayPal using subscription - create plan API. This function creates a new subscription plan that defines pricing and billing cycle details for subscriptions. Required parameters are: product_id (the ID of the product for which to create the plan), name (subscription plan name), billing_cycles (billing cycle details). High level: product_id, name, description, taxes, status: {CREATED|INACTIVE|ACTIVE}, billing_cycles, payment_preferences are required in json object. While creating billing_cycles object, trial(second) billing cycle should precede regular billing cycle.",
          "parameters": []
        },
        {
          "name": "list_subscription_plans",
          "description": "List subscription plans from PayPal. This function retrieves a list of subscription plans with optional product filtering and pagination parameters.",
          "parameters": []
        },
        {
          "name": "show_subscription_plan_details",
          "description": "Show subscription plan details from PayPal. This function retrieves the details of a specific subscription plan using its ID. Required parameters are: plan_id (the ID of the subscription plan).",
          "parameters": []
        },
        {
          "name": "create_subscription",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "show_subscription_details",
          "description": "Show subscription details from PayPal. This function retrieves the details of a specific subscription using its ID. Required parameters are: subscription_id (the ID of the subscription).",
          "parameters": []
        },
        {
          "name": "cancel_subscription",
          "description": "Cancel a customer subscription in PayPal. This function cancels an active subscription for a customer. It requires the subscription ID and an optional reason for cancellation. Required parameters are: subscription_id (the ID of the subscription to be canceled). Below is the payload request structure: \"reason\": \"Customer requested cancellation\" You MUST ask the user for: - subscription_id - reason for cancellation. Return all of the above as structured JSON in your response.",
          "parameters": []
        },
        {
          "name": "create_shipment_tracking",
          "description": "Create a shipment for a transaction in PayPal. This function creates a shipment record for a specific transaction, allowing you to track the shipment status and details. The transaction_id can fetch from the captured payment details in the order information. Required parameters are: tracking_number (the tracking number for the shipment), transaction_id (the transaction ID associated with the shipment). High level: tracking_number, transaction_id, status (optional), carrier (optional) are required json objects. Below is the payload request structure: \"tracking_number\": \"1234567890\", \"transaction_id\": \"9XJ12345ABC67890\", \"status\": \"SHIPPED\", // Required: ON_HOLD, SHIPPED, DELIVERED, CANCELLED \"carrier\": \"UPS\" // Required: The carrier handling the shipment. Link to supported carriers: http://developer.paypal.com/docs/tracking/reference/carriers/",
          "parameters": []
        },
        {
          "name": "get_shipment_tracking",
          "description": "Get tracking information for a shipment by ID. This function retrieves tracking information for a specific shipment using the transaction ID and tracking number. The transaction_id can fetch from the captured payment details in the order information. Below is the payload request structure:",
          "parameters": []
        },
        {
          "name": "create_order",
          "description": "Create an order in PayPal. This tool is used to create a new order in PayPal. This is typically the first step in initiating a payment flow. It sets up an order with specified details such as item(s) to be purchased, quantity, amount, currency, and other details.",
          "parameters": []
        },
        {
          "name": "get_order",
          "description": "Retrieves the order details from PayPal for a given order ID. This tool is used to retrieve details of an existing order in PayPal. It provides information about the order, including items, amounts, status, and other relevant details.",
          "parameters": []
        },
        {
          "name": "pay_order",
          "description": "Capture a payment for an order. This tool is used to capture a payment for an order. It allows you to capture funds that have been authorized for a specific order but not yet captured.",
          "parameters": []
        },
        {
          "name": "list_disputes",
          "description": "List disputes from PayPal. This function retrieves a list of disputes with optional pagination and filtering parameters.",
          "parameters": [
            {
              "name": "List",
              "required": false,
              "type": "string"
            },
            {
              "name": "disputes",
              "required": false,
              "type": "string"
            },
            {
              "name": "from",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_dispute",
          "description": "Get details for a specific dispute from PayPal. This tool is used to lists disputes with a summary set of details, which shows the dispute_id, reason, status, dispute_state, dispute_life_cycle_stage, dispute_channel, dispute_amount, create_time and update_time fields.",
          "parameters": []
        },
        {
          "name": "accept_dispute_claim",
          "description": "Accept liability for a dispute claim. This tool is used to accept liability for a dispute claim. When you accept liability for a dispute claim, the dispute closes in the customer's favor and PayPal automatically refunds money to the customer from the merchant's account.",
          "parameters": []
        },
        {
          "name": "list_transactions",
          "description": "List transactions from PayPal. This tool is used to list transactions with optional filtering parameters within a date range of 31 days. This tool can also be used to list details of a transaction given the transaction ID. - The start_date and end_date should be specified in ISO8601 date and time format. Example dates: 1996-12-19T16:39:57-08:00, 1985-04-12T23:20:50.52Z, 1990-12-31T23:59:60Z - The transaction_status accepts the following 4 values: 1. \"D\" - represents denied transactions. 2. \"P\" - represents pending transactions. 3. \"S\" - represents successful transactions. 4. \"V\" - represents transactions that were reversed. - The transaction_id is the unique identifier for the transaction.",
          "parameters": [
            {
              "name": "List",
              "required": false,
              "type": "string"
            },
            {
              "name": "transactions",
              "required": false,
              "type": "string"
            },
            {
              "name": "from",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@zhanghaonan777/agent-toolkit/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "paypalAccessToken",
          "required": true,
          "description": "PayPal Access Token for authenticating API calls"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@zhanghaonan777/agent-toolkit/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2015.@zhanghaonan777_agent-toolkit_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1758
  }
}