{
  "labels": {
    "analysis": "The MCP Server \"Flomo Note Writer\" is designed to facilitate note-taking by allowing users to write and send text notes directly to Flomo, an existing note-taking service. Its core functionality revolves around integrating note creation into workflows, streamlining the process of capturing information and enhancing productivity. The available tool \"write_note\" indicates a straightforward purpose: to automate and simplify the note-writing process.",
    "reasoning": "The primary label \"Daily Productivity\" was chosen because the server's main functionality is to assist users in organizing and managing their notes, which falls under task management and personal organization. No secondary labels are needed as the primary label sufficiently covers the server's use case. There is no unique functionality requiring a custom label, as the server's purpose aligns well with existing predefined categories.",
    "primary_label": "Daily Productivity",
    "secondary_labels": [],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 974,
    "server_name": "Flomo Note Writer",
    "rank_by_usage": 975,
    "usage_count": "3",
    "original_file": "../crawler/smithery/@chatmcp_flomo-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@chatmcp/flomo-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 974,
      "name": "Flomo Note Writer",
      "author": "@chatmcp/flomo-mcp",
      "overview": "Write text notes directly to Flomo from your applications. Seamlessly integrate note-taking into your workflows with a simple and efficient tool. Enhance productivity by automating your Flomo note creation.",
      "repository_url": "https://github.com/chatmcp/mcp-server-flomo",
      "homepage": "https://smithery.ai/server/@chatmcp/flomo-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "3",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@chatmcp_flomo-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "write_note",
          "description": "Deploy Server Flomo Note Writer @chatmcp/flomo-mcp Try in Playground",
          "parameters": [
            {
              "name": "write_note",
              "required": false,
              "type": "string"
            },
            {
              "name": "Write",
              "required": false,
              "type": "string"
            },
            {
              "name": "to",
              "required": false,
              "type": "string"
            },
            {
              "name": "flomo",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@chatmcp/flomo-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@chatmcp/flomo-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0975.@chatmcp_flomo-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 953
  }
}