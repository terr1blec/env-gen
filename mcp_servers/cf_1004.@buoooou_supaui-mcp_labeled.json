{
  "labels": {
    "analysis": "The MCP Server focuses on generating UI components to enhance development efficiency. It integrates with AI assistants (Claude and Windsurf) to facilitate custom component queries and generation. The available tools enable users to fetch UI components, list available components, and create/edit images, which are key in creating and integrating visual elements into development projects.",
    "reasoning": "The primary functionality is centered around UI component generation and management, which falls under development tools, particularly for front-end or UI development. Image creation and integration also suggest relevance to content creation, as images are a key part of media generation and web development.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Content Creation",
      "AI/ML Tools"
    ],
    "custom_label": "UI Component Automation",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1003,
    "server_name": "SupaUI MCP",
    "rank_by_usage": 1004,
    "usage_count": "2",
    "original_file": "../crawler/smithery/@buoooou_supaui-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@buoooou/supaui-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1003,
      "name": "SupaUI MCP",
      "author": "@buoooou/supaui-mcp",
      "overview": "Automatically generate a variety of UI components to improve development efficiency. Seamlessly integrate with Claude and Windsurf AI assistants to support custom component query and generation.",
      "repository_url": "https://github.com/buoooou/mcp-ui-gen",
      "homepage": "https://smithery.ai/server/@buoooou/supaui-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "2",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@buoooou_supaui-mcp.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "fetch-ui",
          "description": "\"Use this tool when the user wants to see component, get inspiration, or /buou or /ui fetch data and previews from buouui.com. \nThis tool ONLY returns the text snippet for that UI component. \nAfter calling this tool, you must edit or add files to integrate the snippet into the codebase.\"",
          "parameters": []
        },
        {
          "name": "list-ui",
          "description": "\"Use this tool when the user wants to see buouui. com component, or /buou fetch data and previews from buouui.",
          "parameters": []
        },
        {
          "name": "create-image",
          "description": "\"Use this tool when the user requests a new image, mentions /buou /image or asks for a image.\nIf the customer provides the picture editing operation of the attachment, please send it to the corresponding tool.\nThis tool ONLY returns the url of the image. \nAfter calling this tool, Please show the image returned by this tool and provide it for download.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@buoooou/supaui-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "BUOU_API_KEY",
          "required": true,
          "description": "The API key from https://buouui.com/dashboard/key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@buoooou/supaui-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1004.@buoooou_supaui-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 982
  }
}