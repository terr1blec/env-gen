{
  "labels": {
    "analysis": "The MCP Server for Cloudflare IDE is designed to simplify interactions with Cloudflare's cloud services through natural language commands within an IDE. Its core functionality revolves around managing Cloudflare Workers, D1 databases, R2 storage (Object Storage), and KV storage, all of which are essential components of Cloudflare's serverless and storage platforms. The available tools enable comprehensive CRUD operations (Create, Read, Update, Delete) on these resources, as well as querying capabilities, bucket/object management, and analytics retrieval. This makes it particularly useful for developers and DevOps engineers who need to automate or streamline their Cloudflare-related workflows.",
    "reasoning": "The primary functionality centers around **Cloud Services**, as the server primarily interfaces with Cloudflare's cloud-based offerings (Workers, D1, R2, KV). Secondarily, it involves **Database Operations** (due to D1 and KV tools) and **File Management** (due to R2 bucket/object operations). No custom label is needed, as the predefined categories adequately cover the server's capabilities.",
    "primary_label": "Cloud Services",
    "secondary_labels": [
      "Database Operations",
      "File Management"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 451,
    "server_name": "Cloudflare MCP Server for IDE",
    "rank_by_usage": 452,
    "usage_count": "43",
    "original_file": "../crawler/smithery/@GutMutCode_mcp-server-cloudflare.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@GutMutCode/mcp-server-cloudflare/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 451,
      "name": "Cloudflare MCP Server for IDE",
      "author": "@GutMutCode/mcp-server-cloudflare",
      "overview": "Manage your Cloudflare account effortlessly using natural language commands. Deploy Workers, manage databases, and handle storage with ease through your favorite IDE. Simplify your Cloudflare interactions and enhance productivity with this powerful tool.",
      "repository_url": "https://github.com/GutMutCode/mcp-server-cloudflare",
      "homepage": "https://smithery.ai/server/@GutMutCode/mcp-server-cloudflare",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "43",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@GutMutCode_mcp-server-cloudflare.json",
      "tools_count": 21,
      "tools": [
        {
          "name": "get_kvs",
          "description": "Deploy Server Cloudflare MCP Server for IDE Claim Server @GutMutCode/mcp-server-cloudflare Try in Playground",
          "parameters": [
            {
              "name": "get_kvs",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "kv_get",
          "description": "Get a value from Cloudflare KV store",
          "parameters": [
            {
              "name": "key",
              "required": true,
              "type": "string"
            },
            {
              "name": "namespaceId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "kv_put",
          "description": "Put a value into Cloudflare KV store",
          "parameters": [
            {
              "name": "key",
              "required": true,
              "type": "string"
            },
            {
              "name": "value",
              "required": true,
              "type": "string"
            },
            {
              "name": "namespaceId",
              "required": true,
              "type": "string"
            },
            {
              "name": "expirationTtl",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "kv_delete",
          "description": "Delete a key from Cloudflare KV store",
          "parameters": [
            {
              "name": "key",
              "required": true,
              "type": "string"
            },
            {
              "name": "namespaceId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "kv_list",
          "description": "List keys in Cloudflare KV store",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "prefix",
              "required": false,
              "type": "string"
            },
            {
              "name": "namespaceId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "worker_list",
          "description": "List all Workers in your account",
          "parameters": [
            {
              "name": "worker_list",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "worker_get",
          "description": "Get a Worker's script content",
          "parameters": [
            {
              "name": "worker_get",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "worker_put",
          "description": "Create or update a Worker script with optional bindings and compatibility settings",
          "parameters": [
            {
              "name": "worker_put",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "worker_delete",
          "description": "Delete a Worker script",
          "parameters": [
            {
              "name": "worker_delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "Worker",
              "required": false,
              "type": "string"
            },
            {
              "name": "script",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "analytics_get",
          "description": "Get analytics data from Cloudflare",
          "parameters": [
            {
              "name": "since",
              "required": false,
              "type": "string"
            },
            {
              "name": "until",
              "required": false,
              "type": "string"
            },
            {
              "name": "zoneId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "r2_list_buckets",
          "description": "List all R2 buckets in your account",
          "parameters": [
            {
              "name": "r2_list_buckets",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "r2_create_bucket",
          "description": "Create a new R2 bucket",
          "parameters": [
            {
              "name": "r2_create_bucket",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "r2_delete_bucket",
          "description": "Description not available",
          "parameters": [
            {
              "name": "r2_delete_bucket",
              "required": false,
              "type": "string"
            },
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "an",
              "required": false,
              "type": "string"
            },
            {
              "name": "R2",
              "required": false,
              "type": "string"
            },
            {
              "name": "bucket",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "r2_list_objects",
          "description": "List objects in an R2 bucket",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "bucket",
              "required": true,
              "type": "string"
            },
            {
              "name": "prefix",
              "required": false,
              "type": "string"
            },
            {
              "name": "delimiter",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "r2_get_object",
          "description": "Get an object from an R2 bucket",
          "parameters": [
            {
              "name": "key",
              "required": true,
              "type": "string"
            },
            {
              "name": "bucket",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "r2_put_object",
          "description": "Put an object into an R2 bucket",
          "parameters": [
            {
              "name": "key",
              "required": true,
              "type": "string"
            },
            {
              "name": "bucket",
              "required": true,
              "type": "string"
            },
            {
              "name": "content",
              "required": true,
              "type": "string"
            },
            {
              "name": "contentType",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "r2_delete_object",
          "description": "Delete an object from an R2 bucket",
          "parameters": [
            {
              "name": "key",
              "required": true,
              "type": "string"
            },
            {
              "name": "bucket",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "d1_list_databases",
          "description": "List all D1 databases in your account",
          "parameters": [
            {
              "name": "d1_list_databases",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "d1_create_database",
          "description": "Create a new D1 database",
          "parameters": [
            {
              "name": "d1_create_database",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "d1_delete_database",
          "description": "Description not available",
          "parameters": [
            {
              "name": "d1_delete_database",
              "required": false,
              "type": "string"
            },
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "D1",
              "required": false,
              "type": "string"
            },
            {
              "name": "database",
              "required": false,
              "type": "string"
            },
            {
              "name": "databaseId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "d1_query",
          "description": "Execute a SQL query against a D1 database",
          "parameters": [
            {
              "name": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "params",
              "required": false,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "databaseId",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@GutMutCode/mcp-server-cloudflare/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@GutMutCode/mcp-server-cloudflare/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0452.@GutMutCode_mcp-server-cloudflare_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 443
  }
}