{
  "labels": {
    "analysis": "The watchTowr MCP Server primarily functions as a security-focused integration layer that provides real-time access to vulnerability intelligence and attack surface management data for AI agents. Its tools enable security teams to triage threats, generate reports, and prioritize vulnerabilities based on severity. The server specializes in external attack surface monitoring, listing vulnerabilities, and providing asset discovery capabilities, all geared toward enhancing cybersecurity operations.",
    "reasoning": "The primary label \"Security & Authentication\" was chosen because the server's core functionality revolves around vulnerability management and threat intelligence, which are critical components of cybersecurity. The secondary label \"Data Analysis & Processing\" was selected due to the tools' ability to categorize and analyze findings by severity and recent activity. The custom label \"Threat Intelligence Integration\" highlights the server's unique role in bridges between AI agents and security data sources.",
    "primary_label": "Security & Authentication",
    "secondary_labels": [
      "Data Analysis & Processing",
      "Operating System"
    ],
    "custom_label": "Threat Intelligence Integration",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1670,
    "server_name": "watchTowr MCP Server",
    "rank_by_usage": 1671,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@watchtowr_watchtowr-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@watchtowr/watchtowr-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "Connection timeout (20 seconds)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1670,
      "name": "watchTowr MCP Server",
      "author": "@watchtowr/watchtowr-mcp",
      "overview": "The watchTowr Platform MCP (Model Compatibility Protocol) Server acts as a real-time integration layer between watchTowr’s world-class External Attack Surface Management and Vulnerability Intelligence technology, and LLM agents, enabling seamless ingestion and understanding of newly discovered threats and exposures.\n\nSecurity teams can now equip AI agents with structured access to timely vulnerability data—empowering use cases from attack surface triage to dynamic reporting and contextual prioritization.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@watchtowr/watchtowr-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@watchtowr_watchtowr-mcp.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "list_cisa_kev_findings",
          "description": "Deploy Server watchTowr MCP Server @watchtowr/watchtowr-mcp Try in Playground list_cisa_kev_findings",
          "parameters": [
            {
              "name": "list_cisa_kev_findings",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_findings_by_severity",
          "description": "List findings by severity level (Critical, High, Medium, Low).",
          "parameters": [
            {
              "name": "list_findings_by_severity",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_recent_assets",
          "description": "List the most recently discovered assets.",
          "parameters": [
            {
              "name": "list_recent_assets",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_activity_logs",
          "description": "Get recent activity logs from the watchTowr Platform.",
          "parameters": [
            {
              "name": "get_activity_logs",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_recent_hunts",
          "description": "List recent hunts, optionally including their results.",
          "parameters": [
            {
              "name": "include_results",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_watchtowr_source_ips",
          "description": "Get watchTowr Platform Source IP addresses that should be whitelisted.",
          "parameters": [
            {
              "name": "get_watchtowr_source_ips",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@watchtowr/watchtowr-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "WATCHTOWR_API_KEY",
          "required": true,
          "description": "Your watchTowr Platform API key for authentication."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@watchtowr/watchtowr-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1671.@watchtowr_watchtowr-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1512
  }
}