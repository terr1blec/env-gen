{
  "labels": {
    "analysis": "The Volatility MCP Server specializes in forensic analysis of memory dumps, particularly for cybersecurity and incident response purposes. It provides tools to automatically execute common forensic plugins through natural language queries, making memory forensics more accessible to less technically skilled investigators. The server allows for process tree analysis, network connection inspection, malware detection, file object scanning, and other critical forensic tasks. Its primary purpose is to accelerate digital investigations by providing structured, automated access to memory forensic analysis capabilities.",
    "reasoning": "The primary label \"Security & Authentication\" was chosen because the server's tools focus on memory forensic analysis, which is directly related to cybersecurity investigations and malware detection. The secondary label \"Memory Management\" is appropriate due to the server's core functionality of analyzing memory dumps. A custom label of \"Digital Forensics\" was created to highlight the server's specialized purpose in computer forensic investigations.",
    "primary_label": "Security & Authentication",
    "secondary_labels": [
      "Memory Management",
      "Data Analysis & Processing"
    ],
    "custom_label": "Digital Forensics",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1739,
    "server_name": "Volatility MCP Server",
    "rank_by_usage": 1740,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@bornpresident_volatility-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@bornpresident/volatility-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "list_available_plugins",
          "description": "List all available Volatility plugins",
          "input_schema": {
            "properties": {},
            "title": "list_available_pluginsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_image_info",
          "description": "\n    Get information about a memory dump file\n    \n    Args:\n        memory_dump_path: Full path to the memory dump file\n    ",
          "input_schema": {
            "properties": {
              "memory_dump_path": {
                "title": "Memory Dump Path",
                "type": "string"
              }
            },
            "required": [
              "memory_dump_path"
            ],
            "title": "get_image_infoArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_pstree",
          "description": "\n    Run the PsTree plugin to show process tree\n    \n    Args:\n        memory_dump_path: Full path to the memory dump file\n    ",
          "input_schema": {
            "properties": {
              "memory_dump_path": {
                "title": "Memory Dump Path",
                "type": "string"
              }
            },
            "required": [
              "memory_dump_path"
            ],
            "title": "run_pstreeArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_pslist",
          "description": "\n    Run the PsList plugin to list processes\n    \n    Args:\n        memory_dump_path: Full path to the memory dump file\n    ",
          "input_schema": {
            "properties": {
              "memory_dump_path": {
                "title": "Memory Dump Path",
                "type": "string"
              }
            },
            "required": [
              "memory_dump_path"
            ],
            "title": "run_pslistArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_psscan",
          "description": "\n    Run the PsScan plugin to scan for processes that might be hidden\n    \n    Args:\n        memory_dump_path: Full path to the memory dump file\n    ",
          "input_schema": {
            "properties": {
              "memory_dump_path": {
                "title": "Memory Dump Path",
                "type": "string"
              }
            },
            "required": [
              "memory_dump_path"
            ],
            "title": "run_psscanArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_netscan",
          "description": "\n    Run the NetScan plugin to show network connections\n    \n    Args:\n        memory_dump_path: Full path to the memory dump file\n    ",
          "input_schema": {
            "properties": {
              "memory_dump_path": {
                "title": "Memory Dump Path",
                "type": "string"
              }
            },
            "required": [
              "memory_dump_path"
            ],
            "title": "run_netscanArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_malfind",
          "description": "\n    Run the MalFind plugin to detect injected code/DLLs\n    \n    Args:\n        memory_dump_path: Full path to the memory dump file\n        dump_dir: Optional directory to dump suspicious memory sections\n    ",
          "input_schema": {
            "properties": {
              "memory_dump_path": {
                "title": "Memory Dump Path",
                "type": "string"
              },
              "dump_dir": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Dump Dir"
              }
            },
            "required": [
              "memory_dump_path"
            ],
            "title": "run_malfindArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_cmdline",
          "description": "\n    Run the CmdLine plugin to show process command line arguments\n    \n    Args:\n        memory_dump_path: Full path to the memory dump file\n    ",
          "input_schema": {
            "properties": {
              "memory_dump_path": {
                "title": "Memory Dump Path",
                "type": "string"
              }
            },
            "required": [
              "memory_dump_path"
            ],
            "title": "run_cmdlineArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_dlllist",
          "description": "\n    Run the DllList plugin to list loaded DLLs for processes\n    \n    Args:\n        memory_dump_path: Full path to the memory dump file\n        pid: Optional process ID to filter results\n    ",
          "input_schema": {
            "properties": {
              "memory_dump_path": {
                "title": "Memory Dump Path",
                "type": "string"
              },
              "pid": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Pid"
              }
            },
            "required": [
              "memory_dump_path"
            ],
            "title": "run_dlllistArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_handles",
          "description": "\n    Run the Handles plugin to list open handles for processes\n    \n    Args:\n        memory_dump_path: Full path to the memory dump file\n        pid: Optional process ID to filter results\n    ",
          "input_schema": {
            "properties": {
              "memory_dump_path": {
                "title": "Memory Dump Path",
                "type": "string"
              },
              "pid": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Pid"
              }
            },
            "required": [
              "memory_dump_path"
            ],
            "title": "run_handlesArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_filescan",
          "description": "\n    Run the FileScan plugin to scan for file objects\n    \n    Args:\n        memory_dump_path: Full path to the memory dump file\n    ",
          "input_schema": {
            "properties": {
              "memory_dump_path": {
                "title": "Memory Dump Path",
                "type": "string"
              }
            },
            "required": [
              "memory_dump_path"
            ],
            "title": "run_filescanArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_memmap",
          "description": "\n    Run the MemMap plugin to show memory map for a specific process\n    \n    Args:\n        memory_dump_path: Full path to the memory dump file\n        pid: Process ID to analyze\n    ",
          "input_schema": {
            "properties": {
              "memory_dump_path": {
                "title": "Memory Dump Path",
                "type": "string"
              },
              "pid": {
                "title": "Pid",
                "type": "integer"
              }
            },
            "required": [
              "memory_dump_path",
              "pid"
            ],
            "title": "run_memmapArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_custom_plugin",
          "description": "\n    Run a custom Volatility plugin\n    \n    Args:\n        memory_dump_path: Full path to the memory dump file\n        plugin_name: Name of the plugin to run\n        additional_args: Optional additional arguments for the plugin\n    ",
          "input_schema": {
            "properties": {
              "memory_dump_path": {
                "title": "Memory Dump Path",
                "type": "string"
              },
              "plugin_name": {
                "title": "Plugin Name",
                "type": "string"
              },
              "additional_args": {
                "default": "",
                "title": "Additional Args",
                "type": "string"
              }
            },
            "required": [
              "memory_dump_path",
              "plugin_name"
            ],
            "title": "run_custom_pluginArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "list_memory_dumps",
          "description": "\n    List available memory dump files in a directory\n    \n    Args:\n        search_dir: Directory to search for memory dumps (defaults to current directory)\n    ",
          "input_schema": {
            "properties": {
              "search_dir": {
                "default": null,
                "title": "Search Dir",
                "type": "string"
              }
            },
            "title": "list_memory_dumpsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 14,
      "tool_names": [
        "list_available_plugins",
        "get_image_info",
        "run_pstree",
        "run_pslist",
        "run_psscan",
        "run_netscan",
        "run_malfind",
        "run_cmdline",
        "run_dlllist",
        "run_handles",
        "run_filescan",
        "run_memmap",
        "run_custom_plugin",
        "list_memory_dumps"
      ]
    },
    "server_info_crawled": {
      "id": 1739,
      "name": "Volatility MCP Server",
      "author": "@bornpresident/volatility-mcp-server",
      "overview": "Analyze memory dumps using natural language queries to simplify forensic investigations. This tool reduces the technical expertise required for memory forensics, accelerating the analysis process and helping to clear case backlogs. Empower forensic experts with automated insights and faster results for improved cybersecurity response.",
      "repository_url": "https://github.com/bornpresident/Volatility-MCP-Server",
      "homepage": "https://smithery.ai/server/@bornpresident/volatility-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@bornpresident_volatility-mcp-server.json",
      "tools_count": 14,
      "tools": [
        {
          "name": "list_available_plugins",
          "description": "List all available Volatility plugins",
          "input_schema": {
            "properties": {},
            "title": "list_available_pluginsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_image_info",
          "description": "\n    Get information about a memory dump file\n    \n    Args:\n        memory_dump_path: Full path to the memory dump file\n    ",
          "input_schema": {
            "properties": {
              "memory_dump_path": {
                "title": "Memory Dump Path",
                "type": "string"
              }
            },
            "required": [
              "memory_dump_path"
            ],
            "title": "get_image_infoArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_pstree",
          "description": "\n    Run the PsTree plugin to show process tree\n    \n    Args:\n        memory_dump_path: Full path to the memory dump file\n    ",
          "input_schema": {
            "properties": {
              "memory_dump_path": {
                "title": "Memory Dump Path",
                "type": "string"
              }
            },
            "required": [
              "memory_dump_path"
            ],
            "title": "run_pstreeArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_pslist",
          "description": "\n    Run the PsList plugin to list processes\n    \n    Args:\n        memory_dump_path: Full path to the memory dump file\n    ",
          "input_schema": {
            "properties": {
              "memory_dump_path": {
                "title": "Memory Dump Path",
                "type": "string"
              }
            },
            "required": [
              "memory_dump_path"
            ],
            "title": "run_pslistArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_psscan",
          "description": "\n    Run the PsScan plugin to scan for processes that might be hidden\n    \n    Args:\n        memory_dump_path: Full path to the memory dump file\n    ",
          "input_schema": {
            "properties": {
              "memory_dump_path": {
                "title": "Memory Dump Path",
                "type": "string"
              }
            },
            "required": [
              "memory_dump_path"
            ],
            "title": "run_psscanArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_netscan",
          "description": "\n    Run the NetScan plugin to show network connections\n    \n    Args:\n        memory_dump_path: Full path to the memory dump file\n    ",
          "input_schema": {
            "properties": {
              "memory_dump_path": {
                "title": "Memory Dump Path",
                "type": "string"
              }
            },
            "required": [
              "memory_dump_path"
            ],
            "title": "run_netscanArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_malfind",
          "description": "\n    Run the MalFind plugin to detect injected code/DLLs\n    \n    Args:\n        memory_dump_path: Full path to the memory dump file\n        dump_dir: Optional directory to dump suspicious memory sections\n    ",
          "input_schema": {
            "properties": {
              "memory_dump_path": {
                "title": "Memory Dump Path",
                "type": "string"
              },
              "dump_dir": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Dump Dir"
              }
            },
            "required": [
              "memory_dump_path"
            ],
            "title": "run_malfindArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_cmdline",
          "description": "\n    Run the CmdLine plugin to show process command line arguments\n    \n    Args:\n        memory_dump_path: Full path to the memory dump file\n    ",
          "input_schema": {
            "properties": {
              "memory_dump_path": {
                "title": "Memory Dump Path",
                "type": "string"
              }
            },
            "required": [
              "memory_dump_path"
            ],
            "title": "run_cmdlineArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_dlllist",
          "description": "\n    Run the DllList plugin to list loaded DLLs for processes\n    \n    Args:\n        memory_dump_path: Full path to the memory dump file\n        pid: Optional process ID to filter results\n    ",
          "input_schema": {
            "properties": {
              "memory_dump_path": {
                "title": "Memory Dump Path",
                "type": "string"
              },
              "pid": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Pid"
              }
            },
            "required": [
              "memory_dump_path"
            ],
            "title": "run_dlllistArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_handles",
          "description": "\n    Run the Handles plugin to list open handles for processes\n    \n    Args:\n        memory_dump_path: Full path to the memory dump file\n        pid: Optional process ID to filter results\n    ",
          "input_schema": {
            "properties": {
              "memory_dump_path": {
                "title": "Memory Dump Path",
                "type": "string"
              },
              "pid": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Pid"
              }
            },
            "required": [
              "memory_dump_path"
            ],
            "title": "run_handlesArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_filescan",
          "description": "\n    Run the FileScan plugin to scan for file objects\n    \n    Args:\n        memory_dump_path: Full path to the memory dump file\n    ",
          "input_schema": {
            "properties": {
              "memory_dump_path": {
                "title": "Memory Dump Path",
                "type": "string"
              }
            },
            "required": [
              "memory_dump_path"
            ],
            "title": "run_filescanArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_memmap",
          "description": "\n    Run the MemMap plugin to show memory map for a specific process\n    \n    Args:\n        memory_dump_path: Full path to the memory dump file\n        pid: Process ID to analyze\n    ",
          "input_schema": {
            "properties": {
              "memory_dump_path": {
                "title": "Memory Dump Path",
                "type": "string"
              },
              "pid": {
                "title": "Pid",
                "type": "integer"
              }
            },
            "required": [
              "memory_dump_path",
              "pid"
            ],
            "title": "run_memmapArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "run_custom_plugin",
          "description": "\n    Run a custom Volatility plugin\n    \n    Args:\n        memory_dump_path: Full path to the memory dump file\n        plugin_name: Name of the plugin to run\n        additional_args: Optional additional arguments for the plugin\n    ",
          "input_schema": {
            "properties": {
              "memory_dump_path": {
                "title": "Memory Dump Path",
                "type": "string"
              },
              "plugin_name": {
                "title": "Plugin Name",
                "type": "string"
              },
              "additional_args": {
                "default": "",
                "title": "Additional Args",
                "type": "string"
              }
            },
            "required": [
              "memory_dump_path",
              "plugin_name"
            ],
            "title": "run_custom_pluginArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "list_memory_dumps",
          "description": "\n    List available memory dump files in a directory\n    \n    Args:\n        search_dir: Directory to search for memory dumps (defaults to current directory)\n    ",
          "input_schema": {
            "properties": {
              "search_dir": {
                "default": null,
                "title": "Search Dir",
                "type": "string"
              }
            },
            "title": "list_memory_dumpsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@bornpresident/volatility-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@bornpresident/volatility-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1740.@bornpresident_volatility-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1563
  }
}