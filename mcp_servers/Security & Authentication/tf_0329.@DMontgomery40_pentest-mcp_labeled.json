{
  "labels": {
    "analysis": "The Pentest MCP Server is designed to integrate essential penetration testing (pentesting) tools into a unified natural language interface. It allows users to execute, chain, and analyze multiple security tools through conversational commands, enhancing efficiency and effectiveness in security assessments. The available tools (nmapScan, generateWordlist, runJohnTheRipper, gobuster, nikto, etc.) are all focused on attacking, scanning, and analyzing systems for vulnerabilities. The server serves as a command-and-control hub for automated pentesting workflows.",
    "reasoning": "The primary functionality of this server is clearly centered around cybersecurity assessments, specifically penetration testing. The predefined category \"Security & Authentication\" is the most fitting as it encompasses tools and processes related to system security and vulnerability analysis. Given the automation and workflow integration capabilities, a secondary label of \"Development Tools\" is added due to its utility in scripting, chaining commands, and potentially debugging phases of pentesting. The custom label \"Ethical Hacking Automation\" is included to highlight the unique aspect of unifying pentesting tools under a natural language interface for seamless security assessments.",
    "primary_label": "Security & Authentication",
    "secondary_labels": [
      "Development Tools"
    ],
    "custom_label": "Ethical Hacking Automation",
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 328,
    "server_name": "Pentest MCP",
    "rank_by_usage": 329,
    "usage_count": "98",
    "original_file": "../crawler/smithery/@DMontgomery40_pentest-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@DMontgomery40/pentest-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "setMode",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "mode": {
                "type": "string",
                "enum": [
                  "student",
                  "professional"
                ]
              }
            },
            "required": [
              "mode"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "nmapScan",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "target": {
                "type": "string"
              },
              "ports": {
                "type": "string"
              },
              "fastScan": {
                "type": "boolean"
              },
              "topPorts": {
                "type": "integer"
              },
              "scanTechnique": {
                "type": "string",
                "enum": [
                  "SYN",
                  "Connect",
                  "ACK",
                  "Window",
                  "Maimon",
                  "FIN",
                  "Xmas",
                  "Null",
                  "Proto"
                ]
              },
              "udpScan": {
                "type": "boolean"
              },
              "serviceVersionDetection": {
                "type": "boolean"
              },
              "versionIntensity": {
                "type": "integer"
              },
              "osDetection": {
                "type": "boolean"
              },
              "defaultScripts": {
                "type": "boolean"
              },
              "scripts": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "scriptArgs": {
                "type": "string"
              },
              "timingTemplate": {
                "type": "string",
                "enum": [
                  "T0",
                  "T1",
                  "T2",
                  "T3",
                  "T4",
                  "T5"
                ]
              },
              "skipHostDiscovery": {
                "type": "boolean"
              },
              "verbose": {
                "type": "boolean"
              },
              "rawOptions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "userModeHint": {
                "type": "string",
                "enum": [
                  "student",
                  "professional"
                ]
              }
            },
            "required": [
              "target"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "generateWordlist",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "baseWords": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of base words (names, pets, places, etc.)."
              },
              "dates": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of dates (YYYY-MM-DD, MM-DD, YYYY). Parsed for variations."
              },
              "customPatterns": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of custom patterns/symbols to prepend/append (e.g., '!', '123')."
              },
              "minYear": {
                "type": "integer",
                "description": "Minimum year (YYYY) to include in variations."
              },
              "maxYear": {
                "type": "integer",
                "description": "Maximum year (YYYY) to include in variations (defaults to current year)."
              },
              "includeLeet": {
                "type": "boolean",
                "default": false,
                "description": "Apply basic leetspeak substitutions (a=4, e=3, etc.)."
              },
              "caseVariations": {
                "type": "boolean",
                "default": true,
                "description": "Include variations like TitleCase, UPPERCASE."
              }
            },
            "required": [
              "baseWords"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "runJohnTheRipper",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "hashData": {
                "type": "string",
                "description": "String containing the password hashes, one per line."
              },
              "options": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of command-line options for JtR."
              }
            },
            "required": [
              "hashData"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "cancelScan",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "scanId": {
                "type": "string",
                "description": "The ID of the scan to cancel"
              }
            },
            "required": [
              "scanId"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "createClientReport",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "client": {
                "type": "string",
                "description": "Client name for the report"
              },
              "title": {
                "type": "string",
                "description": "Title of the assessment report"
              },
              "assessmentType": {
                "type": "string",
                "description": "Type of assessment"
              },
              "scanIds": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "IDs of scans to include"
              },
              "summary": {
                "type": "string",
                "description": "Executive summary"
              },
              "recommendations": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of recommendations"
              }
            },
            "required": [
              "client",
              "title",
              "assessmentType",
              "scanIds"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "gobuster",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "target": {
                "type": "string",
                "format": "uri",
                "description": "Target URL"
              },
              "wordlist": {
                "type": "string",
                "description": "Path to wordlist"
              },
              "extensions": {
                "type": "string",
                "description": "File extensions (comma-separated)"
              },
              "threads": {
                "type": "integer",
                "exclusiveMinimum": 0,
                "description": "Number of threads"
              },
              "statusCodes": {
                "type": "string",
                "description": "Valid status codes (comma-separated)"
              },
              "useragent": {
                "type": "string",
                "description": "User-Agent string"
              },
              "timeout": {
                "type": "string",
                "description": "Timeout for requests"
              },
              "basicAuth": {
                "type": "string",
                "description": "Basic authentication credentials (username:password)"
              },
              "cookie": {
                "type": "string",
                "description": "Cookie to include in requests"
              },
              "excludeLength": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "description": "Exclude paths of specific lengths"
              },
              "followRedirect": {
                "type": "boolean",
                "description": "Follow HTTP redirects"
              },
              "noTLSValidation": {
                "type": "boolean",
                "description": "Skip TLS certificate validation"
              },
              "rawOptions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Raw gobuster options"
              }
            },
            "required": [
              "target",
              "wordlist"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "nikto",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "target": {
                "type": "string",
                "format": "uri",
                "description": "Target URL"
              },
              "port": {
                "type": "string",
                "description": "Port(s) to scan"
              },
              "ssl": {
                "type": "boolean",
                "description": "Force SSL mode"
              },
              "timeout": {
                "type": "integer",
                "description": "Timeout for requests"
              },
              "useragent": {
                "type": "string",
                "description": "User-Agent string"
              },
              "tuning": {
                "type": "string",
                "description": "Tuning mode"
              },
              "output": {
                "type": "string",
                "description": "Output file"
              },
              "proxy": {
                "type": "string",
                "description": "Use proxy"
              },
              "basicAuth": {
                "type": "string",
                "description": "Basic authentication credentials (username:password)"
              },
              "root": {
                "type": "string",
                "description": "Root directory"
              },
              "cookies": {
                "type": "string",
                "description": "Cookies to include"
              },
              "rawOptions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Raw nikto options"
              }
            },
            "required": [
              "target"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 8,
      "tool_names": [
        "setMode",
        "nmapScan",
        "generateWordlist",
        "runJohnTheRipper",
        "cancelScan",
        "createClientReport",
        "gobuster",
        "nikto"
      ]
    },
    "server_info_crawled": {
      "id": 328,
      "name": "Pentest MCP",
      "author": "@DMontgomery40/pentest-mcp",
      "overview": "Integrate essential pentesting tools into a unified natural language interface. Execute, chain, and analyze multiple tools through conversational commands, enhancing efficiency and effectiveness in security assessments.",
      "repository_url": "https://github.com/DMontgomery40/pentest-mcp",
      "homepage": "https://smithery.ai/server/@DMontgomery40/pentest-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "98",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@DMontgomery40_pentest-mcp.json",
      "tools_count": 8,
      "tools": [
        {
          "name": "setMode",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "mode": {
                "type": "string",
                "enum": [
                  "student",
                  "professional"
                ]
              }
            },
            "required": [
              "mode"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "nmapScan",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "target": {
                "type": "string"
              },
              "ports": {
                "type": "string"
              },
              "fastScan": {
                "type": "boolean"
              },
              "topPorts": {
                "type": "integer"
              },
              "scanTechnique": {
                "type": "string",
                "enum": [
                  "SYN",
                  "Connect",
                  "ACK",
                  "Window",
                  "Maimon",
                  "FIN",
                  "Xmas",
                  "Null",
                  "Proto"
                ]
              },
              "udpScan": {
                "type": "boolean"
              },
              "serviceVersionDetection": {
                "type": "boolean"
              },
              "versionIntensity": {
                "type": "integer"
              },
              "osDetection": {
                "type": "boolean"
              },
              "defaultScripts": {
                "type": "boolean"
              },
              "scripts": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "scriptArgs": {
                "type": "string"
              },
              "timingTemplate": {
                "type": "string",
                "enum": [
                  "T0",
                  "T1",
                  "T2",
                  "T3",
                  "T4",
                  "T5"
                ]
              },
              "skipHostDiscovery": {
                "type": "boolean"
              },
              "verbose": {
                "type": "boolean"
              },
              "rawOptions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "userModeHint": {
                "type": "string",
                "enum": [
                  "student",
                  "professional"
                ]
              }
            },
            "required": [
              "target"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "generateWordlist",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "baseWords": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of base words (names, pets, places, etc.)."
              },
              "dates": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of dates (YYYY-MM-DD, MM-DD, YYYY). Parsed for variations."
              },
              "customPatterns": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of custom patterns/symbols to prepend/append (e.g., '!', '123')."
              },
              "minYear": {
                "type": "integer",
                "description": "Minimum year (YYYY) to include in variations."
              },
              "maxYear": {
                "type": "integer",
                "description": "Maximum year (YYYY) to include in variations (defaults to current year)."
              },
              "includeLeet": {
                "type": "boolean",
                "default": false,
                "description": "Apply basic leetspeak substitutions (a=4, e=3, etc.)."
              },
              "caseVariations": {
                "type": "boolean",
                "default": true,
                "description": "Include variations like TitleCase, UPPERCASE."
              }
            },
            "required": [
              "baseWords"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "runJohnTheRipper",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "hashData": {
                "type": "string",
                "description": "String containing the password hashes, one per line."
              },
              "options": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of command-line options for JtR."
              }
            },
            "required": [
              "hashData"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "cancelScan",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "scanId": {
                "type": "string",
                "description": "The ID of the scan to cancel"
              }
            },
            "required": [
              "scanId"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "createClientReport",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "client": {
                "type": "string",
                "description": "Client name for the report"
              },
              "title": {
                "type": "string",
                "description": "Title of the assessment report"
              },
              "assessmentType": {
                "type": "string",
                "description": "Type of assessment"
              },
              "scanIds": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "IDs of scans to include"
              },
              "summary": {
                "type": "string",
                "description": "Executive summary"
              },
              "recommendations": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of recommendations"
              }
            },
            "required": [
              "client",
              "title",
              "assessmentType",
              "scanIds"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "gobuster",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "target": {
                "type": "string",
                "format": "uri",
                "description": "Target URL"
              },
              "wordlist": {
                "type": "string",
                "description": "Path to wordlist"
              },
              "extensions": {
                "type": "string",
                "description": "File extensions (comma-separated)"
              },
              "threads": {
                "type": "integer",
                "exclusiveMinimum": 0,
                "description": "Number of threads"
              },
              "statusCodes": {
                "type": "string",
                "description": "Valid status codes (comma-separated)"
              },
              "useragent": {
                "type": "string",
                "description": "User-Agent string"
              },
              "timeout": {
                "type": "string",
                "description": "Timeout for requests"
              },
              "basicAuth": {
                "type": "string",
                "description": "Basic authentication credentials (username:password)"
              },
              "cookie": {
                "type": "string",
                "description": "Cookie to include in requests"
              },
              "excludeLength": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "description": "Exclude paths of specific lengths"
              },
              "followRedirect": {
                "type": "boolean",
                "description": "Follow HTTP redirects"
              },
              "noTLSValidation": {
                "type": "boolean",
                "description": "Skip TLS certificate validation"
              },
              "rawOptions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Raw gobuster options"
              }
            },
            "required": [
              "target",
              "wordlist"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "nikto",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "target": {
                "type": "string",
                "format": "uri",
                "description": "Target URL"
              },
              "port": {
                "type": "string",
                "description": "Port(s) to scan"
              },
              "ssl": {
                "type": "boolean",
                "description": "Force SSL mode"
              },
              "timeout": {
                "type": "integer",
                "description": "Timeout for requests"
              },
              "useragent": {
                "type": "string",
                "description": "User-Agent string"
              },
              "tuning": {
                "type": "string",
                "description": "Tuning mode"
              },
              "output": {
                "type": "string",
                "description": "Output file"
              },
              "proxy": {
                "type": "string",
                "description": "Use proxy"
              },
              "basicAuth": {
                "type": "string",
                "description": "Basic authentication credentials (username:password)"
              },
              "root": {
                "type": "string",
                "description": "Root directory"
              },
              "cookies": {
                "type": "string",
                "description": "Cookies to include"
              },
              "rawOptions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Raw nikto options"
              }
            },
            "required": [
              "target"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@DMontgomery40/pentest-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@DMontgomery40/pentest-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0329.@DMontgomery40_pentest-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 325
  }
}