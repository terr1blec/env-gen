{
  "labels": {
    "analysis": "The MCP Server specializes in validating and retrieving detailed information about OAuth tokens, specifically for Betha Sistemas. Its core functionality revolves around token verification, providing expiration status, remaining validity time, client details, scopes, and associated user IDs. This is primarily focused on simplifying token management for applications integrating with Betha services.",
    "reasoning": "The primary label is **Security & Authentication** because the server's main purpose is validating and managing OAuth tokens, which falls under security and authentication workflows. A secondary label of **API Integration** is added because it integrates with MCP-compatible clients and handles OAuth token-related API interactions. No custom label is needed as the predefined categories sufficiently cover the functionality.",
    "primary_label": "Security & Authentication",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1400,
    "server_name": "Token Info Server",
    "rank_by_usage": 1401,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@Castrozan_token-info-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Castrozan/token-info-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "verify_betha_token",
          "description": "Verify an OAuth token on Betha services and get its information",
          "input_schema": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string",
                "description": "The OAuth access token to verify"
              }
            },
            "required": [
              "accessToken"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "verify_betha_token"
      ]
    },
    "server_info_crawled": {
      "id": 1400,
      "name": "Token Info Server",
      "author": "@Castrozan/token-info-mcp",
      "overview": "Validate OAuth tokens and retrieve detailed information about them, including expiration status, remaining validity time, client details, associated scopes, and user ID. Integrate seamlessly with MCP-compatible clients to enhance token management workflows. Simplify OAuth token verification with a dedicated MCP server tailored for Betha Sistemas tokens.",
      "repository_url": "https://github.com/Castrozan/token-info-mcp",
      "homepage": "https://smithery.ai/server/@Castrozan/token-info-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Castrozan_token-info-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "verify_betha_token",
          "description": "Verify an OAuth token on Betha services and get its information",
          "input_schema": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string",
                "description": "The OAuth access token to verify"
              }
            },
            "required": [
              "accessToken"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Castrozan/token-info-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Castrozan/token-info-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1401.@Castrozan_token-info-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1310
  }
}