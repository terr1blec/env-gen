{
  "labels": {
    "analysis": "The MCP Server in question is a demonstration tool designed to illustrate security vulnerabilities in servers with excessive agency. Its primary functionality appears to be a basic arithmetic operation (addition) that can be manipulated to explore security risks like remote code execution. This server serves an educational purpose, specifically for learning about MCP server vulnerabilities in a controlled environment. The available tool (\"addition\") is a simple arithmetic function that likely serves as a vehicle for demonstrating potential exploits.",
    "reasoning": "The primary label is \"Security & Authentication\" because the server is explicitly designed to demonstrate security risks and vulnerabilities in MCP implementations. The secondary label \"Development Tools\" is included because security demonstrations like this are often used in development and cybersecurity training contexts. Additionally, a custom label \"Security Education\" is added to capture the server's specific educational focus on vulnerabilities.",
    "primary_label": "Security & Authentication",
    "secondary_labels": [
      "Development Tools"
    ],
    "custom_label": "Security Education",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1033,
    "server_name": "Damn Vulnerable MCP Server Demo",
    "rank_by_usage": 1034,
    "usage_count": "2",
    "original_file": "../crawler/smithery/@pfelilpe_DVMCP.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@pfelilpe/DVMCP/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "addition",
          "description": "Sum tool",
          "input_schema": {
            "properties": {
              "a": {
                "title": "a",
                "type": "string"
              }
            },
            "required": [
              "a"
            ],
            "title": "additionArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "addition"
      ]
    },
    "server_info_crawled": {
      "id": 1033,
      "name": "Damn Vulnerable MCP Server Demo",
      "author": "@pfelilpe/DVMCP",
      "overview": "Demonstrate the risks of excessive agency in MCP servers by providing a basic vulnerable implementation that adds numbers. Explore potential security issues like remote code execution through this educational tool. Learn about MCP server functionality and vulnerabilities in a controlled environment.",
      "repository_url": "https://github.com/pfelilpe/DVMCP",
      "homepage": "https://smithery.ai/server/@pfelilpe/DVMCP",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "2",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@pfelilpe_DVMCP.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "addition",
          "description": "Sum tool",
          "input_schema": {
            "properties": {
              "a": {
                "title": "a",
                "type": "string"
              }
            },
            "required": [
              "a"
            ],
            "title": "additionArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@pfelilpe/DVMCP/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@pfelilpe/DVMCP/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1034.@pfelilpe_DVMCP_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1012
  }
}