{
  "labels": {
    "analysis": "The MCP Server \"Okta Login History Analyzer\" is focused on security monitoring and analysis of user login activities within the Okta identity management platform. It provides tools to retrieve and analyze login history, detecting suspicious patterns that may indicate security risks. The core functionality revolves around identity and access management security, with features like rate limiting and comprehensive logging to ensure secure operation.",
    "reasoning": "The primary label \"Security & Authentication\" is chosen because the server's main purpose is analyzing user login data for security risks, which directly relates to authentication and access control. The secondary label \"Operating System\" could apply if the server interacts with system-level processes, but given the description, it may not be directly relevant. Instead, \"API Integration\" is more appropriate if the server connects with Okta's API for data retrieval. The custom label \"Okta Security Monitoring\" is added to capture the specific focus on Okta's login history analysis.",
    "primary_label": "Security & Authentication",
    "secondary_labels": [
      "API Integration",
      "Operating System"
    ],
    "custom_label": "Okta Security Monitoring",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1240,
    "server_name": "Okta Login History Analyzer",
    "rank_by_usage": 1241,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@dydtjs_mcp_okta_check.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@dydtjs/mcp_okta_check/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1240,
      "name": "Okta Login History Analyzer",
      "author": "@dydtjs/mcp_okta_check",
      "overview": "Analyze user login history and detect suspicious login patterns using Okta data. Query detailed login events and identify potential security risks efficiently. Benefit from built-in rate limiting and comprehensive logging for secure and reliable operation.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@dydtjs/mcp_okta_check",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@dydtjs_mcp_okta_check.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "get_user_login_history",
          "description": "Deploy Server Okta Login History Analyzer @dydtjs/mcp_okta_check Try in Playground get_user_login_history",
          "parameters": [
            {
              "name": "user_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "end_date",
              "required": true,
              "type": "string"
            },
            {
              "name": "start_date",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "analyze_login_anomalies",
          "description": "Analyze login history for suspicious activities",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@dydtjs/mcp_okta_check/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "mcpOktaApiToken",
          "required": true,
          "description": "Your Okta API SSWS token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@dydtjs/mcp_okta_check/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1241.@dydtjs_mcp_okta_check_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1190
  }
}