{
  "labels": {
    "analysis": "The Binalyze AIR MCP Server is primarily focused on digital forensics, incident response, and endpoint management. It provides tools for asset management, evidence acquisition, policy management, task automation, and case handling in a cybersecurity context. The server enables natural language interaction with the Binalyze AIR system for managing security operations, making it particularly useful for cybersecurity professionals and IT administrators.",
    "reasoning": "The primary label \"Security & Authentication\" was chosen because the server's core functionality revolves around managing digital assets, evidence collection, and security tasks. Secondary labels include \"Data Analysis & Processing\" due to the analytical capabilities for tasks and cases, and \"Database Operations\" because of the extensive querying and management of system data. A custom label \"Digital Forensics & Incident Response\" was added to better capture the server's specialized focus in this cybersecurity domain.",
    "primary_label": "Security & Authentication",
    "secondary_labels": [
      "Data Analysis & Processing",
      "Database Operations"
    ],
    "custom_label": "Digital Forensics & Incident Response",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1050,
    "server_name": "Binalyze AIR MCP Server",
    "rank_by_usage": 1051,
    "usage_count": "1",
    "original_file": "../crawler/smithery/@binalyze_air-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@binalyze/air-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1050,
      "name": "Binalyze AIR MCP Server",
      "author": "@binalyze/air-mcp",
      "overview": "Enable natural language interaction with your Binalyze AIR system to manage assets, acquisition profiles, and organizations seamlessly. Use this server to list and query your AIR data through any MCP client, enhancing your workflow with AI-driven context access. Requires an API token for secure access to your AIR environment.",
      "repository_url": "https://github.com/binalyze/air-mcp",
      "homepage": "https://smithery.ai/server/@binalyze/air-mcp",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "1",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@binalyze_air-mcp.json",
      "tools_count": 117,
      "tools": [
        {
          "name": "list_assets",
          "description": "Deploy Server Binalyze AIR MCP Server @binalyze/air-mcp Try in Playground list_assets",
          "parameters": [
            {
              "name": "list_assets",
              "required": false,
              "type": "string"
            },
            {
              "name": "organizationIds",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_asset_by_id",
          "description": "Get detailed information about a specific asset by its ID",
          "parameters": [
            {
              "name": "get_asset_by_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_asset_tasks_by_id",
          "description": "Get all tasks associated with a specific asset by its ID",
          "parameters": [
            {
              "name": "get_asset_tasks_by_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_acquisition_profiles",
          "description": "List all acquisition profiles in the system",
          "parameters": [
            {
              "name": "list_acquisition_profiles",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "assign_acquisition_task",
          "description": "Assign an evidence acquisition task to specific endpoints",
          "parameters": [
            {
              "name": "enableCompression",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "encryptionPassword",
              "required": false,
              "type": "string"
            },
            {
              "name": "acquisitionProfileId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_acquisition_profile_by_id",
          "description": "Get details of a specific acquisition profile by its ID",
          "parameters": [
            {
              "name": "get_acquisition_profile_by_id",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "assign_image_acquisition_task",
          "description": "Assign a disk image acquisition task to specific endpoints and volumes",
          "parameters": [
            {
              "name": "assign_image_acquisition_task",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_acquisition_profile",
          "description": "Create a new acquisition profile",
          "parameters": [
            {
              "name": "create_acquisition_profile",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "assign_reboot_task",
          "description": "Assign a reboot task to specific endpoints",
          "parameters": [
            {
              "name": "assign_reboot_task",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "assign_shutdown_task",
          "description": "Assign a shutdown task to specific endpoints",
          "parameters": [
            {
              "name": "assign_shutdown_task",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "assign_isolation_task",
          "description": "Assign an isolation task to specific endpoints",
          "parameters": [
            {
              "name": "assign_isolation_task",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "assign_log_retrieval_task",
          "description": "Assign a log retrieval task to specific endpoints",
          "parameters": [
            {
              "name": "assign_log_retrieval_task",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "assign_version_update_task",
          "description": "Assign a version update task to specific endpoints",
          "parameters": [
            {
              "name": "assign_version_update_task",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_organizations",
          "description": "List all organizations in the system",
          "parameters": [
            {
              "name": "list_organizations",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_cases",
          "description": "List all cases in the system",
          "parameters": [
            {
              "name": "list_cases",
              "required": false,
              "type": "string"
            },
            {
              "name": "organizationIds",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_policies",
          "description": "List all policies in the system",
          "parameters": [
            {
              "name": "list_policies",
              "required": false,
              "type": "string"
            },
            {
              "name": "organizationIds",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_tasks",
          "description": "List all tasks in the system",
          "parameters": [
            {
              "name": "list_tasks",
              "required": false,
              "type": "string"
            },
            {
              "name": "organizationIds",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_triage_rules",
          "description": "List all triage rules in the system",
          "parameters": [
            {
              "name": "list_triage_rules",
              "required": false,
              "type": "string"
            },
            {
              "name": "organizationIds",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_users",
          "description": "List all users in the system",
          "parameters": [
            {
              "name": "list_users",
              "required": false,
              "type": "string"
            },
            {
              "name": "organizationIds",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_drone_analyzers",
          "description": "List all drone analyzers in the system",
          "parameters": [
            {
              "name": "list_drone_analyzers",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "export_audit_logs",
          "description": "Initiate an export of audit logs from the AIR system",
          "parameters": [
            {
              "name": "export_audit_logs",
              "required": false,
              "type": "string"
            },
            {
              "name": "organizationIds",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_audit_logs",
          "description": "List audit logs from the AIR system",
          "parameters": [
            {
              "name": "list_audit_logs",
              "required": false,
              "type": "string"
            },
            {
              "name": "organizationIds",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "uninstall_assets",
          "description": "Uninstall specific assets based on filters without purging data. Requires specifying `filter.includedEndpointIds`.",
          "parameters": [
            {
              "name": "uninstall_assets",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "purge_and_uninstall_assets",
          "description": "Purge data and uninstall specific assets based on filters. Requires specifying `filter.includedEndpointIds`.",
          "parameters": [
            {
              "name": "purge_and_uninstall_assets",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_tags_to_assets",
          "description": "Add tags to specific assets based on filters. Requires specifying `filter.includedEndpointIds` and `tags`.",
          "parameters": [
            {
              "name": "add_tags_to_assets",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "remove_tags_from_assets",
          "description": "Remove tags from specific assets based on filters. Requires specifying `filter.includedEndpointIds` and `tags`.",
          "parameters": [
            {
              "name": "remove_tags_from_assets",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_auto_asset_tag",
          "description": "Create a new rule to automatically tag assets based on specified conditions for Linux, Windows, and macOS.",
          "parameters": [
            {
              "name": "create_auto_asset_tag",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_auto_asset_tag",
          "description": "Update an existing auto asset tag rule.",
          "parameters": [
            {
              "name": "update_auto_asset_tag",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_auto_asset_tag_by_id",
          "description": "Get details of a specific auto asset tag rule by its ID",
          "parameters": [
            {
              "name": "get_auto_asset_tag_by_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_auto_asset_tag_by_id",
          "description": "Delete a specific auto asset tag rule by its ID",
          "parameters": [
            {
              "name": "delete_auto_asset_tag_by_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_auto_asset_tags",
          "description": "List all auto asset tag rules in the system.",
          "parameters": [
            {
              "name": "list_auto_asset_tags",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "start_tagging",
          "description": "Start the auto asset tagging process for assets matching filter criteria.",
          "parameters": [
            {
              "name": "start_tagging",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "acquire_baseline",
          "description": "Assign a baseline acquisition task to specific endpoints",
          "parameters": [
            {
              "name": "caseId",
              "required": true,
              "type": "string"
            },
            {
              "name": "filter",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "compare_baseline",
          "description": "Compare baseline acquisition tasks for a specific endpoint",
          "parameters": [
            {
              "name": "compare_baseline",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_comparison_report",
          "description": "Get comparison result report for a specific endpoint and task",
          "parameters": [
            {
              "name": "get_comparison_report",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_acquisition_artifacts",
          "description": "List all acquisition artifacts available for evidence collection",
          "parameters": [
            {
              "name": "list_acquisition_artifacts",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_e_discovery_patterns",
          "description": "List all e-discovery patterns for file type detection",
          "parameters": [
            {
              "name": "list_e_discovery_patterns",
              "required": false,
              "type": "string"
            },
            {
              "name": "random_string",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_policy",
          "description": "Create a new policy with specific storage and compression settings",
          "parameters": [
            {
              "name": "create_policy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_policy",
          "description": "Update an existing policy with specific storage and filter settings",
          "parameters": [
            {
              "name": "update_policy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_policy_by_id",
          "description": "Get detailed information about a specific policy by its ID",
          "parameters": [
            {
              "name": "get_policy_by_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_policy_priorities",
          "description": "Update the priority order of policies",
          "parameters": [
            {
              "name": "ids",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "organizationIds",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_policy_match_stats",
          "description": "Get statistics on how many endpoints match each policy based on filter criteria",
          "parameters": [
            {
              "name": "get_policy_match_stats",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_policy_by_id",
          "description": "Delete a specific policy by its ID",
          "parameters": [
            {
              "name": "delete_policy_by_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_task_assignments_by_id",
          "description": "Get all assignments associated with a specific task by its ID",
          "parameters": [
            {
              "name": "get_task_assignments_by_id",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "cancel_task_assignment",
          "description": "Cancel a task assignment by its ID",
          "parameters": [
            {
              "name": "cancel_task_assignment",
              "required": false,
              "type": "string"
            },
            {
              "name": "assignmentId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_task_assignment",
          "description": "Delete a specific task assignment by its ID",
          "parameters": [
            {
              "name": "delete_task_assignment",
              "required": false,
              "type": "string"
            },
            {
              "name": "assignmentId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_task_by_id",
          "description": "Get detailed information about a specific task by its ID",
          "parameters": [
            {
              "name": "get_task_by_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "cancel_task_by_id",
          "description": "Cancel a specific task by its ID",
          "parameters": [
            {
              "name": "cancel_task_by_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_task_by_id",
          "description": "Delete a specific task by its ID",
          "parameters": [
            {
              "name": "delete_task_by_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_triage_tags",
          "description": "List all triage rule tags in the system",
          "parameters": [
            {
              "name": "withCount",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "organizationIds",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_triage_tag",
          "description": "Create a new triage rule tag",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "organizationId",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_triage_rule",
          "description": "Create a new triage rule",
          "parameters": [
            {
              "name": "create_triage_rule",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_triage_rule",
          "description": "Update an existing triage rule by ID",
          "parameters": [
            {
              "name": "update_triage_rule",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_triage_rule",
          "description": "Delete an existing triage rule by ID",
          "parameters": [
            {
              "name": "delete_triage_rule",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_triage_rule_by_id",
          "description": "Get a specific triage rule by its ID",
          "parameters": [
            {
              "name": "get_triage_rule_by_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "validate_triage_rule",
          "description": "Validate a triage rule syntax without creating it",
          "parameters": [
            {
              "name": "validate_triage_rule",
              "required": false,
              "type": "string"
            },
            {
              "name": "rule",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "assign_triage_task",
          "description": "Assign a triage task to endpoints based on filter criteria",
          "parameters": [
            {
              "name": "assign_triage_task",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_note_to_case",
          "description": "Add a note to a specific case by its ID",
          "parameters": [
            {
              "name": "note",
              "required": true,
              "type": "string"
            },
            {
              "name": "caseId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_note_in_case",
          "description": "Update an existing note in a specific case",
          "parameters": [
            {
              "name": "note",
              "required": true,
              "type": "string"
            },
            {
              "name": "caseId",
              "required": true,
              "type": "string"
            },
            {
              "name": "noteId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_note_from_case",
          "description": "Delete a note from a case by its ID",
          "parameters": [
            {
              "name": "caseId",
              "required": true,
              "type": "string"
            },
            {
              "name": "noteId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "export_cases",
          "description": "Export cases data from the system",
          "parameters": [
            {
              "name": "export_cases",
              "required": false,
              "type": "string"
            },
            {
              "name": "organizationIds",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "export_case_notes",
          "description": "Export notes for a specific case by its ID",
          "parameters": [
            {
              "name": "export_case_notes",
              "required": false,
              "type": "string"
            },
            {
              "name": "caseId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "export_case_endpoints",
          "description": "Export endpoints for a specific case by its ID",
          "parameters": [
            {
              "name": "caseId",
              "required": true,
              "type": "string"
            },
            {
              "name": "organizationIds",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "export_case_activities",
          "description": "Export activities for a specific case by its ID",
          "parameters": [
            {
              "name": "export_case_activities",
              "required": false,
              "type": "string"
            },
            {
              "name": "caseId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_case",
          "description": "Create a new case in the system",
          "parameters": [
            {
              "name": "create_case",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_case",
          "description": "Update an existing case by ID",
          "parameters": [
            {
              "name": "update_case",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_case_by_id",
          "description": "Get detailed information about a specific case by its ID",
          "parameters": [
            {
              "name": "get_case_by_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "close_case_by_id",
          "description": "Close a case by its ID",
          "parameters": [
            {
              "name": "close_case_by_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "open_case_by_id",
          "description": "Open a previously closed case by its ID",
          "parameters": [
            {
              "name": "open_case_by_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "archive_case_by_id",
          "description": "Archive a case by its ID",
          "parameters": [
            {
              "name": "archive_case_by_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "change_case_owner",
          "description": "Change the owner of a case",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "newOwnerId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "check_case_name",
          "description": "Check if a case name is already in use",
          "parameters": [
            {
              "name": "check_case_name",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_case_activities",
          "description": "Get activity history for a specific case by its ID",
          "parameters": [
            {
              "name": "get_case_activities",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_case_endpoints",
          "description": "Get all endpoints associated with a specific case by its ID",
          "parameters": [
            {
              "name": "get_case_endpoints",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_case_tasks_by_id",
          "description": "Get all tasks associated with a specific case by its ID",
          "parameters": [
            {
              "name": "get_case_tasks_by_id",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_case_users",
          "description": "Get all users associated with a specific case by its ID",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "organizationIds",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "remove_endpoints_from_case",
          "description": "Remove endpoints from a case based on specified filters",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "filter",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "remove_task_assignment_from_case",
          "description": "Remove a specific task assignment from a case",
          "parameters": [
            {
              "name": "remove_task_assignment_from_case",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "import_task_assignments_to_case",
          "description": "Import task assignments to a specific case",
          "parameters": [
            {
              "name": "import_task_assignments_to_case",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "list_repositories",
          "description": "List all evidence repositories in the system",
          "parameters": [
            {
              "name": "list_repositories",
              "required": false,
              "type": "string"
            },
            {
              "name": "organizationIds",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_repository_by_id",
          "description": "Get detailed information about a specific evidence repository by its ID",
          "parameters": [
            {
              "name": "get_repository_by_id",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_smb_repository",
          "description": "Create a new SMB evidence repository",
          "parameters": [
            {
              "name": "create_smb_repository",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_smb_repository",
          "description": "Update an existing SMB repository by ID",
          "parameters": [
            {
              "name": "update_smb_repository",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_sftp_repository",
          "description": "Create a new SFTP evidence repository",
          "parameters": [
            {
              "name": "create_sftp_repository",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_sftp_repository",
          "description": "Update an existing SFTP repository",
          "parameters": [
            {
              "name": "update_sftp_repository",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_ftps_repository",
          "description": "Create a new FTPS evidence repository",
          "parameters": [
            {
              "name": "create_ftps_repository",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_ftps_repository",
          "description": "Update an existing FTPS evidence repository",
          "parameters": [
            {
              "name": "update_ftps_repository",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "validate_ftps_repository",
          "description": "Validate FTPS repository configuration without creating it",
          "parameters": [
            {
              "name": "validate_ftps_repository",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_azure_storage_repository",
          "description": "Create a new Azure Storage repository",
          "parameters": [
            {
              "name": "create_azure_storage_repository",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_azure_storage_repository",
          "description": "Update an existing Azure Storage repository",
          "parameters": [
            {
              "name": "update_azure_storage_repository",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "validate_azure_storage_repository",
          "description": "Validate an Azure Storage repository configuration",
          "parameters": [
            {
              "name": "validate_azure_storage_repository",
              "required": false,
              "type": "string"
            },
            {
              "name": "SASUrl",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_amazon_s3_repository",
          "description": "Create a new Amazon S3 repository for evidence storage",
          "parameters": [
            {
              "name": "create_amazon_s3_repository",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_amazon_s3_repository",
          "description": "Update an existing Amazon S3 repository",
          "parameters": [
            {
              "name": "update_amazon_s3_repository",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "validate_amazon_s3_repository",
          "description": "Validate Amazon S3 repository configuration",
          "parameters": [
            {
              "name": "validate_amazon_s3_repository",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_repository_by_id",
          "description": "Get detailed information about a specific evidence repository by its ID",
          "parameters": [
            {
              "name": "get_repository_by_id",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_repository",
          "description": "Delete an evidence repository by its ID",
          "parameters": [
            {
              "name": "delete_repository",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "download_case_ppc",
          "description": "Download a PPC file for a specific endpoint and task",
          "parameters": [
            {
              "name": "taskId",
              "required": true,
              "type": "string"
            },
            {
              "name": "endpointId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "download_task_report",
          "description": "Download a task report for a specific endpoint and task",
          "parameters": [
            {
              "name": "download_task_report",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_report_file_info",
          "description": "Get information about a PPC file for a specific endpoint and task",
          "parameters": [
            {
              "name": "get_report_file_info",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_organization_users",
          "description": "Get users for a specific organization by its ID",
          "parameters": [
            {
              "name": "get_organization_users",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "assign_users_to_organization",
          "description": "Assign users to a specific organization",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "userIds",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "remove_user_from_organization",
          "description": "Remove a user from an organization",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "type": "string"
            },
            {
              "name": "organizationId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_organization",
          "description": "Create a new organization",
          "parameters": [
            {
              "name": "create_organization",
              "required": false,
              "type": "string"
            },
            {
              "name": "Create",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "new",
              "required": false,
              "type": "string"
            },
            {
              "name": "organization",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_organization_by_id",
          "description": "Update an existing organization by ID",
          "parameters": [
            {
              "name": "update_organization_by_id",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_organization_by_id",
          "description": "Get detailed information about a specific organization by its ID",
          "parameters": [
            {
              "name": "get_organization_by_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "check_organization_name_exists",
          "description": "Check if an organization name already exists in the system",
          "parameters": [
            {
              "name": "check_organization_name_exists",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_shareable_deployment_info",
          "description": "Get shareable deployment information using a deployment token",
          "parameters": [
            {
              "name": "get_shareable_deployment_info",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_organization_shareable_deployment",
          "description": "Update an organization's shareable deployment settings",
          "parameters": [
            {
              "name": "update_organization_shareable_deployment",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_organization_deployment_token",
          "description": "Update the deployment token for a specific organization",
          "parameters": [
            {
              "name": "update_organization_deployment_token",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_organization",
          "description": "Delete an organization by its ID",
          "parameters": [
            {
              "name": "delete_organization",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_tags_to_organization",
          "description": "Add tags to an organization",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "tags",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_tags_from_organization",
          "description": "Delete specific tags from an organization",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "name": "tags",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_user_by_id",
          "description": "Get detailed information about a specific user by their ID",
          "parameters": [
            {
              "name": "get_user_by_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "call_webhook",
          "description": "Call a webhook with the specified parameters",
          "parameters": [
            {
              "name": "data",
              "required": true,
              "type": "string"
            },
            {
              "name": "slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "token",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "post_webhook",
          "description": "Post data to a webhook",
          "parameters": [
            {
              "name": "data",
              "required": true,
              "type": "string"
            },
            {
              "name": "slug",
              "required": true,
              "type": "string"
            },
            {
              "name": "token",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_task_assignments",
          "description": "Get all assignments for a specific task by its ID",
          "parameters": [
            {
              "name": "get_task_assignments_by_id",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_banner_message",
          "description": "Update the system banner message settings",
          "parameters": [
            {
              "name": "enabled",
              "required": true,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@binalyze/air-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "airApiToken",
          "required": true,
          "description": "The API token for accessing the Binalyze AIR API. You can generate one through the AIR console."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@binalyze/air-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1051.@binalyze_air-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1029
  }
}