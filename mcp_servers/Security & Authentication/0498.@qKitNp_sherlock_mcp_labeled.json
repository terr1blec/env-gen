{
  "labels": {
    "analysis": "The Sherlock MCP Server is designed to perform Open Source Intelligence (OSINT) by searching for usernames across multiple social media platforms and websites. It provides tools for digital footprint analysis, social media presence verification, and cybersecurity reconnaissance. The core functionality revolves around automated username enumeration, making it a valuable tool for security researchers, investigators, and professionals in the OSINT field.",
    "reasoning": "The primary label of \"Security & Authentication\" was chosen because the server's main purpose is to perform cybersecurity reconnaissance and digital footprint analysis, which are core aspects of security auditing. \"Web Search & Research\" is a secondary label because the tool searches for usernames across multiple platforms, which is a form of research. A custom label of \"OSINT Tools\" was added to specifically describe the server's unique focus on Open Source Intelligence.",
    "primary_label": "Security & Authentication",
    "secondary_labels": [
      "Web Search & Research"
    ],
    "custom_label": "OSINT Tools",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 497,
    "server_name": "Sherlock MCP Server",
    "rank_by_usage": 498,
    "usage_count": "32",
    "original_file": "../crawler/smithery/@qKitNp_sherlock_mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@qKitNp/sherlock_mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_links",
          "description": "Search for a username across multiple social media platforms using Sherlock.\n    \n    Args:\n        username (str): The username to search for across social media platforms.\n        \n    Returns:\n        str: A JSON string containing a list of dictionaries with 'site' and 'url' keys\n             for each platform where the username was found.\n             Returns an error message if no username is provided.\n             \n    Example:\n        >>> get_links(\"testuser\")\n        '[{\"site\": \"GitHub\", \"url\": \"https://github.com/testuser\"}, ...]'\n    ",
          "input_schema": {
            "properties": {
              "username": {
                "title": "Username",
                "type": "string"
              }
            },
            "required": [
              "username"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_nsfw_links",
          "description": "Search for a username across multiple social media platforms including NSFW platforms using Sherlock.\n    \n    Args:\n        username (str): The username to search for across social media platforms including NSFW platforms.\n        \n    Returns:\n        str: A JSON string containing a list of dictionaries with 'site' and 'url' keys\n             for each platform where the username was found.\n             Returns an error message if no username is provided.\n             \n    Example:\n        >>> get_nsfw_links(\"testuser\")\n        '[{\"site\": \"GitHub\", \"url\": \"https://github.com/testuser\"}, ...]'\n    ",
          "input_schema": {
            "properties": {
              "username": {
                "title": "Username",
                "type": "string"
              }
            },
            "required": [
              "username"
            ],
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 2,
      "tool_names": [
        "get_links",
        "get_nsfw_links"
      ]
    },
    "server_info_crawled": {
      "id": 497,
      "name": "Sherlock MCP Server",
      "author": "@qKitNp/sherlock_mcp",
      "overview": "A Model Context Protocol server that wraps the popular Sherlock OSINT (Open Source Intelligence) tool, enabling AI assistants to perform comprehensive username searches across 400+ social media platforms and websites. This server allows for automated digital footprint analysis, social media presence verification, and cybersecurity reconnaissance through Sherlock's proven username enumeration capabilities. Perfect for security researchers, digital investigators, and OSINT practitioners who want to integrate social media intelligence gathering into their AI-assisted workflows.",
      "repository_url": "https://github.com/qKitNp/sherlock_mcp",
      "homepage": "https://smithery.ai/server/@qKitNp/sherlock_mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "32",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@qKitNp_sherlock_mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "get_links",
          "description": "Search for a username across multiple social media platforms using Sherlock.\n    \n    Args:\n        username (str): The username to search for across social media platforms.\n        \n    Returns:\n        str: A JSON string containing a list of dictionaries with 'site' and 'url' keys\n             for each platform where the username was found.\n             Returns an error message if no username is provided.\n             \n    Example:\n        >>> get_links(\"testuser\")\n        '[{\"site\": \"GitHub\", \"url\": \"https://github.com/testuser\"}, ...]'\n    ",
          "input_schema": {
            "properties": {
              "username": {
                "title": "Username",
                "type": "string"
              }
            },
            "required": [
              "username"
            ],
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_nsfw_links",
          "description": "Search for a username across multiple social media platforms including NSFW platforms using Sherlock.\n    \n    Args:\n        username (str): The username to search for across social media platforms including NSFW platforms.\n        \n    Returns:\n        str: A JSON string containing a list of dictionaries with 'site' and 'url' keys\n             for each platform where the username was found.\n             Returns an error message if no username is provided.\n             \n    Example:\n        >>> get_nsfw_links(\"testuser\")\n        '[{\"site\": \"GitHub\", \"url\": \"https://github.com/testuser\"}, ...]'\n    ",
          "input_schema": {
            "properties": {
              "username": {
                "title": "Username",
                "type": "string"
              }
            },
            "required": [
              "username"
            ],
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@qKitNp/sherlock_mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@qKitNp/sherlock_mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0498.@qKitNp_sherlock_mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 488
  }
}