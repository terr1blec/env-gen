{
  "labels": {
    "analysis": "The MCP Server is primarily designed for network scanning and security assessment using the Nmap tool. It allows users to run customized network scans, retrieve and analyze scan results, and integrate scanning capabilities into workflows. The AI-powered insights suggest the server also aids in deriving security-related conclusions from scan data, emphasizing its role in network security monitoring and analysis.",
    "reasoning": "The primary label \"Network Security\" was chosen because the server's core functionality revolves around running network scans and analyzing security-related data. Secondary labels reflect additional aspects of the server such as data storage and analysis, and automation capabilities. The \"Network Security\" custom label is used to specifically highlight the server's primary domain, as the predefined categories do not fully capture this niche.",
    "primary_label": "Security & Authentication",
    "secondary_labels": [
      "Memory Management",
      "Data Analysis & Processing"
    ],
    "custom_label": "Network Security",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 752,
    "server_name": "Nmap Network Scanner Server",
    "rank_by_usage": 753,
    "usage_count": "9",
    "original_file": "../crawler/smithery/@imjdl_nmap-mcpserver.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@imjdl/nmap-mcpserver/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "run-nmap-scan",
          "description": "Run an nmap scan on specified targets",
          "input_schema": {
            "type": "object",
            "properties": {
              "target": {
                "type": "string",
                "description": "Target host or network (e.g., 192.168.1.1 or 192.168.1.0/24)"
              },
              "options": {
                "type": "string",
                "description": "Nmap options (e.g., -sV -p 1-1000)"
              }
            },
            "required": [
              "target"
            ]
          },
          "annotations": null
        },
        {
          "name": "get-scan-details",
          "description": "Get detailed information about a specific scan",
          "input_schema": {
            "type": "object",
            "properties": {
              "scan_id": {
                "type": "string",
                "description": "ID of the scan to retrieve"
              }
            },
            "required": [
              "scan_id"
            ]
          },
          "annotations": null
        },
        {
          "name": "list-all-scans",
          "description": "List all available scan results",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        }
      ],
      "tool_count": 3,
      "tool_names": [
        "run-nmap-scan",
        "get-scan-details",
        "list-all-scans"
      ]
    },
    "server_info_crawled": {
      "id": 752,
      "name": "Nmap Network Scanner Server",
      "author": "@imjdl/nmap-mcpserver",
      "overview": "Run network scans on specified targets using nmap with customizable options. Store, retrieve, and analyze scan results through AI-powered prompts to gain insights into network security and services. Easily integrate network scanning capabilities into your applications or workflows.",
      "repository_url": "https://github.com/imjdl/nmap-mcpserver",
      "homepage": "https://smithery.ai/server/@imjdl/nmap-mcpserver",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "9",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@imjdl_nmap-mcpserver.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "run-nmap-scan",
          "description": "Run an nmap scan on specified targets",
          "input_schema": {
            "type": "object",
            "properties": {
              "target": {
                "type": "string",
                "description": "Target host or network (e.g., 192.168.1.1 or 192.168.1.0/24)"
              },
              "options": {
                "type": "string",
                "description": "Nmap options (e.g., -sV -p 1-1000)"
              }
            },
            "required": [
              "target"
            ]
          },
          "annotations": null
        },
        {
          "name": "get-scan-details",
          "description": "Get detailed information about a specific scan",
          "input_schema": {
            "type": "object",
            "properties": {
              "scan_id": {
                "type": "string",
                "description": "ID of the scan to retrieve"
              }
            },
            "required": [
              "scan_id"
            ]
          },
          "annotations": null
        },
        {
          "name": "list-all-scans",
          "description": "List all available scan results",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@imjdl/nmap-mcpserver/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@imjdl/nmap-mcpserver/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0753.@imjdl_nmap-mcpserver_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 735
  }
}