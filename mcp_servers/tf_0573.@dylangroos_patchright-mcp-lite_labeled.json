{
  "labels": {
    "analysis": "Patchright Lite is designed to enable AI models to perform stealth browser automation tasks. Its core functionality includes browsing, interacting with web content, extracting information, and managing sessions while avoiding detection. The available tools (browse, interact, extract, close) suggest it's focused on web-related automation with anti-detection features, making it ideal for tasks like data gathering, content extraction, and web interaction without triggering anti-bot measures.",
    "reasoning": "The primary label \"Browser Automation\" is selected because the server's primary functionality revolves around stealth browsing, content interaction, and extraction. These are core aspects of browser automation. The secondary label \"Web Search & Research\" is added because the tools enable information gathering, which aligns with research tasks. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Browser Automation",
    "secondary_labels": [
      "Web Search & Research"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 572,
    "server_name": "Patchright Lite",
    "rank_by_usage": 573,
    "usage_count": "20",
    "original_file": "../crawler/smithery/@dylangroos_patchright-mcp-lite.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@dylangroos/patchright-mcp-lite/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "browse",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri",
                "description": "The URL to navigate to"
              },
              "headless": {
                "type": "boolean",
                "default": false,
                "description": "Whether to run the browser in headless mode"
              },
              "waitFor": {
                "type": "number",
                "default": 1000,
                "description": "Time to wait after page load (milliseconds)"
              }
            },
            "required": [
              "url"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "interact",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "browserId": {
                "type": "string",
                "description": "Browser ID from a previous browse operation"
              },
              "pageId": {
                "type": "string",
                "description": "Page ID from a previous browse operation"
              },
              "action": {
                "type": "string",
                "enum": [
                  "click",
                  "fill",
                  "select"
                ],
                "description": "The type of interaction to perform"
              },
              "selector": {
                "type": "string",
                "description": "CSS selector for the element to interact with"
              },
              "value": {
                "type": "string",
                "description": "Value for fill/select actions"
              }
            },
            "required": [
              "browserId",
              "pageId",
              "action",
              "selector"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "extract",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "browserId": {
                "type": "string",
                "description": "Browser ID from a previous browse operation"
              },
              "pageId": {
                "type": "string",
                "description": "Page ID from a previous browse operation"
              },
              "type": {
                "type": "string",
                "enum": [
                  "text",
                  "html",
                  "screenshot"
                ],
                "description": "Type of content to extract"
              }
            },
            "required": [
              "browserId",
              "pageId",
              "type"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "close",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "browserId": {
                "type": "string",
                "description": "Browser ID to close"
              }
            },
            "required": [
              "browserId"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 4,
      "tool_names": [
        "browse",
        "interact",
        "extract",
        "close"
      ]
    },
    "server_info_crawled": {
      "id": 572,
      "name": "Patchright Lite",
      "author": "@dylangroos/patchright-mcp-lite",
      "overview": "Provide stealth browser automation capabilities to AI models using a streamlined interface. Enable AI to browse, interact, extract content, and manage browser sessions with advanced anti-detection features. Integrate easily via the Model Context Protocol with standard input/output transport.",
      "repository_url": "https://github.com/dylangroos/patchright-mcp-lite",
      "homepage": "https://smithery.ai/server/@dylangroos/patchright-mcp-lite",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "20",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@dylangroos_patchright-mcp-lite.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "browse",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri",
                "description": "The URL to navigate to"
              },
              "headless": {
                "type": "boolean",
                "default": false,
                "description": "Whether to run the browser in headless mode"
              },
              "waitFor": {
                "type": "number",
                "default": 1000,
                "description": "Time to wait after page load (milliseconds)"
              }
            },
            "required": [
              "url"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "interact",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "browserId": {
                "type": "string",
                "description": "Browser ID from a previous browse operation"
              },
              "pageId": {
                "type": "string",
                "description": "Page ID from a previous browse operation"
              },
              "action": {
                "type": "string",
                "enum": [
                  "click",
                  "fill",
                  "select"
                ],
                "description": "The type of interaction to perform"
              },
              "selector": {
                "type": "string",
                "description": "CSS selector for the element to interact with"
              },
              "value": {
                "type": "string",
                "description": "Value for fill/select actions"
              }
            },
            "required": [
              "browserId",
              "pageId",
              "action",
              "selector"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "extract",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "browserId": {
                "type": "string",
                "description": "Browser ID from a previous browse operation"
              },
              "pageId": {
                "type": "string",
                "description": "Page ID from a previous browse operation"
              },
              "type": {
                "type": "string",
                "enum": [
                  "text",
                  "html",
                  "screenshot"
                ],
                "description": "Type of content to extract"
              }
            },
            "required": [
              "browserId",
              "pageId",
              "type"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "close",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "browserId": {
                "type": "string",
                "description": "Browser ID to close"
              }
            },
            "required": [
              "browserId"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@dylangroos/patchright-mcp-lite/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@dylangroos/patchright-mcp-lite/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0573.@dylangroos_patchright-mcp-lite_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 561
  }
}