{
  "labels": {
    "analysis": "The MCP Server focuses on facilitating interactions between LLMs and Sentry, a popular error tracking and monitoring platform. It allows for easy retrieval of individual event details or collections of project events, enabling LLMs to conduct detailed or summarized analysis of issues and errors. The tools provided (\"get_single_event\" and \"get_project_events\") are specifically designed for fetching Sentry data, which suggests that the server's core functionality revolves around error debugging, issue management, and application health monitoring.",
    "reasoning": "The primary label \"Development Tools\" is chosen because the server's functionality is directly aligned with software development and debugging workflows, particularly error analysis and issue tracking. \"API Integration\" is selected as a secondary label since the server acts as a bridge between LLMs and the Sentry API. \"Data Analysis & Processing\" is another relevant secondary label because the server enables LLMs to analyze and process error data for troubleshooting purposes.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "API Integration",
      "Data Analysis & Processing"
    ],
    "custom_label": "Sentry Integration",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2087,
    "server_name": "Sentry Issue MCP Server",
    "rank_by_usage": 2088,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@Leee62_sentry-issues-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Leee62/sentry-issues-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2087,
      "name": "Sentry Issue MCP Server",
      "author": "@Leee62/sentry-issues-mcp",
      "overview": "Provide easy access to Sentry issues and events for LLMs to analyze and retrieve detailed or summarized error information. Enable LLMs to fetch single event details or lists of project events with flexible modes for concise or comprehensive data. Simplify integration with Sentry to empower intelligent issue analysis and troubleshooting.",
      "repository_url": "https://github.com/Leee62/sentry-issues-mcp",
      "homepage": "https://smithery.ai/server/@Leee62/sentry-issues-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Leee62_sentry-issues-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "get_single_event",
          "description": "Deploy Server Sentry Issue MCP Server Claim Server @Leee62/sentry-issues-mcp Try in Playground get_single_event",
          "parameters": []
        },
        {
          "name": "get_project_events",
          "description": "get issue events by inputting sentry organization id or slug and sentry project name or slug",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Leee62/sentry-issues-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "sentryUserToken",
          "required": true,
          "description": "Sentry user auth token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Leee62/sentry-issues-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2088.@Leee62_sentry-issues-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1818
  }
}