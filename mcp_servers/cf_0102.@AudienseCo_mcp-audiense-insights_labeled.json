{
  "labels": {
    "analysis": "The MCP Server \"Audiense Insights\" is primarily focused on extracting marketing insights and audience analysis from Audiense reports. The tools available enable users to retrieve detailed information about specific intelligence reports, gather audience insights (demographics, behavioral traits, psychographics, etc.), compare audience influencers, get audience content engagement breakdowns, and generate comprehensive summaries of reports. This server helps marketers, researchers, and analysts understand audience characteristics, behaviors, and preferences to inform strategic decisions.",
    "reasoning": "The \"Marketing & Audience Analysis\" functionality is the core purpose of this server, so the primary label should reflect that. Secondary labels could include \"Web Search & Research\" for the broad research capabilities, and \"Data Analysis & Processing\" for the detailed audience metrics and insights.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "Web Search & Research",
      "Data Analysis & Processing"
    ],
    "custom_label": "Audience Intelligence Tools",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 101,
    "server_name": "Audiense Insights",
    "rank_by_usage": 102,
    "usage_count": "701",
    "original_file": "../crawler/smithery/@AudienseCo_mcp-audiense-insights.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@AudienseCo/mcp-audiense-insights/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 101,
      "name": "Audiense Insights",
      "author": "@AudienseCo/mcp-audiense-insights",
      "overview": "Extract marketing insights and audience analysis from Audiense reports.",
      "repository_url": "https://github.com/AudienseCo/mcp-audiense-insights",
      "homepage": "https://smithery.ai/server/@AudienseCo/mcp-audiense-insights",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "701",
      "success_rate": "99.64%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@AudienseCo_mcp-audiense-insights.json",
      "tools_count": 8,
      "tools": [
        {
          "name": "get-reports",
          "description": "Deploy Server Audiense Insights @AudienseCo/mcp-audiense-insights Try in Playground get-reports",
          "parameters": []
        },
        {
          "name": "get-report-info",
          "description": "Retrieves detailed information about a specific intelligence report, including its status, segmentation type, audience size, segments, and access links.",
          "parameters": []
        },
        {
          "name": "get-audience-insights",
          "description": "Retrieves aggregated insights for a given audience ID, providing statistical distributions across various attributes. Available insights include demographics (e.g., gender, age, country), behavioral traits (e.g., active hours, platform usage), psychographics (e.g., personality traits, interests), and socioeconomic factors (e.g., income, education status).",
          "parameters": []
        },
        {
          "name": "get-baselines",
          "description": "Retrieves available baselines, optionally filtered by country.",
          "parameters": [
            {
              "name": "country",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-categories",
          "description": "Retrieves the list of available affinity categories that can be used as the categories parameter in the compare-audience-influencers tool.",
          "parameters": []
        },
        {
          "name": "compare-audience-influencers",
          "description": "get-categories Retrieves the list of available affinity categories that can be used as the categories parameter in the compare-audience-influencers tool.",
          "parameters": []
        },
        {
          "name": "get-audience-content",
          "description": "Retrieves audience content engagement details for a given audience. This tool provides a detailed breakdown of the content an audience interacts with, including: - **Liked Content**: Popular posts, top domains, top emojis, top hashtags, top links, top media, and a word cloud. - **Shared Content**: Content that the audience shares, categorized similarly to liked content. - **Influential Content**: Content from influential accounts that impact the audience, with similar categorization. Each category contains: - **popularPost**: List of the most engaged posts. - **topDomains**: Most mentioned domains. - **topEmojis**: Most used emojis. - **topHashtags**: Most used hashtags. - **topLinks**: Most shared links. - **topMedia**: Media types shared and samples. - **wordcloud**: Frequently used words.",
          "parameters": []
        },
        {
          "name": "report-summary",
          "description": "Generates a comprehensive summary of an Audiense report, including segment details, top insights, and influencers.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@AudienseCo/mcp-audiense-insights/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "audienseClientSecret",
          "required": true,
          "description": "Client Secret for the Audiense API."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@AudienseCo/mcp-audiense-insights/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0102.@AudienseCo_mcp-audiense-insights_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 99
  }
}