{
  "labels": {
    "analysis": "The MCP Server is designed primarily for educational assessment and learning management. Its core functionality revolves around creating, managing, and executing quizzes, exams, and assessments within an educational ecosystem. The server supports user management, permission control, and integration with existing educational systems through an API. It also facilitates tracking quiz and exam results, providing detailed analytics for educators. Additionally, the server handles organizational structures like classes, courses, and SCORM modules, making it a comprehensive platform for digital learning infrastructure.",
    "reasoning": "The primary label \"Education\" was chosen because the server's tools and functionality are squarely focused on educational assessment and learning management, which aligns perfectly with this category. The secondary labels \"API Integration\" and \"Database Operations\" were selected because the server heavily relies on API interactions for its operations and manage various data entities like quizzes, exams, and users, indicating significant database functionality. The custom label \"Learning Management System (LMS)\" was added because while the \"Education\" label is broad, \"Learning Management System\" is a more specific descriptor of the server's role as a digital learning platform.",
    "primary_label": "Education",
    "secondary_labels": [
      "API Integration",
      "Database Operations"
    ],
    "custom_label": "Learning Management System (LMS)",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1801,
    "server_name": "EduBase MCP server",
    "rank_by_usage": 1802,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@EduBase_MCP.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@EduBase/MCP/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1801,
      "name": "EduBase MCP server",
      "author": "@EduBase/MCP",
      "overview": "Interact with EduBase through our MCP server. Create dynamic quizzes, manage secure exams, and automate comprehensive assessment workflows. This seamless integration empowers educators to create personalized learning experiences, conduct secure online examinations, and scale assessment solutions with enterprise-grade security and compliance. Ideal for educational institutions, corporate training departments, and certification providers seeking to transform their digital learning infrastructure with AI-powered capabilities. Integrate with your existing systems through our secure API.\n\nCheck out our GitHub page for more details and setup instructions!",
      "repository_url": "https://github.com/EduBase/MCP",
      "homepage": "https://smithery.ai/server/@EduBase/MCP",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@EduBase_MCP.json",
      "tools_count": 124,
      "tools": [
        {
          "name": "edubase_get_question",
          "description": "Deploy Server EduBase MCP server @EduBase/MCP Try in Playground edubase_get_question",
          "parameters": [
            {
              "name": "edubase_get_question",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_question",
          "description": "Publish or update a question. Questions are the atomic building blocks of the EduBase Quiz system and represent the lowest level in the hierarchy (Questions -> Quiz sets -> Exams).",
          "parameters": [
            {
              "name": "edubase_post_question",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_question",
          "description": "Permanently delete a Quiz question.",
          "parameters": [
            {
              "name": "edubase_delete_question",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_exams",
          "description": "List owned and managed exams. Exams are the highest level in the EduBase Quiz hierarchy, built from Quiz sets.",
          "parameters": [
            {
              "name": "edubase_get_exams",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_exam",
          "description": "Description not available",
          "parameters": [
            {
              "name": "edubase_get_exams",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_exam",
          "description": "Create a new exam from an existing Quiz set. Exams are at the top level of the EduBase Quiz hierarchy and MUST be created from existing Quiz sets. They are time-constrained, secured assessment instances of Quiz sets.",
          "parameters": [
            {
              "name": "edubase_post_exam",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_exam",
          "description": "Description not available",
          "parameters": [
            {
              "name": "edubase_delete_exam",
              "required": false,
              "type": "string"
            },
            {
              "name": "exam",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_exam_users",
          "description": "List all users on an exam.",
          "parameters": [
            {
              "name": "edubase_get_exam_users",
              "required": false,
              "type": "string"
            },
            {
              "name": "exam",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_exam_users",
          "description": "Assign user(s) to an exam.",
          "parameters": [
            {
              "name": "exam",
              "required": true,
              "type": "string"
            },
            {
              "name": "users",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_exam_users",
          "description": "Remove user(s) from an exam.",
          "parameters": [
            {
              "name": "exam",
              "required": true,
              "type": "string"
            },
            {
              "name": "users",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_exam_summary",
          "description": "Submit a new AI exam summary.",
          "parameters": [
            {
              "name": "edubase_post_exam_summary",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_quiz_play_results",
          "description": "Get detailed results for a specific Quiz play.",
          "parameters": [
            {
              "name": "edubase_get_quiz_play_results",
              "required": false,
              "type": "string"
            },
            {
              "name": "play",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_quiz_results_user",
          "description": "Get user results for a specific Quiz set.",
          "parameters": [
            {
              "name": "quiz",
              "required": true,
              "type": "string"
            },
            {
              "name": "user",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_exam_results_user",
          "description": "Get user results for a specific exam.",
          "parameters": [
            {
              "name": "exam",
              "required": true,
              "type": "string"
            },
            {
              "name": "user",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_exam_results_raw",
          "description": "Get raw results for a specific exam. - This endpoint returns raw results, including all answers given by the user. It is not meant to be displayed to the user. - This might require additional permissions.",
          "parameters": []
        },
        {
          "name": "edubase_get_quizes",
          "description": "List owned and managed Quiz sets. Quiz sets are named collections of questions that sit at the middle level of the EduBase Quiz hierarchy.",
          "parameters": [
            {
              "name": "edubase_get_quizes",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_quiz",
          "description": "Get/check Quiz set. Containing questions and powering Exams.",
          "parameters": [
            {
              "name": "edubase_get_quiz_play_results",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_quiz",
          "description": "Create a new Quiz set. Quiz sets are collections of questions that can be used for practice or to power multiple Exams.",
          "parameters": [
            {
              "name": "edubase_post_quiz",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_quiz",
          "description": "Remove/archive Quiz set.",
          "parameters": [
            {
              "name": "edubase_delete_quiz",
              "required": false,
              "type": "string"
            },
            {
              "name": "Quiz",
              "required": false,
              "type": "string"
            },
            {
              "name": "quiz",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_quiz_questions",
          "description": "List all questions and question groups in a Quiz set. Quiz sets contain questions (lowest level) and can be used by exams (highest level).",
          "parameters": [
            {
              "name": "edubase_get_quiz_questions",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_quiz_questions",
          "description": "Assign question(s) to a Quiz set, or one of its question group. Questions can exist independently from Quiz sets.",
          "parameters": [
            {
              "name": "edubase_post_quiz_questions",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_quiz_questions",
          "description": "Remove question(s) from a Quiz set, or one of its question group.",
          "parameters": [
            {
              "name": "edubase_delete_quiz_questions",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_users",
          "description": "List managed, non-generated users.",
          "parameters": [
            {
              "name": "List",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "search",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_user",
          "description": "Get/check user. Can be used to retrieve the caller user's ID by using 'me' as the user identification string.",
          "parameters": [
            {
              "name": "edubase_get_users",
              "required": false,
              "type": "string"
            },
            {
              "name": "List",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_user",
          "description": "Create new EduBase user account.",
          "parameters": [
            {
              "name": "edubase_post_user",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_user",
          "description": "Description not available",
          "parameters": [
            {
              "name": "edubase_delete_user",
              "required": false,
              "type": "string"
            },
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "user",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_user_name",
          "description": "Description not available",
          "parameters": [
            {
              "name": "edubase_get_user_name",
              "required": false,
              "type": "string"
            },
            {
              "name": "Get",
              "required": false,
              "type": "string"
            },
            {
              "name": "user",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_user_name",
          "description": "Update a user's name.",
          "parameters": [
            {
              "name": "edubase_post_user_name",
              "required": false,
              "type": "string"
            },
            {
              "name": "Update",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_user_group",
          "description": "Description not available",
          "parameters": [
            {
              "name": "edubase_get_user_group",
              "required": false,
              "type": "string"
            },
            {
              "name": "Get",
              "required": false,
              "type": "string"
            },
            {
              "name": "user",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_user_group",
          "description": "Update a user's group.",
          "parameters": [
            {
              "name": "Update",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "user",
              "required": true,
              "type": "string"
            },
            {
              "name": "group",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_user_login",
          "description": "Get latest valid login link for user.",
          "parameters": [
            {
              "name": "edubase_get_user_login",
              "required": false,
              "type": "string"
            },
            {
              "name": "user",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_user_login",
          "description": "Generate login link. If a valid link with the same settings exists, it will be returned instead of creating a new one.",
          "parameters": [
            {
              "name": "edubase_post_user_login",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_user_login",
          "description": "Delete a previously generated login link.",
          "parameters": [
            {
              "name": "url",
              "required": true,
              "type": "string"
            },
            {
              "name": "user",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_user_search",
          "description": "Lookup user by email, username or code.",
          "parameters": [
            {
              "name": "edubase_get_user_search",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_user_assume",
          "description": "Assume user for next requests with assume token.",
          "parameters": [
            {
              "name": "user",
              "required": true,
              "type": "string"
            },
            {
              "name": "password",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_user_assume",
          "description": "Description not available",
          "parameters": [
            {
              "name": "edubase_delete_user_assume",
              "required": false,
              "type": "string"
            },
            {
              "name": "Revoke",
              "required": false,
              "type": "string"
            },
            {
              "name": "assume",
              "required": false,
              "type": "string"
            },
            {
              "name": "token",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_classes",
          "description": "List owned and managed classes.",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "search",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_class",
          "description": "Description not available",
          "parameters": [
            {
              "name": "edubase_get_classes",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_class_assignments",
          "description": "List all assignments in a class.",
          "parameters": [
            {
              "name": "edubase_get_class_assignments",
              "required": false,
              "type": "string"
            },
            {
              "name": "class",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_class_members",
          "description": "List all members in a class.",
          "parameters": [
            {
              "name": "edubase_get_class_members",
              "required": false,
              "type": "string"
            },
            {
              "name": "class",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_class_members",
          "description": "Assign user(s) to a class. Updates memberships if already member of the class.",
          "parameters": [
            {
              "name": "edubase_post_class_members",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_class_members",
          "description": "Remove user(s) from a class.",
          "parameters": [
            {
              "name": "class",
              "required": true,
              "type": "string"
            },
            {
              "name": "users",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_classes_members",
          "description": "Assign user(s) to class(es). Updates memberships if already member of a class.",
          "parameters": [
            {
              "name": "edubase_post_classes_members",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_user_classes",
          "description": "List all classes a user is member of.",
          "parameters": [
            {
              "name": "edubase_get_user_classes",
              "required": false,
              "type": "string"
            },
            {
              "name": "user",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_user_classes",
          "description": "Assign user to class(es). Updates membership if already member of a class.",
          "parameters": [
            {
              "name": "edubase_post_user_classes",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_user_classes",
          "description": "Remove user from class(es).",
          "parameters": [
            {
              "name": "Remove",
              "required": false,
              "type": "string"
            },
            {
              "name": "user",
              "required": false,
              "type": "string"
            },
            {
              "name": "from",
              "required": false,
              "type": "string"
            },
            {
              "name": "classes",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_organizations",
          "description": "List owned and managed organizations.",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "search",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_organization",
          "description": "Get/check organization.",
          "parameters": [
            {
              "name": "edubase_get_organizations",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_organization_members",
          "description": "List all members in an organization.",
          "parameters": [
            {
              "name": "edubase_get_organization_members",
              "required": false,
              "type": "string"
            },
            {
              "name": "organization",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_organization_members",
          "description": "Assign user(s) to an organization. Updates memberships if already member of the organization.",
          "parameters": [
            {
              "name": "edubase_post_organization_members",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_organization_members",
          "description": "Remove user(s) from an organization.",
          "parameters": [
            {
              "name": "users",
              "required": true,
              "type": "string"
            },
            {
              "name": "organization",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_organizations_members",
          "description": "Assign user(s) to organization(s). Updates memberships if already member of an organization.",
          "parameters": [
            {
              "name": "edubase_post_organizations_members",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_user_organizations",
          "description": "List all organizations a user is member of.",
          "parameters": [
            {
              "name": "edubase_get_user_organizations",
              "required": false,
              "type": "string"
            },
            {
              "name": "user",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_user_organizations",
          "description": "Assign user to organization(s). Updates membership if already member of an organization.",
          "parameters": [
            {
              "name": "edubase_post_user_organizations",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_user_organizations",
          "description": "Remove user from organization(s).",
          "parameters": [
            {
              "name": "Remove",
              "required": false,
              "type": "string"
            },
            {
              "name": "user",
              "required": false,
              "type": "string"
            },
            {
              "name": "from",
              "required": false,
              "type": "string"
            },
            {
              "name": "organizations",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_tags",
          "description": "List owned and managed tags.",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "search",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_tag",
          "description": "Description not available",
          "parameters": [
            {
              "name": "edubase_get_tags",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_class_tags",
          "description": "List all attached tags of a class.",
          "parameters": [
            {
              "name": "edubase_get_class_tags",
              "required": false,
              "type": "string"
            },
            {
              "name": "class",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_class_tag",
          "description": "Check if tag is attached to a class.",
          "parameters": [
            {
              "name": "edubase_get_class_tags",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_class_tag",
          "description": "Attach tag to a class.",
          "parameters": [
            {
              "name": "tag",
              "required": true,
              "type": "string"
            },
            {
              "name": "class",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_class_tag",
          "description": "Remove a tag attachment from a class.",
          "parameters": [
            {
              "name": "tag",
              "required": true,
              "type": "string"
            },
            {
              "name": "class",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_course_tags",
          "description": "List all attached tags of a course.",
          "parameters": [
            {
              "name": "edubase_get_course_tags",
              "required": false,
              "type": "string"
            },
            {
              "name": "course",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_course_tag",
          "description": "Check if tag is attached to a course.",
          "parameters": [
            {
              "name": "edubase_get_course_tags",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_course_tag",
          "description": "Attach tag to a course.",
          "parameters": [
            {
              "name": "tag",
              "required": true,
              "type": "string"
            },
            {
              "name": "course",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_course_tag",
          "description": "Remove a tag attachment from a course.",
          "parameters": [
            {
              "name": "tag",
              "required": true,
              "type": "string"
            },
            {
              "name": "course",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_event_tags",
          "description": "List all attached tags of an event.",
          "parameters": [
            {
              "name": "edubase_get_event_tags",
              "required": false,
              "type": "string"
            },
            {
              "name": "event",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_event_tag",
          "description": "Check if tag is attached to an event.",
          "parameters": [
            {
              "name": "edubase_get_event_tags",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_event_tag",
          "description": "Attach tag to an event.",
          "parameters": [
            {
              "name": "tag",
              "required": true,
              "type": "string"
            },
            {
              "name": "event",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_event_tag",
          "description": "Remove a tag attachment from an event.",
          "parameters": [
            {
              "name": "tag",
              "required": true,
              "type": "string"
            },
            {
              "name": "event",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_exam_tags",
          "description": "List all attached tags of an exam.",
          "parameters": [
            {
              "name": "edubase_get_exam_tags",
              "required": false,
              "type": "string"
            },
            {
              "name": "exam",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_exam_tag",
          "description": "Check if tag is attached to an exam.",
          "parameters": [
            {
              "name": "edubase_get_exam_tags",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_exam_tag",
          "description": "Attach tag to an exam.",
          "parameters": [
            {
              "name": "tag",
              "required": true,
              "type": "string"
            },
            {
              "name": "exam",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_exam_tag",
          "description": "Remove a tag attachment from an exam.",
          "parameters": [
            {
              "name": "tag",
              "required": true,
              "type": "string"
            },
            {
              "name": "exam",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_integration_tags",
          "description": "List all attached tags of an integration.",
          "parameters": [
            {
              "name": "edubase_get_integration_tags",
              "required": false,
              "type": "string"
            },
            {
              "name": "integration",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_integration_tag",
          "description": "Check if tag is attached to an integration.",
          "parameters": [
            {
              "name": "edubase_get_integration_tags",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_integration_tag",
          "description": "Attach tag to an integration.",
          "parameters": [
            {
              "name": "tag",
              "required": true,
              "type": "string"
            },
            {
              "name": "integration",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_integration_tag",
          "description": "Remove a tag attachment from an integration.",
          "parameters": [
            {
              "name": "tag",
              "required": true,
              "type": "string"
            },
            {
              "name": "integration",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_organization_tags",
          "description": "List all attached tags of an organization.",
          "parameters": [
            {
              "name": "edubase_get_organization_tags",
              "required": false,
              "type": "string"
            },
            {
              "name": "organization",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_organization_tag",
          "description": "Check if tag is attached to an organization.",
          "parameters": [
            {
              "name": "edubase_get_organization_tags",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_organization_tag",
          "description": "Attach tag to an organization.",
          "parameters": [
            {
              "name": "tag",
              "required": true,
              "type": "string"
            },
            {
              "name": "organization",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_organization_tag",
          "description": "Remove a tag attachment from an organization.",
          "parameters": [
            {
              "name": "edubase_delete_organization_tag",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_quiz_tags",
          "description": "List all attached tags of a Quiz.",
          "parameters": [
            {
              "name": "edubase_get_quiz_tags",
              "required": false,
              "type": "string"
            },
            {
              "name": "quiz",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_quiz_tag",
          "description": "Check if tag is attached to a Quiz.",
          "parameters": [
            {
              "name": "edubase_get_quiz_tags",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_quiz_tag",
          "description": "Attach tag to a Quiz.",
          "parameters": [
            {
              "name": "tag",
              "required": true,
              "type": "string"
            },
            {
              "name": "quiz",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_quiz_tag",
          "description": "Remove a tag attachment from a Quiz.",
          "parameters": [
            {
              "name": "tag",
              "required": true,
              "type": "string"
            },
            {
              "name": "quiz",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_scorm_tags",
          "description": "List all attached tags of a SCORM learning material.",
          "parameters": [
            {
              "name": "edubase_get_scorm_tags",
              "required": false,
              "type": "string"
            },
            {
              "name": "scorm",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_scorm_tag",
          "description": "Check if tag is attached to a SCORM learning material.",
          "parameters": [
            {
              "name": "edubase_get_scorm_tags",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_scorm_tag",
          "description": "Attach tag to a SCORM learning material.",
          "parameters": [
            {
              "name": "tag",
              "required": true,
              "type": "string"
            },
            {
              "name": "scorm",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_scorm_tag",
          "description": "Remove a tag attachment from a SCORM learning material.",
          "parameters": [
            {
              "name": "tag",
              "required": true,
              "type": "string"
            },
            {
              "name": "scorm",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_video_tags",
          "description": "List all attached tags of a video.",
          "parameters": [
            {
              "name": "edubase_get_video_tags",
              "required": false,
              "type": "string"
            },
            {
              "name": "video",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_video_tag",
          "description": "Check if tag is attached to a video.",
          "parameters": [
            {
              "name": "edubase_get_video_tags",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_video_tag",
          "description": "Attach tag to a video.",
          "parameters": [
            {
              "name": "tag",
              "required": true,
              "type": "string"
            },
            {
              "name": "video",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_video_tag",
          "description": "Remove a tag attachment from a video.",
          "parameters": [
            {
              "name": "tag",
              "required": true,
              "type": "string"
            },
            {
              "name": "video",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_class_permission",
          "description": "Check if a user has permission on a class.",
          "parameters": [
            {
              "name": "edubase_get_class_permission",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_class_permission",
          "description": "Create new permission for a user on a class.",
          "parameters": [
            {
              "name": "edubase_post_class_permission",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_class_permission",
          "description": "Remove a user permission from a class.",
          "parameters": [
            {
              "name": "edubase_delete_class_permission",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_course_permission",
          "description": "Check if a user has permission on a course.",
          "parameters": [
            {
              "name": "edubase_get_course_permission",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_course_permission",
          "description": "Create new permission for a user on a course.",
          "parameters": [
            {
              "name": "edubase_post_course_permission",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_course_permission",
          "description": "Remove a user permission from a course.",
          "parameters": [
            {
              "name": "edubase_delete_course_permission",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_event_permission",
          "description": "Check if a user has permission on an event.",
          "parameters": [
            {
              "name": "edubase_get_event_permission",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_event_permission",
          "description": "Create new permission for a user on an event.",
          "parameters": [
            {
              "name": "edubase_post_event_permission",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_event_permission",
          "description": "Remove a user permission from an event.",
          "parameters": [
            {
              "name": "edubase_delete_event_permission",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_exam_permission",
          "description": "Check if a user has permission on an exam.",
          "parameters": [
            {
              "name": "exam",
              "required": true,
              "type": "string"
            },
            {
              "name": "user",
              "required": true,
              "type": "string"
            },
            {
              "name": "permission",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_exam_permission",
          "description": "Create new permission for a user on an exam.",
          "parameters": [
            {
              "name": "edubase_post_exam_permission",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_exam_permission",
          "description": "Remove a user permission from an exam.",
          "parameters": [
            {
              "name": "exam",
              "required": true,
              "type": "string"
            },
            {
              "name": "user",
              "required": true,
              "type": "string"
            },
            {
              "name": "permission",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_integration_permission",
          "description": "Check if a user has permission on an integration.",
          "parameters": [
            {
              "name": "edubase_get_integration_permission",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_integration_permission",
          "description": "Create new permission for a user on an integration.",
          "parameters": [
            {
              "name": "edubase_post_integration_permission",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_integration_permission",
          "description": "Remove a user permission from an integration.",
          "parameters": [
            {
              "name": "edubase_delete_integration_permission",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_organization_permission",
          "description": "Check if a user has permission on an organization.",
          "parameters": [
            {
              "name": "edubase_get_organization_permission",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_organization_permission",
          "description": "Create new permission for a user on an organization.",
          "parameters": [
            {
              "name": "edubase_post_organization_permission",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_organization_permission",
          "description": "Remove a user permission from an organization.",
          "parameters": [
            {
              "name": "edubase_delete_organization_permission",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_quiz_permission",
          "description": "Check if a user has permission on a quiz.",
          "parameters": [
            {
              "name": "quiz",
              "required": true,
              "type": "string"
            },
            {
              "name": "user",
              "required": true,
              "type": "string"
            },
            {
              "name": "permission",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_quiz_permission",
          "description": "Create new permission for a user on a quiz.",
          "parameters": [
            {
              "name": "edubase_post_quiz_permission",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_quiz_permission",
          "description": "Remove a user permission from a quiz.",
          "parameters": [
            {
              "name": "quiz",
              "required": true,
              "type": "string"
            },
            {
              "name": "user",
              "required": true,
              "type": "string"
            },
            {
              "name": "permission",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_scorm_permission",
          "description": "Check if a user has permission on a SCORM learning material.",
          "parameters": [
            {
              "name": "edubase_get_scorm_permission",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_scorm_permission",
          "description": "Create new permission for a user on a SCORM learning material.",
          "parameters": [
            {
              "name": "edubase_post_scorm_permission",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_scorm_permission",
          "description": "Remove a user permission from a SCORM learning material.",
          "parameters": [
            {
              "name": "edubase_delete_scorm_permission",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_tag_permission",
          "description": "Check if a user has permission on a tag.",
          "parameters": [
            {
              "name": "tag",
              "required": true,
              "type": "string"
            },
            {
              "name": "user",
              "required": true,
              "type": "string"
            },
            {
              "name": "permission",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_tag_permission",
          "description": "Create new permission for a user on a tag.",
          "parameters": [
            {
              "name": "tag",
              "required": true,
              "type": "string"
            },
            {
              "name": "user",
              "required": true,
              "type": "string"
            },
            {
              "name": "permission",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_tag_permission",
          "description": "Remove a user permission from a tag.",
          "parameters": [
            {
              "name": "tag",
              "required": true,
              "type": "string"
            },
            {
              "name": "user",
              "required": true,
              "type": "string"
            },
            {
              "name": "permission",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_get_video_permission",
          "description": "Check if a user has permission on a video.",
          "parameters": [
            {
              "name": "edubase_get_video_permission",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_video_permission",
          "description": "Create new permission for a user on a video.",
          "parameters": [
            {
              "name": "edubase_post_video_permission",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_delete_video_permission",
          "description": "Remove a user permission from a video.",
          "parameters": [
            {
              "name": "edubase_delete_video_permission",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edubase_post_custom_metric",
          "description": "Update a custom metric.",
          "parameters": [
            {
              "name": "Update",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "custom",
              "required": false,
              "type": "string"
            },
            {
              "name": "value",
              "required": true,
              "type": "string"
            },
            {
              "name": "metric",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@EduBase/MCP/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "edubaseApiKey",
          "required": true,
          "description": "The secret key for the EduBase API"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@EduBase/MCP/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1802.@EduBase_MCP_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1603
  }
}