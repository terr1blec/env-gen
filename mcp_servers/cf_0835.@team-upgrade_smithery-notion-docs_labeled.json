{
  "labels": {
    "analysis": "The MCP Notion RAG Server primarily functions as a tool for intelligent documentation search and retrieval, specifically designed for developers. It bridges Notion workspaces with development environments using RAG (Retrieval-Augmented Generation) technology, enabling semantic search and context-aware access to documentation. The tools available focus on searching, syncing, and using Notion documents within a development workflow, optimized for IDE integration.",
    "reasoning": "The primary functionality of providing intelligent access to Notion documentation via semantic search and RAG aligns most closely with the Memory Management category, as it deals with knowledge storage, retrieval, and organization. Secondary labels of Web Search & Research and Development Tools are appropriate because of its search capabilities and integration with developer workflows. No custom label is needed as the functionality is well-covered by predefined categories.",
    "primary_label": "Memory Management",
    "secondary_labels": [
      "Web Search & Research",
      "Development Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 834,
    "server_name": "Notion RAG: Intelligent Documentation Search",
    "rank_by_usage": 835,
    "usage_count": "6",
    "original_file": "../crawler/smithery/@team-upgrade_smithery-notion-docs.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@team-upgrade/smithery-notion-docs/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 834,
      "name": "Notion RAG: Intelligent Documentation Search",
      "author": "@team-upgrade/smithery-notion-docs",
      "overview": "This server acts as a bridge between your Notion workspace and your development environment, providing intelligent access to your documentation right within your IDE. Leveraging a Retrieval-Augmented Generation (RAG) system, it syncs your Notion pages, indexes them into a Pinecone vector database, and allows you to perform semantic searches using powerful AI models from OpenAI or Google. Designed for seamless integration with tools like Cursor, it uses the Model Context Protocol (MCP) to make your entire Notion knowledge base available as a development context. Developers can quickly find relevant guides, API documentation, or project notes without context switching.\n\nKey Features:\n\nDirect IDE Integration: Access Notion docs via MCP in supported IDEs like Cursor.\nIntelligent RAG System: Get context-aware search results powered by AI.\nAutomatic Sync: Keeps your knowledge base up-to-date with your Notion workspace.\nFlexible API: Includes a REST API for custom integrations.\nPowered by: LangChain, Pinecone, OpenAI, and Google AI.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@team-upgrade/smithery-notion-docs",
      "remote_or_local": "Remote",
      "license": "@team-upgrade/smithery-notion-docs",
      "usage_count": "6",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@team-upgrade_smithery-notion-docs.json",
      "tools_count": 7,
      "tools": [
        {
          "name": "search_notion_docs",
          "description": "Deploy Server Notion RAG: Intelligent Documentation Search @team-upgrade/smithery-notion-docs Try in Playground search_notion_docs",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "topic",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "generate_dev_context",
          "description": "Generate AI summary and context for development work",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "topic",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "sync_notion_docs",
          "description": "Sync Notion documents to the RAG system",
          "parameters": [
            {
              "name": "sync_notion_docs",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "preview_notion_docs",
          "description": "Preview Notion documents to be synced (no actual sync)",
          "parameters": [
            {
              "name": "preview_notion_docs",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "ask_notion",
          "description": "Answer questions based on Notion documents",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "question",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "check_system_status",
          "description": "Check the status of the Notion RAG system",
          "parameters": [
            {
              "name": "check_system_status",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "hello",
          "description": "Simple greeting message",
          "parameters": [
            {
              "name": "hello",
              "required": false,
              "type": "string"
            },
            {
              "name": "Simple",
              "required": false,
              "type": "string"
            },
            {
              "name": "greeting",
              "required": false,
              "type": "string"
            },
            {
              "name": "message",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@team-upgrade/smithery-notion-docs/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "googleAiKey",
          "required": true,
          "description": "Google AI API key"
        },
        {
          "name": "notionToken",
          "required": true,
          "description": "Notion API key"
        },
        {
          "name": "openaiApiKey",
          "required": true,
          "description": "OpenAI API key"
        },
        {
          "name": "pineconeApiKey",
          "required": true,
          "description": "Pinecone API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@team-upgrade/smithery-notion-docs/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0835.@team-upgrade_smithery-notion-docs_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 816
  }
}