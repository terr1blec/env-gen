{
  "labels": {
    "analysis": "The MCP Server \"AILint\" focuses on analyzing code in real-time to detect quality issues, security vulnerabilities, and architectural problems. It provides intelligent suggestions based on software engineering best practices to improve code maintainability and security. The primary tool \"analyze-code\" suggests that the server performs static code analysis, while \"health-check\" indicates a diagnostic or monitoring capability. This server enhances developer workflows by integrating with AI assistants and IDEs, making it a valuable tool for software development.",
    "reasoning": "The primary label is \"Development Tools\" because the server's core functionality revolves around code analysis and improvement, which are essential for software development. The secondary label \"Security & Authentication\" is chosen due to its focus on detecting security vulnerabilities. The secondary label \"API Integration\" is included because it likely offers seamless integration with other tools or IDEs, although this is implicit rather than explicitly stated.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Security & Authentication",
      "API Integration"
    ],
    "custom_label": "Code Quality & Architecture Analysis",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 914,
    "server_name": "AILint",
    "rank_by_usage": 915,
    "usage_count": "4",
    "original_file": "../crawler/smithery/@lucianfialho_mcp-ailint.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@lucianfialho/mcp-ailint/mcp?config=eyJydWxlc2V0cyI6IFsidW5pdmVyc2FsIl0sICJwcm9qZWN0UGF0aCI6ICIiLCAiZ2l0aHViRW5hYmxlZCI6IHRydWV9&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "Connection timeout (20 seconds)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 914,
      "name": "AILint",
      "author": "@lucianfialho/mcp-ailint",
      "overview": "Analyze your code in real-time to detect quality issues, security vulnerabilities, and architectural problems. Receive intelligent suggestions based on proven software engineering principles to improve your code's maintainability and security. Integrate seamlessly with AI assistants and IDEs to enhance your development workflow.",
      "repository_url": "https://github.com/lucianfialho/mcp-ailint",
      "homepage": "https://smithery.ai/server/@lucianfialho/mcp-ailint",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "4",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@lucianfialho_mcp-ailint.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "analyze-code",
          "description": "Deploy Server @lucianfialho/mcp-ailint Try in Playground analyze-code",
          "parameters": []
        },
        {
          "name": "health-check",
          "description": "Comprehensive health check",
          "parameters": [
            {
              "name": "Comprehensive",
              "required": false,
              "type": "string"
            },
            {
              "name": "health",
              "required": false,
              "type": "string"
            },
            {
              "name": "check",
              "required": false,
              "type": "string"
            },
            {
              "name": "detailed",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"rulesets\": [\n    \"universal\"\n  ],\n  \"projectPath\": \"\",\n  \"githubEnabled\": true\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@lucianfialho/mcp-ailint/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"rulesets\": [\n    \"universal\"\n  ],\n  \"projectPath\": \"\",\n  \"githubEnabled\": true\n}",
      "python_sdk_url": "https://server.smithery.ai/@lucianfialho/mcp-ailint/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "cf_0915.@lucianfialho_mcp-ailint_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 895
  }
}