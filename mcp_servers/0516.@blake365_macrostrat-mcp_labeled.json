{
  "labels": {
    "analysis": "The MCP Server is primarily focused on providing access to geologic data through natural language queries. Its tools allow users to retrieve information about geologic units, stratigraphic columns, minerals, and time periods. The server facilitates the analysis of geological data and can generate graphics from this data, making it useful for geoscientists, researchers, and educators in the field of geology.",
    "reasoning": "The primary label \"Geoscience\" was chosen because the server's core functionality revolves around geological data and analysis. The secondary label \"Data Analysis & Processing\" was selected because the server enables the transformation and visualization of geologic data. The secondary label \"Research Tools\" was chosen because it supports academic and scientific research in geosciences. These labels collectively represent the server's primary use cases in geologic research and data analysis.",
    "primary_label": "Operating System",
    "secondary_labels": [
      "Data Analysis & Processing",
      "Web Search & Research"
    ],
    "custom_label": "Geological Data Query",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 515,
    "server_name": "Macrostrat API Server",
    "rank_by_usage": 516,
    "usage_count": "30",
    "original_file": "../crawler/smithery/@blake365_macrostrat-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@blake365/macrostrat-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "find-columns",
          "description": "Query Macrostrat stratigraphic columns",
          "input_schema": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number",
                "description": "A valid latitude in decimal degrees"
              },
              "lng": {
                "type": "number",
                "description": "A valid longitude in decimal degrees"
              },
              "adjacents": {
                "type": "boolean",
                "description": "Include adjacent columns"
              },
              "responseType": {
                "type": "string",
                "description": "The length of response long or short",
                "enum": [
                  "long",
                  "short"
                ],
                "default": "long"
              }
            },
            "required": [
              "lat",
              "lng",
              "responseType"
            ]
          },
          "annotations": null
        },
        {
          "name": "find-units",
          "description": "Query Macrostrat geologic units",
          "input_schema": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number",
                "description": "A valid latitude in decimal degrees"
              },
              "lng": {
                "type": "number",
                "description": "A valid longitude in decimal degrees"
              },
              "responseType": {
                "type": "string",
                "description": "The length of response long or short. Long provides lots of good details",
                "enum": [
                  "long",
                  "short"
                ],
                "default": "long"
              }
            },
            "required": [
              "lat",
              "lng",
              "responseType"
            ]
          },
          "annotations": null
        },
        {
          "name": "defs",
          "description": "Routes giving access to standard fields and dictionaries used in Macrostrat",
          "input_schema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "The endpoint to query",
                "enum": [
                  "lithologies",
                  "structures",
                  "columns",
                  "econs",
                  "minerals",
                  "timescales",
                  "environments",
                  "strat_names",
                  "measurements",
                  "intervals"
                ]
              },
              "parameters": {
                "type": "string",
                "description": "parameters to pass to the endpoint"
              }
            },
            "required": [
              "endpoint",
              "parameters"
            ]
          },
          "annotations": null
        },
        {
          "name": "defs-autocomplete",
          "description": "Quickly retrieve all definitions matching a query. Limited to 100 results",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "the search term"
              }
            },
            "required": [
              "query"
            ]
          },
          "annotations": null
        },
        {
          "name": "mineral-info",
          "description": "Get information about a mineral, use one property",
          "input_schema": {
            "type": "object",
            "properties": {
              "mineral": {
                "type": "string",
                "description": "The name of the mineral"
              },
              "mineral_type": {
                "type": "string",
                "description": "The type of mineral"
              },
              "element": {
                "type": "string",
                "description": "An element that the mineral is made of"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "timescale",
          "description": "Get information about a time period",
          "input_schema": {
            "type": "object",
            "properties": {
              "age": {
                "type": "number"
              }
            }
          },
          "annotations": null
        }
      ],
      "tool_count": 6,
      "tool_names": [
        "find-columns",
        "find-units",
        "defs",
        "defs-autocomplete",
        "mineral-info",
        "timescale"
      ]
    },
    "server_info_crawled": {
      "id": 515,
      "name": "Macrostrat API Server",
      "author": "@blake365/macrostrat-mcp",
      "overview": "Query comprehensive geologic data and information using natural language. Analyze geological data to enhance understanding and create graphics from the data. Access a wide range of geologic units, minerals, and timescales effortlessly.",
      "repository_url": "https://github.com/blake365/macrostrat-mcp",
      "homepage": "https://smithery.ai/server/@blake365/macrostrat-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "30",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@blake365_macrostrat-mcp.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "find-columns",
          "description": "Query Macrostrat stratigraphic columns",
          "input_schema": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number",
                "description": "A valid latitude in decimal degrees"
              },
              "lng": {
                "type": "number",
                "description": "A valid longitude in decimal degrees"
              },
              "adjacents": {
                "type": "boolean",
                "description": "Include adjacent columns"
              },
              "responseType": {
                "type": "string",
                "description": "The length of response long or short",
                "enum": [
                  "long",
                  "short"
                ],
                "default": "long"
              }
            },
            "required": [
              "lat",
              "lng",
              "responseType"
            ]
          },
          "annotations": null
        },
        {
          "name": "find-units",
          "description": "Query Macrostrat geologic units",
          "input_schema": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number",
                "description": "A valid latitude in decimal degrees"
              },
              "lng": {
                "type": "number",
                "description": "A valid longitude in decimal degrees"
              },
              "responseType": {
                "type": "string",
                "description": "The length of response long or short. Long provides lots of good details",
                "enum": [
                  "long",
                  "short"
                ],
                "default": "long"
              }
            },
            "required": [
              "lat",
              "lng",
              "responseType"
            ]
          },
          "annotations": null
        },
        {
          "name": "defs",
          "description": "Routes giving access to standard fields and dictionaries used in Macrostrat",
          "input_schema": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string",
                "description": "The endpoint to query",
                "enum": [
                  "lithologies",
                  "structures",
                  "columns",
                  "econs",
                  "minerals",
                  "timescales",
                  "environments",
                  "strat_names",
                  "measurements",
                  "intervals"
                ]
              },
              "parameters": {
                "type": "string",
                "description": "parameters to pass to the endpoint"
              }
            },
            "required": [
              "endpoint",
              "parameters"
            ]
          },
          "annotations": null
        },
        {
          "name": "defs-autocomplete",
          "description": "Quickly retrieve all definitions matching a query. Limited to 100 results",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "the search term"
              }
            },
            "required": [
              "query"
            ]
          },
          "annotations": null
        },
        {
          "name": "mineral-info",
          "description": "Get information about a mineral, use one property",
          "input_schema": {
            "type": "object",
            "properties": {
              "mineral": {
                "type": "string",
                "description": "The name of the mineral"
              },
              "mineral_type": {
                "type": "string",
                "description": "The type of mineral"
              },
              "element": {
                "type": "string",
                "description": "An element that the mineral is made of"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "timescale",
          "description": "Get information about a time period",
          "input_schema": {
            "type": "object",
            "properties": {
              "age": {
                "type": "number"
              }
            }
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@blake365/macrostrat-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@blake365/macrostrat-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0516.@blake365_macrostrat-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 505
  }
}