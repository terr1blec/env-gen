{
  "labels": {
    "analysis": "The MCP Server \"AlibabaCloud DMS Unified Data Gateway\" focuses on providing a unified platform for managing and interacting with diverse data sources through AI-enhanced tools. Its core functionality includes accessing multiple databases, converting natural language queries to SQL, executing SQL scripts, and retrieving detailed database metadata. The server simplifies cross-source data operations with secure access control, making it suitable for data management, analysis, and querying tasks across heterogeneous environments.",
    "reasoning": "The primary label \"Database Operations\" is chosen because the server's core functionality revolves around managing and querying databases, including searching, retrieving metadata, and executing SQL. The secondary label \"Data Analysis & Processing\" is relevant due to its natural language to SQL conversion and execution capabilities, which facilitate data analysis. The secondary label \"AI/ML Tools\" is also applicable because of the AI-powered natural language processing for SQL generation. No custom label is needed as the server fits well within the predefined categories.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Data Analysis & Processing",
      "AI/ML Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2012,
    "server_name": "AlibabaCloud DMS Unified Data Gateway",
    "rank_by_usage": 2013,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@aliyun_alibabacloud-dms-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@aliyun/alibabacloud-dms-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2012,
      "name": "AlibabaCloud DMS Unified Data Gateway",
      "author": "@aliyun/alibabacloud-dms-mcp-server",
      "overview": "Provide AI-powered unified data management with seamless access to over 30+ data sources through a multi-cloud universal data gateway. Enable natural language to SQL conversion, secure data retrieval, and fine-grained access control to simplify cross-source data operations. Enhance productivity by integrating metadata access and SQL execution capabilities in one standardized platform.",
      "repository_url": "https://github.com/aliyun/alibabacloud-dms-mcp-server",
      "homepage": "https://smithery.ai/server/@aliyun/alibabacloud-dms-mcp-server",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@aliyun_alibabacloud-dms-mcp-server.json",
      "tools_count": 8,
      "tools": [
        {
          "name": "addInstance",
          "description": "Deploy Server AlibabaCloud DMS Unified Data Gateway Claim Server @aliyun/alibabacloud-dms-mcp-server Try in Playground addInstance",
          "parameters": []
        },
        {
          "name": "getInstance",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "searchDatabase",
          "description": "Search databases in DMS based on schemaName. This tool allows searching for database instances in the DMS using a provided search key(schemaName). It supports pagination to handle large result sets efficiently.",
          "parameters": []
        },
        {
          "name": "getDatabase",
          "description": "Retrieve detailed information about a specific database from DMS. This tool fetches metadata for a database instance in the DMS based on connection parameters and schema name. Supports Oracle-specific SID specification. If you don't know host port, please use searchDatabase tool instead.",
          "parameters": []
        },
        {
          "name": "listTable",
          "description": "Search for database tables in DMS based on databaseId and tableName. This tool allows searching for database tables in the DMS if databaseId is known. If you don't known databaseId, you could obtained via getDatabase tool.",
          "parameters": []
        },
        {
          "name": "getTableDetailInfo",
          "description": "Retrieve detailed metadata information about a specific database table including schema and index details.",
          "parameters": []
        },
        {
          "name": "executeScript",
          "description": "Execute SQL script against a database in DMS and return structured results.",
          "parameters": []
        },
        {
          "name": "nl2sql",
          "description": "Generate SQL from natural language questions about database data. This tool converts natural language questions into SQL queries that can be executed against a database. If you don't have the database_id, use the searchDatabase tool first to identify the correct database. The sql generated could be executed via DMS executeScript tool provided in this server if necessary.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@aliyun/alibabacloud-dms-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "alibabaCloudAccessKeyId",
          "required": true,
          "description": "Alibaba Cloud Access Key ID"
        },
        {
          "name": "alibabaCloudAccessKeySecret",
          "required": true,
          "description": "Alibaba Cloud Access Key Secret"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@aliyun/alibabacloud-dms-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2013.@aliyun_alibabacloud-dms-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1756
  }
}