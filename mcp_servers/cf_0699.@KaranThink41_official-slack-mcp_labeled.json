{
  "labels": {
    "analysis": "The MCP Server is designed for automating and streamlining Slack workspace interactions. It provides tools for posting messages, managing conversations, retrieving user and channel information, and monitoring mentions. The primary purpose is to enhance communication and productivity within Slack by automating routine tasks and integrating Slack API functionality into broader workflows.",
    "reasoning": "The primary label \"Communication Tools\" was chosen because the server's core functionality revolves around Slack interactions, which is inherently about communication. The secondary labels \"Daily Productivity\" and \"API Integration\" were selected because the server helps streamline workflows (productivity) and interacts with the Slack API (integration). No custom label is needed as the predefined categories sufficiently cover the server's functionality.",
    "primary_label": "Communication Tools",
    "secondary_labels": [
      "Daily Productivity",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 698,
    "server_name": "Slack Workspace Automation Server",
    "rank_by_usage": 699,
    "usage_count": "11",
    "original_file": "../crawler/smithery/@KaranThink41_official-slack-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@KaranThink41/official-slack-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 698,
      "name": "Slack Workspace Automation Server",
      "author": "@KaranThink41/official-slack-mcp",
      "overview": "Automate your Slack workspace interactions by posting messages, replying to threads, adding reactions, and fetching channel or user information. Streamline Slack communication and management with easy-to-use tools accessible via the Model Context Protocol. Enhance productivity by integrating Slack API capabilities directly into your workflows.",
      "repository_url": "https://github.com/KaranThink41/Official-Slack-MCP",
      "homepage": "https://smithery.ai/server/@KaranThink41/official-slack-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "11",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@KaranThink41_official-slack-mcp.json",
      "tools_count": 9,
      "tools": [
        {
          "name": "channels_list_on_slack",
          "description": "Deploy Server Slack Workspace Automation Server @KaranThink41/official-slack-mcp Try in Playground channels_list_on_slack",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "cursor",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "send_message_on_slack",
          "description": "Post a new message to a Slack channel. Provide either channel_id or channel_name.",
          "parameters": [
            {
              "name": "send_message_on_slack",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "reply_to_thread_on_slack",
          "description": "Reply to a specific message thread in Slack. Provide either channel_id or channel_name.",
          "parameters": [
            {
              "name": "text",
              "required": true,
              "type": "string"
            },
            {
              "name": "thread_ts",
              "required": true,
              "type": "string"
            },
            {
              "name": "channel_id",
              "required": false,
              "type": "string"
            },
            {
              "name": "channel_name",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_channel_history_on_slack",
          "description": "Get recent messages from a channel. Provide either channel_id or channel_name.",
          "parameters": [
            {
              "name": "get_channel_history_on_slack",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_thread_replies_on_slack",
          "description": "Get all replies in a message thread. Provide either channel_id or channel_name.",
          "parameters": [
            {
              "name": "get_thread_replies_on_slack",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_users_on_slack",
          "description": "Get a list of all users in the workspace with their basic profile information",
          "parameters": [
            {
              "name": "get_users_on_slack",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_user_profile_on_slack",
          "description": "Get detailed profile information for a specific user",
          "parameters": [
            {
              "name": "get_user_profile_on_slack",
              "required": false,
              "type": "string"
            },
            {
              "name": "user_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_channel_messages_on_slack",
          "description": "Fetch the last N messages from a Slack channel (by channel_id or channel_name).",
          "parameters": [
            {
              "name": "get_channel_messages_on_slack",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_mentions_on_slack",
          "description": "Fetch recent messages where the bot/user is mentioned (optionally by channel).",
          "parameters": [
            {
              "name": "get_mentions_on_slack",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@KaranThink41/official-slack-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "SLACK_BOT_TOKEN",
          "required": true,
          "description": "The Bot User OAuth Token for the Slack app"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@KaranThink41/official-slack-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0699.@KaranThink41_official-slack-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 682
  }
}