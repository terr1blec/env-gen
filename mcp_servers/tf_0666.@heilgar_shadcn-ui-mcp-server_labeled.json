{
  "labels": {
    "analysis": "The MCP Server is designed to provide standardized access to shadcn/ui component references through an MCP interface. It allows LLMs and applications to query and retrieve UI component details efficiently, thus enhancing developer workflows by integrating component metadata directly into tools. The available tools include listing components/blocks, retrieving their documentation, and installing components/blocks, indicating a focus on UI development resource management.",
    "reasoning": "The primary functionality aligns with Development Tools as it provides access to UI component references, documentation, and installation capabilities, which are essential for developers. It also integrates with UI/UX development workflows, making \"Content Creation\" a relevant secondary label. The server's role in organizing and providing component metadata suggests it could also be categorized under \"File Management\" or \"Database Operations,\" but these fit less precisely. No custom label is needed as the predefined labels adequately cover the core functionality.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Content Creation"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 665,
    "server_name": "Shadcn UI Component Reference Server",
    "rank_by_usage": 666,
    "usage_count": "13",
    "original_file": "../crawler/smithery/@heilgar_shadcn-ui-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@heilgar/shadcn-ui-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "list-components",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-component-docs",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "component": {
                "type": "string",
                "description": "Name of the component to get documentation for"
              }
            },
            "required": [
              "component"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "install-component",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "component": {
                "type": "string",
                "description": "Name of the component to install"
              },
              "runtime": {
                "type": "string",
                "description": "User runtime (npm, pnpm, yarn, bun)"
              }
            },
            "required": [
              "component"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "list-blocks",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-block-docs",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "block": {
                "type": "string",
                "description": "Name of the block to get documentation for"
              }
            },
            "required": [
              "block"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "install-blocks",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "block": {
                "type": "string",
                "description": "Name of the block to install"
              },
              "runtime": {
                "type": "string",
                "description": "User runtime (npm, pnpm, yarn, bun)"
              }
            },
            "required": [
              "block"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 6,
      "tool_names": [
        "list-components",
        "get-component-docs",
        "install-component",
        "list-blocks",
        "get-block-docs",
        "install-blocks"
      ]
    },
    "server_info_crawled": {
      "id": 665,
      "name": "Shadcn UI Component Reference Server",
      "author": "@heilgar/shadcn-ui-mcp-server",
      "overview": "Provide seamless access to shadcn/ui component references through a standardized MCP interface. Enable LLMs and applications to query and retrieve UI component details efficiently. Enhance developer workflows by integrating component metadata directly into your tools.",
      "repository_url": "https://github.com/heilgar/shadcn-ui-mcp-server",
      "homepage": "https://smithery.ai/server/@heilgar/shadcn-ui-mcp-server",
      "remote_or_local": "Remote",
      "license": "Not specified",
      "usage_count": "13",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@heilgar_shadcn-ui-mcp-server.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "list-components",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-component-docs",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "component": {
                "type": "string",
                "description": "Name of the component to get documentation for"
              }
            },
            "required": [
              "component"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "install-component",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "component": {
                "type": "string",
                "description": "Name of the component to install"
              },
              "runtime": {
                "type": "string",
                "description": "User runtime (npm, pnpm, yarn, bun)"
              }
            },
            "required": [
              "component"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "list-blocks",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-block-docs",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "block": {
                "type": "string",
                "description": "Name of the block to get documentation for"
              }
            },
            "required": [
              "block"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "install-blocks",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "block": {
                "type": "string",
                "description": "Name of the block to install"
              },
              "runtime": {
                "type": "string",
                "description": "User runtime (npm, pnpm, yarn, bun)"
              }
            },
            "required": [
              "block"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@heilgar/shadcn-ui-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@heilgar/shadcn-ui-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0666.@heilgar_shadcn-ui-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 650
  }
}