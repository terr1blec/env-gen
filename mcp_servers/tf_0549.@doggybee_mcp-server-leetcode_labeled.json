{
  "labels": {
    "analysis": "The LeetCode MCP Server primarily provides access to LeetCode's problems, user information, and contest data. This server facilitates fast and efficient queries to LeetCode's resources, enhancing AI assistants' capabilities for coding challenges, user performance analysis, and contest participation. The available tools focus on retrieving problem information, user profiles, submissions, contest details, and rankings, making it ideal for coding practice, algorithmic learning, and competitive programming.",
    "reasoning": "The primary label \"Education\" is chosen because the server's core functionality revolves around accessing educational resources (coding problems, user profiles, and contest data) that are central to learning and practicing programming and algorithmic challenges. \"Development Tools\" is a secondary label as the server aids in coding practice and problem-solving, which is integral to software development. The server does not fit neatly into predefined categories requiring a custom label, as its functionality is specifically tailored to LeetCode's educational and competitive programming ecosystem.",
    "primary_label": "Education",
    "secondary_labels": [
      "Development Tools"
    ],
    "custom_label": "Competitive Programming",
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 548,
    "server_name": "LeetCode MCP Server",
    "rank_by_usage": 549,
    "usage_count": "23",
    "original_file": "../crawler/smithery/@doggybee_mcp-server-leetcode.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@doggybee/mcp-server-leetcode/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get-daily-challenge",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-problem",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "titleSlug": {
                "type": "string",
                "description": "The URL slug of the problem (e.g., 'two-sum')"
              }
            },
            "required": [
              "titleSlug"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "search-problems",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "tags": {
                "type": "string",
                "description": "Tags to filter by, separated by '+' (e.g., 'array+dynamic-programming')"
              },
              "difficulty": {
                "type": "string",
                "enum": [
                  "EASY",
                  "MEDIUM",
                  "HARD"
                ],
                "description": "Difficulty level"
              },
              "limit": {
                "type": "number",
                "minimum": 1,
                "maximum": 100,
                "default": 20,
                "description": "Maximum number of problems to return"
              },
              "skip": {
                "type": "number",
                "default": 0,
                "description": "Number of problems to skip"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-user-profile",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "LeetCode username"
              }
            },
            "required": [
              "username"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-user-submissions",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "LeetCode username"
              },
              "limit": {
                "type": "number",
                "minimum": 1,
                "maximum": 100,
                "default": 20,
                "description": "Maximum number of submissions to return"
              }
            },
            "required": [
              "username"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-contest-details",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "contestSlug": {
                "type": "string",
                "description": "The URL slug of the contest"
              }
            },
            "required": [
              "contestSlug"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-user-contest-ranking",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "LeetCode username"
              }
            },
            "required": [
              "username"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 7,
      "tool_names": [
        "get-daily-challenge",
        "get-problem",
        "search-problems",
        "get-user-profile",
        "get-user-submissions",
        "get-contest-details",
        "get-user-contest-ranking"
      ]
    },
    "server_info_crawled": {
      "id": 548,
      "name": "LeetCode MCP Server",
      "author": "@doggybee/mcp-server-leetcode",
      "overview": "Access LeetCode problems, user information, and contest data seamlessly. Enhance your AI assistants with fast and efficient queries to LeetCode's extensive resources. Utilize both CLI and programmable API for flexible integration.",
      "repository_url": "https://github.com/doggybee/mcp-server-leetcode",
      "homepage": "https://smithery.ai/server/@doggybee/mcp-server-leetcode",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "23",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@doggybee_mcp-server-leetcode.json",
      "tools_count": 7,
      "tools": [
        {
          "name": "get-daily-challenge",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-problem",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "titleSlug": {
                "type": "string",
                "description": "The URL slug of the problem (e.g., 'two-sum')"
              }
            },
            "required": [
              "titleSlug"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "search-problems",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "tags": {
                "type": "string",
                "description": "Tags to filter by, separated by '+' (e.g., 'array+dynamic-programming')"
              },
              "difficulty": {
                "type": "string",
                "enum": [
                  "EASY",
                  "MEDIUM",
                  "HARD"
                ],
                "description": "Difficulty level"
              },
              "limit": {
                "type": "number",
                "minimum": 1,
                "maximum": 100,
                "default": 20,
                "description": "Maximum number of problems to return"
              },
              "skip": {
                "type": "number",
                "default": 0,
                "description": "Number of problems to skip"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-user-profile",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "LeetCode username"
              }
            },
            "required": [
              "username"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-user-submissions",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "LeetCode username"
              },
              "limit": {
                "type": "number",
                "minimum": 1,
                "maximum": 100,
                "default": 20,
                "description": "Maximum number of submissions to return"
              }
            },
            "required": [
              "username"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-contest-details",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "contestSlug": {
                "type": "string",
                "description": "The URL slug of the contest"
              }
            },
            "required": [
              "contestSlug"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get-user-contest-ranking",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "LeetCode username"
              }
            },
            "required": [
              "username"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@doggybee/mcp-server-leetcode/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@doggybee/mcp-server-leetcode/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0549.@doggybee_mcp-server-leetcode_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 537
  }
}