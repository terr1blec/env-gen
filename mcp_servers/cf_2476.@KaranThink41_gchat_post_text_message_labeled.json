{
  "labels": {
    "analysis": "The Google Chat MCP Server is designed to simplify posting messages to Google Chat spaces using webhooks. Its primary functionality revolves around seamless communication integration, eliminating the complexity of OAuth setup. The available tool, post_text_message, specifically targets sending text messages to Google Chat spaces, making it a tool focused on messaging and communication automation.",
    "reasoning": "The primary label Communication Tools is chosen because the server's core functionality directly involves messaging within Google Chat spaces, which is a form of digital communication. The secondary label API Integration is relevant due to the use of webhooks for messaging. No custom label is needed as the predefined categories cover the server's functionality adequately.",
    "primary_label": "Communication Tools",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2475,
    "server_name": "Google Chat MCP Server",
    "rank_by_usage": 2476,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@KaranThink41_gchat_post_text_message.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@KaranThink41/gchat_post_text_message/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2475,
      "name": "Google Chat MCP Server",
      "author": "@KaranThink41/gchat_post_text_message",
      "overview": "Post messages to Google Chat spaces effortlessly using webhooks. Integrate seamlessly without the need for OAuth setup, making it simple and secure. Enhance your MCP-compatible tools with this easy-to-use server for Google Chat.",
      "repository_url": "https://github.com/KaranThink41/gchat_post_text_message",
      "homepage": "https://smithery.ai/server/@KaranThink41/gchat_post_text_message",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@KaranThink41_gchat_post_text_message.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "post_text_message",
          "description": "Deploy Server Google Chat MCP Server @KaranThink41/gchat_post_text_message Try in Playground post_text_message",
          "parameters": [
            {
              "name": "post_text_message",
              "required": false,
              "type": "string"
            },
            {
              "name": "text",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@KaranThink41/gchat_post_text_message/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "GOOGLE_CHAT_TOKEN",
          "required": true,
          "description": "Authentication token for Google Chat"
        },
        {
          "name": "GOOGLE_CHAT_API_KEY",
          "required": true,
          "description": "API key from Google Cloud Console"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@KaranThink41/gchat_post_text_message/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2476.@KaranThink41_gchat_post_text_message_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 2112
  }
}