{
  "labels": {
    "analysis": "The MCP Server described is specifically designed to interact with Autodesk Revit, a popular Building Information Modeling (BIM) software. Its core functionality revolves around enabling AI to retrieve data from Revit projects, modify elements within those projects, and automate various design workflows. The tools provided allow for querying elements, creating new elements, coloring elements, deleting elements, and executing custom C# code within the Revit environment. This server essentially bridges AI capabilities with architectural and engineering design processes, streamlining project management and enhancing productivity.",
    "reasoning": "The primary label is chosen as \"AI/ML Tools\" because the server's primary functionality is to enable AI to interact with and control Revit projects, leveraging tools specifically designed for AI assistants. Secondary labels \"Development Tools\" and \"Database Operations\" are chosen because the server allows sending and executing custom code and interacts with the data structure of Revit models, which is akin to database operations.",
    "primary_label": "AI/ML Tools",
    "secondary_labels": [
      "Development Tools",
      "Database Operations"
    ],
    "custom_label": "BIM Automation",
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 942,
    "server_name": "Revit Interaction Server",
    "rank_by_usage": 943,
    "usage_count": "3",
    "original_file": "../crawler/smithery/@ideook_revit-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ideook/revit-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "ai_element_filter",
          "description": "An intelligent Revit element querying tool designed specifically for AI assistants to retrieve detailed element information from Revit projects. This tool allows the AI to request elements matching specific criteria (such as category, type, visibility, or spatial location) and then perform further analysis on the returned data to answer complex user queries about Revit model elements. Example: When a user asks 'Find all walls taller than 5m in the project', the AI would: 1) Call this tool with parameters: {\"filterCategory\": \"OST_Walls\", \"includeInstances\": true}, 2) Receive detailed information about all wall instances in the project, 3) Process the returned data to filter walls with height > 5000mm, 4) Present the filtered results to the user with relevant details.",
          "input_schema": {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "filterCategory": {
                    "type": "string",
                    "description": "Enumeration of built-in element categories in Revit used for filtering and identifying specific element types (e.g., OST_Walls, OST_Floors, OST_GenericModel). Note that furniture elements may be classified as either OST_Furniture or OST_GenericModel categories, requiring flexible selection approaches"
                  },
                  "filterElementType": {
                    "type": "string",
                    "description": "The Revit element type name used for filtering specific elements by their class or type (e.g., 'Wall', 'Floor', 'Autodesk.Revit.DB.Wall'). Gets or sets the name of the Revit element type to be filtered."
                  },
                  "filterFamilySymbolId": {
                    "type": "number",
                    "description": "The ElementId of a specific FamilySymbol (type) in Revit used for filtering elements by their type (e.g., '123456', '789012'). Gets or sets the ElementId of the FamilySymbol to be used as a filter criterion. Use '-1' if no specific FamilySymbol filtering is needed."
                  },
                  "includeTypes": {
                    "type": "boolean",
                    "default": false,
                    "description": "Determines whether to include element types (such as wall types, door types, etc.) in the selection results. When set to true, element types will be included; when false, they will be excluded."
                  },
                  "includeInstances": {
                    "type": "boolean",
                    "default": true,
                    "description": "Determines whether to include element instances (such as placed walls, doors, etc.) in the selection results. When set to true, element instances will be included; when false, they will be excluded."
                  },
                  "filterVisibleInCurrentView": {
                    "type": "boolean",
                    "description": "Determines whether to only return elements that are visible in the current view. When set to true, only elements visible in the current view will be returned. Note: This filter only applies to element instances, not type elements."
                  },
                  "boundingBoxMin": {
                    "type": "object",
                    "properties": {
                      "p0": {
                        "type": "object",
                        "properties": {
                          "x": {
                            "type": "number",
                            "description": "X coordinate of start point"
                          },
                          "y": {
                            "type": "number",
                            "description": "Y coordinate of start point"
                          },
                          "z": {
                            "type": "number",
                            "description": "Z coordinate of start point"
                          }
                        },
                        "required": [
                          "x",
                          "y",
                          "z"
                        ],
                        "additionalProperties": false
                      },
                      "p1": {
                        "type": "object",
                        "properties": {
                          "x": {
                            "type": "number",
                            "description": "X coordinate of end point"
                          },
                          "y": {
                            "type": "number",
                            "description": "Y coordinate of end point"
                          },
                          "z": {
                            "type": "number",
                            "description": "Z coordinate of end point"
                          }
                        },
                        "required": [
                          "x",
                          "y",
                          "z"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "p0",
                      "p1"
                    ],
                    "additionalProperties": false,
                    "description": "The minimum point coordinates (in mm) for spatial bounding box filtering. When set along with boundingBoxMax, only elements that intersect with this bounding box will be returned. Set to null to disable this filter."
                  },
                  "boundingBoxMax": {
                    "type": "object",
                    "properties": {
                      "p0": {
                        "type": "object",
                        "properties": {
                          "x": {
                            "type": "number",
                            "description": "X coordinate of start point"
                          },
                          "y": {
                            "type": "number",
                            "description": "Y coordinate of start point"
                          },
                          "z": {
                            "type": "number",
                            "description": "Z coordinate of start point"
                          }
                        },
                        "required": [
                          "x",
                          "y",
                          "z"
                        ],
                        "additionalProperties": false
                      },
                      "p1": {
                        "type": "object",
                        "properties": {
                          "x": {
                            "type": "number",
                            "description": "X coordinate of end point"
                          },
                          "y": {
                            "type": "number",
                            "description": "Y coordinate of end point"
                          },
                          "z": {
                            "type": "number",
                            "description": "Z coordinate of end point"
                          }
                        },
                        "required": [
                          "x",
                          "y",
                          "z"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "p0",
                      "p1"
                    ],
                    "additionalProperties": false,
                    "description": "The maximum point coordinates (in mm) for spatial bounding box filtering. When set along with boundingBoxMin, only elements that intersect with this bounding box will be returned. Set to null to disable this filter."
                  },
                  "maxElements": {
                    "type": "number",
                    "description": "The maximum number of elements to find in a single tool invocation. Default is 50. Values exceeding 50 are not recommended for performance reasons."
                  }
                },
                "additionalProperties": false,
                "description": "Configuration parameters for the Revit element filter tool. These settings determine which elements will be selected from the Revit project based on various filtering criteria. Multiple filters can be combined to achieve precise element selection. All spatial coordinates should be provided in millimeters."
              }
            },
            "required": [
              "data"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "color_elements",
          "description": "Color elements in the current view based on a category and parameter value. Each unique parameter value gets assigned a distinct color.",
          "input_schema": {
            "type": "object",
            "properties": {
              "categoryName": {
                "type": "string",
                "description": "The name of the Revit category to color (e.g., 'Walls', 'Doors', 'Rooms')"
              },
              "parameterName": {
                "type": "string",
                "description": "The name of the parameter to use for grouping and coloring elements"
              },
              "useGradient": {
                "type": "boolean",
                "default": false,
                "description": "Whether to use a gradient color scheme instead of random colors"
              },
              "customColors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "r": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 255
                    },
                    "g": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 255
                    },
                    "b": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 255
                    }
                  },
                  "required": [
                    "r",
                    "g",
                    "b"
                  ],
                  "additionalProperties": false
                },
                "description": "Optional array of custom RGB colors to use for specific parameter values"
              }
            },
            "required": [
              "categoryName",
              "parameterName"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "create_line_based_element",
          "description": "Create one or more line-based elements in Revit such as walls, beams, or pipes. Supports batch creation with detailed parameters including family type ID, start and end points, thickness, height, and level information. All units are in millimeters (mm).",
          "input_schema": {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Description of the element (e.g., wall, beam)"
                    },
                    "typeId": {
                      "type": "number",
                      "description": "The ID of the family type to create."
                    },
                    "locationLine": {
                      "type": "object",
                      "properties": {
                        "p0": {
                          "type": "object",
                          "properties": {
                            "x": {
                              "type": "number",
                              "description": "X coordinate of start point"
                            },
                            "y": {
                              "type": "number",
                              "description": "Y coordinate of start point"
                            },
                            "z": {
                              "type": "number",
                              "description": "Z coordinate of start point"
                            }
                          },
                          "required": [
                            "x",
                            "y",
                            "z"
                          ],
                          "additionalProperties": false
                        },
                        "p1": {
                          "type": "object",
                          "properties": {
                            "x": {
                              "type": "number",
                              "description": "X coordinate of end point"
                            },
                            "y": {
                              "type": "number",
                              "description": "Y coordinate of end point"
                            },
                            "z": {
                              "type": "number",
                              "description": "Z coordinate of end point"
                            }
                          },
                          "required": [
                            "x",
                            "y",
                            "z"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "p0",
                        "p1"
                      ],
                      "additionalProperties": false,
                      "description": "The line defining the element's location"
                    },
                    "thickness": {
                      "type": "number",
                      "description": "Thickness/width of the element (e.g., wall thickness)"
                    },
                    "height": {
                      "type": "number",
                      "description": "Height of the element (e.g., wall height)"
                    },
                    "baseLevel": {
                      "type": "number",
                      "description": "Base level height"
                    },
                    "baseOffset": {
                      "type": "number",
                      "description": "Offset from the base level"
                    }
                  },
                  "required": [
                    "name",
                    "locationLine",
                    "thickness",
                    "height",
                    "baseLevel",
                    "baseOffset"
                  ],
                  "additionalProperties": false
                },
                "description": "Array of line-based elements to create"
              }
            },
            "required": [
              "data"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "create_point_based_element",
          "description": "Create one or more point-based elements in Revit such as doors, windows, or furniture. Supports batch creation with detailed parameters including family type ID, position, dimensions, and level information. All units are in millimeters (mm).",
          "input_schema": {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Description of the element (e.g., door, window)"
                    },
                    "typeId": {
                      "type": "number",
                      "description": "The ID of the family type to create."
                    },
                    "locationPoint": {
                      "type": "object",
                      "properties": {
                        "x": {
                          "type": "number",
                          "description": "X coordinate"
                        },
                        "y": {
                          "type": "number",
                          "description": "Y coordinate"
                        },
                        "z": {
                          "type": "number",
                          "description": "Z coordinate"
                        }
                      },
                      "required": [
                        "x",
                        "y",
                        "z"
                      ],
                      "additionalProperties": false,
                      "description": "The position coordinates where the element will be placed"
                    },
                    "width": {
                      "type": "number",
                      "description": "Width of the element in mm"
                    },
                    "depth": {
                      "type": "number",
                      "description": "Depth of the element in mm"
                    },
                    "height": {
                      "type": "number",
                      "description": "Height of the element in mm"
                    },
                    "baseLevel": {
                      "type": "number",
                      "description": "Base level height"
                    },
                    "baseOffset": {
                      "type": "number",
                      "description": "Offset from the base level"
                    },
                    "rotation": {
                      "type": "number",
                      "description": "Rotation angle in degrees (0-360)"
                    }
                  },
                  "required": [
                    "name",
                    "locationPoint",
                    "width",
                    "height",
                    "baseLevel",
                    "baseOffset"
                  ],
                  "additionalProperties": false
                },
                "description": "Array of point-based elements to create"
              }
            },
            "required": [
              "data"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "create_surface_based_element",
          "description": "Create one or more surface-based elements in Revit such as floors, ceilings, or roofs. Supports batch creation with detailed parameters including family type ID, boundary lines, thickness, and level information. All units are in millimeters (mm).",
          "input_schema": {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Description of the element (e.g., floor, ceiling)"
                    },
                    "typeId": {
                      "type": "number",
                      "description": "The ID of the family type to create."
                    },
                    "boundary": {
                      "type": "object",
                      "properties": {
                        "outerLoop": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "p0": {
                                "type": "object",
                                "properties": {
                                  "x": {
                                    "type": "number",
                                    "description": "X coordinate of start point"
                                  },
                                  "y": {
                                    "type": "number",
                                    "description": "Y coordinate of start point"
                                  },
                                  "z": {
                                    "type": "number",
                                    "description": "Z coordinate of start point"
                                  }
                                },
                                "required": [
                                  "x",
                                  "y",
                                  "z"
                                ],
                                "additionalProperties": false
                              },
                              "p1": {
                                "type": "object",
                                "properties": {
                                  "x": {
                                    "type": "number",
                                    "description": "X coordinate of end point"
                                  },
                                  "y": {
                                    "type": "number",
                                    "description": "Y coordinate of end point"
                                  },
                                  "z": {
                                    "type": "number",
                                    "description": "Z coordinate of end point"
                                  }
                                },
                                "required": [
                                  "x",
                                  "y",
                                  "z"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "p0",
                              "p1"
                            ],
                            "additionalProperties": false
                          },
                          "minItems": 3,
                          "description": "Array of line segments defining the boundary"
                        }
                      },
                      "required": [
                        "outerLoop"
                      ],
                      "additionalProperties": false,
                      "description": "Boundary definition with outer loop"
                    },
                    "thickness": {
                      "type": "number",
                      "description": "Thickness of the element"
                    },
                    "baseLevel": {
                      "type": "number",
                      "description": "Base level height"
                    },
                    "baseOffset": {
                      "type": "number",
                      "description": "Offset from the base level"
                    }
                  },
                  "required": [
                    "name",
                    "boundary",
                    "thickness",
                    "baseLevel",
                    "baseOffset"
                  ],
                  "additionalProperties": false
                },
                "description": "Array of surface-based elements to create"
              }
            },
            "required": [
              "data"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "delete_element",
          "description": "Delete one or more elements from the Revit model by their element IDs.",
          "input_schema": {
            "type": "object",
            "properties": {
              "elementIds": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The IDs of the elements to delete"
              }
            },
            "required": [
              "elementIds"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "get_available_family_types",
          "description": "Get available family types in the current Revit project. You can filter by category and family name, and limit the number of returned types.",
          "input_schema": {
            "type": "object",
            "properties": {
              "categoryList": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of Revit category names to filter by (e.g., 'OST_Walls', 'OST_Doors', 'OST_Furniture')"
              },
              "familyNameFilter": {
                "type": "string",
                "description": "Filter family types by family name (partial match)"
              },
              "limit": {
                "type": "number",
                "description": "Maximum number of family types to return"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "get_current_document_info",
          "description": "获取 Revit 当前活动视图的详细信息，包括视图类型、名称、比例等属性。",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "get_current_view_elements",
          "description": "Get elements from the current active view in Revit. You can filter by model categories (like Walls, Floors) or annotation categories (like Dimensions, Text). Use includeHidden to show/hide invisible elements and limit to control the number of returned elements.",
          "input_schema": {
            "type": "object",
            "properties": {
              "modelCategoryList": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of Revit model category names (e.g., 'OST_Walls', 'OST_Doors', 'OST_Floors')"
              },
              "annotationCategoryList": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of Revit annotation category names (e.g., 'OST_Dimensions', 'OST_WallTags', 'OST_TextNotes')"
              },
              "includeHidden": {
                "type": "boolean",
                "description": "Whether to include hidden elements in the results"
              },
              "limit": {
                "type": "number",
                "description": "Maximum number of elements to return"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "get_current_view_info",
          "description": "获取 Revit 当前活动视图的详细信息，包括视图类型、名称、比例等属性。",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "get_selected_elements",
          "description": "Get elements currently selected in Revit. You can limit the number of returned elements.",
          "input_schema": {
            "type": "object",
            "properties": {
              "limit": {
                "type": "number",
                "description": "Maximum number of elements to return"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "open_document",
          "description": "Open Document",
          "input_schema": {
            "type": "object",
            "properties": {
              "filePath": {
                "type": "string",
                "description": "File Path"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "operate_element",
          "description": "Operate on Revit elements by performing actions such as select, selectionBox, setColor, setTransparency, delete, hide, etc.",
          "input_schema": {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "elementIds": {
                    "type": "array",
                    "items": {
                      "type": "number",
                      "description": "A valid Revit element ID to operate on"
                    },
                    "description": "Array of Revit element IDs to perform the specified action on"
                  },
                  "action": {
                    "type": "string",
                    "description": "The operation to perform on elements. Valid values: Select, SelectionBox, SetColor, SetTransparency, Delete, Hide, TempHide, Isolate, Unhide, ResetIsolate, Highlight. Select enables direct element selection in the active view. SelectionBox allows selection of elements by drawing a rectangular window in the view. SetColor changes the color of elements (requires elementColor parameter). SetTransparency adjusts element transparency (requires transparencyValue parameter). Highlight is a convenience operation that sets elements to red color (internally calls SetColor with red). Delete permanently removes elements from the project. Hide makes elements invisible in the current view until explicitly shown. TempHide temporarily hides elements in the current view. Isolate displays only selected elements while hiding all others. Unhide reveals previously hidden elements. ResetIsolate restores normal visibility to the view."
                  },
                  "transparencyValue": {
                    "type": "number",
                    "default": 50,
                    "description": "Transparency value (0-100) for SetTransparency action. Higher values increase transparency."
                  },
                  "colorValue": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "default": [
                      255,
                      0,
                      0
                    ],
                    "description": "RGB color values for SetColor action. Default is red [255,0,0]."
                  }
                },
                "required": [
                  "elementIds",
                  "action"
                ],
                "additionalProperties": false,
                "description": "Parameters for operating on Revit elements with specific actions"
              }
            },
            "required": [
              "data"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "send_code_to_revit",
          "description": "Send C# code to Revit for execution. The code will be inserted into a template with access to the Revit Document and parameters. Your code should be written to work within the Execute method of the template.",
          "input_schema": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "The C# code to execute in Revit. This code will be inserted into the Execute method of a template with access to Document and parameters."
              },
              "parameters": {
                "type": "array",
                "description": "Optional execution parameters that will be passed to your code"
              }
            },
            "required": [
              "code"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "tag_all_walls",
          "description": "Create tags for all walls in the current active view. Tags will be placed at the middle point of each wall.",
          "input_schema": {
            "type": "object",
            "properties": {
              "useLeader": {
                "type": "boolean",
                "default": false,
                "description": "Whether to use a leader line when creating the tags"
              },
              "tagTypeId": {
                "type": "string",
                "description": "The ID of the specific wall tag family type to use. If not provided, the default wall tag type will be used"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        }
      ],
      "tool_count": 15,
      "tool_names": [
        "ai_element_filter",
        "color_elements",
        "create_line_based_element",
        "create_point_based_element",
        "create_surface_based_element",
        "delete_element",
        "get_available_family_types",
        "get_current_document_info",
        "get_current_view_elements",
        "get_current_view_info",
        "get_selected_elements",
        "open_document",
        "operate_element",
        "send_code_to_revit",
        "tag_all_walls"
      ]
    },
    "server_info_crawled": {
      "id": 942,
      "name": "Revit Interaction Server",
      "author": "@ideook/revit-mcp",
      "overview": "Enable AI to interact with Revit projects by retrieving data and driving Revit to create, modify, or delete elements. Send AI-generated code to Revit for execution to automate design workflows. Enhance productivity by integrating Revit with MCP-supported clients for seamless AI-driven project management.",
      "repository_url": "https://github.com/ideook/revit-mcp",
      "homepage": "https://smithery.ai/server/@ideook/revit-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "3",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ideook_revit-mcp.json",
      "tools_count": 15,
      "tools": [
        {
          "name": "ai_element_filter",
          "description": "An intelligent Revit element querying tool designed specifically for AI assistants to retrieve detailed element information from Revit projects. This tool allows the AI to request elements matching specific criteria (such as category, type, visibility, or spatial location) and then perform further analysis on the returned data to answer complex user queries about Revit model elements. Example: When a user asks 'Find all walls taller than 5m in the project', the AI would: 1) Call this tool with parameters: {\"filterCategory\": \"OST_Walls\", \"includeInstances\": true}, 2) Receive detailed information about all wall instances in the project, 3) Process the returned data to filter walls with height > 5000mm, 4) Present the filtered results to the user with relevant details.",
          "input_schema": {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "filterCategory": {
                    "type": "string",
                    "description": "Enumeration of built-in element categories in Revit used for filtering and identifying specific element types (e.g., OST_Walls, OST_Floors, OST_GenericModel). Note that furniture elements may be classified as either OST_Furniture or OST_GenericModel categories, requiring flexible selection approaches"
                  },
                  "filterElementType": {
                    "type": "string",
                    "description": "The Revit element type name used for filtering specific elements by their class or type (e.g., 'Wall', 'Floor', 'Autodesk.Revit.DB.Wall'). Gets or sets the name of the Revit element type to be filtered."
                  },
                  "filterFamilySymbolId": {
                    "type": "number",
                    "description": "The ElementId of a specific FamilySymbol (type) in Revit used for filtering elements by their type (e.g., '123456', '789012'). Gets or sets the ElementId of the FamilySymbol to be used as a filter criterion. Use '-1' if no specific FamilySymbol filtering is needed."
                  },
                  "includeTypes": {
                    "type": "boolean",
                    "default": false,
                    "description": "Determines whether to include element types (such as wall types, door types, etc.) in the selection results. When set to true, element types will be included; when false, they will be excluded."
                  },
                  "includeInstances": {
                    "type": "boolean",
                    "default": true,
                    "description": "Determines whether to include element instances (such as placed walls, doors, etc.) in the selection results. When set to true, element instances will be included; when false, they will be excluded."
                  },
                  "filterVisibleInCurrentView": {
                    "type": "boolean",
                    "description": "Determines whether to only return elements that are visible in the current view. When set to true, only elements visible in the current view will be returned. Note: This filter only applies to element instances, not type elements."
                  },
                  "boundingBoxMin": {
                    "type": "object",
                    "properties": {
                      "p0": {
                        "type": "object",
                        "properties": {
                          "x": {
                            "type": "number",
                            "description": "X coordinate of start point"
                          },
                          "y": {
                            "type": "number",
                            "description": "Y coordinate of start point"
                          },
                          "z": {
                            "type": "number",
                            "description": "Z coordinate of start point"
                          }
                        },
                        "required": [
                          "x",
                          "y",
                          "z"
                        ],
                        "additionalProperties": false
                      },
                      "p1": {
                        "type": "object",
                        "properties": {
                          "x": {
                            "type": "number",
                            "description": "X coordinate of end point"
                          },
                          "y": {
                            "type": "number",
                            "description": "Y coordinate of end point"
                          },
                          "z": {
                            "type": "number",
                            "description": "Z coordinate of end point"
                          }
                        },
                        "required": [
                          "x",
                          "y",
                          "z"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "p0",
                      "p1"
                    ],
                    "additionalProperties": false,
                    "description": "The minimum point coordinates (in mm) for spatial bounding box filtering. When set along with boundingBoxMax, only elements that intersect with this bounding box will be returned. Set to null to disable this filter."
                  },
                  "boundingBoxMax": {
                    "type": "object",
                    "properties": {
                      "p0": {
                        "type": "object",
                        "properties": {
                          "x": {
                            "type": "number",
                            "description": "X coordinate of start point"
                          },
                          "y": {
                            "type": "number",
                            "description": "Y coordinate of start point"
                          },
                          "z": {
                            "type": "number",
                            "description": "Z coordinate of start point"
                          }
                        },
                        "required": [
                          "x",
                          "y",
                          "z"
                        ],
                        "additionalProperties": false
                      },
                      "p1": {
                        "type": "object",
                        "properties": {
                          "x": {
                            "type": "number",
                            "description": "X coordinate of end point"
                          },
                          "y": {
                            "type": "number",
                            "description": "Y coordinate of end point"
                          },
                          "z": {
                            "type": "number",
                            "description": "Z coordinate of end point"
                          }
                        },
                        "required": [
                          "x",
                          "y",
                          "z"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "p0",
                      "p1"
                    ],
                    "additionalProperties": false,
                    "description": "The maximum point coordinates (in mm) for spatial bounding box filtering. When set along with boundingBoxMin, only elements that intersect with this bounding box will be returned. Set to null to disable this filter."
                  },
                  "maxElements": {
                    "type": "number",
                    "description": "The maximum number of elements to find in a single tool invocation. Default is 50. Values exceeding 50 are not recommended for performance reasons."
                  }
                },
                "additionalProperties": false,
                "description": "Configuration parameters for the Revit element filter tool. These settings determine which elements will be selected from the Revit project based on various filtering criteria. Multiple filters can be combined to achieve precise element selection. All spatial coordinates should be provided in millimeters."
              }
            },
            "required": [
              "data"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "color_elements",
          "description": "Color elements in the current view based on a category and parameter value. Each unique parameter value gets assigned a distinct color.",
          "input_schema": {
            "type": "object",
            "properties": {
              "categoryName": {
                "type": "string",
                "description": "The name of the Revit category to color (e.g., 'Walls', 'Doors', 'Rooms')"
              },
              "parameterName": {
                "type": "string",
                "description": "The name of the parameter to use for grouping and coloring elements"
              },
              "useGradient": {
                "type": "boolean",
                "default": false,
                "description": "Whether to use a gradient color scheme instead of random colors"
              },
              "customColors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "r": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 255
                    },
                    "g": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 255
                    },
                    "b": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 255
                    }
                  },
                  "required": [
                    "r",
                    "g",
                    "b"
                  ],
                  "additionalProperties": false
                },
                "description": "Optional array of custom RGB colors to use for specific parameter values"
              }
            },
            "required": [
              "categoryName",
              "parameterName"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "create_line_based_element",
          "description": "Create one or more line-based elements in Revit such as walls, beams, or pipes. Supports batch creation with detailed parameters including family type ID, start and end points, thickness, height, and level information. All units are in millimeters (mm).",
          "input_schema": {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Description of the element (e.g., wall, beam)"
                    },
                    "typeId": {
                      "type": "number",
                      "description": "The ID of the family type to create."
                    },
                    "locationLine": {
                      "type": "object",
                      "properties": {
                        "p0": {
                          "type": "object",
                          "properties": {
                            "x": {
                              "type": "number",
                              "description": "X coordinate of start point"
                            },
                            "y": {
                              "type": "number",
                              "description": "Y coordinate of start point"
                            },
                            "z": {
                              "type": "number",
                              "description": "Z coordinate of start point"
                            }
                          },
                          "required": [
                            "x",
                            "y",
                            "z"
                          ],
                          "additionalProperties": false
                        },
                        "p1": {
                          "type": "object",
                          "properties": {
                            "x": {
                              "type": "number",
                              "description": "X coordinate of end point"
                            },
                            "y": {
                              "type": "number",
                              "description": "Y coordinate of end point"
                            },
                            "z": {
                              "type": "number",
                              "description": "Z coordinate of end point"
                            }
                          },
                          "required": [
                            "x",
                            "y",
                            "z"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "p0",
                        "p1"
                      ],
                      "additionalProperties": false,
                      "description": "The line defining the element's location"
                    },
                    "thickness": {
                      "type": "number",
                      "description": "Thickness/width of the element (e.g., wall thickness)"
                    },
                    "height": {
                      "type": "number",
                      "description": "Height of the element (e.g., wall height)"
                    },
                    "baseLevel": {
                      "type": "number",
                      "description": "Base level height"
                    },
                    "baseOffset": {
                      "type": "number",
                      "description": "Offset from the base level"
                    }
                  },
                  "required": [
                    "name",
                    "locationLine",
                    "thickness",
                    "height",
                    "baseLevel",
                    "baseOffset"
                  ],
                  "additionalProperties": false
                },
                "description": "Array of line-based elements to create"
              }
            },
            "required": [
              "data"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "create_point_based_element",
          "description": "Create one or more point-based elements in Revit such as doors, windows, or furniture. Supports batch creation with detailed parameters including family type ID, position, dimensions, and level information. All units are in millimeters (mm).",
          "input_schema": {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Description of the element (e.g., door, window)"
                    },
                    "typeId": {
                      "type": "number",
                      "description": "The ID of the family type to create."
                    },
                    "locationPoint": {
                      "type": "object",
                      "properties": {
                        "x": {
                          "type": "number",
                          "description": "X coordinate"
                        },
                        "y": {
                          "type": "number",
                          "description": "Y coordinate"
                        },
                        "z": {
                          "type": "number",
                          "description": "Z coordinate"
                        }
                      },
                      "required": [
                        "x",
                        "y",
                        "z"
                      ],
                      "additionalProperties": false,
                      "description": "The position coordinates where the element will be placed"
                    },
                    "width": {
                      "type": "number",
                      "description": "Width of the element in mm"
                    },
                    "depth": {
                      "type": "number",
                      "description": "Depth of the element in mm"
                    },
                    "height": {
                      "type": "number",
                      "description": "Height of the element in mm"
                    },
                    "baseLevel": {
                      "type": "number",
                      "description": "Base level height"
                    },
                    "baseOffset": {
                      "type": "number",
                      "description": "Offset from the base level"
                    },
                    "rotation": {
                      "type": "number",
                      "description": "Rotation angle in degrees (0-360)"
                    }
                  },
                  "required": [
                    "name",
                    "locationPoint",
                    "width",
                    "height",
                    "baseLevel",
                    "baseOffset"
                  ],
                  "additionalProperties": false
                },
                "description": "Array of point-based elements to create"
              }
            },
            "required": [
              "data"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "create_surface_based_element",
          "description": "Create one or more surface-based elements in Revit such as floors, ceilings, or roofs. Supports batch creation with detailed parameters including family type ID, boundary lines, thickness, and level information. All units are in millimeters (mm).",
          "input_schema": {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Description of the element (e.g., floor, ceiling)"
                    },
                    "typeId": {
                      "type": "number",
                      "description": "The ID of the family type to create."
                    },
                    "boundary": {
                      "type": "object",
                      "properties": {
                        "outerLoop": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "p0": {
                                "type": "object",
                                "properties": {
                                  "x": {
                                    "type": "number",
                                    "description": "X coordinate of start point"
                                  },
                                  "y": {
                                    "type": "number",
                                    "description": "Y coordinate of start point"
                                  },
                                  "z": {
                                    "type": "number",
                                    "description": "Z coordinate of start point"
                                  }
                                },
                                "required": [
                                  "x",
                                  "y",
                                  "z"
                                ],
                                "additionalProperties": false
                              },
                              "p1": {
                                "type": "object",
                                "properties": {
                                  "x": {
                                    "type": "number",
                                    "description": "X coordinate of end point"
                                  },
                                  "y": {
                                    "type": "number",
                                    "description": "Y coordinate of end point"
                                  },
                                  "z": {
                                    "type": "number",
                                    "description": "Z coordinate of end point"
                                  }
                                },
                                "required": [
                                  "x",
                                  "y",
                                  "z"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "p0",
                              "p1"
                            ],
                            "additionalProperties": false
                          },
                          "minItems": 3,
                          "description": "Array of line segments defining the boundary"
                        }
                      },
                      "required": [
                        "outerLoop"
                      ],
                      "additionalProperties": false,
                      "description": "Boundary definition with outer loop"
                    },
                    "thickness": {
                      "type": "number",
                      "description": "Thickness of the element"
                    },
                    "baseLevel": {
                      "type": "number",
                      "description": "Base level height"
                    },
                    "baseOffset": {
                      "type": "number",
                      "description": "Offset from the base level"
                    }
                  },
                  "required": [
                    "name",
                    "boundary",
                    "thickness",
                    "baseLevel",
                    "baseOffset"
                  ],
                  "additionalProperties": false
                },
                "description": "Array of surface-based elements to create"
              }
            },
            "required": [
              "data"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "delete_element",
          "description": "Delete one or more elements from the Revit model by their element IDs.",
          "input_schema": {
            "type": "object",
            "properties": {
              "elementIds": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The IDs of the elements to delete"
              }
            },
            "required": [
              "elementIds"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "get_available_family_types",
          "description": "Get available family types in the current Revit project. You can filter by category and family name, and limit the number of returned types.",
          "input_schema": {
            "type": "object",
            "properties": {
              "categoryList": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of Revit category names to filter by (e.g., 'OST_Walls', 'OST_Doors', 'OST_Furniture')"
              },
              "familyNameFilter": {
                "type": "string",
                "description": "Filter family types by family name (partial match)"
              },
              "limit": {
                "type": "number",
                "description": "Maximum number of family types to return"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "get_current_document_info",
          "description": "获取 Revit 当前活动视图的详细信息，包括视图类型、名称、比例等属性。",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "get_current_view_elements",
          "description": "Get elements from the current active view in Revit. You can filter by model categories (like Walls, Floors) or annotation categories (like Dimensions, Text). Use includeHidden to show/hide invisible elements and limit to control the number of returned elements.",
          "input_schema": {
            "type": "object",
            "properties": {
              "modelCategoryList": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of Revit model category names (e.g., 'OST_Walls', 'OST_Doors', 'OST_Floors')"
              },
              "annotationCategoryList": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of Revit annotation category names (e.g., 'OST_Dimensions', 'OST_WallTags', 'OST_TextNotes')"
              },
              "includeHidden": {
                "type": "boolean",
                "description": "Whether to include hidden elements in the results"
              },
              "limit": {
                "type": "number",
                "description": "Maximum number of elements to return"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "get_current_view_info",
          "description": "获取 Revit 当前活动视图的详细信息，包括视图类型、名称、比例等属性。",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "get_selected_elements",
          "description": "Get elements currently selected in Revit. You can limit the number of returned elements.",
          "input_schema": {
            "type": "object",
            "properties": {
              "limit": {
                "type": "number",
                "description": "Maximum number of elements to return"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "open_document",
          "description": "Open Document",
          "input_schema": {
            "type": "object",
            "properties": {
              "filePath": {
                "type": "string",
                "description": "File Path"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "operate_element",
          "description": "Operate on Revit elements by performing actions such as select, selectionBox, setColor, setTransparency, delete, hide, etc.",
          "input_schema": {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "elementIds": {
                    "type": "array",
                    "items": {
                      "type": "number",
                      "description": "A valid Revit element ID to operate on"
                    },
                    "description": "Array of Revit element IDs to perform the specified action on"
                  },
                  "action": {
                    "type": "string",
                    "description": "The operation to perform on elements. Valid values: Select, SelectionBox, SetColor, SetTransparency, Delete, Hide, TempHide, Isolate, Unhide, ResetIsolate, Highlight. Select enables direct element selection in the active view. SelectionBox allows selection of elements by drawing a rectangular window in the view. SetColor changes the color of elements (requires elementColor parameter). SetTransparency adjusts element transparency (requires transparencyValue parameter). Highlight is a convenience operation that sets elements to red color (internally calls SetColor with red). Delete permanently removes elements from the project. Hide makes elements invisible in the current view until explicitly shown. TempHide temporarily hides elements in the current view. Isolate displays only selected elements while hiding all others. Unhide reveals previously hidden elements. ResetIsolate restores normal visibility to the view."
                  },
                  "transparencyValue": {
                    "type": "number",
                    "default": 50,
                    "description": "Transparency value (0-100) for SetTransparency action. Higher values increase transparency."
                  },
                  "colorValue": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "default": [
                      255,
                      0,
                      0
                    ],
                    "description": "RGB color values for SetColor action. Default is red [255,0,0]."
                  }
                },
                "required": [
                  "elementIds",
                  "action"
                ],
                "additionalProperties": false,
                "description": "Parameters for operating on Revit elements with specific actions"
              }
            },
            "required": [
              "data"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "send_code_to_revit",
          "description": "Send C# code to Revit for execution. The code will be inserted into a template with access to the Revit Document and parameters. Your code should be written to work within the Execute method of the template.",
          "input_schema": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "The C# code to execute in Revit. This code will be inserted into the Execute method of a template with access to Document and parameters."
              },
              "parameters": {
                "type": "array",
                "description": "Optional execution parameters that will be passed to your code"
              }
            },
            "required": [
              "code"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        },
        {
          "name": "tag_all_walls",
          "description": "Create tags for all walls in the current active view. Tags will be placed at the middle point of each wall.",
          "input_schema": {
            "type": "object",
            "properties": {
              "useLeader": {
                "type": "boolean",
                "default": false,
                "description": "Whether to use a leader line when creating the tags"
              },
              "tagTypeId": {
                "type": "string",
                "description": "The ID of the specific wall tag family type to use. If not provided, the default wall tag type will be used"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ideook/revit-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ideook/revit-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0943.@ideook_revit-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 922
  }
}