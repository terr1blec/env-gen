{
  "labels": {
    "analysis": "The EPICS Control Server is designed to interface with EPICS (Experimental Physics and Industrial Control System) process variables (PVs). Its primary role is to facilitate the retrieval and adjustment of values from these PVs, as well as gathering detailed metadata about them. This functionality is critical in automated workflows, monitoring systems, and parameter management within experimental physics and industrial environments. The server acts as a bridge between control systems and higher-level applications, enabling automation and integration of hardware parameters.",
    "reasoning": "The primary functionality of this server revolves around managing process variables in control systems, which aligns most closely with the \"Database Operations\" category due to its focus on querying and updating data (similar to database transactions). However, it also heavily involves \"API Integration\" since it enables interaction with control systems via a well-defined interface. These activities are fundamental in automated and monitored environments, but the core is about data querying and operations.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "API Integration",
      "Development Tools"
    ],
    "custom_label": "EPICS Control System Management",
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2426,
    "server_name": "EPICS Control Server",
    "rank_by_usage": 2427,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@Jacky1-Jiang_EPICS-MCP-Server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Jacky1-Jiang/EPICS-MCP-Server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_pv_value",
          "description": "Get the value of a specific PV.",
          "input_schema": {
            "type": "object",
            "properties": {
              "pv_name": {
                "type": "string",
                "description": "The name of the PV variable provided by the user."
              }
            },
            "required": [
              "pv_name"
            ]
          },
          "annotations": null
        },
        {
          "name": "set_pv_value",
          "description": "Set the value of a specific PV.",
          "input_schema": {
            "type": "object",
            "properties": {
              "pv_name": {
                "type": "string",
                "description": "The name of the PV variable provided by the user."
              },
              "pv_value": {
                "type": "string",
                "description": "The new PV value provided by the user."
              }
            },
            "required": [
              "pv_name",
              "pv_value"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_pv_info",
          "description": "Get information about a specific PV.",
          "input_schema": {
            "type": "object",
            "properties": {
              "pv_name": {
                "type": "string",
                "description": "The name of the PV variable provided by the user."
              }
            },
            "required": [
              "pv_name"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 3,
      "tool_names": [
        "get_pv_value",
        "set_pv_value",
        "get_pv_info"
      ]
    },
    "server_info_crawled": {
      "id": 2426,
      "name": "EPICS Control Server",
      "author": "@Jacky1-Jiang/EPICS-MCP-Server",
      "overview": "Interact with EPICS process variables to retrieve values, set new values, and fetch detailed information about PVs. Enable seamless integration of EPICS control systems into automated workflows and monitoring solutions. Simplify hardware and software parameter management in experimental physics and industrial environments.",
      "repository_url": "https://github.com/Jacky1-Jiang/EPICS-MCP-Server",
      "homepage": "https://smithery.ai/server/@Jacky1-Jiang/EPICS-MCP-Server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Jacky1-Jiang_EPICS-MCP-Server.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "get_pv_value",
          "description": "Get the value of a specific PV.",
          "input_schema": {
            "type": "object",
            "properties": {
              "pv_name": {
                "type": "string",
                "description": "The name of the PV variable provided by the user."
              }
            },
            "required": [
              "pv_name"
            ]
          },
          "annotations": null
        },
        {
          "name": "set_pv_value",
          "description": "Set the value of a specific PV.",
          "input_schema": {
            "type": "object",
            "properties": {
              "pv_name": {
                "type": "string",
                "description": "The name of the PV variable provided by the user."
              },
              "pv_value": {
                "type": "string",
                "description": "The new PV value provided by the user."
              }
            },
            "required": [
              "pv_name",
              "pv_value"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_pv_info",
          "description": "Get information about a specific PV.",
          "input_schema": {
            "type": "object",
            "properties": {
              "pv_name": {
                "type": "string",
                "description": "The name of the PV variable provided by the user."
              }
            },
            "required": [
              "pv_name"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Jacky1-Jiang/EPICS-MCP-Server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Jacky1-Jiang/EPICS-MCP-Server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "2427.@Jacky1-Jiang_EPICS-MCP-Server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 2073
  }
}