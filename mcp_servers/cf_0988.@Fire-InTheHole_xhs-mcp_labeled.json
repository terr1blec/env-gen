{
  "labels": {
    "analysis": "The MCP Server enables interaction with the 小红书 (Xiaohongshu) platform by providing tools to search for, retrieve, and interact with notes and comments. The core functionality revolves around direct HTTP-based data access rather than full browser automation, allowing lightweight yet effective integration with the platform. The server simplifies accessing notes, their contents, comments, and the ability to post comments, making it valuable for data retrieval and engagement without heavy dependencies.",
    "reasoning": "The primary label \"Web Search & Research\" is chosen because the server's main functionality is centered around searching and retrieving content from a specific platform. The secondary label \"Communication Tools\" is added because it facilitates posting comments, which is a direct form of interaction. Although it has aspects of API integration, the predefined categories adequately cover its functionality without needing a custom label.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Communication Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 987,
    "server_name": "小红书 MCP 服务",
    "rank_by_usage": 988,
    "usage_count": "2",
    "original_file": "../crawler/smithery/@Fire-InTheHole_xhs-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Fire-InTheHole/xhs-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 987,
      "name": "小红书 MCP 服务",
      "author": "@Fire-InTheHole/xhs-mcp",
      "overview": "Enable searching, retrieving, and interacting with 小红书 (Xiaohongshu) notes and comments through a lightweight MCP server without heavy browser automation. Seamlessly fetch note content, comments, and post comments by leveraging direct HTTP requests with reverse-engineered headers. Simplify integration with 小红书's platform for enhanced data access and interaction.",
      "repository_url": "https://github.com/Fire-InTheHole/xhs-mcp",
      "homepage": "https://smithery.ai/server/@Fire-InTheHole/xhs-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "2",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Fire-InTheHole_xhs-mcp.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "check_cookie",
          "description": "Deploy Server @Fire-InTheHole/xhs-mcp Try in Playground check_cookie",
          "parameters": []
        },
        {
          "name": "search_notes",
          "description": "根据关键词搜索笔记\n\n        Args:\n            keywords: 搜索关键词",
          "parameters": [
            {
              "name": "keywords",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_note_content",
          "description": "获取笔记内容 Args: note_id: 笔记 note_id xsec_token: 笔记 xsec_token",
          "parameters": []
        },
        {
          "name": "get_note_comments",
          "description": "获取笔记评论 Args: note_id: 笔记 note_id xsec_token: 笔记 xsec_token",
          "parameters": []
        },
        {
          "name": "post_comment",
          "description": "发布评论到指定笔记\n\n    Args:\n        note_id: 笔记 note_id\n        comment: 要发布的评论内容",
          "parameters": [
            {
              "name": "comment",
              "required": true,
              "type": "string"
            },
            {
              "name": "note_id",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Fire-InTheHole/xhs-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Fire-InTheHole/xhs-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0988.@Fire-InTheHole_xhs-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 966
  }
}