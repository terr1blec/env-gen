{
  "labels": {
    "analysis": "The MCP Server specializes in automating the process of uploading images from the system clipboard to cloud storage (Supabase) and returning a publicly accessible URL. This functionality addresses the need for quick, seamless image sharing and zero-click image hosting. The server exposes these capabilities as MCP endpoints, making it integrable with other AI agents and workflows. The available tools suggest primary focus on file upload and management, particularly for images.",
    "reasoning": "The primary functionality aligns well with \"File Management\" due to its core role in handling file uploads to a cloud storage system. Since the server also deals with clipboard monitoring and URL generation, \"Daily Productivity\" is a relevant secondary label, as it enhances user efficiency. There is no immediate need for custom labels as the predefined categories sufficiently cover the server's use cases.",
    "primary_label": "File Management",
    "secondary_labels": [
      "Daily Productivity"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2116,
    "server_name": "Clipboard Image Uploader",
    "rank_by_usage": 2117,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@martinbowling_clipboard-to-supabase-mcp-helper.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@martinbowling/clipboard-to-supabase-mcp-helper/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2116,
      "name": "Clipboard Image Uploader",
      "author": "@martinbowling/clipboard-to-supabase-mcp-helper",
      "overview": "Monitor your system clipboard for images and instantly upload them to Supabase Storage, then copy the public URL back to your clipboard for easy sharing. Enable seamless zero-click image hosting with low latency and cross-platform support. Expose clipboard image upload and cleanup functionality as MCP endpoints for integration with AI agents.",
      "repository_url": "https://github.com/martinbowling/clipboard-to-supabase-mcp-helper",
      "homepage": "https://smithery.ai/server/@martinbowling/clipboard-to-supabase-mcp-helper",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@martinbowling_clipboard-to-supabase-mcp-helper.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "upload_clipboard_image",
          "description": "Deploy Server Clipboard Image Uploader Claim Server @martinbowling/clipboard-to-supabase-mcp-helper Try in Playground upload_clipboard_image",
          "parameters": [
            {
              "name": "upload_clipboard_image",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "cleanup_old_files",
          "description": "Description not available",
          "parameters": [
            {
              "name": "cleanup_old_files",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@martinbowling/clipboard-to-supabase-mcp-helper/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "supabaseServiceRoleKey",
          "required": true,
          "description": "Supabase service role key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@martinbowling/clipboard-to-supabase-mcp-helper/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2117.@martinbowling_clipboard-to-supabase-mcp-helper_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1838
  }
}