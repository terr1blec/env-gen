{
  "labels": {
    "analysis": "The MCP Server focuses on YouTube data interaction, offering tools for querying, analyzing, and processing various aspects of YouTube content (videos, channels, comments, transcripts, and statistics). It enables users to perform searches, retrieve detailed information, compare metrics, and analyze trends. The tools are particularly centered around transcript analysis, providing advanced features like filtering, key moment extraction, and segmentation for deeper video content understanding.",
    "reasoning": "The primary functionality revolves around analyzing, processing, and interacting with YouTube data, which aligns well with the \"Web Search & Research\" category, as users can gather and analyze information from YouTube content. Additionally, the transcript-based tools and advanced analysis capabilities suggest relevance to \"Content Creation\" (for summarizing and processing video content). The \"communicate-videos\" tool can also be seen as interfering with \"Communication Tools\". The server does not fit neatly into predefined categories beyond these, so no custom label is needed.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Content Creation",
      "Communication Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 230,
    "server_name": "YouTube Data Interaction Server",
    "rank_by_usage": 231,
    "usage_count": "189",
    "original_file": "../crawler/smithery/@xianxx17_my-youtube-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@xianxx17/my-youtube-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 230,
      "name": "YouTube Data Interaction Server",
      "author": "@xianxx17/my-youtube-mcp-server",
      "overview": "Provide advanced tools and resources to query and analyze YouTube videos, channels, comments, and transcripts. Enable discovery of trending content, detailed statistical comparisons, and transcript-based summaries for enhanced video understanding. Facilitate seamless integration with YouTube data through a standardized MCP interface.",
      "repository_url": "https://github.com/xianxx17/my-youtube-mcp-server",
      "homepage": "https://smithery.ai/server/@xianxx17/my-youtube-mcp-server",
      "remote_or_local": "Remote",
      "license": "https://smithery.ai/server/@xianxx17/my-youtube-mcp-server",
      "usage_count": "189",
      "success_rate": "98.59%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@xianxx17_my-youtube-mcp-server.json",
      "tools_count": 12,
      "tools": [
        {
          "name": "search-videos",
          "description": "Deploy Server YouTube Data Interaction Server @xianxx17/my-youtube-mcp-server Try in Playground search-videos",
          "parameters": []
        },
        {
          "name": "get-video-comments",
          "description": "Retrieve comments for a specific YouTube video with sorting options",
          "parameters": []
        },
        {
          "name": "get-video-transcript",
          "description": "Get the transcript/captions for a YouTube video with optional language selection. This tool retrieves the full transcript of a video with timestamped captions. Each caption includes the text and its timestamp in the video. Parameters: videoId (required) - The YouTube video ID; language (optional) - Language code for the transcript (e.g., \"en\", \"ko\", \"ja\"). If not specified, the default language for the video will be used. Returns a text with each caption line preceded by its timestamp.",
          "parameters": [
            {
              "name": "videoId",
              "required": true,
              "type": "string"
            },
            {
              "name": "language",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-video-stats",
          "description": "Get statistical information for a specific YouTube video (views, likes, comments, upload date, etc.)",
          "parameters": []
        },
        {
          "name": "get-channel-stats",
          "description": "Get statistical information for a specific YouTube channel (subscriber count, total views, video count, etc.)",
          "parameters": []
        },
        {
          "name": "compare-videos",
          "description": "Compare statistics for multiple YouTube videos",
          "parameters": [
            {
              "name": "videoIds",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-trending-videos",
          "description": "Retrieve trending videos by region and category. This helps analyze current popular content trends.",
          "parameters": []
        },
        {
          "name": "get-video-categories",
          "description": "Retrieve available video categories for a specific region",
          "parameters": [
            {
              "name": "regionCode",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "analyze-channel-videos",
          "description": "Analyze recent videos from a specific channel to identify performance trends",
          "parameters": []
        },
        {
          "name": "enhanced-transcript",
          "description": "Advanced transcript extraction tool with filtering, search, and multi-video capabilities. Provides rich transcript data for detailed analysis and processing. This tool offers multiple advanced features: 1) Extract transcripts from multiple videos in one request; 2) Filter by time ranges to focus on specific parts; 3) Search for specific content within transcripts; 4) Segment transcripts for structural analysis; 5) Format output in different ways (raw, timestamped, merged text); 6) Include video metadata. Parameters: videoIds (required) - Array of YouTube video IDs (up to 5); language (optional) - Language code; format (optional) - Output format (\"raw\", \"timestamped\", \"merged\"); includeMetadata (optional) - Whether to include video details; filters (optional) - Complex filtering options including timeRange, search, and segment.",
          "parameters": []
        },
        {
          "name": "get-key-moments",
          "description": "Extract key moments with timestamps from a video transcript for easier navigation and summarization. This tool analyzes the video transcript to identify important segments based on content density and creates a structured output with timestamped key moments. Useful for quickly navigating to important parts of longer videos. Parameters: videoId (required) - The YouTube video ID; maxMoments (optional) - Number of key moments to extract (default: 5, max: 10). Returns a formatted text with key moments and their timestamps, plus the full transcript.",
          "parameters": []
        },
        {
          "name": "get-segmented-transcript",
          "description": "Divide a video transcript into segments for easier analysis and navigation. This tool splits the video into equal time segments and extracts the transcript for each segment with proper timestamps. Ideal for analyzing the structure of longer videos or when you need to focus on specific parts of the content. Parameters: videoId (required) - The YouTube video ID; segmentCount (optional) - Number of segments to divide the video into (default: 4, max: 10). Returns a markdown-formatted text with each segment clearly labeled with time ranges and containing the relevant transcript text.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@xianxx17/my-youtube-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "youtubeApiKey",
          "required": true,
          "description": "YouTube Data API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@xianxx17/my-youtube-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0231.@xianxx17_my-youtube-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 227
  }
}