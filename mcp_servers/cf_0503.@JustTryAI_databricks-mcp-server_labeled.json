{
  "labels": {
    "analysis": "The Databricks MCP Server is primarily designed to facilitate seamless interaction with Databricks clusters, jobs, and notebooks through the MCP protocol. This includes managing data workflows, automating tasks, and enhancing productivity in data engineering and analytics environments. The available tools suggest functionalities like server management and authentication via sign-in. The server leverages LLMs (Large Language Models) to enable efficient automation and resource management within Databricks.",
    "reasoning": "The primary label \"Data Analysis & Processing\" is chosen because the server is centered around managing Databricks resources, which are commonly used for data processing, analytics, and workflow automation. The secondary label \"Cloud Services\" is included because Databricks is a cloud-based platform, and the server interacts with cloud-hosted clusters and notebooks. \"Development Tools\" is also appropriate as the server enables automation and management of data workflows which are often part of the development process in data science and engineering. A custom label is not needed as the predefined labels sufficiently cover the server's functionality.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "Cloud Services",
      "Development Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 502,
    "server_name": "Databricks MCP Server",
    "rank_by_usage": 503,
    "usage_count": "32",
    "original_file": "../crawler/smithery/@JustTryAI_databricks-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@JustTryAI/databricks-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 502,
      "name": "Databricks MCP Server",
      "author": "@JustTryAI/databricks-mcp-server",
      "overview": "Enable seamless interaction with Databricks clusters, jobs, and notebooks through the MCP protocol. Leverage the power of LLMs to automate and manage your Databricks resources efficiently. Simplify your data workflows and enhance productivity with easy access to Databricks functionalities.",
      "repository_url": "https://github.com/JustTryAI/databricks-mcp-server",
      "homepage": "https://smithery.ai/server/@JustTryAI/databricks-mcp-server",
      "remote_or_local": "Remote",
      "license": "Not specified",
      "usage_count": "32",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@JustTryAI_databricks-mcp-server.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "Optional Settings",
          "description": "Access and manage servers by signing in.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@JustTryAI/databricks-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "databricksToken",
          "required": true,
          "description": "Databricks personal access token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@JustTryAI/databricks-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0503.@JustTryAI_databricks-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 493
  }
}