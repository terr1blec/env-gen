{
  "labels": {
    "analysis": "The MCP Server for 小红书 (RedNote) is designed to interact with the Xiaohongshu platform (a social commerce platform popular in China) by bypassing its web interface through direct HTTP requests with request headers (x-s, x-t). Its core functionality includes searching for notes (posts), retrieving note content and comments, and posting comments. The tools provided automate interactions with Xiaohongshu's content, making it suitable for tasks like content aggregation, research, or engagement.",
    "reasoning": "The primary label \"Web Search & Research\" is chosen because the server's main functionality revolves around searching for and retrieving content (notes) from Xiaohongshu, which is analogous to research or content aggregation. The secondary label \"Content Creation\" applies because of the server's ability to post comments (a form of content contribution), and \"Communication Tools\" applies due to its interaction with user-generated content (comments on notes).",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Content Creation",
      "Communication Tools"
    ],
    "custom_label": "Xiaohongshu Automation",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 92,
    "server_name": "小红书 MCP 服务 xiaohongshu",
    "rank_by_usage": 93,
    "usage_count": "812",
    "original_file": "../crawler/smithery/@jobsonlook_xhs-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@jobsonlook/xhs-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 92,
      "name": "小红书 MCP 服务 xiaohongshu",
      "author": "@jobsonlook/xhs-mcp",
      "overview": "采用js逆向出x-s,x-t,直接请求http接口,无须笨重的playwright 搜索笔记 获取笔记内容 获取笔记的评论 发表评论 RedNote xiaohongshu",
      "repository_url": "https://github.com/jobsonlook/xhs-mcp",
      "homepage": "https://smithery.ai/server/@jobsonlook/xhs-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "812",
      "success_rate": "99.90%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@jobsonlook_xhs-mcp.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "check_cookie",
          "description": "Deploy Server 小红书 MCP 服务 xiaohongshu @jobsonlook/xhs-mcp Try in Playground check_cookie",
          "parameters": []
        },
        {
          "name": "home_feed",
          "description": "Description not available",
          "parameters": []
        },
        {
          "name": "search_notes",
          "description": "根据关键词搜索笔记\n\n        Args:\n            keywords: 搜索关键词",
          "parameters": [
            {
              "name": "keywords",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_note_content",
          "description": "获取笔记内容,参数url要带上xsec_token\n\n    Args:\n        url: 笔记 url",
          "parameters": [
            {
              "name": "url",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_note_comments",
          "description": "获取笔记评论,参数url要带上xsec_token\n\n    Args:\n        url: 笔记 url",
          "parameters": [
            {
              "name": "url",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "post_comment",
          "description": "发布评论到指定笔记\n\n    Args:\n        note_id: 笔记 note_id\n        comment: 要发布的评论内容",
          "parameters": [
            {
              "name": "comment",
              "required": true,
              "type": "string"
            },
            {
              "name": "note_id",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@jobsonlook/xhs-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@jobsonlook/xhs-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0093.@jobsonlook_xhs-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 90
  }
}