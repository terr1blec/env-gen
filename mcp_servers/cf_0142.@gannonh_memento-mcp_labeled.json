{
  "labels": {
    "analysis": "The MCP Server \"Memento\" is designed to provide scalable knowledge graph memory systems for LLM applications. Its core functionality revolves around creating, managing, and retrieving information in a structured, semantic, and time-aware manner. The provided tools enable users to create and manipulate entities, relations, and observations within a knowledge graph, with capabilities for semantic search, temporal tracking, and data versioning.",
    "reasoning": "The primary label \"Memory Management\" is chosen because the server's main purpose is to manage, store, and retrieve information in a persistent and contextually aware manner. The secondary label \"AI/ML Tools\" is appropriate given the system's use of vector embeddings and semantic search, which are common in AI/ML applications. The custom label \"Knowledge Graph Management\" is included because the server's unique functionality is specifically tailored to building and interacting with knowledge graphs, which is not fully covered by predefined labels.",
    "primary_label": "Memory Management",
    "secondary_labels": [
      "AI/ML Tools"
    ],
    "custom_label": "Knowledge Graph Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 141,
    "server_name": "Memento",
    "rank_by_usage": 142,
    "usage_count": "412",
    "original_file": "../crawler/smithery/@gannonh_memento-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@gannonh/memento-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 141,
      "name": "Memento",
      "author": "@gannonh/memento-mcp",
      "overview": "Enhance your LLM applications with a scalable knowledge graph memory system. Utilize semantic search and temporal awareness to manage and retrieve information effectively, ensuring your agents have persistent and contextual memory capabilities.",
      "repository_url": "https://github.com/gannonh/memento-mcp",
      "homepage": "https://smithery.ai/server/@gannonh/memento-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "412",
      "success_rate": "90.17%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@gannonh_memento-mcp.json",
      "tools_count": 20,
      "tools": [
        {
          "name": "create_entities",
          "description": "Deploy Server @gannonh/memento-mcp Try in Playground create_entities",
          "parameters": [
            {
              "name": "create_entities",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_relations",
          "description": "Create multiple new relations between entities in your Memento MCP knowledge graph memory. Relations should be in active voice",
          "parameters": [
            {
              "name": "create_relations",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_observations",
          "description": "Add new observations to existing entities in your Memento MCP knowledge graph memory",
          "parameters": [
            {
              "name": "metadata",
              "required": false,
              "type": "string"
            },
            {
              "name": "strength",
              "required": false,
              "type": "string"
            },
            {
              "name": "confidence",
              "required": false,
              "type": "string"
            },
            {
              "name": "observations",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_entities",
          "description": "Delete multiple entities and their associated relations from your Memento MCP knowledge graph memory",
          "parameters": [
            {
              "name": "delete_entities",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_observations",
          "description": "Delete specific observations from entities in your Memento MCP knowledge graph memory",
          "parameters": [
            {
              "name": "delete_observations",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_relations",
          "description": "Delete multiple relations from your Memento MCP knowledge graph memory",
          "parameters": [
            {
              "name": "delete_relations",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_relation",
          "description": "Get a specific relation with its enhanced properties from your Memento MCP knowledge graph memory",
          "parameters": [
            {
              "name": "get_relation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_relation",
          "description": "Update an existing relation with enhanced properties in your Memento MCP knowledge graph memory",
          "parameters": [
            {
              "name": "update_relation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "read_graph",
          "description": "Read the entire Memento MCP knowledge graph memory system",
          "parameters": [
            {
              "name": "read_graph",
              "required": false,
              "type": "string"
            },
            {
              "name": "random_string",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_nodes",
          "description": "Search for nodes in your Memento MCP knowledge graph memory based on a query",
          "parameters": [
            {
              "name": "search_nodes",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "open_nodes",
          "description": "Open specific nodes in your Memento MCP knowledge graph memory by their names",
          "parameters": [
            {
              "name": "open_nodes",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "semantic_search",
          "description": "Search for entities semantically using vector embeddings and similarity in your Memento MCP knowledge graph memory",
          "parameters": [
            {
              "name": "semantic_search",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_entity_embedding",
          "description": "Get the vector embedding for a specific entity from your Memento MCP knowledge graph memory",
          "parameters": [
            {
              "name": "get_entity_embedding",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_entity_history",
          "description": "Get the version history of an entity from your Memento MCP knowledge graph memory",
          "parameters": [
            {
              "name": "get_entity_history",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_relation_history",
          "description": "Get the version history of a relation from your Memento MCP knowledge graph memory",
          "parameters": [
            {
              "name": "get_relation_history",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_graph_at_time",
          "description": "Get your Memento MCP knowledge graph memory as it existed at a specific point in time",
          "parameters": [
            {
              "name": "get_graph_at_time",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_decayed_graph",
          "description": "Get your Memento MCP knowledge graph memory with confidence values decayed based on time",
          "parameters": [
            {
              "name": "get_decayed_graph",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "force_generate_embedding",
          "description": "Forcibly generate and store an embedding for an entity in your Memento MCP knowledge graph memory",
          "parameters": [
            {
              "name": "force_generate_embedding",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "debug_embedding_config",
          "description": "Debug tool to check embedding configuration and status of your Memento MCP knowledge graph memory system",
          "parameters": [
            {
              "name": "debug_embedding_config",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "diagnose_vector_search",
          "description": "Diagnostic tool to directly query Neo4j database for entity embeddings, bypassing application abstractions",
          "parameters": [
            {
              "name": "diagnose_vector_search",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@gannonh/memento-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "openAiApiKey",
          "required": true,
          "description": "OpenAI API key for embeddings"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@gannonh/memento-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0142.@gannonh_memento-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 139
  }
}