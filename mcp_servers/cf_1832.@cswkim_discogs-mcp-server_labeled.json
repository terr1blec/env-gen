{
  "labels": {
    "analysis": "The MCP Server is primarily designed for interacting with the Discogs music database, enabling users to manage their music collections, search for releases, and perform marketplace operations. The available tools cover a wide range of functionalities, including searching the Discogs database, managing user inventories, handling marketplace listings, and interacting with personal collections. The server also supports user profile management and custom field editing for collections. This suggests that the server is a comprehensive tool for music enthusiasts and collectors who use Discogs to organize and trade music.",
    "reasoning": "The primary label \"Content Management\" was chosen because the server's primary functionality revolves around managing and organizing music content, including collections and marketplace listings. \"Database Operations\" is a secondary label because the server extensively uses database interactions to retrieve and update data. \"E-commerce\" is another secondary label due to the marketplace functionalities for buying and selling music items. No custom label is needed, as the predefined labels adequately cover the server's core functionalities.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "Database Operations",
      "E-commerce"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1831,
    "server_name": "Discogs Music Catalog Server",
    "rank_by_usage": 1832,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@cswkim_discogs-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@cswkim/discogs-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1831,
      "name": "Discogs Music Catalog Server",
      "author": "@cswkim/discogs-mcp-server",
      "overview": "Enable seamless interaction with the Discogs music database through a dedicated MCP server. Perform music catalog operations, search functionality, and manage your Discogs collection efficiently. Integrate easily with clients like Claude Desktop to enhance your music data workflows.",
      "repository_url": "https://github.com/cswkim/discogs-mcp-server",
      "homepage": "https://smithery.ai/server/@cswkim/discogs-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@cswkim_discogs-mcp-server.json",
      "tools_count": 53,
      "tools": [
        {
          "name": "get_release",
          "description": "Deploy Server Discogs Music Catalog Server Claim Server @cswkim/discogs-mcp-server Try in Playground get_release",
          "parameters": [
            {
              "name": "Get",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "release",
              "required": false,
              "type": "string"
            },
            {
              "name": "curr_abbr",
              "required": false,
              "type": "string"
            },
            {
              "name": "release_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_release_rating_by_user",
          "description": "Retrieves the release's rating for a given user",
          "parameters": [
            {
              "name": "get_release_rating_by_user",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edit_release_rating",
          "description": "Updates the release's rating for a given user",
          "parameters": [
            {
              "name": "edit_release_rating",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_release_rating",
          "description": "Deletes the release's rating for a given user",
          "parameters": [
            {
              "name": "username",
              "required": true,
              "type": "string"
            },
            {
              "name": "release_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_release_community_rating",
          "description": "Retrieves the release community rating average and count",
          "parameters": [
            {
              "name": "get_release_community_rating",
              "required": false,
              "type": "string"
            },
            {
              "name": "release_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_master_release",
          "description": "Description not available",
          "parameters": [
            {
              "name": "get_master_release",
              "required": false,
              "type": "string"
            },
            {
              "name": "Get",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "master",
              "required": false,
              "type": "string"
            },
            {
              "name": "release",
              "required": false,
              "type": "string"
            },
            {
              "name": "master_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_master_release_versions",
          "description": "Retrieves a list of all Releases that are versions of this master",
          "parameters": [
            {
              "name": "country",
              "required": false,
              "type": "string"
            },
            {
              "name": "per_page",
              "required": false,
              "type": "string"
            },
            {
              "name": "released",
              "required": false,
              "type": "string"
            },
            {
              "name": "master_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "sort_order",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_artist",
          "description": "Description not available",
          "parameters": [
            {
              "name": "get_artist",
              "required": false,
              "type": "string"
            },
            {
              "name": "Get",
              "required": false,
              "type": "string"
            },
            {
              "name": "an",
              "required": false,
              "type": "string"
            },
            {
              "name": "artist",
              "required": false,
              "type": "string"
            },
            {
              "name": "artist_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_artist_releases",
          "description": "Get an artist's releases",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "sort",
              "required": false,
              "type": "string"
            },
            {
              "name": "per_page",
              "required": false,
              "type": "string"
            },
            {
              "name": "artist_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "sort_order",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_label",
          "description": "Description not available",
          "parameters": [
            {
              "name": "get_label",
              "required": false,
              "type": "string"
            },
            {
              "name": "Get",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "label",
              "required": false,
              "type": "string"
            },
            {
              "name": "label_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_label_releases",
          "description": "Returns a list of Releases associated with the label",
          "parameters": [
            {
              "name": "get_label_releases",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search",
          "description": "Issue a search query to the Discogs database",
          "parameters": [
            {
              "name": "search",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_user_inventory",
          "description": "Returns the list of listings in a user's inventory",
          "parameters": [
            {
              "name": "get_user_inventory",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_marketplace_listing",
          "description": "Get a listing from the marketplace",
          "parameters": [
            {
              "name": "curr_abbr",
              "required": false,
              "type": "string"
            },
            {
              "name": "listing_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_marketplace_listing",
          "description": "Create a new marketplace listing",
          "parameters": [
            {
              "name": "create_marketplace_listing",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update_marketplace_listing",
          "description": "Update a marketplace listing",
          "parameters": [
            {
              "name": "update_marketplace_listing",
              "required": false,
              "type": "string"
            },
            {
              "name": "Update",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "marketplace",
              "required": false,
              "type": "string"
            },
            {
              "name": "listing",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_marketplace_listing",
          "description": "Delete a marketplace listing",
          "parameters": [
            {
              "name": "delete_marketplace_listing",
              "required": false,
              "type": "string"
            },
            {
              "name": "Delete",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "marketplace",
              "required": false,
              "type": "string"
            },
            {
              "name": "listing",
              "required": false,
              "type": "string"
            },
            {
              "name": "listing_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_marketplace_order",
          "description": "Get a marketplace order",
          "parameters": [
            {
              "name": "get_marketplace_order",
              "required": false,
              "type": "string"
            },
            {
              "name": "Get",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "marketplace",
              "required": false,
              "type": "string"
            },
            {
              "name": "order",
              "required": false,
              "type": "string"
            },
            {
              "name": "order_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edit_marketplace_order",
          "description": "Edit a marketplace order",
          "parameters": [
            {
              "name": "Edit",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "marketplace",
              "required": false,
              "type": "string"
            },
            {
              "name": "order",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "required": false,
              "type": "string"
            },
            {
              "name": "order_id",
              "required": true,
              "type": "string"
            },
            {
              "name": "shipping",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_marketplace_orders",
          "description": "Get a list of marketplace orders",
          "parameters": [
            {
              "name": "get_marketplace_orders",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_marketplace_order_messages",
          "description": "Get a list of an order's messages",
          "parameters": [
            {
              "name": "get_marketplace_order_messages",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_marketplace_order_message",
          "description": "Adds a new message to the order's message log",
          "parameters": [
            {
              "name": "create_marketplace_order_message",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_marketplace_release_stats",
          "description": "Retrieve marketplace statistics for the provided Release ID",
          "parameters": [
            {
              "name": "get_marketplace_release_stats",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "inventory_export",
          "description": "Request an export of your inventory as a CSV",
          "parameters": [
            {
              "name": "inventory_export",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_inventory_exports",
          "description": "Get a list of all recent exports of your inventory",
          "parameters": [
            {
              "name": "get_inventory_exports",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_inventory_export",
          "description": "Get details about an inventory export",
          "parameters": [
            {
              "name": "get_inventory_exports",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "download_inventory_export",
          "description": "Download an inventory export as a CSV",
          "parameters": [
            {
              "name": "download_inventory_export",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_user_identity",
          "description": "Retrieve basic information about the authenticated user",
          "parameters": [
            {
              "name": "get_user_identity",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_user_profile",
          "description": "Retrieve a user by username",
          "parameters": [
            {
              "name": "get_user_profile",
              "required": false,
              "type": "string"
            },
            {
              "name": "username",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edit_user_profile",
          "description": "Edit a user's profile data",
          "parameters": [
            {
              "name": "edit_user_profile",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_user_submissions",
          "description": "Retrieve a user's submissions by username",
          "parameters": [
            {
              "name": "get_user_submissions",
              "required": false,
              "type": "string"
            },
            {
              "name": "username",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_user_contributions",
          "description": "Retrieve a user's contributions by username",
          "parameters": [
            {
              "name": "get_user_contributions",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_user_collection_folders",
          "description": "Retrieve a list of folders in a user's collection",
          "parameters": [
            {
              "name": "get_user_collection_folders",
              "required": false,
              "type": "string"
            },
            {
              "name": "username",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_user_collection_folder",
          "description": "Create a new folder in a user's collection",
          "parameters": [
            {
              "name": "name",
              "required": false,
              "type": "string"
            },
            {
              "name": "username",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_user_collection_folder",
          "description": "Retrieve metadata about a folder in a user's collection",
          "parameters": [
            {
              "name": "get_user_collection_folders",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edit_user_collection_folder",
          "description": "Edit a folder's metadata. Folders 0 and 1 cannot be renamed.",
          "parameters": [
            {
              "name": "edit_user_collection_folder",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_user_collection_folder",
          "description": "Delete a folder from a user's collection. A folder must be empty before it can be deleted.",
          "parameters": [
            {
              "name": "delete_user_collection_folder",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "find_release_in_user_collection",
          "description": "Find a release in a user's collection",
          "parameters": [
            {
              "name": "find_release_in_user_collection",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_user_collection_items",
          "description": "Retrieve a list of items in a user's collection",
          "parameters": [
            {
              "name": "get_user_collection_items",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_release_to_user_collection_folder",
          "description": "Add a release to a folder in a user's collection. The folder_id must be non-zero.",
          "parameters": [
            {
              "name": "add_release_to_user_collection_folder",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "rate_release_in_user_collection",
          "description": "Rate a release in a user's collection. The folder_id must be non-zero.",
          "parameters": [
            {
              "name": "rate_release_in_user_collection",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "move_release_in_user_collection",
          "description": "Move a release in a user's collection to another folder",
          "parameters": [
            {
              "name": "move_release_in_user_collection",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_release_from_user_collection_folder",
          "description": "Remove an instance of a release from a user's collection folder. The folder_id must be non-zero.",
          "parameters": [
            {
              "name": "delete_release_from_user_collection_folder",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_user_collection_custom_fields",
          "description": "Retrieve a list of user-defined collection notes fields. These fields are available on every release in the collection.",
          "parameters": [
            {
              "name": "get_user_collection_custom_fields",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "edit_user_collection_custom_field_value",
          "description": "Edit a custom field value for a release in a user's collection",
          "parameters": [
            {
              "name": "edit_user_collection_custom_field_value",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_user_collection_value",
          "description": "Returns the minimum, median, and maximum value of a user's collection",
          "parameters": [
            {
              "name": "get_user_collection_value",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_user_wantlist",
          "description": "Returns the list of releases in a user's wantlist",
          "parameters": [
            {
              "name": "get_user_wantlist",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "add_to_wantlist",
          "description": "Add a release to a user's wantlist",
          "parameters": [
            {
              "name": "notes",
              "required": false,
              "type": "string"
            },
            {
              "name": "rating",
              "required": false,
              "type": "string"
            },
            {
              "name": "username",
              "required": true,
              "type": "string"
            },
            {
              "name": "release_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "edit_item_in_wantlist",
          "description": "Edit a release in a user's wantlist",
          "parameters": [
            {
              "name": "notes",
              "required": false,
              "type": "string"
            },
            {
              "name": "rating",
              "required": false,
              "type": "string"
            },
            {
              "name": "username",
              "required": true,
              "type": "string"
            },
            {
              "name": "release_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete_item_in_wantlist",
          "description": "Delete a release from a user's wantlist",
          "parameters": [
            {
              "name": "delete_item_in_wantlist",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_user_lists",
          "description": "Description not available",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "sort",
              "required": false,
              "type": "string"
            },
            {
              "name": "per_page",
              "required": false,
              "type": "string"
            },
            {
              "name": "username",
              "required": true,
              "type": "string"
            },
            {
              "name": "sort_order",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_list",
          "description": "Description not available",
          "parameters": [
            {
              "name": "get_list",
              "required": false,
              "type": "string"
            },
            {
              "name": "list_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "fetch_image",
          "description": "Fetch an image by URL",
          "parameters": [
            {
              "name": "fetch_image",
              "required": false,
              "type": "string"
            },
            {
              "name": "url",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@cswkim/discogs-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "personalAccessToken",
          "required": true,
          "description": "Your Discogs personal access token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@cswkim/discogs-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1832.@cswkim_discogs-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1628
  }
}