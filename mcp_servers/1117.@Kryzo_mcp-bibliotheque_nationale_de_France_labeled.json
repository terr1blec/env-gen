{
  "labels": {
    "analysis": "The MCP Server \"BnF API Server\" provides access to the Gallica digital library of the Biblioth√®que nationale de France, enabling users to search for and retrieve documents, images, and maps. Its primary functionality includes searching by various criteria (title, author, subject, date, document type) and generating structured research reports with bibliographies, historical context, analysis, and visual content. The server automates citation generation and integrates visual resources, making it a powerful tool for researchers and academics.",
    "reasoning": "The primary label \"Web Search & Research\" was chosen because the server's core functionality revolves around accessing and searching a digital library for academic and research purposes. The secondary label \"Content Creation\" was added because the server generates structured research reports, including formatted bibliographies and analysis, which fits into content creation. No custom label is needed as the predefined categories sufficiently cover the server's functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Content Creation"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1116,
    "server_name": "BnF API Server",
    "rank_by_usage": 1117,
    "usage_count": "1",
    "original_file": "../crawler/smithery/@Kryzo_mcp-bibliotheque_nationale_de_France.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Kryzo/mcp-bibliotheque_nationale_de_France/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "search_by_title",
          "description": "\n    Search for documents in the Gallica digital library by title.\n    \n    Args:\n        title: The title to search for\n        exact_match: If True, search for the exact title; otherwise, search for title containing the words\n        max_results: Maximum number of results to return (1-50)\n        start_record: Starting record for pagination\n        \n    Returns:\n        Dictionary containing search results and metadata\n    ",
          "input_schema": {
            "properties": {
              "title": {
                "title": "Title",
                "type": "string"
              },
              "exact_match": {
                "default": false,
                "title": "Exact Match",
                "type": "boolean"
              },
              "max_results": {
                "default": 10,
                "title": "Max Results",
                "type": "integer"
              },
              "start_record": {
                "default": 1,
                "title": "Start Record",
                "type": "integer"
              }
            },
            "required": [
              "title"
            ],
            "title": "search_by_titleArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "search_by_author",
          "description": "\n    Search for documents in the Gallica digital library by author.\n    \n    Args:\n        author: The author name to search for\n        exact_match: If True, search for the exact author name; otherwise, search for author containing the words\n        max_results: Maximum number of results to return (1-50)\n        start_record: Starting record for pagination\n        \n    Returns:\n        Dictionary containing search results and metadata\n    ",
          "input_schema": {
            "properties": {
              "author": {
                "title": "Author",
                "type": "string"
              },
              "exact_match": {
                "default": false,
                "title": "Exact Match",
                "type": "boolean"
              },
              "max_results": {
                "default": 10,
                "title": "Max Results",
                "type": "integer"
              },
              "start_record": {
                "default": 1,
                "title": "Start Record",
                "type": "integer"
              }
            },
            "required": [
              "author"
            ],
            "title": "search_by_authorArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "search_by_subject",
          "description": "\n    Search for documents in the Gallica digital library by subject.\n    \n    Args:\n        subject: The subject to search for\n        exact_match: If True, search for the exact subject; otherwise, search for subject containing the words\n        max_results: Maximum number of results to return (1-50)\n        start_record: Starting record for pagination\n        \n    Returns:\n        Dictionary containing search results and metadata\n    ",
          "input_schema": {
            "properties": {
              "subject": {
                "title": "Subject",
                "type": "string"
              },
              "exact_match": {
                "default": false,
                "title": "Exact Match",
                "type": "boolean"
              },
              "max_results": {
                "default": 10,
                "title": "Max Results",
                "type": "integer"
              },
              "start_record": {
                "default": 1,
                "title": "Start Record",
                "type": "integer"
              }
            },
            "required": [
              "subject"
            ],
            "title": "search_by_subjectArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "search_by_date",
          "description": "\n    Search for documents in the Gallica digital library by date.\n    \n    Args:\n        date: The date to search for (format: YYYY or YYYY-MM or YYYY-MM-DD)\n        max_results: Maximum number of results to return (1-50)\n        start_record: Starting record for pagination\n        \n    Returns:\n        Dictionary containing search results and metadata\n    ",
          "input_schema": {
            "properties": {
              "date": {
                "title": "Date",
                "type": "string"
              },
              "max_results": {
                "default": 10,
                "title": "Max Results",
                "type": "integer"
              },
              "start_record": {
                "default": 1,
                "title": "Start Record",
                "type": "integer"
              }
            },
            "required": [
              "date"
            ],
            "title": "search_by_dateArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "search_by_document_type",
          "description": "\n    Search for documents in the Gallica digital library by document type.\n    \n    Args:\n        doc_type: The document type to search for (e.g., monographie, periodique, image, manuscrit, carte, musique, etc.)\n        max_results: Maximum number of results to return (1-50)\n        start_record: Starting record for pagination\n        \n    Returns:\n        Dictionary containing search results and metadata\n    ",
          "input_schema": {
            "properties": {
              "doc_type": {
                "title": "Doc Type",
                "type": "string"
              },
              "max_results": {
                "default": 10,
                "title": "Max Results",
                "type": "integer"
              },
              "start_record": {
                "default": 1,
                "title": "Start Record",
                "type": "integer"
              }
            },
            "required": [
              "doc_type"
            ],
            "title": "search_by_document_typeArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "advanced_search",
          "description": "\n    Perform an advanced search using custom CQL query syntax.\n    \n    This tool allows for complex queries using the CQL (Contextual Query Language) syntax.\n    Examples:\n    - Search for books by Victor Hugo: dc.creator all \"Victor Hugo\" and dc.type all \"monographie\"\n    - Search for maps about Paris: dc.subject all \"Paris\" and dc.type all \"carte\"\n    - Search for documents in English: dc.language all \"eng\"\n    \n    Args:\n        query: Custom CQL query string\n        max_results: Maximum number of results to return (1-50)\n        start_record: Starting record for pagination\n        \n    Returns:\n        Dictionary containing search results and metadata\n    ",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "max_results": {
                "default": 10,
                "title": "Max Results",
                "type": "integer"
              },
              "start_record": {
                "default": 1,
                "title": "Start Record",
                "type": "integer"
              }
            },
            "required": [
              "query"
            ],
            "title": "advanced_searchArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "natural_language_search",
          "description": "\n    Search the Gallica digital library using natural language.\n    \n    This is a simplified search that uses the 'gallica all' operator to search across all fields.\n    It's the most user-friendly way to search but may not be as precise as the other search methods.\n    \n    Args:\n        query: Natural language search query\n        max_results: Maximum number of results to return (1-50)\n        start_record: Starting record for pagination\n        \n    Returns:\n        Dictionary containing search results and metadata\n    ",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "max_results": {
                "default": 10,
                "title": "Max Results",
                "type": "integer"
              },
              "start_record": {
                "default": 1,
                "title": "Start Record",
                "type": "integer"
              }
            },
            "required": [
              "query"
            ],
            "title": "natural_language_searchArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "sequential_reporting",
          "description": "\n    Generate a research report in a sequential, step-by-step manner using Gallica BnF sources.\n    \n    This tool follows a sequential approach to report generation:\n    1. Initialize with a topic\n    2. Search for sources\n    3. Create bibliography\n    4. Create content sections in order\n    \n    Parameters:\n    - topic: Research topic (only needed for initialization)\n    - page_count: Number of pages for the report (default: 4)\n    - source_count: Number of sources to find (default: 10)\n    - search_sources: Set to True to search for sources after initialization\n    - section_number: Current section number (1-based)\n    - total_sections: Total number of sections in the report\n    - title: Title of the current section\n    - content: Content for the current section\n    - is_bibliography: Whether this section is the bibliography\n    - sources_used: List of source IDs used in this section\n    - next_section_needed: Whether another section is needed\n    - include_graphics: Whether to include images and maps in the report\n    \n    Returns:\n    - Report section data\n    ",
          "input_schema": {
            "properties": {
              "topic": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Topic"
              },
              "page_count": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Page Count"
              },
              "source_count": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Source Count"
              },
              "search_sources": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Search Sources"
              },
              "section_number": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Section Number"
              },
              "total_sections": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Total Sections"
              },
              "title": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Title"
              },
              "content": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Content"
              },
              "is_bibliography": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Is Bibliography"
              },
              "sources_used": {
                "anyOf": [
                  {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Sources Used"
              },
              "next_section_needed": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Next Section Needed"
              },
              "include_graphics": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Include Graphics"
              }
            },
            "title": "sequential_reportingArguments",
            "type": "object"
          },
          "annotations": {}
        }
      ],
      "tool_count": 8,
      "tool_names": [
        "search_by_title",
        "search_by_author",
        "search_by_subject",
        "search_by_date",
        "search_by_document_type",
        "advanced_search",
        "natural_language_search",
        "sequential_reporting"
      ]
    },
    "server_info_crawled": {
      "id": 1116,
      "name": "BnF API Server",
      "author": "@Kryzo/mcp-bibliotheque_nationale_de_France",
      "overview": "Access the Gallica digital library of the Biblioth√®que nationale de France to search documents, images, maps, and other resources. Generate structured sequential research reports on any topic, including formatted bibliographies, historical context, analysis, and relevant images or maps. Enhance your research workflow with automated citation generation and integrated visual content.",
      "repository_url": "https://github.com/Kryzo/mcp-bibliotheque_nationale_de_France",
      "homepage": "https://smithery.ai/server/@Kryzo/mcp-bibliotheque_nationale_de_France",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "1",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Kryzo_mcp-bibliotheque_nationale_de_France.json",
      "tools_count": 8,
      "tools": [
        {
          "name": "search_by_title",
          "description": "\n    Search for documents in the Gallica digital library by title.\n    \n    Args:\n        title: The title to search for\n        exact_match: If True, search for the exact title; otherwise, search for title containing the words\n        max_results: Maximum number of results to return (1-50)\n        start_record: Starting record for pagination\n        \n    Returns:\n        Dictionary containing search results and metadata\n    ",
          "input_schema": {
            "properties": {
              "title": {
                "title": "Title",
                "type": "string"
              },
              "exact_match": {
                "default": false,
                "title": "Exact Match",
                "type": "boolean"
              },
              "max_results": {
                "default": 10,
                "title": "Max Results",
                "type": "integer"
              },
              "start_record": {
                "default": 1,
                "title": "Start Record",
                "type": "integer"
              }
            },
            "required": [
              "title"
            ],
            "title": "search_by_titleArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "search_by_author",
          "description": "\n    Search for documents in the Gallica digital library by author.\n    \n    Args:\n        author: The author name to search for\n        exact_match: If True, search for the exact author name; otherwise, search for author containing the words\n        max_results: Maximum number of results to return (1-50)\n        start_record: Starting record for pagination\n        \n    Returns:\n        Dictionary containing search results and metadata\n    ",
          "input_schema": {
            "properties": {
              "author": {
                "title": "Author",
                "type": "string"
              },
              "exact_match": {
                "default": false,
                "title": "Exact Match",
                "type": "boolean"
              },
              "max_results": {
                "default": 10,
                "title": "Max Results",
                "type": "integer"
              },
              "start_record": {
                "default": 1,
                "title": "Start Record",
                "type": "integer"
              }
            },
            "required": [
              "author"
            ],
            "title": "search_by_authorArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "search_by_subject",
          "description": "\n    Search for documents in the Gallica digital library by subject.\n    \n    Args:\n        subject: The subject to search for\n        exact_match: If True, search for the exact subject; otherwise, search for subject containing the words\n        max_results: Maximum number of results to return (1-50)\n        start_record: Starting record for pagination\n        \n    Returns:\n        Dictionary containing search results and metadata\n    ",
          "input_schema": {
            "properties": {
              "subject": {
                "title": "Subject",
                "type": "string"
              },
              "exact_match": {
                "default": false,
                "title": "Exact Match",
                "type": "boolean"
              },
              "max_results": {
                "default": 10,
                "title": "Max Results",
                "type": "integer"
              },
              "start_record": {
                "default": 1,
                "title": "Start Record",
                "type": "integer"
              }
            },
            "required": [
              "subject"
            ],
            "title": "search_by_subjectArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "search_by_date",
          "description": "\n    Search for documents in the Gallica digital library by date.\n    \n    Args:\n        date: The date to search for (format: YYYY or YYYY-MM or YYYY-MM-DD)\n        max_results: Maximum number of results to return (1-50)\n        start_record: Starting record for pagination\n        \n    Returns:\n        Dictionary containing search results and metadata\n    ",
          "input_schema": {
            "properties": {
              "date": {
                "title": "Date",
                "type": "string"
              },
              "max_results": {
                "default": 10,
                "title": "Max Results",
                "type": "integer"
              },
              "start_record": {
                "default": 1,
                "title": "Start Record",
                "type": "integer"
              }
            },
            "required": [
              "date"
            ],
            "title": "search_by_dateArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "search_by_document_type",
          "description": "\n    Search for documents in the Gallica digital library by document type.\n    \n    Args:\n        doc_type: The document type to search for (e.g., monographie, periodique, image, manuscrit, carte, musique, etc.)\n        max_results: Maximum number of results to return (1-50)\n        start_record: Starting record for pagination\n        \n    Returns:\n        Dictionary containing search results and metadata\n    ",
          "input_schema": {
            "properties": {
              "doc_type": {
                "title": "Doc Type",
                "type": "string"
              },
              "max_results": {
                "default": 10,
                "title": "Max Results",
                "type": "integer"
              },
              "start_record": {
                "default": 1,
                "title": "Start Record",
                "type": "integer"
              }
            },
            "required": [
              "doc_type"
            ],
            "title": "search_by_document_typeArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "advanced_search",
          "description": "\n    Perform an advanced search using custom CQL query syntax.\n    \n    This tool allows for complex queries using the CQL (Contextual Query Language) syntax.\n    Examples:\n    - Search for books by Victor Hugo: dc.creator all \"Victor Hugo\" and dc.type all \"monographie\"\n    - Search for maps about Paris: dc.subject all \"Paris\" and dc.type all \"carte\"\n    - Search for documents in English: dc.language all \"eng\"\n    \n    Args:\n        query: Custom CQL query string\n        max_results: Maximum number of results to return (1-50)\n        start_record: Starting record for pagination\n        \n    Returns:\n        Dictionary containing search results and metadata\n    ",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "max_results": {
                "default": 10,
                "title": "Max Results",
                "type": "integer"
              },
              "start_record": {
                "default": 1,
                "title": "Start Record",
                "type": "integer"
              }
            },
            "required": [
              "query"
            ],
            "title": "advanced_searchArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "natural_language_search",
          "description": "\n    Search the Gallica digital library using natural language.\n    \n    This is a simplified search that uses the 'gallica all' operator to search across all fields.\n    It's the most user-friendly way to search but may not be as precise as the other search methods.\n    \n    Args:\n        query: Natural language search query\n        max_results: Maximum number of results to return (1-50)\n        start_record: Starting record for pagination\n        \n    Returns:\n        Dictionary containing search results and metadata\n    ",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "max_results": {
                "default": 10,
                "title": "Max Results",
                "type": "integer"
              },
              "start_record": {
                "default": 1,
                "title": "Start Record",
                "type": "integer"
              }
            },
            "required": [
              "query"
            ],
            "title": "natural_language_searchArguments",
            "type": "object"
          },
          "annotations": {}
        },
        {
          "name": "sequential_reporting",
          "description": "\n    Generate a research report in a sequential, step-by-step manner using Gallica BnF sources.\n    \n    This tool follows a sequential approach to report generation:\n    1. Initialize with a topic\n    2. Search for sources\n    3. Create bibliography\n    4. Create content sections in order\n    \n    Parameters:\n    - topic: Research topic (only needed for initialization)\n    - page_count: Number of pages for the report (default: 4)\n    - source_count: Number of sources to find (default: 10)\n    - search_sources: Set to True to search for sources after initialization\n    - section_number: Current section number (1-based)\n    - total_sections: Total number of sections in the report\n    - title: Title of the current section\n    - content: Content for the current section\n    - is_bibliography: Whether this section is the bibliography\n    - sources_used: List of source IDs used in this section\n    - next_section_needed: Whether another section is needed\n    - include_graphics: Whether to include images and maps in the report\n    \n    Returns:\n    - Report section data\n    ",
          "input_schema": {
            "properties": {
              "topic": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Topic"
              },
              "page_count": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Page Count"
              },
              "source_count": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Source Count"
              },
              "search_sources": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Search Sources"
              },
              "section_number": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Section Number"
              },
              "total_sections": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Total Sections"
              },
              "title": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Title"
              },
              "content": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Content"
              },
              "is_bibliography": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Is Bibliography"
              },
              "sources_used": {
                "anyOf": [
                  {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Sources Used"
              },
              "next_section_needed": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Next Section Needed"
              },
              "include_graphics": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Include Graphics"
              }
            },
            "title": "sequential_reportingArguments",
            "type": "object"
          },
          "annotations": {}
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Kryzo/mcp-bibliotheque_nationale_de_France/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Kryzo/mcp-bibliotheque_nationale_de_France/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1117.@Kryzo_mcp-bibliotheque_nationale_de_France_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1094
  }
}