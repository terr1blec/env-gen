{
  "labels": {
    "analysis": "The MCP Server functions as a memory storage and retrieval system designed to maintain context for applications by storing user-specific memories and enabling informed decision-making based on past interactions. It provides tools to add new memories and search through existing ones, with relevance scoring to prioritize the most applicable information. This setup enhances applications that require personalized and context-aware interactions, particularly in environments where retaining user history is crucial.",
    "reasoning": "The primary functionality aligns closely with Memory Management, as the server's core purpose is to store, retrieve, and manage user-specific data to maintain context. Given its dynamic search capabilities triggered by user queries, API Integration is also relevant, though secondary since the focus is on memory handling. The tool's design could also support AI/ML Tools if used in AI contexts, but this is less direct.",
    "primary_label": "Memory Management",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": "Context-Aware Memory",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 5,
    "server_name": "Memory Tool",
    "rank_by_usage": 6,
    "usage_count": "16,384",
    "original_file": "../crawler/smithery/@mem0ai_mem0-memory-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@mem0ai/mem0-memory-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 5,
      "name": "Memory Tool",
      "author": "@mem0ai/mem0-memory-mcp",
      "overview": "Store and retrieve user-specific memories to maintain context and make informed decisions based on past interactions. Utilize a simple API to add and search memories with relevance scoring, enhancing your application's ability to remember user preferences and interactions.",
      "repository_url": "https://github.com/mem0ai/mem0-mcp",
      "homepage": "https://smithery.ai/server/@mem0ai/mem0-memory-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "16,384",
      "success_rate": "99.37%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@mem0ai_mem0-memory-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "add-memory",
          "description": "Deploy Server Memory Tool @mem0ai/mem0-memory-mcp Try in Playground",
          "parameters": []
        },
        {
          "name": "search-memories",
          "description": "Search through stored memories. This method is called ANYTIME the user asks anything.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@mem0ai/mem0-memory-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "mem0ApiKey",
          "required": true,
          "description": "Mem0 API key for accessing the Mem0 API"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@mem0ai/mem0-memory-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0006.@mem0ai_mem0-memory-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 6
  }
}