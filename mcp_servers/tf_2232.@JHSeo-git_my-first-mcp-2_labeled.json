{
  "labels": {
    "analysis": "The MCP Server described is a foundational implementation designed to facilitate the development and experimentation of MCP (Message Control Protocol) capabilities. It supports both standard input/output (stdio) and Server-Sent Events (SSE) transports, allowing seamless integration with MCP clients in Node.js or Docker environments. The available tools (echo, calculate-bmi, fetch-weather) indicate functional capabilities focused on basic communication, health calculations, and weather data retrieval. The server's primary purpose is to enable quick startup and testing of MCP protocols and functionalities.",
    "reasoning": "The primary label is selected as \"Development Tools\" because the server's core functionality revolves around facilitating the development, testing, and experimentation of MCP protocols. The secondary labels include \"API Integration\" (due to its transport mechanisms and potential for client-server communication) and \"Web Search & Research\" (given the presence of weather data fetching). No custom label is needed as the predefined categories sufficiently cover the server's functionalities.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "API Integration",
      "Web Search & Research"
    ],
    "custom_label": "MCP Protocol Testing",
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2231,
    "server_name": "My First MCP Server",
    "rank_by_usage": 2232,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@JHSeo-git_my-first-mcp-2.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@JHSeo-git/my-first-mcp-2/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "echo",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            },
            "required": [
              "message"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "calculate-bmi",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "weightKg": {
                "type": "number"
              },
              "heightM": {
                "type": "number"
              }
            },
            "required": [
              "weightKg",
              "heightM"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "fetch-weather",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              }
            },
            "required": [
              "city"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 3,
      "tool_names": [
        "echo",
        "calculate-bmi",
        "fetch-weather"
      ]
    },
    "server_info_crawled": {
      "id": 2231,
      "name": "My First MCP Server",
      "author": "@JHSeo-git/my-first-mcp-2",
      "overview": "Provide a simple and easy-to-run MCP server implementation that supports stdio and SSE transports. Enable seamless integration with MCP clients using Node.js or Docker environments. Facilitate quick startup and testing of MCP capabilities for development and experimentation.",
      "repository_url": "https://github.com/JHSeo-git/my-first-mcp",
      "homepage": "https://smithery.ai/server/@JHSeo-git/my-first-mcp-2",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@JHSeo-git_my-first-mcp-2.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "echo",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            },
            "required": [
              "message"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "calculate-bmi",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "weightKg": {
                "type": "number"
              },
              "heightM": {
                "type": "number"
              }
            },
            "required": [
              "weightKg",
              "heightM"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "fetch-weather",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              }
            },
            "required": [
              "city"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@JHSeo-git/my-first-mcp-2/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@JHSeo-git/my-first-mcp-2/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "2232.@JHSeo-git_my-first-mcp-2_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1924
  }
}