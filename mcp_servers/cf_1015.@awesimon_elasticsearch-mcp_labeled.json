{
  "labels": {
    "analysis": "The Elasticsearch MCP Server enables users to interact with Elasticsearch data using natural language commands. Its core functionality includes managing Elasticsearch mappings, performing searches and indexing operations, and handling index management. These capabilities are essential for data retrieval, storage, and organization within Elasticsearch environments. The available tool for optional server settings further suggests that the server focuses on flexibility and user-dependent configurations.",
    "reasoning": "The primary label \"Database Operations\" was chosen because the server's main functionality revolves around managing, searching, and indexing data within Elasticsearch, which is a database management system. The secondary label \"Data Analysis & Processing\" was selected since Elasticsearch is often used for analyzing and processing data. No custom label is needed as the predefined labels adequately cover the server's functionality.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1014,
    "server_name": "Elasticsearch MCP Server",
    "rank_by_usage": 1015,
    "usage_count": "2",
    "original_file": "../crawler/smithery/@awesimon_elasticsearch-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@awesimon/elasticsearch-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1014,
      "name": "Elasticsearch MCP Server",
      "author": "@awesimon/elasticsearch-mcp",
      "overview": "Connect your agents to Elasticsearch data using natural language with available features including mappings management, search and indexing, and index management etc.",
      "repository_url": "https://github.com/awesimon/elasticsearch-mcp",
      "homepage": "https://smithery.ai/server/@awesimon/elasticsearch-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "2",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@awesimon_elasticsearch-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "Optional Settings",
          "description": "Access and manage servers by signing in.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@awesimon/elasticsearch-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@awesimon/elasticsearch-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1015.@awesimon_elasticsearch-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 993
  }
}