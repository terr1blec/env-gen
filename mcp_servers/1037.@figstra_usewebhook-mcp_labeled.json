{
  "labels": {
    "analysis": "The MCP Server is designed to streamline webhook management and debugging. Its primary function involves generating webhook endpoints to capture, inspect, and manage HTTP requests. This is particularly useful for developers testing API integrations, debugging incoming requests, and replaying or forwarding requests. The core problem it solves is simplifying the process of managing webhooks during development, which typically involves manual handling of payloads and endpoints.",
    "reasoning": "The primary label \"API Integration\" was chosen because the server's main functionality revolves around handling webhook endpoints, which is a key aspect of API development and interaction. Additional secondary labels like \"Development Tools\" and \"Browser Automation\" were selected because the server aids in debugging and automating HTTP request handling, tasks commonly associated with these categories. No custom label was necessary as the predefined categories adequately cover the server's functionality.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Development Tools",
      "Browser Automation"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1036,
    "server_name": "UseWebhook",
    "rank_by_usage": 1037,
    "usage_count": "2",
    "original_file": "../crawler/smithery/@figstra_usewebhook-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@figstra/usewebhook-mcp/mcp?config=eyJkZWJ1ZyI6IGZhbHNlfQ==&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "generate_webhook",
          "description": "Generate a webhook endpoint that captures incoming HTTP requests",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "generate_webhook"
      ]
    },
    "server_info_crawled": {
      "id": 1036,
      "name": "UseWebhook",
      "author": "@figstra/usewebhook-mcp",
      "overview": "Generate webhook endpoints for testing, inspect and diff HTTP request payloads, replay requests from history, and forward requests to your localhost. Enhance your development workflow by easily managing and debugging webhooks in a streamlined manner.",
      "repository_url": "https://github.com/figstra/usewebhook-mcp",
      "homepage": "https://smithery.ai/server/@figstra/usewebhook-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "2",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@figstra_usewebhook-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "generate_webhook",
          "description": "Generate a webhook endpoint that captures incoming HTTP requests",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"debug\": false\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@figstra/usewebhook-mcp/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"debug\": false\n}",
      "python_sdk_url": "https://server.smithery.ai/@figstra/usewebhook-mcp/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "1037.@figstra_usewebhook-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1015
  }
}