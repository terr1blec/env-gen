{
  "labels": {
    "analysis": "The MCP Server \"Two Truths and a Twist\" is a trivia game that challenges players to identify the false statement among two truths. It leverages AI to create interactive and entertaining gameplay, with tools designed to generate, submit, and reveal game rounds in a fun and engaging way. The core functionality revolves around creating playful interactions, managing game rounds, and providing statistics.",
    "reasoning": "The primary functionality aligns with \"Gaming\" due to its focus on interactive game mechanics and entertainment. The secondary label \"AI/ML Tools\" is appropriate because the AI powers the unique generation of playful twists. No custom label is needed as the predefined categories cover the server's functionality well.",
    "primary_label": "Gaming",
    "secondary_labels": [
      "AI/ML Tools"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 886,
    "server_name": "Two Truths and a Twist",
    "rank_by_usage": 887,
    "usage_count": "4",
    "original_file": "../crawler/smithery/@ErgodicLabs_twotruthsandatwist.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ErgodicLabs/twotruthsandatwist/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "create_round",
          "description": "Create a new game round with a question and three statements. The twist should be playful, surprising, and entertaining - not just factually incorrect.",
          "input_schema": {
            "type": "object",
            "properties": {
              "category": {
                "type": "string",
                "description": "The category of the question"
              },
              "question": {
                "type": "string",
                "description": "The main question for the round"
              },
              "trivia_1": {
                "type": "string",
                "description": "First statement - can be truth or twist"
              },
              "trivia_2": {
                "type": "string",
                "description": "Second statement - can be truth or twist"
              },
              "trivia_3": {
                "type": "string",
                "description": "Third statement - can be truth or twist"
              }
            },
            "required": [
              "category",
              "question",
              "trivia_1",
              "trivia_2",
              "trivia_3"
            ]
          },
          "annotations": null
        },
        {
          "name": "submit_guess",
          "description": "Submit a player's guess for which statement is the twist",
          "input_schema": {
            "type": "object",
            "properties": {
              "round_id": {
                "type": "integer",
                "description": "The ID of the round"
              },
              "guess_index": {
                "type": "integer",
                "description": "Index of the guessed statement (0, 1, or 2)"
              }
            },
            "required": [
              "round_id",
              "guess_index"
            ]
          },
          "annotations": null
        },
        {
          "name": "reveal_twist",
          "description": "Reveal which statement was the twist and provide explanations. The explanations should be entertaining and playful - build anticipation and make the reveal fun!",
          "input_schema": {
            "type": "object",
            "properties": {
              "round_id": {
                "type": "integer",
                "description": "The ID of the round"
              },
              "twist_index": {
                "type": "integer",
                "description": "Index of the twist statement (0, 1, or 2)"
              },
              "explanation_1": {
                "type": "string",
                "description": "Explanation for statement 1 - be creative and entertaining"
              },
              "explanation_2": {
                "type": "string",
                "description": "Explanation for statement 2 - be creative and entertaining"
              },
              "explanation_3": {
                "type": "string",
                "description": "Explanation for statement 3 - be creative and entertaining"
              }
            },
            "required": [
              "round_id",
              "twist_index",
              "explanation_1",
              "explanation_2",
              "explanation_3"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_round",
          "description": "Get details of a specific round",
          "input_schema": {
            "type": "object",
            "properties": {
              "round_id": {
                "type": "integer",
                "description": "The ID of the round to retrieve"
              }
            },
            "required": [
              "round_id"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_last_round",
          "description": "Get details of the most recent round",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "get_stats",
          "description": "Get game statistics",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        }
      ],
      "tool_count": 6,
      "tool_names": [
        "create_round",
        "submit_guess",
        "reveal_twist",
        "get_round",
        "get_last_round",
        "get_stats"
      ]
    },
    "server_info_crawled": {
      "id": 886,
      "name": "Two Truths and a Twist",
      "author": "@ErgodicLabs/twotruthsandatwist",
      "overview": "Engage in a fun trivia game where you identify the false statement among two truths. Experience interactive gameplay powered by AI, making each round unique and entertaining. Connect your MCP-compatible LLM to enjoy a seamless gaming experience.",
      "repository_url": "https://github.com/ErgodicLabs/TwoTruthsAndATwist",
      "homepage": "https://smithery.ai/server/@ErgodicLabs/twotruthsandatwist",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "4",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ErgodicLabs_twotruthsandatwist.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "create_round",
          "description": "Create a new game round with a question and three statements. The twist should be playful, surprising, and entertaining - not just factually incorrect.",
          "input_schema": {
            "type": "object",
            "properties": {
              "category": {
                "type": "string",
                "description": "The category of the question"
              },
              "question": {
                "type": "string",
                "description": "The main question for the round"
              },
              "trivia_1": {
                "type": "string",
                "description": "First statement - can be truth or twist"
              },
              "trivia_2": {
                "type": "string",
                "description": "Second statement - can be truth or twist"
              },
              "trivia_3": {
                "type": "string",
                "description": "Third statement - can be truth or twist"
              }
            },
            "required": [
              "category",
              "question",
              "trivia_1",
              "trivia_2",
              "trivia_3"
            ]
          },
          "annotations": null
        },
        {
          "name": "submit_guess",
          "description": "Submit a player's guess for which statement is the twist",
          "input_schema": {
            "type": "object",
            "properties": {
              "round_id": {
                "type": "integer",
                "description": "The ID of the round"
              },
              "guess_index": {
                "type": "integer",
                "description": "Index of the guessed statement (0, 1, or 2)"
              }
            },
            "required": [
              "round_id",
              "guess_index"
            ]
          },
          "annotations": null
        },
        {
          "name": "reveal_twist",
          "description": "Reveal which statement was the twist and provide explanations. The explanations should be entertaining and playful - build anticipation and make the reveal fun!",
          "input_schema": {
            "type": "object",
            "properties": {
              "round_id": {
                "type": "integer",
                "description": "The ID of the round"
              },
              "twist_index": {
                "type": "integer",
                "description": "Index of the twist statement (0, 1, or 2)"
              },
              "explanation_1": {
                "type": "string",
                "description": "Explanation for statement 1 - be creative and entertaining"
              },
              "explanation_2": {
                "type": "string",
                "description": "Explanation for statement 2 - be creative and entertaining"
              },
              "explanation_3": {
                "type": "string",
                "description": "Explanation for statement 3 - be creative and entertaining"
              }
            },
            "required": [
              "round_id",
              "twist_index",
              "explanation_1",
              "explanation_2",
              "explanation_3"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_round",
          "description": "Get details of a specific round",
          "input_schema": {
            "type": "object",
            "properties": {
              "round_id": {
                "type": "integer",
                "description": "The ID of the round to retrieve"
              }
            },
            "required": [
              "round_id"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_last_round",
          "description": "Get details of the most recent round",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "get_stats",
          "description": "Get game statistics",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ErgodicLabs/twotruthsandatwist/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ErgodicLabs/twotruthsandatwist/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0887.@ErgodicLabs_twotruthsandatwist_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 868
  }
}