{
  "labels": {
    "analysis": "The MCP Server described is primarily focused on web search and content extraction. It provides tools for performing rich web searches using the Serper API and scraping webpage content, including text, markdown, JSON-LD metadata, and header metadata. The core functionality revolves around gathering and extracting web-based information, making it highly relevant for research, data collection, and automated content processing.",
    "reasoning": "The primary label \"Web Search & Research\" was chosen because the server's main tools (\"google_search\" and \"scrape\") are fundamentally about retrieving and extracting web content, which aligns with research needs. The \"Browser Automation\" secondary label is also relevant because scraping involves automated browsing and content extraction. No custom label is needed as the primary and secondary labels sufficiently cover the server's functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Browser Automation"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1319,
    "server_name": "Serper Search and Scrape",
    "rank_by_usage": 1320,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@diegofornalha_mcp-server-serper.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@diegofornalha/mcp-server-serper/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1319,
      "name": "Serper Search and Scrape",
      "author": "@diegofornalha/mcp-server-serper",
      "overview": "Habilite recursos poderosos de pesquisa na web e extração de conteúdo. Realize pesquisas ricas na web e raspe o conteúdo da página da web perfeitamente com a integração da API Serper.",
      "repository_url": "https://github.com/diegofornalha/mcp-server-serper",
      "homepage": "https://smithery.ai/server/@diegofornalha/mcp-server-serper",
      "remote_or_local": "Remote",
      "license": "https://smithery.ai/server/@diegofornalha/mcp-server-serper/tools",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@diegofornalha_mcp-server-serper.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "google_search",
          "description": "Deploy Server Serper Search and Scrape @diegofornalha/mcp-server-serper Try in Playground google_search",
          "parameters": [
            {
              "name": "google_search",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "scrape",
          "description": "Ferramenta para extrair o conteúdo de uma página web e recuperar o texto e, opcionalmente, o conteúdo em markdown. Também recupera os metadados JSON-LD e os metadados do cabeçalho.",
          "parameters": [
            {
              "name": "scrape",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "_health",
          "description": "Endpoint de verificação de saúde",
          "parameters": [
            {
              "name": "_health",
              "required": false,
              "type": "string"
            },
            {
              "name": "random_string",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@diegofornalha/mcp-server-serper/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "serperApiKey",
          "required": true,
          "description": "Chave de API para o servidor MCP Serper."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@diegofornalha/mcp-server-serper/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1320.@diegofornalha_mcp-server-serper_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1250
  }
}