{
  "labels": {
    "analysis": "The MLB MCP server specializes in retrieving and analyzing baseball statistics from multiple data sources including MLB, Baseball Savant, Statcast, and Fangraphs. It provides robust tools for querying player and team statistics, leaderboards, and video highlights, making it highly suitable for baseball analytics, fan applications, and data-driven sports journalism. Its FastAPI architecture suggests ease of integration into various workflows.",
    "reasoning": "The primary label \"Sports Analytics\" is chosen because the server's core functionality revolves around collecting, querying, and analyzing baseball performance data. The secondary labels \"API Integration\" and \"Web Search & Research\" are included because the server provides API-based access to comprehensive baseball data and essentially acts as a specialized research tool for baseball statistics. The custom label \"Baseball Statistics\" highlights the specific niche within sports analytics.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "API Integration",
      "Web Search & Research"
    ],
    "custom_label": "Baseball Statistics",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1720,
    "server_name": "MLB MCP",
    "rank_by_usage": 1721,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@jweingardt12_mlb_mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@jweingardt12/mlb_mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1720,
      "name": "MLB MCP",
      "author": "@jweingardt12/mlb_mcp",
      "overview": "Provides easy access to MLB, Baseball Savant, Statcast, and Fangraphs baseball data. Query detailed baseball statistics by player name, team, year, and stat type to enhance your baseball analytics and applications. Integrate comprehensive baseball data seamlessly into your workflows with this FastAPI-based server.",
      "repository_url": "https://github.com/jweingardt12/mlb_mcp",
      "homepage": "https://smithery.ai/server/@jweingardt12/mlb_mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@jweingardt12_mlb_mcp.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "get_player_stats",
          "description": "Deploy Server @jweingardt12/mlb_mcp Try in Playground get_player_stats",
          "parameters": [
            {
              "name": "get_player_stats",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_team_stats",
          "description": "Get team stats for a given team and year. Type can be 'batting' or 'pitching'",
          "parameters": [
            {
              "name": "get_team_stats",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_leaderboard",
          "description": "Get leaderboard for a given stat and season. Use this for stats/leaderboards, not for video highlights.",
          "parameters": [
            {
              "name": "as_text",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "end_date",
              "required": false,
              "type": "string"
            },
            {
              "name": "start_date",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "mlb_video_search",
          "description": "Search MLB video highlights using the MLB Film Room API. Use this ONLY for video/highlight queries, not for stats or leaderboards.",
          "parameters": [
            {
              "name": "mlb_video_search",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "statcast_leaderboard",
          "description": "Get event-level Statcast leaderboard for a date range, filtered by result (e.g., home run) and sorted by exit velocity. Use this for event-level queries (e.g., hardest hit home runs in a month).",
          "parameters": [
            {
              "name": "statcast_leaderboard",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@jweingardt12/mlb_mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@jweingardt12/mlb_mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1721.@jweingardt12_mlb_mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1549
  }
}