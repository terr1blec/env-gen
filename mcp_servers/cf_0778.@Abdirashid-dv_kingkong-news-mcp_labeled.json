{
  "labels": {
    "analysis": "The Mediastack News Server is primarily designed to provide real-time news data through the Mediastack API. Its core functionality includes live news retrieval, keyword-based searches, category filtering, and source discovery. The available tools enable users to access and filter news articles efficiently, search by specific keywords or categories, and verify API connectivity. This server addresses the need for reliable, up-to-date news data and integration with news sources for various applications, such as content creation, research, and monitoring.",
    "reasoning": "The primary label is \"News & Media\" because the server's core functionality revolves around news aggregation, sourcing, and delivery, which aligns closely with this category. The secondary labels \"API Integration\" and \"Research\" are included because the server interacts directly with the Mediastack API and is useful for research purposes. A custom label is not needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "News & Media",
    "secondary_labels": [
      "Web Search & Research",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 777,
    "server_name": "Mediastack News Server",
    "rank_by_usage": 778,
    "usage_count": "8",
    "original_file": "../crawler/smithery/@Abdirashid-dv_kingkong-news-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Abdirashid-dv/kingkong-news-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 777,
      "name": "Mediastack News Server",
      "author": "@Abdirashid-dv/kingkong-news-mcp",
      "overview": "Provide live news data with filtering, keyword search, category browsing, and source discovery. Enable real-time access to news from the Mediastack API for dynamic content integration. Check API status to ensure reliable news delivery.",
      "repository_url": "https://github.com/Abdirashid-dv/kingkong-news-mcp",
      "homepage": "https://smithery.ai/server/@Abdirashid-dv/kingkong-news-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "8",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Abdirashid-dv_kingkong-news-mcp.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "get_live_news",
          "description": "Deploy Server Mediastack News Server @Abdirashid-dv/kingkong-news-mcp Try in Playground get_live_news",
          "parameters": [
            {
              "name": "Tech",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "search_news_by_keyword",
          "description": "Quick keyword-based news search with optional exclusions. Simplified interface for searching news by specific keywords. Perfect for finding articles about specific topics or events. Example usage: - search_news_by_keyword(\"artificial intelligence\") - search_news_by_keyword(\"climate change\", exclude_keywords=\"politics,opinion\")",
          "parameters": []
        },
        {
          "name": "get_news_by_category",
          "description": "Get news articles filtered by specific category. Optimized for browsing news by topic with optional geographic filtering. Example usage: - get_news_by_category(\"business\") - get_news_by_category(\"technology\", country=\"us\") - get_news_by_category(\"sports\", country=\"gb\", language=\"en\")",
          "parameters": []
        },
        {
          "name": "get_news_sources",
          "description": "Search for available news sources in the Mediastack database. Find news sources by name, country, language, or category. Returns source IDs that can be used in other news queries. Example usage: - get_news_sources(\"BBC\") - get_news_sources(\"tech\", category=\"technology\") - get_news_sources(\"news\", country=\"us\", language=\"en\")",
          "parameters": []
        },
        {
          "name": "check_api_status",
          "description": "Test API connectivity and configuration status. Verifies that the API key is working and provides diagnostic information. Useful for troubleshooting connection issues.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Abdirashid-dv/kingkong-news-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "apiKey",
          "required": true,
          "description": "Get your free API key from https://mediastack.com/signup/free"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Abdirashid-dv/kingkong-news-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0778.@Abdirashid-dv_kingkong-news-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 760
  }
}