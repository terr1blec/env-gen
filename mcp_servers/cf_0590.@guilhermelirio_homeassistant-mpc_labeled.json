{
  "labels": {
    "analysis": "The MCP Server is designed to integrate AI assistants with smart home devices managed through Home Assistant. Its primary functionality involves monitoring and controlling Home Assistant entities (like lights, sensors, or appliances) and invoking services for automation. The tools provided allow for querying the state of devices and triggering actions, which enhances smart home automation workflows by bridging AI capabilities with existing smart home infrastructure.",
    "reasoning": "The primary label \"Operating System\" was chosen because the server directly interacts with system-level services and device states within the Home Assistant ecosystem, similar to how an OS manages hardware and software resources. The secondary label \"API Integration\" is included because the server relies on the Home Assistant API to perform its functions. While \"Home Automation\" could be a relevant custom label, the predefined categories sufficiently cover the core functionality.",
    "primary_label": "Operating System",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 589,
    "server_name": "Home Assistant MCP",
    "rank_by_usage": 590,
    "usage_count": "18",
    "original_file": "../crawler/smithery/@guilhermelirio_homeassistant-mpc.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@guilhermelirio/homeassistant-mpc/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 589,
      "name": "Home Assistant MCP",
      "author": "@guilhermelirio/homeassistant-mpc",
      "overview": "Connect your AI assistants with smart home devices seamlessly. Control and monitor your Home Assistant entities through a simple and efficient interface. Enhance your smart home experience by integrating AI capabilities into your automation workflows.",
      "repository_url": "https://github.com/guilhermelirio/homeassistant-mpc",
      "homepage": "https://smithery.ai/server/@guilhermelirio/homeassistant-mpc",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "18",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@guilhermelirio_homeassistant-mpc.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "homeassistant_api",
          "description": "Deploy Server Home Assistant MCP @guilhermelirio/homeassistant-mpc Try in Playground homeassistant_api",
          "parameters": [
            {
              "name": "homeassistant_api",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "homeassistant_get_state",
          "description": "Get the state of a Home Assistant entity",
          "parameters": [
            {
              "name": "homeassistant_get_state",
              "required": false,
              "type": "string"
            },
            {
              "name": "entity_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "homeassistant_call_service",
          "description": "Call a service of a Home Assistant entity",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@guilhermelirio/homeassistant-mpc/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "homeAssistantToken",
          "required": true,
          "description": "Long-Lived Access Token for authenticating with Home Assistant"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@guilhermelirio/homeassistant-mpc/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0590.@guilhermelirio_homeassistant-mpc_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 576
  }
}