{
  "labels": {
    "analysis": "The MCP Server described is focused on providing film-related data, specifically offering tools to retrieve information about Studio Ghibli films. Its primary functionality centers around accessing and manipulating movie data, making it particularly useful for applications that require film database access or integration. The available tool (get_films) suggests it is a specialized server for movie information retrieval.",
    "reasoning": "The primary label \"Content Creation\" is chosen because the server enables applications to use film data for various creative or informational purposes. The secondary label \"Education\" is included because such data can be utilized in educational contexts (e.g., film studies). No predefined label perfectly captures the specifics of film data access for integration, so a custom label is provided to highlight its niche focus.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "Education"
    ],
    "custom_label": "Film Data Integration",
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1819,
    "server_name": "Films MCP Server",
    "rank_by_usage": 1820,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@zehranurugurr_films_mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@zehranurugurr/films_mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_films",
          "description": "\n    Get a list of Ghibli films.\n    ",
          "input_schema": {
            "properties": {},
            "title": "get_filmsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get_films"
      ]
    },
    "server_info_crawled": {
      "id": 1819,
      "name": "Films MCP Server",
      "author": "@zehranurugurr/films_mcp",
      "overview": "Provide film-related data and functionalities to enhance your applications with movie information and operations. Enable seamless integration of film resources and tools for enriched user experiences. Facilitate easy access and manipulation of film data through a standardized protocol.",
      "repository_url": "https://github.com/zehranurugurr/films_mcp",
      "homepage": "https://smithery.ai/server/@zehranurugurr/films_mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@zehranurugurr_films_mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_films",
          "description": "\n    Get a list of Ghibli films.\n    ",
          "input_schema": {
            "properties": {},
            "title": "get_filmsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@zehranurugurr/films_mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@zehranurugurr/films_mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1820.@zehranurugurr_films_mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1618
  }
}