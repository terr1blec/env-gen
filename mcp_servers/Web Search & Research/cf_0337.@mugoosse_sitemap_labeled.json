{
  "labels": {
    "analysis": "The MCP Server specializes in fetching, parsing, analyzing, and visualizing website sitemaps across various formats (XML, Google News, plain text). Its tools enable comprehensive sitemap extraction, statistics reporting, and content analysis. This server empowers users to understand website structure, perform health checks, and identify content gaps, serving as a valuable tool for web research, SEO, and content audits.",
    "reasoning": "The primary label Web Search & Research is chosen because the server's core functionality revolves around extracting and analyzing website sitemaps, which directly supports research and understanding of web structures. Browser Automation is a secondary label as the server interacts with web sitemaps, though it does so programmatically rather than through web browsing. No custom label is needed as the predefined categories adequately cover the server's capabilities.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Browser Automation"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 336,
    "server_name": "Sitemap MCP",
    "rank_by_usage": 337,
    "usage_count": "92",
    "original_file": "../crawler/smithery/@mugoosse_sitemap.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@mugoosse/sitemap/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "Connection timeout (20 seconds)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 336,
      "name": "Sitemap MCP",
      "author": "@mugoosse/sitemap",
      "overview": "Fetch, parse, analyze, and visualize website sitemaps to empower AI agents and MCP clients with comprehensive sitemap insights. Handle all standard sitemap formats including XML, Google News, and plain text sitemaps. Utilize ready-to-use prompts for sitemap analysis, health checks, URL extraction, content gap identification, and structure visualization.",
      "repository_url": "https://github.com/mugoosse/sitemap-mcp-server",
      "homepage": "https://smithery.ai/server/@mugoosse/sitemap",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "92",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@mugoosse_sitemap.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "get_sitemap_tree",
          "description": "Deploy Server Sitemap MCP @mugoosse/sitemap Try in Playground get_sitemap_tree",
          "parameters": [
            {
              "name": "get_sitemap_tree",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_sitemap_pages",
          "description": "Get all pages from a website's sitemap with optional limits and filtering options. Supports cursor-based pagination.",
          "parameters": [
            {
              "name": "get_sitemap_pages",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_sitemap_stats",
          "description": "Get comprehensive statistics about a website's sitemap structure",
          "parameters": [
            {
              "name": "get_sitemap_stats",
              "required": false,
              "type": "string"
            },
            {
              "name": "url",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "parse_sitemap_content",
          "description": "Parse a sitemap directly from its XML or text content",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@mugoosse/sitemap/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@mugoosse/sitemap/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0337.@mugoosse_sitemap_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 333
  }
}