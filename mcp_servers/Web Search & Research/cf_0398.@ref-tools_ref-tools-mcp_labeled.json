{
  "labels": {
    "analysis": "The MCP Server described provides tools for searching and retrieving documentation from APIs, services, libraries, and web pages. Its primary functionality is enabling fast, token-efficient access to technical documentation with both semantic and full-text search capabilities. This is particularly useful for developers and AI agents needing precise, up-to-date information for coding tasks. The server includes tools for searching documentation and reading URL content in markdown format, which facilitates easier integration with other AI coding tools or agents.",
    "reasoning": "The primary label \"Web Search & Research\" was chosen because the server's core functionality revolves around searching for and retrieving information from documentation and web pages, which aligns with this category. The secondary label \"API Integration\" was selected because the server is particularly tailored for accessing and processing technical documentation, which often relates to API functionality. The secondary label \"Development Tools\" was also chosen due to the server's clear focus on aiding developers and AI agents with coding-related information.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "API Integration",
      "Development Tools"
    ],
    "custom_label": "Technical Documentation Search",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 397,
    "server_name": "Ref",
    "rank_by_usage": 398,
    "usage_count": "59",
    "original_file": "../crawler/smithery/@ref-tools_ref-tools-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ref-tools/ref-tools-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 397,
      "name": "Ref",
      "author": "@ref-tools/ref-tools-mcp",
      "overview": "Provide your AI coding tools or agents with fast, token-efficient access to up-to-date technical documentation for APIs, services, libraries, and more. Enable powerful search and reading capabilities to help your agent find precise information from documentation and web pages.\n\nLearn more: https://ref.tools\n\nHow is this different from Context7? In a few ways!\nContext7 only indexes public Github repos where as Ref indexes public Github repos as well as documentation sites. Ref is like github + web search tuned for code documentation context.\nRef provides semantic search AND full-text search so results for specific phrases or terms are more accurate\nRef requires only a single search tool call to load documentation context and also provides a read_url tool for on-the-fly scraping\nRef requires you sign up for a free account.\nWhat's next? We're working to allow building private context search indices from private Github repos, PDFs and more. Reach out to hello@ref.tools if you're interested in joining the beta!",
      "repository_url": "https://github.com/ref-tools/ref-tools-mcp",
      "homepage": "https://smithery.ai/server/@ref-tools/ref-tools-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "59",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ref-tools_ref-tools-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "ref_search_documentation",
          "description": "Deploy Server @ref-tools/ref-tools-mcp Try in Playground ref_search_documentation",
          "parameters": []
        },
        {
          "name": "ref_read_url",
          "description": "A tool that fetches content from a URL and converts it to markdown for easy reading with Ref. \n\nThis is powerful when used in conjunction with the ref_search_documentation or ref_search_web tool that return urls of relevant content.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ref-tools/ref-tools-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "refApiKey",
          "required": true,
          "description": "API key for Ref MCP server"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ref-tools/ref-tools-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0398.@ref-tools_ref-tools-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 392
  }
}