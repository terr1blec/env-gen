{
  "labels": {
    "analysis": "The MCP Server described is focused on enabling web crawling and searching functionality through the Go Colly Web Crawler. It allows users to extract and structure web content with customizable settings for depth and domain restrictions. The tool simplifies the integration of web data into LLM workflows, featuring robust error handling and batch processing support. This makes it particularly useful for tasks requiring automated collection and processing of web-based information.",
    "reasoning": "The primary label \"Web Search & Research\" is chosen because the server's main functionality is centered around crawling and searching the web to gather structured data. The secondary labels \"Browser Automation\" and \"Data Analysis & Processing\" are selected because the server automates web interactions (browser automation) and processes the collected data in a structured manner. No custom label is needed as the predefined categories cover its functionality well.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Browser Automation",
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1084,
    "server_name": "Go Colly Web Crawler (web search)",
    "rank_by_usage": 1085,
    "usage_count": "1",
    "original_file": "../crawler/smithery/@bneil_mcp-go-colly.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@bneil/mcp-go-colly/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1084,
      "name": "Go Colly Web Crawler (web search)",
      "author": "@bneil/mcp-go-colly",
      "overview": "Enable efficient and concurrent web searching/crawling tailored for your mcp client. Extract and structure web content with configurable depth and domain restrictions through an MCP tool interface. Simplify integration of web data into your LLM workflows with robust error handling and batch processing support.",
      "repository_url": "https://github.com/bneil/mcp-go-colly",
      "homepage": "https://smithery.ai/server/@bneil/mcp-go-colly",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "1",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@bneil_mcp-go-colly.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "web_crawler",
          "description": "Deploy Server Go Colly Web Crawler (web search) @bneil/mcp-go-colly Try in Playground web_crawler",
          "parameters": [
            {
              "name": "urls",
              "required": true,
              "type": "string"
            },
            {
              "name": "max_depth",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@bneil/mcp-go-colly/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@bneil/mcp-go-colly/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1085.@bneil_mcp-go-colly_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1062
  }
}