{
  "labels": {
    "analysis": "The MCP Server is primarily focused on providing a book search service that interacts with the Open Library API to retrieve book information. This suggests its core functionality revolves around searching for books, retrieving metadata, and likely supporting applications that need book data integration. The tool explicitly mentions using the Open Library API, which is a public library of books with extensive metadata. The server simplifies access to this data through a standardized protocol, implying it's useful for applications needing book information without having to directly interact with APIs.",
    "reasoning": "The primary label is chosen as \"Web Search & Research\" because the server's main functionality is searching for book-related information, which aligns with gathering data and research. While it could be considered a specialized form of \"Research\" or \"Data Analysis & Processing,\" the predefined categories don't have a perfect fit for book-specific search services. However, \"Web Search & Research\" encompasses the general act of querying and retrieving data, making it the most appropriate choice.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Database Operations"
    ],
    "custom_label": "Book Search Service",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": true
  },
  "metadata": {
    "server_id": 961,
    "server_name": "Book Search Server",
    "rank_by_usage": 962,
    "usage_count": "3",
    "original_file": "../crawler/smithery/@Busra-ozer_book-search-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Busra-ozer/book-search-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "search_books_tool",
          "description": "\n    MCP aracı: Open Library API üzerinden kitap araması yapar.\n    ",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_books_toolArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "search_books_tool"
      ]
    },
    "server_info_crawled": {
      "id": 961,
      "name": "Book Search Server",
      "author": "@Busra-ozer/book-search-mcp",
      "overview": "Provide a book search service that allows users to query and retrieve book information efficiently. Enhance your applications with seamless access to book data through a standardized protocol. Simplify integration with a ready-to-use server that supports book-related queries.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@Busra-ozer/book-search-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "3",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Busra-ozer_book-search-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "search_books_tool",
          "description": "\n    MCP aracı: Open Library API üzerinden kitap araması yapar.\n    ",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              }
            },
            "required": [
              "query"
            ],
            "title": "search_books_toolArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Busra-ozer/book-search-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Busra-ozer/book-search-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0962.@Busra-ozer_book-search-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 940
  }
}