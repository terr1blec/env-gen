{
  "labels": {
    "analysis": "The Olostep MCP Server is primarily focused on enabling AI assistants to interact with web content. It provides tools to scrape webpage content, retrieve URLs from websites, and access structured Google search results. This makes it ideal for automating web research, content aggregation, and data extraction tasks. The core functionality revolves around web scraping and automated browsing.",
    "reasoning": "The primary label \"Web Scraping & Automation\" was chosen because the server's tools directly enable scraping webpage content and retrieving structured data from search results. \"Web Search & Research\" is a secondary label due to the Google search functionality and website mapping capabilities. No custom label is needed as the predefined labels adequately describe the server's functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Web Search & Research",
      "Browser Automation"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1850,
    "server_name": "Olostep MCP Server",
    "rank_by_usage": 1851,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@olostep_olostep-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@olostep/olostep-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1850,
      "name": "Olostep MCP Server",
      "author": "@olostep/olostep-mcp-server",
      "overview": "Enable your AI assistants to scrape web content and extract valuable information effortlessly. Utilize powerful tools to retrieve webpage content, map websites, and access structured Google search results. Enhance your AI's capabilities with seamless web interaction.",
      "repository_url": "https://github.com/olostep/olostep-mcp-server",
      "homepage": "https://smithery.ai/server/@olostep/olostep-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@olostep_olostep-mcp-server.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "get_webpage_content",
          "description": "Deploy Server Olostep MCP Server @olostep/olostep-mcp-server Try in Playground get_webpage_content",
          "parameters": [
            {
              "name": "get_webpage_content",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_website_urls",
          "description": "Search and retrieve relevant URLs from a website",
          "parameters": [
            {
              "name": "url",
              "required": true,
              "type": "string"
            },
            {
              "name": "search_query",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "google_search",
          "description": "Retrieve structured data from Google search results",
          "parameters": [
            {
              "name": "query",
              "required": true,
              "type": "string"
            },
            {
              "name": "country",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@olostep/olostep-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "olostepApiKey",
          "required": true,
          "description": "Your Olostep API key for authenticating with the Olostep API."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@olostep/olostep-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1851.@olostep_olostep-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1643
  }
}