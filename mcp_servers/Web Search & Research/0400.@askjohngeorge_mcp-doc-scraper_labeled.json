{
  "labels": {
    "analysis": "The MCP Server described as \"Doc Scraper\" is designed to extract documentation from web URLs and convert it into markdown format, with the capability to save the output to a specified path. This tool primarily solves the challenge of converting web-based documentation into a more manageable and portable format (markdown), which can be integrated into various documentation management workflows.",
    "reasoning": "The primary functionality of scraping and converting documentation aligns most closely with the \"Web Search & Research\" category, as it involves gathering information from the web, although it could also fit under \"Data Analysis & Processing\" due to its data conversion capabilities. The \"Content Creation\" category is also relevant as the tool aids in generating structured content (markdown) from unstructured web content. No custom label is necessary as the predefined labels adequately cover the server's functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Data Analysis & Processing",
      "Content Creation"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 399,
    "server_name": "Doc Scraper",
    "rank_by_usage": 400,
    "usage_count": "58",
    "original_file": "../crawler/smithery/@askjohngeorge_mcp-doc-scraper.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@askjohngeorge/mcp-doc-scraper/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "scrape_docs",
          "description": "Scrape documentation from a URL and save as markdown",
          "input_schema": {
            "properties": {
              "url": {
                "title": "Url",
                "type": "string"
              },
              "output_path": {
                "title": "Output Path",
                "type": "string"
              }
            },
            "required": [
              "url",
              "output_path"
            ],
            "title": "ScrapeDocsInput",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "scrape_docs"
      ]
    },
    "server_info_crawled": {
      "id": 399,
      "name": "Doc Scraper",
      "author": "@askjohngeorge/mcp-doc-scraper",
      "overview": "Scrape documentation from any web URL and convert it into markdown format. Save the converted documentation to your specified output path effortlessly. Enhance your documentation management with this easy-to-use server integration.",
      "repository_url": "https://github.com/askjohngeorge/mcp-doc-scraper",
      "homepage": "https://smithery.ai/server/@askjohngeorge/mcp-doc-scraper",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "58",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@askjohngeorge_mcp-doc-scraper.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "scrape_docs",
          "description": "Scrape documentation from a URL and save as markdown",
          "input_schema": {
            "properties": {
              "url": {
                "title": "Url",
                "type": "string"
              },
              "output_path": {
                "title": "Output Path",
                "type": "string"
              }
            },
            "required": [
              "url",
              "output_path"
            ],
            "title": "ScrapeDocsInput",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@askjohngeorge/mcp-doc-scraper/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@askjohngeorge/mcp-doc-scraper/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0400.@askjohngeorge_mcp-doc-scraper_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 394
  }
}