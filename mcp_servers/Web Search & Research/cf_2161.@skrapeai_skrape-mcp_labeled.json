{
  "labels": {
    "analysis": "The Skrape MCP Server is designed to extract content from websites and convert it into clean, structured Markdown format, which is ready for use with Large Language Models (LLMs). Its core functionality revolves around web content extraction and transformation, making it particularly useful for research, data aggregation, or preparing content for AI/ML applications.",
    "reasoning": "The primary label \"Web Scraping\" best represents the server's core functionality of extracting content from websites. Secondary labels like \"Content Creation\" and \"Web Search & Research\" are relevant because the transformed Markdown can be used for research or writing. No custom label is needed as the predefined categories adequately cover the server's functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Content Creation",
      "Web Search & Research"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2160,
    "server_name": "Skrape MCP Server",
    "rank_by_usage": 2161,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@skrapeai_skrape-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@skrapeai/skrape-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2160,
      "name": "Skrape MCP Server",
      "author": "@skrapeai/skrape-mcp",
      "overview": "Get any website content - Convert webpages into clean, LLM-ready Markdown.",
      "repository_url": "https://github.com/skrapeai/skrape-mcp",
      "homepage": "https://smithery.ai/server/@skrapeai/skrape-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@skrapeai_skrape-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_markdown",
          "description": "Deploy Server Skrape MCP Server @skrapeai/skrape-mcp Try in Playground get_markdown",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@skrapeai/skrape-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "skrapeApiKey",
          "required": true,
          "description": "The API key for the Skrape MCP server."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@skrapeai/skrape-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2161.@skrapeai_skrape-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1869
  }
}