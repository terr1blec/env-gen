{
  "labels": {
    "analysis": "The MCP Server is designed to interact with MediaWiki-based platforms (such as Wikipedia) through their APIs. Its core functionality involves searching for wiki pages, retrieving their content, and making this data accessible for further processing or integration with LLM applications. The available tools allow users to perform simple searches and fetch detailed page content, enabling a streamlined way to access structured information from wikis. This server is particularly useful for applications that require reliable, easily accessible knowledge bases.",
    "reasoning": "The primary label \"Web Search & Research\" was chosen because the server's main purpose is to facilitate the search and retrieval of information from wikis, which is a common use case in research and content analysis. \"Data Analysis & Processing\" is included as a secondary label because the retrieved wiki content can be processed or analyzed further, and the server could serve as a data source for analytical applications. No custom label is needed as the predefined categories sufficiently cover the server's functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 835,
    "server_name": "MediaWiki Server",
    "rank_by_usage": 836,
    "usage_count": "6",
    "original_file": "../crawler/smithery/@shiquda_mediawiki-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@shiquda/mediawiki-mcp-server/mcp?config=eyJiYXNlVXJsIjogImh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy8ifQ==&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "search",
          "description": "\nSearch for a wiki page. The shorter the request, the better, preferably containing only the main term to be searched.\nArgs:\n    query: The query to search for\n    limit: The number of results to return\nReturns:\n    A list of pages that match the query\n",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "limit": {
                "default": 5,
                "title": "Limit",
                "type": "integer"
              }
            },
            "required": [
              "query"
            ],
            "title": "searchArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_page",
          "description": "Get a page from mediawiki.org\nArgs:\n    title: The title of the page to get, which can be found in title field of the search results\nReturns:\n    The page content\n",
          "input_schema": {
            "properties": {
              "title": {
                "title": "Title",
                "type": "string"
              }
            },
            "required": [
              "title"
            ],
            "title": "get_pageArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 2,
      "tool_names": [
        "search",
        "get_page"
      ]
    },
    "server_info_crawled": {
      "id": 835,
      "name": "MediaWiki Server",
      "author": "@shiquda/mediawiki-mcp-server",
      "overview": "Interact with Wikipedia's API to search and retrieve content effortlessly. Enhance your LLM applications with rich Wikipedia data and insights. Customize your search across various wiki sites for tailored results.",
      "repository_url": "https://github.com/shiquda/mediawiki-mcp-server",
      "homepage": "https://smithery.ai/server/@shiquda/mediawiki-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "6",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@shiquda_mediawiki-mcp-server.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "search",
          "description": "\nSearch for a wiki page. The shorter the request, the better, preferably containing only the main term to be searched.\nArgs:\n    query: The query to search for\n    limit: The number of results to return\nReturns:\n    A list of pages that match the query\n",
          "input_schema": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "limit": {
                "default": 5,
                "title": "Limit",
                "type": "integer"
              }
            },
            "required": [
              "query"
            ],
            "title": "searchArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_page",
          "description": "Get a page from mediawiki.org\nArgs:\n    title: The title of the page to get, which can be found in title field of the search results\nReturns:\n    The page content\n",
          "input_schema": {
            "properties": {
              "title": {
                "title": "Title",
                "type": "string"
              }
            },
            "required": [
              "title"
            ],
            "title": "get_pageArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"baseUrl\": \"https://en.wikipedia.org/\"\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@shiquda/mediawiki-mcp-server/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"baseUrl\": \"https://en.wikipedia.org/\"\n}",
      "python_sdk_url": "https://server.smithery.ai/@shiquda/mediawiki-mcp-server/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "0836.@shiquda_mediawiki-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 817
  }
}