{
  "labels": {
    "analysis": "The MCP Server \"Namecheap Domains -Search/Register\" primarily focuses on domain name management through the Namecheap API. It allows users to search, register, and manage domains, including checking availability, retrieving DNS records, and accessing contact information. The tools provided are deeply integrated with domain name administration tasks and leverage Namecheap's services for secure and efficient domain operations.",
    "reasoning": "The primary label of \"Web Search & Research\" is chosen because the server aids in researching domain availability and costs, which is a fundamental aspect of domain registration. The secondary label of \"Operating System\" fits due to its integration with DNS and system-level hosting configurations. The custom label \"Domain Management\" is added to better describe the server's niche functionality beyond the predefined categories.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Operating System"
    ],
    "custom_label": "Domain Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 458,
    "server_name": "Namecheap Domains -Search/Register",
    "rank_by_usage": 459,
    "usage_count": "41",
    "original_file": "../crawler/smithery/@webdevtodayjason_namecheap-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@webdevtodayjason/namecheap-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 458,
      "name": "Namecheap Domains -Search/Register",
      "author": "@webdevtodayjason/namecheap-mcp",
      "overview": "Let your AI help you find the best domain! Check availability and get costs in one shot and heck, even have your AI register your shiny new domain for you!\n\nRegister domains securely using the Namecheap API. Manage domain registrations with WhoisGuard privacy protection and test safely in sandbox mode. Simplify domain management through an MCP-compatible client like Claude Desktop.\n\n*note that Namecheap requires a whitelisted IP. If you get a failure response you will need to whitelist the IP from that responce in Namecheap.",
      "repository_url": "https://github.com/webdevtodayjason/namecheap-mcp",
      "homepage": "https://smithery.ai/server/@webdevtodayjason/namecheap-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "41",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@webdevtodayjason_namecheap-mcp.json",
      "tools_count": 7,
      "tools": [
        {
          "name": "check_domain",
          "description": "Deploy Server Namecheap Domains -Search/Register @webdevtodayjason/namecheap-mcp Try in Playground check_domain",
          "parameters": [
            {
              "name": "check_domain",
              "required": false,
              "type": "string"
            },
            {
              "name": "domain",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_dns_hosts",
          "description": "Retrieve DNS host records for a domain using Namecheap DNS",
          "parameters": [
            {
              "name": "get_dns_hosts",
              "required": false,
              "type": "string"
            },
            {
              "name": "domain",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_domain_contacts",
          "description": "Retrieve contact information (registrant, admin, tech, billing) for a domain",
          "parameters": [
            {
              "name": "get_domain_contacts",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_domain_info",
          "description": "Get detailed information about a specific domain in your account",
          "parameters": [
            {
              "name": "get_domain_info",
              "required": false,
              "type": "string"
            },
            {
              "name": "domain",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_domain_list",
          "description": "List all domains in your Namecheap account with optional filtering",
          "parameters": [
            {
              "name": "get_domain_list",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_tld_pricing",
          "description": "Description not available",
          "parameters": [
            {
              "name": "get_tld_pricing",
              "required": false,
              "type": "string"
            },
            {
              "name": "tld",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "register_domain",
          "description": "Start the process of registering a domain name",
          "parameters": [
            {
              "name": "register_domain",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@webdevtodayjason/namecheap-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "ncApiKey",
          "required": true,
          "description": "Namecheap API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@webdevtodayjason/namecheap-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0459.@webdevtodayjason_namecheap-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 450
  }
}