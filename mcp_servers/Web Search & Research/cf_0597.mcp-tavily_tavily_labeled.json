{
  "labels": {
    "analysis": "The MCP Server \"Tavily\" is designed to provide AI-powered web search capabilities through its search API. It offers specialized tools for performing web searches, generating direct answers, and searching recent news articles. The tools include advanced features like domain filtering to tailor search results for specific use cases such as academic research, financial analysis, technical documentation, and scientific papers. Additionally, the server can refine results by recency and source reliability, making it highly effective for factual queries, current events, and trending topics.",
    "reasoning": "The primary label \"Web Search & Research\" was chosen because the server's core functionality revolves around AI-powered web search capabilities, including advanced domain filtering and direct answer generation. The secondary label \"News & Media\" was selected due to the specialized news search functionality offered by the \"tavily_news_search\" tool. These labels accurately represent the server's primary use cases and the types of problems it solves.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "News & Media"
    ],
    "custom_label": "AI-Powered Search Customization",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 596,
    "server_name": "Tavily",
    "rank_by_usage": 597,
    "usage_count": "18",
    "original_file": "../crawler/smithery/mcp-tavily_tavily.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/mcp-tavily/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "Connection timeout (20 seconds)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 596,
      "name": "Tavily",
      "author": "mcp-tavily",
      "overview": "An MCP server for Tavily's search API providing AI-powered web search capabilities.",
      "repository_url": "https://github.com/RamXX/mcp-tavily",
      "homepage": "https://smithery.ai/server/mcp-tavily",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "18",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/mcp-tavily_tavily.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "tavily_web_search",
          "description": "Deploy Server Claim Server Try in Playground tavily_web_search",
          "parameters": []
        },
        {
          "name": "tavily_answer_search",
          "description": "Performs a web search using Tavily's AI search engine and generates a direct answer to the query, along with supporting search results. Best used for questions that need concrete answers backed by current web sources. Uses advanced search depth by default for comprehensive analysis. Features powerful source control through domain filtering: - For academic research: exclude_domains=[\"wikipedia.org\"] for more scholarly sources - For financial analysis: include_domains=[\"wsj.com\", \"bloomberg.com\", \"ft.com\"] - For technical documentation: include_domains=[\"docs.python.org\", \"developer.mozilla.org\"] - For scientific papers: include_domains=[\"nature.com\", \"sciencedirect.com\"] - Can combine includes and excludes to fine-tune your sources Particularly effective for factual queries, technical questions, and queries requiring synthesis of multiple sources.",
          "parameters": []
        },
        {
          "name": "tavily_news_search",
          "description": "Searches recent news articles using Tavily's specialized news search functionality. Ideal for current events, recent developments, and trending topics. Can filter results by recency (number of days back to search) and by including or excluding specific news domains. Powerful domain filtering for news sources: - For mainstream news: include_domains=[\"reuters.com\", \"apnews.com\", \"bbc.com\"] - For financial news: include_domains=[\"bloomberg.com\", \"wsj.com\", \"ft.com\"] - For tech news: include_domains=[\"techcrunch.com\", \"theverge.com\"] - To exclude paywalled content: exclude_domains=[\"wsj.com\", \"ft.com\"] - To focus on specific regions: include_domains=[\"bbc.co.uk\"] for UK news Returns news articles with publication dates and relevant excerpts.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/mcp-tavily/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "apiKey",
          "required": true,
          "description": "Your Tavily API key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/mcp-tavily/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0597.mcp-tavily_tavily_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 583
  }
}