{
  "labels": {
    "analysis": "The MCP Server specializes in providing web search functionalities to AI assistants, enabling real-time information retrieval from the internet. It offers both basic and advanced search capabilities with features like result formatting in markdown, domain filtering, and content inclusion/exclusion. The core purpose is to enhance the AI's ability to fetch up-to-date information seamlessly without hard-coded knowledge limitations.",
    "reasoning": "The primary functionality of this server is clearly centered around web searching and research. The advanced search features with filtering options narrow its use cases to tasks requiring precise and current web-based information. While the server enables information retrieval, it does not fit categories like \"Data Analysis\" or \"API Integration\" as its focus is solely on web searches.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2428,
    "server_name": "Web Search",
    "rank_by_usage": 2429,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@mshojaei77_ReActMCP.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@mshojaei77/ReActMCP/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2428,
      "name": "Web Search",
      "author": "@mshojaei77/ReActMCP",
      "overview": "Integrate real-time web search capabilities into your AI assistant. Perform both basic and advanced searches with markdown-formatted results, enhancing your assistant's ability to provide up-to-date information. Empower your AI with a seamless connection to the internet for comprehensive responses.",
      "repository_url": "https://github.com/mshojaei77/ReActMCP",
      "homepage": "https://smithery.ai/server/@mshojaei77/ReActMCP",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@mshojaei77_ReActMCP.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "search_web",
          "description": "Deploy Server Claim Server @mshojaei77/ReActMCP Try in Playground",
          "parameters": []
        },
        {
          "name": "advanced_search_web",
          "description": "Advanced web search using Exa API with additional filtering options.\n    \n    Args:\n        query: The search query\n        num_results: Optional number of results to return (overrides config)\n        include_domains: List of domains to include in search results\n        include_text: Text that must be included in the search results\n        max_age_days: Maximum age of results in days\n        \n    Returns:\n        Search results formatted in markdown",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@mshojaei77/ReActMCP/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "exaApiKey",
          "required": true,
          "description": "Exa API key for performing web searches"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@mshojaei77/ReActMCP/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2429.@mshojaei77_ReActMCP_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 2074
  }
}