{
  "labels": {
    "analysis": "The MCP Server is designed to enable AI assistants to search and interact with documentation or codebases via natural language queries. It supports linking to Git repositories or local folders and includes a configurable search tool (\"search_docs\") powered by the probe search engine. The primary functionality revolves around retrieving and presenting information from documentation in a user-friendly, query-based manner.",
    "reasoning": "The server's core functionality aligns with enabling search and research within specific documentation or codebases, making \"Web Search & Research\" the most appropriate primary label. Additionally, it customizes and tailors search experiences, justifying a secondary label related to tool configuration. There are no unique aspects beyond predefined categories, so no custom label is needed.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Browser Automation",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 946,
    "server_name": "Docs MCP Server",
    "rank_by_usage": 947,
    "usage_count": "3",
    "original_file": "../crawler/smithery/@buger_docs-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@buger/docs-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "search_docs",
          "description": "Search documentation using the probe search engine.",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Elasticsearch query string. Focus on keywords and use ES syntax (e.g., \"install AND guide\", \"configure OR setup\", \"api NOT internal\")."
              },
              "page": {
                "type": "number",
                "description": "Optional page number for pagination of results (e.g., 1, 2, 3...). Default is 1.",
                "default": 1
              }
            },
            "required": [
              "query"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "search_docs"
      ]
    },
    "server_info_crawled": {
      "id": 946,
      "name": "Docs MCP Server",
      "author": "@buger/docs-mcp",
      "overview": "Enable AI assistants to search and interact with your documentation or codebases effortlessly. Point to a Git repository or local folder to facilitate natural language queries about its contents. Customize the search experience with configurable tools tailored to your specific needs.",
      "repository_url": "https://github.com/buger/docs-mcp",
      "homepage": "https://smithery.ai/server/@buger/docs-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "3",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@buger_docs-mcp.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "search_docs",
          "description": "Search documentation using the probe search engine.",
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Elasticsearch query string. Focus on keywords and use ES syntax (e.g., \"install AND guide\", \"configure OR setup\", \"api NOT internal\")."
              },
              "page": {
                "type": "number",
                "description": "Optional page number for pagination of results (e.g., 1, 2, 3...). Default is 1.",
                "default": 1
              }
            },
            "required": [
              "query"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@buger/docs-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@buger/docs-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0947.@buger_docs-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 925
  }
}