{
  "labels": {
    "analysis": "The Rabi MCP Server provides specialized tools for simulating and calculating key phenomena in quantum physics and electromagnetic theory. Its core functionality revolves around enabling advanced scientific computations related to two-level atom dynamics, Rabi oscillations, Bose-Einstein condensates, absorption spectra, and cavity quantum electrodynamics. The server serves as a bridge for integrating these computational tools with language models, facilitating research, education, and application development in quantum sciences and related fields.",
    "reasoning": "The primary label is \"Scientific Research\" as the server's tools are specialized for advanced physics simulations and calculations, which are fundamental for scientific research. The secondary label of \"Quantum Physics\" directly reflects the domain-specific nature of the tools provided. A \"Physics Simulations\" custom label is also appropriate to emphasize the server's specialized focus on computational physics tools beyond generic research or AI capabilities.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [],
    "custom_label": "Physics Simulations",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2343,
    "server_name": "Rabi MCP Server",
    "rank_by_usage": 2344,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@manasp21_rabi-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@manasp21/rabi-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "simulate_two_level_atom",
          "description": "Simulate dynamics of a two-level atom in an electromagnetic field",
          "input_schema": {
            "type": "object",
            "properties": {
              "rabi_frequency": {
                "type": "number",
                "description": "Rabi frequency in Hz"
              },
              "detuning": {
                "type": "number",
                "description": "Detuning from resonance in Hz"
              },
              "evolution_time": {
                "type": "number",
                "description": "Evolution time in seconds"
              }
            },
            "required": [
              "rabi_frequency",
              "detuning",
              "evolution_time"
            ]
          },
          "annotations": null
        },
        {
          "name": "rabi_oscillations",
          "description": "Calculate Rabi oscillations for a two-level quantum system",
          "input_schema": {
            "type": "object",
            "properties": {
              "rabi_frequency": {
                "type": "number",
                "description": "Rabi frequency in Hz"
              },
              "max_time": {
                "type": "number",
                "description": "Maximum evolution time"
              },
              "time_points": {
                "type": "integer",
                "description": "Number of time points"
              }
            },
            "required": [
              "rabi_frequency",
              "max_time"
            ]
          },
          "annotations": null
        },
        {
          "name": "bec_simulation",
          "description": "Simulate Bose-Einstein condensate dynamics using Gross-Pitaevskii equation",
          "input_schema": {
            "type": "object",
            "properties": {
              "particle_number": {
                "type": "integer",
                "description": "Number of particles"
              },
              "scattering_length": {
                "type": "number",
                "description": "Scattering length in nm"
              },
              "trap_frequency": {
                "type": "number",
                "description": "Trap frequency in Hz"
              }
            },
            "required": [
              "particle_number",
              "scattering_length"
            ]
          },
          "annotations": null
        },
        {
          "name": "absorption_spectrum",
          "description": "Calculate absorption spectrum with various broadening mechanisms",
          "input_schema": {
            "type": "object",
            "properties": {
              "transition_frequency": {
                "type": "number",
                "description": "Transition frequency in rad/s"
              },
              "linewidth": {
                "type": "number",
                "description": "Natural linewidth in rad/s"
              },
              "temperature": {
                "type": "number",
                "description": "Temperature in Kelvin"
              }
            },
            "required": [
              "transition_frequency",
              "linewidth"
            ]
          },
          "annotations": null
        },
        {
          "name": "cavity_qed",
          "description": "Simulate cavity quantum electrodynamics using Jaynes-Cummings model",
          "input_schema": {
            "type": "object",
            "properties": {
              "coupling_strength": {
                "type": "number",
                "description": "Coupling strength in rad/s"
              },
              "cavity_frequency": {
                "type": "number",
                "description": "Cavity frequency in rad/s"
              },
              "atom_frequency": {
                "type": "number",
                "description": "Atomic transition frequency in rad/s"
              }
            },
            "required": [
              "coupling_strength",
              "cavity_frequency",
              "atom_frequency"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 5,
      "tool_names": [
        "simulate_two_level_atom",
        "rabi_oscillations",
        "bec_simulation",
        "absorption_spectrum",
        "cavity_qed"
      ]
    },
    "server_info_crawled": {
      "id": 2343,
      "name": "Rabi MCP Server",
      "author": "@manasp21/rabi-mcp",
      "overview": "Enable seamless integration of language models with external tools and resources through a standardized protocol. Facilitate dynamic access to data, execution of actions, and retrieval of prompt templates to enhance AI capabilities. Simplify the development of intelligent applications by providing a robust bridge between LLMs and real-world context.",
      "repository_url": "https://github.com/manasp21/rabi-mcp",
      "homepage": "https://smithery.ai/server/@manasp21/rabi-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@manasp21_rabi-mcp.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "simulate_two_level_atom",
          "description": "Simulate dynamics of a two-level atom in an electromagnetic field",
          "input_schema": {
            "type": "object",
            "properties": {
              "rabi_frequency": {
                "type": "number",
                "description": "Rabi frequency in Hz"
              },
              "detuning": {
                "type": "number",
                "description": "Detuning from resonance in Hz"
              },
              "evolution_time": {
                "type": "number",
                "description": "Evolution time in seconds"
              }
            },
            "required": [
              "rabi_frequency",
              "detuning",
              "evolution_time"
            ]
          },
          "annotations": null
        },
        {
          "name": "rabi_oscillations",
          "description": "Calculate Rabi oscillations for a two-level quantum system",
          "input_schema": {
            "type": "object",
            "properties": {
              "rabi_frequency": {
                "type": "number",
                "description": "Rabi frequency in Hz"
              },
              "max_time": {
                "type": "number",
                "description": "Maximum evolution time"
              },
              "time_points": {
                "type": "integer",
                "description": "Number of time points"
              }
            },
            "required": [
              "rabi_frequency",
              "max_time"
            ]
          },
          "annotations": null
        },
        {
          "name": "bec_simulation",
          "description": "Simulate Bose-Einstein condensate dynamics using Gross-Pitaevskii equation",
          "input_schema": {
            "type": "object",
            "properties": {
              "particle_number": {
                "type": "integer",
                "description": "Number of particles"
              },
              "scattering_length": {
                "type": "number",
                "description": "Scattering length in nm"
              },
              "trap_frequency": {
                "type": "number",
                "description": "Trap frequency in Hz"
              }
            },
            "required": [
              "particle_number",
              "scattering_length"
            ]
          },
          "annotations": null
        },
        {
          "name": "absorption_spectrum",
          "description": "Calculate absorption spectrum with various broadening mechanisms",
          "input_schema": {
            "type": "object",
            "properties": {
              "transition_frequency": {
                "type": "number",
                "description": "Transition frequency in rad/s"
              },
              "linewidth": {
                "type": "number",
                "description": "Natural linewidth in rad/s"
              },
              "temperature": {
                "type": "number",
                "description": "Temperature in Kelvin"
              }
            },
            "required": [
              "transition_frequency",
              "linewidth"
            ]
          },
          "annotations": null
        },
        {
          "name": "cavity_qed",
          "description": "Simulate cavity quantum electrodynamics using Jaynes-Cummings model",
          "input_schema": {
            "type": "object",
            "properties": {
              "coupling_strength": {
                "type": "number",
                "description": "Coupling strength in rad/s"
              },
              "cavity_frequency": {
                "type": "number",
                "description": "Cavity frequency in rad/s"
              },
              "atom_frequency": {
                "type": "number",
                "description": "Atomic transition frequency in rad/s"
              }
            },
            "required": [
              "coupling_strength",
              "cavity_frequency",
              "atom_frequency"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@manasp21/rabi-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@manasp21/rabi-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "2344.@manasp21_rabi-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 2012
  }
}