{
  "labels": {
    "analysis": "The MCP Server is designed to integrate with Spotify, providing functionalities to play music, manage playlists, and interact with playback controls. Key features include playing tracks or playlists, pausing/resuming playback, managing playlists, and retrieving information about the user's listening history. It essentially bridges the gap between AI assistants and Spotify's ecosystem, allowing seamless control of music playback and playlist management.",
    "reasoning": "The primary functionality aligns with media playback and music management, which fits well under the \"Content Creation\" category due to the playback and playlist creation aspects. The secondary label \"API Integration\" is appropriate as the server acts as an intermediary between AI systems and Spotify's API. While music is a key focus, it doesn't strictly fit under \"Entertainment\" or \"Gaming\" because it focuses more on playback control than pure entertainment delivery.",
    "primary_label": "Content Creation",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": "Music Playback Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2279,
    "server_name": "Spotify MCP Server",
    "rank_by_usage": 2280,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@marcelmarais_spotify-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@marcelmarais/spotify-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2279,
      "name": "Spotify MCP Server",
      "author": "@marcelmarais/spotify-mcp-server",
      "overview": "Control Spotify playback and manage playlists seamlessly with your AI assistants. Integrate music commands effortlessly to enhance your user experience. Enjoy a rich set of features for searching, playing, and creating playlists on Spotify.",
      "repository_url": "https://github.com/marcelmarais/spotify-mcp-server",
      "homepage": "https://smithery.ai/server/@marcelmarais/spotify-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@marcelmarais_spotify-mcp-server.json",
      "tools_count": 13,
      "tools": [
        {
          "name": "searchSpotify",
          "description": "Deploy Server Spotify MCP Server Claim Server @marcelmarais/spotify-mcp-server Try in Playground searchSpotify",
          "parameters": [
            {
              "name": "type",
              "required": true,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getNowPlaying",
          "description": "Get information about the currently playing track on Spotify",
          "parameters": [
            {
              "name": "getNowPlaying",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getMyPlaylists",
          "description": "Get a list of the current user's playlists on Spotify",
          "parameters": [
            {
              "name": "getMyPlaylists",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "getPlaylistTracks",
          "description": "Get a list of tracks in a Spotify playlist",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "playlistId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getRecentlyPlayed",
          "description": "Get a list of recently played tracks on Spotify",
          "parameters": [
            {
              "name": "getRecentlyPlayed",
              "required": false,
              "type": "string"
            },
            {
              "name": "limit",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "playMusic",
          "description": "Start playing a Spotify track, album, artist, or playlist",
          "parameters": [
            {
              "name": "id",
              "required": false,
              "type": "string"
            },
            {
              "name": "uri",
              "required": false,
              "type": "string"
            },
            {
              "name": "type",
              "required": false,
              "type": "string"
            },
            {
              "name": "deviceId",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "pausePlayback",
          "description": "Pause Spotify playback on the active device",
          "parameters": [
            {
              "name": "pausePlayback",
              "required": false,
              "type": "string"
            },
            {
              "name": "deviceId",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "skipToNext",
          "description": "Skip to the next track in the current Spotify playback queue",
          "parameters": [
            {
              "name": "skipToNext",
              "required": false,
              "type": "string"
            },
            {
              "name": "deviceId",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "skipToPrevious",
          "description": "Skip to the previous track in the current Spotify playback queue",
          "parameters": [
            {
              "name": "skipToPrevious",
              "required": false,
              "type": "string"
            },
            {
              "name": "deviceId",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "createPlaylist",
          "description": "Create a new playlist on Spotify",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "public",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "addTracksToPlaylist",
          "description": "Add tracks to a Spotify playlist",
          "parameters": [
            {
              "name": "position",
              "required": false,
              "type": "string"
            },
            {
              "name": "trackIds",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "playlistId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "resumePlayback",
          "description": "Resume Spotify playback on the active device",
          "parameters": [
            {
              "name": "resumePlayback",
              "required": false,
              "type": "string"
            },
            {
              "name": "deviceId",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "addToQueue",
          "description": "Adds a track, album, artist or playlist to the playback queue",
          "parameters": [
            {
              "name": "id",
              "required": false,
              "type": "string"
            },
            {
              "name": "uri",
              "required": false,
              "type": "string"
            },
            {
              "name": "type",
              "required": false,
              "type": "string"
            },
            {
              "name": "deviceId",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@marcelmarais/spotify-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "clientSecret",
          "required": true,
          "description": "Spotify application client secret"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@marcelmarais/spotify-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2280.@marcelmarais_spotify-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1961
  }
}