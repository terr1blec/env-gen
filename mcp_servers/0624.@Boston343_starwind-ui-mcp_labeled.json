{
  "labels": {
    "analysis": "The Starwind UI MCP Server is designed to enhance development workflows by providing tools specifically for managing Starwind UI projects. Its core functionality revolves around project initialization, component management, and documentation access, all tailored to streamline development processes. The server includes features like package manager detection, LLM data fetching, and documentation retrieval, indicating a focus on developer productivity and integration with AI assistants.",
    "reasoning": "The primary label of \"Development Tools\" is chosen because the server's tools (project initialization, component management, documentation access) are primarily aimed at developers. The secondary label of \"Browser Automation\" is selected due to the LLM data fetching capability, which implies web-based data retrieval. No custom label is needed as the functionality aligns well with the predefined categories.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "Browser Automation"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 623,
    "server_name": "Starwind UI MCP Server",
    "rank_by_usage": 624,
    "usage_count": "16",
    "original_file": "../crawler/smithery/@Boston343_starwind-ui-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Boston343/starwind-ui-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "init_project",
          "description": "Initializes a new project with Starwind UI",
          "input_schema": {
            "type": "object",
            "properties": {
              "packageManager": {
                "type": "string",
                "description": "Package manager to use (npm, yarn, pnpm)",
                "enum": [
                  "npm",
                  "yarn",
                  "pnpm"
                ]
              }
            },
            "required": []
          },
          "annotations": null
        },
        {
          "name": "install_component",
          "description": "Generates installation commands for Starwind UI components",
          "input_schema": {
            "type": "object",
            "properties": {
              "packageManager": {
                "type": "string",
                "description": "Package manager to use (npm, yarn, pnpm)",
                "enum": [
                  "npm",
                  "yarn",
                  "pnpm"
                ]
              },
              "component": {
                "type": "string",
                "description": "Component name to install"
              },
              "additionalComponents": {
                "type": "array",
                "description": "Additional components to install",
                "items": {
                  "type": "string"
                }
              },
              "options": {
                "type": "array",
                "description": "Additional options for installation (e.g., '--all' to install all components)",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "component"
            ]
          },
          "annotations": null
        },
        {
          "name": "update_component",
          "description": "Generates update commands for Starwind UI components",
          "input_schema": {
            "type": "object",
            "properties": {
              "packageManager": {
                "type": "string",
                "description": "Package manager to use (npm, yarn, pnpm)",
                "enum": [
                  "npm",
                  "yarn",
                  "pnpm"
                ]
              },
              "component": {
                "type": "string",
                "description": "Component name to update"
              },
              "additionalComponents": {
                "type": "array",
                "description": "Additional components to update",
                "items": {
                  "type": "string"
                }
              },
              "options": {
                "type": "array",
                "description": "Additional options for updating (e.g., '--all' to update all components)",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "component"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_documentation",
          "description": "Returns documentation links for Starwind UI",
          "input_schema": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of documentation to retrieve (defaults to overview)",
                "enum": [
                  "overview",
                  "getting-started",
                  "cli",
                  "installation",
                  "theming",
                  "components",
                  "full"
                ]
              },
              "component": {
                "type": "string",
                "description": "Specific component to get documentation for (only used when type is components)"
              }
            },
            "required": []
          },
          "annotations": null
        },
        {
          "name": "fetch_llm_data",
          "description": "Fetches LLM data from starwind.dev (rate limited to 3 requests per minute, with caching)",
          "input_schema": {
            "type": "object",
            "properties": {
              "full": {
                "type": "boolean",
                "description": "Whether to fetch the full LLM data (defaults to false)"
              }
            },
            "required": []
          },
          "annotations": null
        },
        {
          "name": "get_package_manager",
          "description": "Detects and returns the current package manager information",
          "input_schema": {
            "type": "object",
            "properties": {
              "cwd": {
                "type": "string",
                "description": "Root directory to check for lock files"
              },
              "defaultManager": {
                "type": "string",
                "description": "Default package manager to use if detection fails (npm, yarn, pnpm)",
                "enum": [
                  "npm",
                  "yarn",
                  "pnpm"
                ]
              }
            },
            "required": [
              "cwd"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 6,
      "tool_names": [
        "init_project",
        "install_component",
        "update_component",
        "get_documentation",
        "fetch_llm_data",
        "get_package_manager"
      ]
    },
    "server_info_crawled": {
      "id": 623,
      "name": "Starwind UI MCP Server",
      "author": "@Boston343/starwind-ui-mcp",
      "overview": "Enhance your development experience with Starwind UI by utilizing a dedicated server that provides tools for project initialization, component management, and documentation access. Streamline your workflow with features like package manager detection and LLM data fetching, all designed to integrate seamlessly with your AI assistants.",
      "repository_url": "https://github.com/Boston343/starwind-ui-mcp",
      "homepage": "https://smithery.ai/server/@Boston343/starwind-ui-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "16",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Boston343_starwind-ui-mcp.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "init_project",
          "description": "Initializes a new project with Starwind UI",
          "input_schema": {
            "type": "object",
            "properties": {
              "packageManager": {
                "type": "string",
                "description": "Package manager to use (npm, yarn, pnpm)",
                "enum": [
                  "npm",
                  "yarn",
                  "pnpm"
                ]
              }
            },
            "required": []
          },
          "annotations": null
        },
        {
          "name": "install_component",
          "description": "Generates installation commands for Starwind UI components",
          "input_schema": {
            "type": "object",
            "properties": {
              "packageManager": {
                "type": "string",
                "description": "Package manager to use (npm, yarn, pnpm)",
                "enum": [
                  "npm",
                  "yarn",
                  "pnpm"
                ]
              },
              "component": {
                "type": "string",
                "description": "Component name to install"
              },
              "additionalComponents": {
                "type": "array",
                "description": "Additional components to install",
                "items": {
                  "type": "string"
                }
              },
              "options": {
                "type": "array",
                "description": "Additional options for installation (e.g., '--all' to install all components)",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "component"
            ]
          },
          "annotations": null
        },
        {
          "name": "update_component",
          "description": "Generates update commands for Starwind UI components",
          "input_schema": {
            "type": "object",
            "properties": {
              "packageManager": {
                "type": "string",
                "description": "Package manager to use (npm, yarn, pnpm)",
                "enum": [
                  "npm",
                  "yarn",
                  "pnpm"
                ]
              },
              "component": {
                "type": "string",
                "description": "Component name to update"
              },
              "additionalComponents": {
                "type": "array",
                "description": "Additional components to update",
                "items": {
                  "type": "string"
                }
              },
              "options": {
                "type": "array",
                "description": "Additional options for updating (e.g., '--all' to update all components)",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "component"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_documentation",
          "description": "Returns documentation links for Starwind UI",
          "input_schema": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of documentation to retrieve (defaults to overview)",
                "enum": [
                  "overview",
                  "getting-started",
                  "cli",
                  "installation",
                  "theming",
                  "components",
                  "full"
                ]
              },
              "component": {
                "type": "string",
                "description": "Specific component to get documentation for (only used when type is components)"
              }
            },
            "required": []
          },
          "annotations": null
        },
        {
          "name": "fetch_llm_data",
          "description": "Fetches LLM data from starwind.dev (rate limited to 3 requests per minute, with caching)",
          "input_schema": {
            "type": "object",
            "properties": {
              "full": {
                "type": "boolean",
                "description": "Whether to fetch the full LLM data (defaults to false)"
              }
            },
            "required": []
          },
          "annotations": null
        },
        {
          "name": "get_package_manager",
          "description": "Detects and returns the current package manager information",
          "input_schema": {
            "type": "object",
            "properties": {
              "cwd": {
                "type": "string",
                "description": "Root directory to check for lock files"
              },
              "defaultManager": {
                "type": "string",
                "description": "Default package manager to use if detection fails (npm, yarn, pnpm)",
                "enum": [
                  "npm",
                  "yarn",
                  "pnpm"
                ]
              }
            },
            "required": [
              "cwd"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Boston343/starwind-ui-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Boston343/starwind-ui-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0624.@Boston343_starwind-ui-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 609
  }
}