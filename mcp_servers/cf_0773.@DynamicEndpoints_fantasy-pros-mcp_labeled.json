{
  "labels": {
    "analysis": "The MCP Server is primarily focused on providing access to sports data, news, rankings, and projections across multiple sports leagues (NFL, MLB, NBA, NHL). It allows users to retrieve real-time information about players, news, and analytical data like projections and rankings. The server serves as an intermediary for accessing the FantasyPros API, which is a valuable resource for fantasy sports managers, sports analysts, and developers building sports-related applications.",
    "reasoning": "The primary label \"Data Analysis & Processing\" is chosen because the server specializes in retrieving and processing sports data (rankings, projections, player information) to provide actionable insights. The secondary label \"Web Search & Research\" is appropriate as the server provides tools to gather the latest sports news and information. The label \"Sports Analytics\" is a custom label to specifically capture the unique focus on sports-related data and analytics.",
    "primary_label": "Data Analysis & Processing",
    "secondary_labels": [
      "Web Search & Research"
    ],
    "custom_label": "Sports Analytics",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 772,
    "server_name": "FantasyPros API Server",
    "rank_by_usage": 773,
    "usage_count": "8",
    "original_file": "../crawler/smithery/@DynamicEndpoints_fantasy-pros-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@DynamicEndpoints/fantasy-pros-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 772,
      "name": "FantasyPros API Server",
      "author": "@DynamicEndpoints/fantasy-pros-mcp",
      "overview": "Access sports data, news, rankings, and projections seamlessly. Retrieve the latest updates and player information for NFL, MLB, NBA, and NHL with ease. Enhance your applications with real-time sports insights and analytics.",
      "repository_url": "https://github.com/DynamicEndpoints/fantasy-pros-mcp",
      "homepage": "https://smithery.ai/server/@DynamicEndpoints/fantasy-pros-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "8",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@DynamicEndpoints_fantasy-pros-mcp.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "get_sport_news",
          "description": "Deploy Server FantasyPros API Server @DynamicEndpoints/fantasy-pros-mcp Try in Playground get_sport_news",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "sport",
              "required": true,
              "type": "string"
            },
            {
              "name": "category",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_players",
          "description": "Get player information for a specific sport",
          "parameters": [
            {
              "name": "sport",
              "required": true,
              "type": "string"
            },
            {
              "name": "playerId",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_rankings",
          "description": "Get consensus rankings for a sport",
          "parameters": [
            {
              "name": "sport",
              "required": true,
              "type": "string"
            },
            {
              "name": "scoring",
              "required": false,
              "type": "string"
            },
            {
              "name": "position",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_projections",
          "description": "Get player projections for a sport",
          "parameters": [
            {
              "name": "week",
              "required": false,
              "type": "string"
            },
            {
              "name": "sport",
              "required": true,
              "type": "string"
            },
            {
              "name": "season",
              "required": true,
              "type": "string"
            },
            {
              "name": "position",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_all_news",
          "description": "Get all news from FantasyPros",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "type": "string"
            },
            {
              "name": "category",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@DynamicEndpoints/fantasy-pros-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "fantasyprosApiKey",
          "required": true,
          "description": "API key for FantasyPros services."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@DynamicEndpoints/fantasy-pros-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0773.@DynamicEndpoints_fantasy-pros-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 755
  }
}