{
  "labels": {
    "analysis": "The MCP Server \"MotherDuck\" is primarily focused on enabling interactions with DuckDB and MotherDuck databases. Its core functionality revolves around connecting to these databases, retrieving schema information, and executing SQL queries. This positions it as a tool primarily for database operations, specifically tailored to the DuckDB/MotherDuck ecosystem.",
    "reasoning": "The primary functionality of this server is clearly aligned with database operations, as it allows users to connect to databases, read schemas, and execute queries. The secondary relevance to data analysis is justified by the capability to execute queries, which is often a foundational step in data analysis workflows. No custom label is needed as the predefined categories are sufficiently descriptive.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1832,
    "server_name": "MotherDuck",
    "rank_by_usage": 1833,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/mcp-server-motherduck_motherduck.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/mcp-server-motherduck/mcp?config=eyJob21lIjogIi9yb290IiwgIm1vdGhlcmR1Y2tUb2tlbiI6ICIifQ==&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1832,
      "name": "MotherDuck",
      "author": "mcp-server-motherduck",
      "overview": "Connect and query MotherDuck and local DuckDB databases.",
      "repository_url": "https://github.com/motherduckdb/mcp-server-motherduck",
      "homepage": "https://smithery.ai/server/mcp-server-motherduck",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/mcp-server-motherduck_motherduck.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "initialize-connection",
          "description": "Deploy Server Claim Server mcp-server-motherduck Try in Playground initialize-connection",
          "parameters": []
        },
        {
          "name": "read-schemas",
          "description": "Get table schemas from a specific DuckDB/MotherDuck database",
          "parameters": [
            {
              "name": "type",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "execute-query",
          "description": "Execute a query on the MotherDuck (DuckDB) database",
          "parameters": [
            {
              "name": "query",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"home\": \"/root\",\n  \"motherduckToken\": \"\"\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/mcp-server-motherduck/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"home\": \"/root\",\n  \"motherduckToken\": \"\"\n}",
      "python_sdk_url": "https://server.smithery.ai/mcp-server-motherduck/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "cf_1833.mcp-server-motherduck_motherduck_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1629
  }
}