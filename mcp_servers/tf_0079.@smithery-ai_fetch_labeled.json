{
  "labels": {
    "analysis": "The MCP Server \"Fetch\" is designed to perform HTTP requests to fetch webpage content, converting it into markdown format. Its primary functionality includes retrieving and processing web content, particularly article bodies and image URLs. This aligns with tasks related to web content extraction and automated content gathering.",
    "reasoning": "The primary label \"Web Search & Research\" was chosen because the tool's core function is to retrieve web content, which is fundamental to research and information gathering. The secondary label \"Browser Automation\" was added because the tool automates the process of fetching and processing web content, which is a form of automated browsing. No custom label is needed as the predefined categories adequately cover the functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Browser Automation"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 78,
    "server_name": "Fetch",
    "rank_by_usage": 79,
    "usage_count": "1,024",
    "original_file": "../crawler/smithery/@smithery-ai_fetch.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@smithery-ai/fetch/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "fetch",
          "description": "Retrieves URLs from the Internet and extracts their content as markdown. If images are found, their URLs will be included in the response.",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              },
              "maxLength": {
                "type": "number",
                "exclusiveMinimum": 0,
                "maximum": 1000000,
                "default": 20000
              },
              "startIndex": {
                "type": "number",
                "minimum": 0,
                "default": 0
              },
              "raw": {
                "type": "boolean",
                "default": false
              }
            },
            "required": [
              "url"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "fetch"
      ]
    },
    "server_info_crawled": {
      "id": 78,
      "name": "Fetch",
      "author": "@smithery-ai/fetch",
      "overview": "A simple tool that performs a fetch request to a webpage.",
      "repository_url": "https://github.com/smithery-ai/mcp-fetch",
      "homepage": "https://smithery.ai/server/@smithery-ai/fetch",
      "remote_or_local": "Remote",
      "license": "Not specified",
      "usage_count": "1,024",
      "success_rate": "99.75%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@smithery-ai_fetch.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "fetch",
          "description": "Retrieves URLs from the Internet and extracts their content as markdown. If images are found, their URLs will be included in the response.",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              },
              "maxLength": {
                "type": "number",
                "exclusiveMinimum": 0,
                "maximum": 1000000,
                "default": 20000
              },
              "startIndex": {
                "type": "number",
                "minimum": 0,
                "default": 0
              },
              "raw": {
                "type": "boolean",
                "default": false
              }
            },
            "required": [
              "url"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": {}
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@smithery-ai/fetch/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@smithery-ai/fetch/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0079.@smithery-ai_fetch_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 78
  }
}