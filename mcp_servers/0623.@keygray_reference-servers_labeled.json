{
  "labels": {
    "analysis": "The MCP Server appears to be a development and testing framework for extending Large Language Models with tool integration capabilities. It provides reference implementations for various tool operations such as file handling, web search, database access, and more. The available tools are primarily used for demonstration, debugging, and showcasing MCP's functionality rather than being end-user focused. The server facilitates rapid prototyping and testing of MCP features through TypeScript and Python SDKs.",
    "reasoning": "The primary label \"Development Tools\" was chosen as the server's core purpose is to enable developers to create and test MCP extensions. The secondary labels \"API Integration\" and \"Database Operations\" reflect some of the specific tool capabilities demonstrated (though not fully implemented in the current tools listed). No custom label is needed as the predefined labels adequately cover the server's functionality.",
    "primary_label": "Development Tools",
    "secondary_labels": [
      "API Integration",
      "Database Operations"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 622,
    "server_name": "Model Context Protocol Reference Servers",
    "rank_by_usage": 623,
    "usage_count": "16",
    "original_file": "../crawler/smithery/@keygray_reference-servers.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@keygray/reference-servers/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "echo",
          "description": "Echoes back the input",
          "input_schema": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "Message to echo"
              }
            },
            "required": [
              "message"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "add",
          "description": "Adds two numbers",
          "input_schema": {
            "type": "object",
            "properties": {
              "a": {
                "type": "number",
                "description": "First number"
              },
              "b": {
                "type": "number",
                "description": "Second number"
              }
            },
            "required": [
              "a",
              "b"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "printEnv",
          "description": "Prints all environment variables, helpful for debugging MCP server configuration",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "longRunningOperation",
          "description": "Demonstrates a long running operation with progress updates",
          "input_schema": {
            "type": "object",
            "properties": {
              "duration": {
                "type": "number",
                "default": 10,
                "description": "Duration of the operation in seconds"
              },
              "steps": {
                "type": "number",
                "default": 5,
                "description": "Number of steps in the operation"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "sampleLLM",
          "description": "Samples from an LLM using MCP's sampling feature",
          "input_schema": {
            "type": "object",
            "properties": {
              "prompt": {
                "type": "string",
                "description": "The prompt to send to the LLM"
              },
              "maxTokens": {
                "type": "number",
                "default": 100,
                "description": "Maximum number of tokens to generate"
              }
            },
            "required": [
              "prompt"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "getTinyImage",
          "description": "Returns the MCP_TINY_IMAGE",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 6,
      "tool_names": [
        "echo",
        "add",
        "printEnv",
        "longRunningOperation",
        "sampleLLM",
        "getTinyImage"
      ]
    },
    "server_info_crawled": {
      "id": 622,
      "name": "Model Context Protocol Reference Servers",
      "author": "@keygray/reference-servers",
      "overview": "Provide a collection of reference implementations demonstrating how to extend Large Language Models with secure, controlled access to tools and data sources. Enable easy integration of various capabilities such as file operations, web search, database access, and more through standardized MCP servers. Facilitate rapid development and testing of MCP features using TypeScript and Python SDKs.",
      "repository_url": "https://github.com/keygray/reference-servers",
      "homepage": "https://smithery.ai/server/@keygray/reference-servers",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "16",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@keygray_reference-servers.json",
      "tools_count": 6,
      "tools": [
        {
          "name": "echo",
          "description": "Echoes back the input",
          "input_schema": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "Message to echo"
              }
            },
            "required": [
              "message"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "add",
          "description": "Adds two numbers",
          "input_schema": {
            "type": "object",
            "properties": {
              "a": {
                "type": "number",
                "description": "First number"
              },
              "b": {
                "type": "number",
                "description": "Second number"
              }
            },
            "required": [
              "a",
              "b"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "printEnv",
          "description": "Prints all environment variables, helpful for debugging MCP server configuration",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "longRunningOperation",
          "description": "Demonstrates a long running operation with progress updates",
          "input_schema": {
            "type": "object",
            "properties": {
              "duration": {
                "type": "number",
                "default": 10,
                "description": "Duration of the operation in seconds"
              },
              "steps": {
                "type": "number",
                "default": 5,
                "description": "Number of steps in the operation"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "sampleLLM",
          "description": "Samples from an LLM using MCP's sampling feature",
          "input_schema": {
            "type": "object",
            "properties": {
              "prompt": {
                "type": "string",
                "description": "The prompt to send to the LLM"
              },
              "maxTokens": {
                "type": "number",
                "default": 100,
                "description": "Maximum number of tokens to generate"
              }
            },
            "required": [
              "prompt"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "getTinyImage",
          "description": "Returns the MCP_TINY_IMAGE",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@keygray/reference-servers/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@keygray/reference-servers/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0623.@keygray_reference-servers_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 608
  }
}