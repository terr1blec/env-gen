{
  "labels": {
    "analysis": "The MCP Server is a dedicated Velt API server designed to facilitate interaction with the Velt platform, which appears to be a collaborative document or workspace management system. The available tools primarily focus on CRUD (Create, Read, Update, Delete) operations for various entities such as organizations, users, documents, folders, comments, and notifications. The server also handles user management, GDPR compliance for data deletion, and workspace configuration, indicating it serves as a comprehensive backend for managing a collaborative environment.",
    "reasoning": "The primary label is \"API Integration\" because the server's core functionality is to provide a seamless interface for interacting with the Velt API, enabling CRUD operations and other management tasks. This aligns with the predefined category of integrating and managing third-party service interactions. \"Database Operations\" is a secondary label as the server heavily interacts with user, document, and organization data, performing typical database-like operations. \"Security & Authentication\" is also relevant due to the GDPR compliance tools and user data management features.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Database Operations",
      "Security & Authentication"
    ],
    "custom_label": "Collaborative Workspace Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2080,
    "server_name": "Velt API Server",
    "rank_by_usage": 2081,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@velt-js_velt-api-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@velt-js/velt-api-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2080,
      "name": "Velt API Server",
      "author": "@velt-js/velt-api-mcp",
      "overview": "Enable seamless interaction with the Velt API through a dedicated MCP server. Integrate Velt's capabilities directly into your tools to enhance productivity and automation. Simplify API access and management within your development environment.",
      "repository_url": "https://github.com/smithery-ai",
      "homepage": "https://smithery.ai/server/@velt-js/velt-api-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@velt-js_velt-api-mcp.json",
      "tools_count": 47,
      "tools": [
        {
          "name": "get-organizations",
          "description": "Deploy Server Velt API Server @velt-js/velt-api-mcp Try in Playground get-organizations",
          "parameters": []
        },
        {
          "name": "add-organizations",
          "description": "Add organizations to Velt. See velt://docs/organizations/add-organizations for detailed documentation.",
          "parameters": []
        },
        {
          "name": "update-organizations",
          "description": "Update organizations in Velt. See velt://docs/organizations/update-organizations for detailed documentation.",
          "parameters": [
            {
              "name": "data",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete-organizations",
          "description": "Delete organizations from Velt. This will permanently remove organizations and all associated data. See velt://docs/organizations/delete-organizations for detailed documentation.",
          "parameters": []
        },
        {
          "name": "execute-delete-organizations",
          "description": "Execute the deletion of organizations from Velt after confirmation. This should only be called after the user has confirmed they want to proceed with the deletion. See velt://docs/organizations/delete-organizations for detailed documentation.",
          "parameters": []
        },
        {
          "name": "update-disable-state-for-organizations",
          "description": "Update disable state for organizations in Velt. See velt://docs/organizations/update-organization-disable-state for detailed documentation.",
          "parameters": []
        },
        {
          "name": "add-organization-user-groups",
          "description": "Add organization user groups to Velt. See velt://docs/organization-user-groups/add-groups for detailed documentation.",
          "parameters": []
        },
        {
          "name": "add-users-to-organization-user-group",
          "description": "Add users to organization user groups in Velt. See velt://docs/organization-user-groups/add-users-to-group for detailed documentation.",
          "parameters": []
        },
        {
          "name": "delete-users-from-organization-user-group",
          "description": "Delete users from organization user groups in Velt. When deleteAll is true, this will remove ALL users from the group. See velt://docs/organization-user-groups/delete-users-from-group for detailed documentation.",
          "parameters": []
        },
        {
          "name": "execute-delete-all-users-from-organization-user-group",
          "description": "Execute the deletion of ALL users from an organization user group after confirmation. This should only be called after the user has confirmed they want to proceed with the deletion. See velt://docs/organization-user-groups/delete-users-from-group for detailed documentation.",
          "parameters": []
        },
        {
          "name": "get-documents",
          "description": "Get Documents from Velt. See velt://docs/documents/get-documents for detailed documentation.",
          "parameters": []
        },
        {
          "name": "add-documents",
          "description": "Add documents to Velt. See velt://docs/documents/add-documents for detailed documentation.",
          "parameters": []
        },
        {
          "name": "update-documents",
          "description": "Update documents in Velt. See velt://docs/documents/update-documents for detailed documentation.",
          "parameters": []
        },
        {
          "name": "delete-documents",
          "description": "Delete documents from Velt. This will permanently remove documents and all associated collaboration data. See velt://docs/documents/delete-documents for detailed documentation.",
          "parameters": []
        },
        {
          "name": "execute-delete-documents",
          "description": "Execute the deletion of documents from Velt after confirmation. This should only be called after the user has confirmed they want to proceed with the deletion. See velt://docs/documents/delete-documents for detailed documentation.",
          "parameters": []
        },
        {
          "name": "update-document-access",
          "description": "Update document access in Velt. See velt://docs/documents/update-document-access for detailed documentation.",
          "parameters": []
        },
        {
          "name": "update-document-disabled-state",
          "description": "Update document disabled state in Velt. See velt://docs/documents/update-document-disable-state for detailed documentation.",
          "parameters": []
        },
        {
          "name": "get-comment-annotations",
          "description": "Get comment annotations from Velt. See velt://docs/comments/get-comment-annotations for detailed documentation.",
          "parameters": []
        },
        {
          "name": "get-comment-annotations-count",
          "description": "Get count of comment annotations from Velt. See velt://docs/comments/get-comment-annotations-count for detailed documentation.",
          "parameters": []
        },
        {
          "name": "add-comment-annotations",
          "description": "Add comment annotations to Velt. See velt://docs/comments/add-comment-annotations for detailed documentation.",
          "parameters": []
        },
        {
          "name": "update-comment-annotations",
          "description": "Update comment annotations in Velt. See velt://docs/comments/update-comment-annotations for detailed documentation.",
          "parameters": []
        },
        {
          "name": "delete-comment-annotations",
          "description": "Delete comment annotations from Velt. See velt://docs/comments/delete-comment-annotations for detailed documentation.",
          "parameters": []
        },
        {
          "name": "add-comments",
          "description": "Add comments to Velt. See velt://docs/comments/add-comments for detailed documentation.",
          "parameters": []
        },
        {
          "name": "update-comments",
          "description": "Update comments in Velt. See velt://docs/comments/update-comments for detailed documentation.",
          "parameters": []
        },
        {
          "name": "delete-comments",
          "description": "Delete comments from Velt. See velt://docs/comments/delete-comments for detailed documentation.",
          "parameters": []
        },
        {
          "name": "get-comments",
          "description": "Get comments from Velt. See velt://docs/comments/get-comments for detailed documentation.",
          "parameters": []
        },
        {
          "name": "get-users",
          "description": "Get users from Velt. See velt://docs/users/get-users for detailed documentation.",
          "parameters": []
        },
        {
          "name": "add-users",
          "description": "add-users-to-organization-user-group Add users to organization user groups in Velt. See velt://docs/organization-user-groups/add-users-to-group for detailed documentation.",
          "parameters": []
        },
        {
          "name": "update-users",
          "description": "Update users in Velt. See velt://docs/users/update-users for detailed documentation.",
          "parameters": []
        },
        {
          "name": "delete-users",
          "description": "delete-users-from-organization-user-group Delete users from organization user groups in Velt. When deleteAll is true, this will remove ALL users from the group. See velt://docs/organization-user-groups/delete-users-from-group for detailed documentation.",
          "parameters": []
        },
        {
          "name": "delete-all-user-data-gdpr",
          "description": "Delete all user data from Velt (GDPR compliance). This will permanently remove all user data including comments, reactions, recordings, and notifications. This action cannot be undone. See velt://docs/users/delete-all-user-data-gdpr for detailed documentation.",
          "parameters": []
        },
        {
          "name": "execute-delete-all-user-data-gdpr",
          "description": "Execute the deletion of all user data from Velt (GDPR compliance) after confirmation. This should only be called after the user has confirmed they want to proceed with the deletion. See velt://docs/users/delete-all-user-data-gdpr for detailed documentation.",
          "parameters": []
        },
        {
          "name": "get-all-user-data-gdpr",
          "description": "Get all user data stored in Velt for GDPR compliance. This includes profile data, comments, reactions, notifications, and recordings. See velt://docs/users/get-all-user-data-gdpr for detailed documentation.",
          "parameters": []
        },
        {
          "name": "get-delete-user-data-status-gdpr",
          "description": "Get the status of a user data deletion process for GDPR compliance. Use the jobId returned from the delete-all-user-data-gdpr API. See velt://docs/users/get-delete-user-data-status-gdpr for detailed documentation.",
          "parameters": []
        },
        {
          "name": "get-folders",
          "description": "Get folders from Velt. See velt://docs/folders/get-folders for detailed documentation.",
          "parameters": []
        },
        {
          "name": "add-folder",
          "description": "Add folder to Velt. See velt://docs/folders/add-folder for detailed documentation.",
          "parameters": []
        },
        {
          "name": "update-folder",
          "description": "Update folder in Velt. See velt://docs/folders/update-folder for detailed documentation.",
          "parameters": []
        },
        {
          "name": "update-folder-access",
          "description": "Update folder access in Velt. See velt://docs/folders/update-folder-access for detailed documentation.",
          "parameters": []
        },
        {
          "name": "get-notifications",
          "description": "Get notifications from Velt. See velt://docs/notifications/get-notifications for detailed documentation.",
          "parameters": []
        },
        {
          "name": "add-notification",
          "description": "Add notification to Velt. See velt://docs/notifications/add-notifications for detailed documentation.",
          "parameters": []
        },
        {
          "name": "update-notification",
          "description": "Update notification in Velt. See velt://docs/notifications/update-notifications for detailed documentation.",
          "parameters": []
        },
        {
          "name": "delete-notification",
          "description": "Delete notification from Velt. See velt://docs/notifications/delete-notifications for detailed documentation.",
          "parameters": []
        },
        {
          "name": "get-notification-config",
          "description": "Get notification configuration for users and documents from Velt. See velt://docs/notifications/get-config for detailed documentation.",
          "parameters": []
        },
        {
          "name": "set-notification-config",
          "description": "Set notification configuration for users and documents in Velt. See velt://docs/notifications/set-config for detailed documentation.",
          "parameters": []
        },
        {
          "name": "broadcast-livestate-event",
          "description": "Broadcast a live state event to Velt. See velt://docs/livestate/broadcast-event for detailed documentation.",
          "parameters": []
        },
        {
          "name": "add-domains",
          "description": "Add domains to workspace allowed domains. See velt://docs/workspace/add-domain for detailed documentation.",
          "parameters": []
        },
        {
          "name": "delete-domains",
          "description": "Delete domains from workspace allowed domains. See velt://docs/workspace/delete-domain for detailed documentation.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@velt-js/velt-api-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "veltApiKey",
          "required": true,
          "description": "Your Velt API Key"
        },
        {
          "name": "veltAuthToken",
          "required": true,
          "description": "Your Velt Auth Token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@velt-js/velt-api-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2081.@velt-js_velt-api-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1813
  }
}