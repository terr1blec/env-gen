{
  "labels": {
    "analysis": "The MCP Server specializes in retrieving and summarizing real-time news articles from Cointelegraph's RSS feeds. It offers tools to fetch news by categories such as Bitcoin, Ethereum, regulation, and market analysis, with customization options for result counts and summary lengths. The server integrates with AI clients like Claude Desktop, suggesting an AI-assisted news querying capability. Its primary use case is providing structured access to cryptocurrency-related news for users who need up-to-date information in a digestible format.",
    "reasoning": "The primary label \"Web Search & Research\" is chosen because the server's core functionality is to retrieve and summarize news articles from RSS feeds, aligning with information-gathering and research needs. The secondary label \"News & Media\" is added due to its specific focus on news aggregation. The custom label \"Cryptocurrency News Aggregator\" is included to highlight its niche focus on cryptocurrency-related news within the broader news and research categories.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "News & Media"
    ],
    "custom_label": "Cryptocurrency News Aggregator",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 438,
    "server_name": "Cointelegraph News",
    "rank_by_usage": 439,
    "usage_count": "47",
    "original_file": "../crawler/smithery/@kukapay_cointelegraph-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@kukapay/cointelegraph-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_rss_categories",
          "description": "\n    Return a list of all available RSS feed categories.\n\n    Parameters:\n    - ctx (Context, optional): MCP context for logging or additional functionality.\n\n    Returns:\n    - str: A newline-separated list of category names.\n    ",
          "input_schema": {
            "properties": {},
            "title": "get_rss_categoriesArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_latest_news",
          "description": "\n    Fetch the latest news articles from a specified category.\n\n    Parameters:\n    - category (str, optional): The category to fetch news from. Must be one of: \n      'all', 'editors_pick', 'latest_news', 'altcoin', 'bitcoin', 'blockchain', \n      'ethereum', 'litecoin', 'monero', 'regulation', 'features', 'analysis', \n      'follow_up', 'in_depth', 'quiz', 'price_analysis', 'market_analysis', \n      'top_10_cryptocurrencies', 'weekly_overview'. Defaults to 'all'.\n    - max_results (int, optional): Maximum number of articles to return. If -1, return all articles. Defaults to -1.\n    - max_summary_length (int, optional): Maximum length of each article summary in characters. \n      If -1, return full summary. Defaults to 150.\n    - ctx (Context, optional): MCP context for logging or additional functionality.\n\n    Returns:\n    - str: A formatted list of the latest articles or an error message if none are found.\n    ",
          "input_schema": {
            "properties": {
              "category": {
                "default": "all",
                "title": "Category",
                "type": "string"
              },
              "max_results": {
                "default": -1,
                "title": "Max Results",
                "type": "integer"
              },
              "max_summary_length": {
                "default": 150,
                "title": "Max Summary Length",
                "type": "integer"
              }
            },
            "title": "get_latest_newsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 2,
      "tool_names": [
        "get_rss_categories",
        "get_latest_news"
      ]
    },
    "server_info_crawled": {
      "id": 438,
      "name": "Cointelegraph News",
      "author": "@kukapay/cointelegraph-mcp",
      "overview": "Provide real-time access to the latest news from Cointelegraph through an MCP server. Retrieve and summarize news articles from multiple RSS feed categories with customizable result counts and summary lengths. Seamlessly integrate with AI clients like Claude Desktop for enhanced news querying capabilities.",
      "repository_url": "https://github.com/kukapay/cointelegraph-mcp",
      "homepage": "https://smithery.ai/server/@kukapay/cointelegraph-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "47",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@kukapay_cointelegraph-mcp.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "get_rss_categories",
          "description": "\n    Return a list of all available RSS feed categories.\n\n    Parameters:\n    - ctx (Context, optional): MCP context for logging or additional functionality.\n\n    Returns:\n    - str: A newline-separated list of category names.\n    ",
          "input_schema": {
            "properties": {},
            "title": "get_rss_categoriesArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_latest_news",
          "description": "\n    Fetch the latest news articles from a specified category.\n\n    Parameters:\n    - category (str, optional): The category to fetch news from. Must be one of: \n      'all', 'editors_pick', 'latest_news', 'altcoin', 'bitcoin', 'blockchain', \n      'ethereum', 'litecoin', 'monero', 'regulation', 'features', 'analysis', \n      'follow_up', 'in_depth', 'quiz', 'price_analysis', 'market_analysis', \n      'top_10_cryptocurrencies', 'weekly_overview'. Defaults to 'all'.\n    - max_results (int, optional): Maximum number of articles to return. If -1, return all articles. Defaults to -1.\n    - max_summary_length (int, optional): Maximum length of each article summary in characters. \n      If -1, return full summary. Defaults to 150.\n    - ctx (Context, optional): MCP context for logging or additional functionality.\n\n    Returns:\n    - str: A formatted list of the latest articles or an error message if none are found.\n    ",
          "input_schema": {
            "properties": {
              "category": {
                "default": "all",
                "title": "Category",
                "type": "string"
              },
              "max_results": {
                "default": -1,
                "title": "Max Results",
                "type": "integer"
              },
              "max_summary_length": {
                "default": 150,
                "title": "Max Summary Length",
                "type": "integer"
              }
            },
            "title": "get_latest_newsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@kukapay/cointelegraph-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@kukapay/cointelegraph-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0439.@kukapay_cointelegraph-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 432
  }
}