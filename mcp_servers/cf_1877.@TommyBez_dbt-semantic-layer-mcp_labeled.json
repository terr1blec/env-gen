{
  "labels": {
    "analysis": "The MCP Server described is a specialized tool for interacting with the DBT Semantic Layer API. Its core functionality revolves around data querying, metrics extraction, and retrieving query results. The available tools indicate its primary use cases include fetching documentation, retrieving metrics, creating queries against the semantic layer, and fetching query results. This server serves as an intermediary between users and the DBT Semantic Layer, enabling structured data queries and analysis.",
    "reasoning": "The primary label \"Database Operations\" is chosen because the server's functionality centers around querying a semantic layer, which is inherently database-related. The secondary label \"Data Analysis & Processing\" is relevant as the server supports metric analysis and query result retrieval, which are part of data analysis workflows. The tools provided suggest a strong alignment with database querying and data processing tasks, justifying these labels.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": "DBT Semantic Layer Integration",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1876,
    "server_name": "DBT Semantic Layer Server",
    "rank_by_usage": 1877,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@TommyBez_dbt-semantic-layer-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@TommyBez/dbt-semantic-layer-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1876,
      "name": "DBT Semantic Layer Server",
      "author": "@TommyBez/dbt-semantic-layer-mcp",
      "overview": "Query the DBT Semantic Layer API seamlessly. Enhance your data querying capabilities with a robust MCP server.",
      "repository_url": "https://github.com/TommyBez/dbt-semantic-layer-mcp-server",
      "homepage": "https://smithery.ai/server/@TommyBez/dbt-semantic-layer-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@TommyBez_dbt-semantic-layer-mcp.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "get_documentation",
          "description": "Deploy Server DBT Semantic Layer Server @TommyBez/dbt-semantic-layer-mcp Try in Playground get_documentation",
          "parameters": [
            {
              "name": "get_documentation",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "fetch_metrics",
          "description": "Fetches metrics from the semantic layer. Use this to get a list of metrics available in the semantic layer with their description and dimensions. Invoke this tool prior to creating a query to get a list of metrics to use in the query.",
          "parameters": [
            {
              "name": "fetch_metrics",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create_query",
          "description": "Creates a query to the semantic layer. Use this tool to create a query to the semantic layer. Returns the query id which can be used to fetch the results of the query.",
          "parameters": [
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "metrics",
              "required": true,
              "type": "string"
            },
            {
              "name": "orderBy",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "fetch_query_result",
          "description": "Fetches the results of a query from the semantic layer. You have to poll this tool until the query status is SUCCESSFUL.",
          "parameters": [
            {
              "name": "fetch_query_result",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@TommyBez/dbt-semantic-layer-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "SEMANTIC_LAYER_API_KEY",
          "required": true,
          "description": ""
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@TommyBez/dbt-semantic-layer-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1877.@TommyBez_dbt-semantic-layer-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1663
  }
}