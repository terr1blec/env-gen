{
  "labels": {
    "analysis": "The MCP Server is specifically designed for managing Jira Insights assets, including schemas, object types, and individual objects. It provides CRUD operations for these elements and supports querying using AQL (Asset Query Language) to retrieve powerful insights. The primary use case is streamlining Jira asset management, particularly around Insights functionality, which involves tracking and analyzing assets within Jira projects.",
    "reasoning": "The primary label \"Project Management\" is chosen because the server's core focus is on managing project assets within Jira, which is a standard project management tool. The secondary label \"Database Operations\" is selected due to the querying capabilities via AQL, which resembles database querying functionality. No custom label is needed as the predefined labels adequately cover the server's functionality.",
    "primary_label": "Project Management",
    "secondary_labels": [
      "Database Operations"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false
  },
  "metadata": {
    "server_id": 2447,
    "server_name": "Jira Insights",
    "rank_by_usage": 2448,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@aaronsb_jira-insights-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@aaronsb/jira-insights-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2447,
      "name": "Jira Insights",
      "author": "@aaronsb/jira-insights-mcp",
      "overview": "Manage your Jira Insights asset schemas effortlessly. Create, read, update, and delete object schemas and types, while querying objects using AQL for powerful insights. Streamline your Jira management with this comprehensive MCP server.",
      "repository_url": "https://github.com/aaronsb/jira-insights-mcp",
      "homepage": "https://smithery.ai/server/@aaronsb/jira-insights-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@aaronsb_jira-insights-mcp.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "manage_jira_insight_schema",
          "description": "Deploy Server Jira Insights Claim Server @aaronsb/jira-insights-mcp Try in Playground manage_jira_insight_schema",
          "parameters": [
            {
              "name": "manage_jira_insight_schema",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "manage_jira_insight_object_type",
          "description": "Manage Jira Insights object types with CRUD operations Add Item",
          "parameters": []
        },
        {
          "name": "manage_jira_insight_object",
          "description": "description objectTypeId manage_jira_insight_object",
          "parameters": [
            {
              "name": "manage_jira_insight_object_type",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@aaronsb/jira-insights-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "jiraApiToken",
          "required": true,
          "description": "Your Jira API token."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@aaronsb/jira-insights-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2448.@aaronsb_jira-insights-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 2088
  }
}