{
  "labels": {
    "analysis": "The MCP Server primarily functions as a memory management system for AI assistants, allowing for persistent storage, retrieval, and tracking of context and decisions across sessions. It includes tools for file operations, configuration debugging, and context tracking, which suggests a focus on maintaining state and organizing information for AI workflows. The ability to switch modes and process commands indicates flexibility in handling different types of data and interaction patterns.",
    "reasoning": "The primary label \"Memory Management\" is chosen because the server's core functionality revolves around storing, retrieving, and organizing information persistently. The secondary label \"Development Tools\" is selected due to the tools for debugging and command processing, which are useful in development and operational contexts. The server's unique focus on AI assistant state management warrants a custom label to highlight this specialized use case.",
    "primary_label": "Memory Management",
    "secondary_labels": [
      "Development Tools"
    ],
    "custom_label": "AI State Management",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 12,
    "server_name": "Memory Bank",
    "rank_by_usage": 13,
    "usage_count": "10,000",
    "original_file": "../crawler/smithery/@aakarsh-sasi_memory-bank-mcp.json",
    "mode": "smithery",
    "timestamp": 1751937975,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@aakarsh-sasi/memory-bank-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "initialize_memory_bank",
          "description": "Initialize a Memory Bank in the specified directory",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "Path where the Memory Bank will be initialized"
              }
            },
            "required": [
              "path"
            ]
          },
          "annotations": null
        },
        {
          "name": "set_memory_bank_path",
          "description": "Set a custom path for the Memory Bank",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "Custom path for the Memory Bank. If not provided, the current directory will be used."
              }
            },
            "required": []
          },
          "annotations": null
        },
        {
          "name": "debug_mcp_config",
          "description": "Debug the current MCP configuration",
          "input_schema": {
            "type": "object",
            "properties": {
              "verbose": {
                "type": "boolean",
                "description": "Whether to include detailed information",
                "default": false
              }
            },
            "required": []
          },
          "annotations": null
        },
        {
          "name": "read_memory_bank_file",
          "description": "Read a file from the Memory Bank",
          "input_schema": {
            "type": "object",
            "properties": {
              "filename": {
                "type": "string",
                "description": "Name of the file to read"
              }
            },
            "required": [
              "filename"
            ]
          },
          "annotations": null
        },
        {
          "name": "write_memory_bank_file",
          "description": "Write to a Memory Bank file",
          "input_schema": {
            "type": "object",
            "properties": {
              "filename": {
                "type": "string",
                "description": "Name of the file to write"
              },
              "content": {
                "type": "string",
                "description": "Content to write to the file"
              }
            },
            "required": [
              "filename",
              "content"
            ]
          },
          "annotations": null
        },
        {
          "name": "list_memory_bank_files",
          "description": "List Memory Bank files",
          "input_schema": {
            "type": "object",
            "properties": {
              "random_string": {
                "type": "string",
                "description": "Dummy parameter for no-parameter tools"
              }
            },
            "required": [
              "random_string"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_memory_bank_status",
          "description": "Check Memory Bank status",
          "input_schema": {
            "type": "object",
            "properties": {
              "random_string": {
                "type": "string",
                "description": "Dummy parameter for no-parameter tools"
              }
            },
            "required": [
              "random_string"
            ]
          },
          "annotations": null
        },
        {
          "name": "migrate_file_naming",
          "description": "Migrate Memory Bank files from camelCase to kebab-case naming convention",
          "input_schema": {
            "type": "object",
            "properties": {
              "random_string": {
                "type": "string",
                "description": "Dummy parameter for no-parameter tools"
              }
            },
            "required": [
              "random_string"
            ]
          },
          "annotations": null
        },
        {
          "name": "track_progress",
          "description": "Track progress and update Memory Bank files",
          "input_schema": {
            "type": "object",
            "properties": {
              "action": {
                "type": "string",
                "description": "Action performed (e.g., 'Implemented feature', 'Fixed bug')"
              },
              "description": {
                "type": "string",
                "description": "Detailed description of the progress"
              },
              "updateActiveContext": {
                "type": "boolean",
                "description": "Whether to update the active context file",
                "default": true
              }
            },
            "required": [
              "action",
              "description"
            ]
          },
          "annotations": null
        },
        {
          "name": "update_active_context",
          "description": "Update the active context file",
          "input_schema": {
            "type": "object",
            "properties": {
              "tasks": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of ongoing tasks"
              },
              "issues": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of known issues"
              },
              "nextSteps": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of next steps"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "log_decision",
          "description": "Log a decision in the decision log",
          "input_schema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Decision title"
              },
              "context": {
                "type": "string",
                "description": "Decision context"
              },
              "decision": {
                "type": "string",
                "description": "The decision made"
              },
              "alternatives": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Alternatives considered"
              },
              "consequences": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Consequences of the decision"
              }
            },
            "required": [
              "title",
              "context",
              "decision"
            ]
          },
          "annotations": null
        },
        {
          "name": "switch_mode",
          "description": "Switches to a specific mode",
          "input_schema": {
            "type": "object",
            "properties": {
              "mode": {
                "type": "string",
                "description": "Name of the mode to switch to (architect, ask, code, debug, test)"
              }
            },
            "required": [
              "mode"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_current_mode",
          "description": "Gets information about the current mode",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "process_umb_command",
          "description": "Processes the Update Memory Bank (UMB) command",
          "input_schema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Complete UMB command"
              }
            },
            "required": [
              "command"
            ]
          },
          "annotations": null
        },
        {
          "name": "complete_umb",
          "description": "Completes the Update Memory Bank (UMB) process",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        }
      ],
      "tool_count": 15,
      "tool_names": [
        "initialize_memory_bank",
        "set_memory_bank_path",
        "debug_mcp_config",
        "read_memory_bank_file",
        "write_memory_bank_file",
        "list_memory_bank_files",
        "get_memory_bank_status",
        "migrate_file_naming",
        "track_progress",
        "update_active_context",
        "log_decision",
        "switch_mode",
        "get_current_mode",
        "process_umb_command",
        "complete_umb"
      ]
    },
    "server_info_crawled": {
      "id": 12,
      "name": "Memory Bank",
      "author": "@aakarsh-sasi/memory-bank-mcp",
      "overview": "Manage your AI assistant's context seamlessly across sessions. Store, retrieve, and track information with remote server support for enhanced collaboration and persistence.",
      "repository_url": "https://github.com/aakarsh-sasi/memory-bank-mcp",
      "homepage": "https://smithery.ai/server/@aakarsh-sasi/memory-bank-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "10,000",
      "success_rate": "96.20%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@aakarsh-sasi_memory-bank-mcp.json",
      "tools_count": 15,
      "tools": [
        {
          "name": "initialize_memory_bank",
          "description": "Initialize a Memory Bank in the specified directory",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "Path where the Memory Bank will be initialized"
              }
            },
            "required": [
              "path"
            ]
          },
          "annotations": null
        },
        {
          "name": "set_memory_bank_path",
          "description": "Set a custom path for the Memory Bank",
          "input_schema": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "Custom path for the Memory Bank. If not provided, the current directory will be used."
              }
            },
            "required": []
          },
          "annotations": null
        },
        {
          "name": "debug_mcp_config",
          "description": "Debug the current MCP configuration",
          "input_schema": {
            "type": "object",
            "properties": {
              "verbose": {
                "type": "boolean",
                "description": "Whether to include detailed information",
                "default": false
              }
            },
            "required": []
          },
          "annotations": null
        },
        {
          "name": "read_memory_bank_file",
          "description": "Read a file from the Memory Bank",
          "input_schema": {
            "type": "object",
            "properties": {
              "filename": {
                "type": "string",
                "description": "Name of the file to read"
              }
            },
            "required": [
              "filename"
            ]
          },
          "annotations": null
        },
        {
          "name": "write_memory_bank_file",
          "description": "Write to a Memory Bank file",
          "input_schema": {
            "type": "object",
            "properties": {
              "filename": {
                "type": "string",
                "description": "Name of the file to write"
              },
              "content": {
                "type": "string",
                "description": "Content to write to the file"
              }
            },
            "required": [
              "filename",
              "content"
            ]
          },
          "annotations": null
        },
        {
          "name": "list_memory_bank_files",
          "description": "List Memory Bank files",
          "input_schema": {
            "type": "object",
            "properties": {
              "random_string": {
                "type": "string",
                "description": "Dummy parameter for no-parameter tools"
              }
            },
            "required": [
              "random_string"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_memory_bank_status",
          "description": "Check Memory Bank status",
          "input_schema": {
            "type": "object",
            "properties": {
              "random_string": {
                "type": "string",
                "description": "Dummy parameter for no-parameter tools"
              }
            },
            "required": [
              "random_string"
            ]
          },
          "annotations": null
        },
        {
          "name": "migrate_file_naming",
          "description": "Migrate Memory Bank files from camelCase to kebab-case naming convention",
          "input_schema": {
            "type": "object",
            "properties": {
              "random_string": {
                "type": "string",
                "description": "Dummy parameter for no-parameter tools"
              }
            },
            "required": [
              "random_string"
            ]
          },
          "annotations": null
        },
        {
          "name": "track_progress",
          "description": "Track progress and update Memory Bank files",
          "input_schema": {
            "type": "object",
            "properties": {
              "action": {
                "type": "string",
                "description": "Action performed (e.g., 'Implemented feature', 'Fixed bug')"
              },
              "description": {
                "type": "string",
                "description": "Detailed description of the progress"
              },
              "updateActiveContext": {
                "type": "boolean",
                "description": "Whether to update the active context file",
                "default": true
              }
            },
            "required": [
              "action",
              "description"
            ]
          },
          "annotations": null
        },
        {
          "name": "update_active_context",
          "description": "Update the active context file",
          "input_schema": {
            "type": "object",
            "properties": {
              "tasks": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of ongoing tasks"
              },
              "issues": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of known issues"
              },
              "nextSteps": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of next steps"
              }
            }
          },
          "annotations": null
        },
        {
          "name": "log_decision",
          "description": "Log a decision in the decision log",
          "input_schema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Decision title"
              },
              "context": {
                "type": "string",
                "description": "Decision context"
              },
              "decision": {
                "type": "string",
                "description": "The decision made"
              },
              "alternatives": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Alternatives considered"
              },
              "consequences": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Consequences of the decision"
              }
            },
            "required": [
              "title",
              "context",
              "decision"
            ]
          },
          "annotations": null
        },
        {
          "name": "switch_mode",
          "description": "Switches to a specific mode",
          "input_schema": {
            "type": "object",
            "properties": {
              "mode": {
                "type": "string",
                "description": "Name of the mode to switch to (architect, ask, code, debug, test)"
              }
            },
            "required": [
              "mode"
            ]
          },
          "annotations": null
        },
        {
          "name": "get_current_mode",
          "description": "Gets information about the current mode",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        },
        {
          "name": "process_umb_command",
          "description": "Processes the Update Memory Bank (UMB) command",
          "input_schema": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Complete UMB command"
              }
            },
            "required": [
              "command"
            ]
          },
          "annotations": null
        },
        {
          "name": "complete_umb",
          "description": "Completes the Update Memory Bank (UMB) process",
          "input_schema": {
            "type": "object",
            "properties": {}
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@aakarsh-sasi/memory-bank-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@aakarsh-sasi/memory-bank-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0013.@aakarsh-sasi_memory-bank-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 13
  }
}