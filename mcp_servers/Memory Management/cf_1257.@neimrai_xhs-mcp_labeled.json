{
  "labels": {
    "analysis": "The MCP Server appears to be focused on managing and interacting with notes and comments within a note-taking or knowledge-sharing platform. Its tools allow users to check cookies, search for notes by keywords, retrieve note content and comments, and post comments to notes. This suggests functionality related to knowledge management, content interaction, and possibly user engagement within a collaborative or social platform.",
    "reasoning": "The primary functionality revolves around note management and user interaction, which aligns well with the Memory Management category. The ability to search notes and retrieve content fits within this framework. While there are elements of content creation and communication (especially through comments), these are secondary to the core note-handling capabilities. No unique functionality justifies a custom label.",
    "primary_label": "Memory Management",
    "secondary_labels": [
      "Content Creation",
      "Communication Tools"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1256,
    "server_name": "Not found",
    "rank_by_usage": 1257,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@neimrai_xhs-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@neimrai/xhs-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1256,
      "name": "Not found",
      "author": "Not found",
      "overview": "Not found",
      "repository_url": "https://github.com/exa-labs/exa-mcp-server",
      "homepage": "https://smithery.ai/server/@neimrai/xhs-mcp",
      "remote_or_local": "Remote",
      "license": "Not specified",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@neimrai_xhs-mcp.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "check_cookie",
          "description": "Deploy Server @neimrai/xhs-mcp Try in Playground check_cookie",
          "parameters": []
        },
        {
          "name": "search_notes",
          "description": "根据关键词搜索笔记\n\n        Args:\n            keywords: 搜索关键词",
          "parameters": [
            {
              "name": "keywords",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_note_content",
          "description": "获取笔记内容 Args: note_id: 笔记 note_id xsec_token: 笔记 xsec_token",
          "parameters": []
        },
        {
          "name": "get_note_comments",
          "description": "获取笔记评论 Args: note_id: 笔记 note_id xsec_token: 笔记 xsec_token",
          "parameters": []
        },
        {
          "name": "post_comment",
          "description": "发布评论到指定笔记\n\n    Args:\n        note_id: 笔记 note_id\n        comment: 要发布的评论内容",
          "parameters": [
            {
              "name": "comment",
              "required": true,
              "type": "string"
            },
            {
              "name": "note_id",
              "required": true,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@neimrai/xhs-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@neimrai/xhs-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1257.@neimrai_xhs-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1201
  }
}