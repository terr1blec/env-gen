{
  "labels": {
    "analysis": "The Omi MCP Server is designed to interact with the Omi API, providing tools to manage conversations and memories. Its core functionality involves retrieving, creating, and manipulating user data related to conversations and memories, which suggests it is primarily focused on data management and interaction with a conversational or cognitive AI system. The tools enable seamless interaction with user memories and conversational threads, which may be used for applications requiring rich conversational capabilities, such as chatbots, virtual assistants, or knowledge management systems.",
    "reasoning": "The primary label is \"Memory Management\" because the server's tools are heavily focused on manipulating and retrieving user data related to conversations and memories. The secondary label \"AI/ML Tools\" is appropriate because the tools likely interact with AI-driven features for conversation and memory management. The custom label \"Conversational AI Management\" is added to highlight the server's specific role in managing conversational and memory-related data for AI applications.",
    "primary_label": "Memory Management",
    "secondary_labels": [
      "AI/ML Tools"
    ],
    "custom_label": "Conversational AI Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1517,
    "server_name": "Omi MCP Server",
    "rank_by_usage": 1518,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@fourcolors_omi-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@fourcolors/omi-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1517,
      "name": "Omi MCP Server",
      "author": "@fourcolors/omi-mcp",
      "overview": "Interact with the Omi API to manage conversations and memories seamlessly. Retrieve, create, and manipulate user data effortlessly, enhancing your applications with rich conversational capabilities.",
      "repository_url": "https://github.com/fourcolors/omi-mcp",
      "homepage": "https://smithery.ai/server/@fourcolors/omi-mcp",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@fourcolors_omi-mcp.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "read_omi_conversations",
          "description": "Deploy Server Omi MCP Server @fourcolors/omi-mcp Try in Playground read_omi_conversations",
          "parameters": [
            {
              "name": "read_omi_conversations",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "read_omi_memories",
          "description": "Retrieves user memories from Omi with pagination options",
          "parameters": []
        },
        {
          "name": "create_omi_conversation",
          "description": "Creates a new Omi conversation with text content and metadata",
          "parameters": []
        },
        {
          "name": "create_omi_memories",
          "description": "Creates Omi memories by extracting from text or using explicit memory objects",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@fourcolors/omi-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "apiKey",
          "required": true,
          "description": "API key for Omi's API"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@fourcolors/omi-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1518.@fourcolors_omi-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1397
  }
}