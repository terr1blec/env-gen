{
  "labels": {
    "analysis": "The MCP Server is designed to create, manage, and access structured project documentation with AI assistance. It focuses on generating interconnected Markdown documents, capturing project knowledge from goals to progress, and performing context-aware search and updates. The available tools suggest core functionality around storing, retrieving, and maintaining project-related structured data, which aligns closely with knowledge management and documentation systems.",
    "reasoning": "The primary functionality of organizing and maintaining project documentation fits best within the \"Memory Management\" category, as it involves data storage, retrieval, and knowledge base operations. Secondary relevance to \"Data Analysis & Processing\" is noted due to the context-aware search and update capabilities, which may involve some level of data analysis. No custom label is necessary given the predefined categories sufficiently cover the functionality.",
    "primary_label": "Memory Management",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 648,
    "server_name": "Specification MCP",
    "rank_by_usage": 649,
    "usage_count": "14",
    "original_file": "../crawler/smithery/@Srhot_specification-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@Srhot/specification-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "initialize_memory_bank",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "goal": {
                "type": "string",
                "minLength": 10
              },
              "geminiApiKey": {
                "type": "string",
                "description": "Gemini API key (optional)"
              },
              "location": {
                "type": "string",
                "description": "Absolute path where memory-bank folder will be created"
              }
            },
            "required": [
              "goal",
              "location"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "update_document",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "documentType": {
                "type": "string",
                "enum": [
                  "projectbrief",
                  "productContext",
                  "systemPatterns",
                  "techContext",
                  "activeContext",
                  "progress"
                ]
              },
              "content": {
                "type": "string"
              },
              "regenerate": {
                "type": "boolean",
                "default": false
              }
            },
            "required": [
              "documentType"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "query_memory_bank",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "minLength": 5
              }
            },
            "required": [
              "query"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "export_memory_bank",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "format": {
                "type": "string",
                "enum": [
                  "json",
                  "folder"
                ],
                "default": "folder",
                "description": "Export format"
              },
              "outputPath": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_cursor_rules",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "projectPurpose": {
                "type": "string",
                "minLength": 10,
                "description": "Proje amacını detaylı bir şekilde açıklayan bir metin giriniz. Bu metin projenin temel hedeflerini ve kapsamını belirleyecektir."
              },
              "location": {
                "type": "string",
                "description": "Absolute path where cursor-rules will be created"
              }
            },
            "required": [
              "projectPurpose",
              "location"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 5,
      "tool_names": [
        "initialize_memory_bank",
        "update_document",
        "query_memory_bank",
        "export_memory_bank",
        "create_cursor_rules"
      ]
    },
    "server_info_crawled": {
      "id": 648,
      "name": "Specification MCP",
      "author": "@Srhot/specification-mcp",
      "overview": "Create, manage, and access structured project documentation with AI assistance. Generate interconnected Markdown documents capturing project knowledge from goals to progress. Perform context-aware search and updates to keep your documentation comprehensive and up-to-date.",
      "repository_url": "https://github.com/Srhot/Specification-MemBank-MCP",
      "homepage": "https://smithery.ai/server/@Srhot/specification-mcp",
      "remote_or_local": "Remote",
      "license": "https://smithery.ai/server/@Srhot/specification-mcp",
      "usage_count": "14",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@Srhot_specification-mcp.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "initialize_memory_bank",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "goal": {
                "type": "string",
                "minLength": 10
              },
              "geminiApiKey": {
                "type": "string",
                "description": "Gemini API key (optional)"
              },
              "location": {
                "type": "string",
                "description": "Absolute path where memory-bank folder will be created"
              }
            },
            "required": [
              "goal",
              "location"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "update_document",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "documentType": {
                "type": "string",
                "enum": [
                  "projectbrief",
                  "productContext",
                  "systemPatterns",
                  "techContext",
                  "activeContext",
                  "progress"
                ]
              },
              "content": {
                "type": "string"
              },
              "regenerate": {
                "type": "boolean",
                "default": false
              }
            },
            "required": [
              "documentType"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "query_memory_bank",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "minLength": 5
              }
            },
            "required": [
              "query"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "export_memory_bank",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "format": {
                "type": "string",
                "enum": [
                  "json",
                  "folder"
                ],
                "default": "folder",
                "description": "Export format"
              },
              "outputPath": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "create_cursor_rules",
          "description": null,
          "input_schema": {
            "type": "object",
            "properties": {
              "projectPurpose": {
                "type": "string",
                "minLength": 10,
                "description": "Proje amacını detaylı bir şekilde açıklayan bir metin giriniz. Bu metin projenin temel hedeflerini ve kapsamını belirleyecektir."
              },
              "location": {
                "type": "string",
                "description": "Absolute path where cursor-rules will be created"
              }
            },
            "required": [
              "projectPurpose",
              "location"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@Srhot/specification-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@Srhot/specification-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0649.@Srhot_specification-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 634
  }
}