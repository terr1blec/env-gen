{
  "labels": {
    "analysis": "The MCP Server is designed to help users set up and configure Memory Bank systems for AI assistants, focusing on context preservation and organized documentation. Its core functionality involves managing structured Memory Bank files, generating templates, and analyzing project summaries to suggest relevant content. The server solves the problem of efficiently organizing and maintaining contextual information for AI interaction systems.",
    "reasoning": "The primary label of \"Memory Management\" is chosen because the server's main purpose is managing and organizing contextual data storage (Memory Bank structures). The secondary label of \"Development Tools\" is selected because this functionality is primarily useful for developers configuring AI environments. A custom label is added to emphasize the server's specialized focus on AI assistant context management.",
    "primary_label": "Memory Management",
    "secondary_labels": [
      "Development Tools"
    ],
    "custom_label": "AI Context Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2021,
    "server_name": "Memory Bank Setup Helper",
    "rank_by_usage": 2022,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@ipospelov_mcp-memory-bank.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ipospelov/mcp-memory-bank/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "Connection timeout (20 seconds)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 2021,
      "name": "Memory Bank Setup Helper",
      "author": "@ipospelov/mcp-memory-bank",
      "overview": "Help users set up and configure their AI assistant environments by managing a structured Memory Bank for context preservation. Provide detailed information about Memory Bank file structures, generate templates for Memory Bank files, and analyze project summaries to suggest relevant Memory Bank content. Facilitate organized documentation to enhance AI context management and project understanding.",
      "repository_url": "https://github.com/ipospelov/mcp-memory-bank",
      "homepage": "https://smithery.ai/server/@ipospelov/mcp-memory-bank",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ipospelov_mcp-memory-bank.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "get_memory_bank_structure",
          "description": "Deploy Server Memory Bank Setup Helper @ipospelov/mcp-memory-bank Try in Playground get_memory_bank_structure",
          "parameters": [
            {
              "name": "get_memory_bank_structure",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "generate_memory_bank_template",
          "description": "Generate a template for a specific Memory Bank file. Args: file_name: The name of the file to generate a template for (e.g., \"projectbrief.md\")",
          "parameters": []
        },
        {
          "name": "analyze_project_summary",
          "description": "Analyze a project summary and provide suggestions for Memory Bank content. Args: project_summary: A summary of the project",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ipospelov/mcp-memory-bank/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ipospelov/mcp-memory-bank/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_2022.@ipospelov_mcp-memory-bank_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1765
  }
}