{
  "labels": {
    "analysis": "The MCP Server is based on the Qdrant vector search engine, which serves as a semantic memory layer. Its primary functionality involves storing and retrieving information using vector search technology. The available tools suggest it focuses on storing (\"qdrant-store\") and finding (\"qdrant-find\") memories through semantic search, enabling content-based retrieval and personal information access. The server is particularly suited for applications requiring semantic search capabilities, personal memory storage, and retrieval of relevant information based on user content.",
    "reasoning": "The primary label is \"Memory Management\" because the server's core function is storing and retrieving information semantically, aligning closely with database or knowledge base operations. A secondary label of \"AI/ML Tools\" is appropriate because vector search leverages machine learning for semantic understanding. \"Database Operations\" is also relevant due to the storage and retrieval functions.",
    "primary_label": "Memory Management",
    "secondary_labels": [
      "AI/ML Tools",
      "Database Operations"
    ],
    "custom_label": "Semantic Search",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 283,
    "server_name": "Qdrant Server",
    "rank_by_usage": 284,
    "usage_count": "126",
    "original_file": "../crawler/smithery/mcp-server-qdrant_qdrant-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/mcp-server-qdrant/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 283,
      "name": "Qdrant Server",
      "author": "mcp-server-qdrant",
      "overview": "A semantic memory layer that stores and retrieves information using the Qdrant vector search engine. It enables storing memories and finding relevant information through semantic search.",
      "repository_url": "https://github.com/qdrant/mcp-server-qdrant",
      "homepage": "https://smithery.ai/server/mcp-server-qdrant",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "126",
      "success_rate": "99.80%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/mcp-server-qdrant_qdrant-server.json",
      "tools_count": 2,
      "tools": [
        {
          "name": "qdrant-store",
          "description": "Deploy Server Qdrant Server Claim Server mcp-server-qdrant Try in Playground qdrant-store",
          "parameters": []
        },
        {
          "name": "qdrant-find",
          "description": "Look up memories in Qdrant. Use this tool when you need to: \n - Find memories by their content \n - Access memories for further analysis \n - Get some personal information about the user",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/mcp-server-qdrant/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/mcp-server-qdrant/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0284.mcp-server-qdrant_qdrant-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 280
  }
}