{
  "labels": {
    "analysis": "The MCP Server specializes in integrating with the Backlog project management system, providing a standardized interface to access and manipulate projects, issues, and wikis. Its core functionality revolves around API integration for project tracking and collaboration, offering tools to list, create, update, and delete issues and wikis. This server simplifies Backlog API interactions, enhancing workflow automation for project management tasks.",
    "reasoning": "The primary label \"API Integration\" is chosen because the server's main purpose is to facilitate interaction with the Backlog API. The secondary label \"Project Management\" is selected due to its focus on tools for managing projects and issues within the Backlog system. A custom label \"Issue Tracker Integration\" is added to highlight the server's specialized functionality in managing project issues, a key aspect of Backlog's features not fully covered by predefined categories.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Project Management"
    ],
    "custom_label": "Issue Tracker Integration",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1939,
    "server_name": "Backlog API Integration Server",
    "rank_by_usage": 1940,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@fleagne_backlog-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@fleagne/backlog-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1939,
      "name": "Backlog API Integration Server",
      "author": "@fleagne/backlog-mcp-server",
      "overview": "Integrate your Backlog project management data seamlessly with your LLM applications. Access and manipulate projects, issues, and wikis through a standardized MCP interface to enhance your workflows. Simplify Backlog API interactions with ready-to-use tools for efficient project tracking and collaboration.",
      "repository_url": "https://github.com/fleagne/backlog-mcp-server",
      "homepage": "https://smithery.ai/server/@fleagne/backlog-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@fleagne_backlog-mcp-server.json",
      "tools_count": 12,
      "tools": [
        {
          "name": "backlog_get_projects",
          "description": "Deploy Server Backlog API Integration Server Claim Server @fleagne/backlog-mcp-server Try in Playground backlog_get_projects",
          "parameters": [
            {
              "name": "backlog_get_projects",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "backlog_get_project",
          "description": "Deploy Server Backlog API Integration Server Claim Server @fleagne/backlog-mcp-server Try in Playground backlog_get_projects",
          "parameters": [
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "archived",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "backlog_get_issues",
          "description": "Performs list issue get using the Backlog Issues API. Supports pagination, content filtering. Maximum 20 results per request, with offset for pagination.",
          "parameters": [
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "priorityId",
              "required": false,
              "type": "string"
            },
            {
              "name": "createdSince",
              "required": false,
              "type": "string"
            },
            {
              "name": "createdUntil",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "backlog_get_issue",
          "description": "createdSince createdUntil backlog_get_issue",
          "parameters": [
            {
              "name": "backlog_get_issues",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "backlog_add_issue",
          "description": "Add an issue using the Backlog Issue API.",
          "parameters": [
            {
              "name": "actualHours",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "required": false,
              "type": "string"
            },
            {
              "name": "issueTypeId",
              "required": true,
              "type": "string"
            },
            {
              "name": "milestoneId",
              "required": false,
              "type": "string"
            },
            {
              "name": "estimatedHours",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "backlog_update_issue",
          "description": "Update an issue using the Backlog Issue API.",
          "parameters": [
            {
              "name": "backlog_update_issue",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "backlog_delete_issue",
          "description": "Delete an issue using the Backlog Issue API.",
          "parameters": [
            {
              "name": "backlog_delete_issue",
              "required": false,
              "type": "string"
            },
            {
              "name": "issueIdOrKey",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "backlog_get_wikis",
          "description": "Performs list wikis get using the Backlog Wiki API",
          "parameters": [
            {
              "name": "keywords",
              "required": false,
              "type": "string"
            },
            {
              "name": "projectIdOrKey",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "backlog_get_wiki",
          "description": "Performs an wiki get using the Backlog Wiki API.",
          "parameters": [
            {
              "name": "backlog_get_wikis",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "backlog_add_wiki",
          "description": "Add an wiki using the Backlog Wiki API.",
          "parameters": [
            {
              "name": "backlog_add_wiki",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "backlog_update_wiki",
          "description": "Update an wiki using the Backlog Wiki API.",
          "parameters": [
            {
              "name": "backlog_update_wiki",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "backlog_delete_wiki",
          "description": "Delete an wiki using the Backlog Wiki API.",
          "parameters": [
            {
              "name": "wikiId",
              "required": true,
              "type": "string"
            },
            {
              "name": "mailNotify",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@fleagne/backlog-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "backlogApiKey",
          "required": true,
          "description": "Your Backlog API Key"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@fleagne/backlog-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1940.@fleagne_backlog-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1706
  }
}