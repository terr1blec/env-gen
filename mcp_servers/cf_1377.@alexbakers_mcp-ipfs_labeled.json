{
  "labels": {
    "analysis": "The MCP Server specializes in managing decentralized storage and data operations on the IPFS ecosystem, particularly through the storacha.network platform. It provides tools for uploading, downloading, and managing files, blobs, and CAR (Content Addressable Archive) files within IPFS spaces. The server supports authentication via tokens, delegation management, and space administration. It leverages UCAN (Usage Control and Attestation for the Network) standards for level access and operation delegation. The primary focus is on decentralized file storage and retrieval, with additional capabilities for billling, usage tracking, and space management.",
    "reasoning": "The primary label \"File Management\" is chosen because the server's core functionality revolves around managing files, blobs, and uploads within the IPFS ecosystem. This is evident from tools like `w3_can_blob_add`, `w3_can_store_add`, and `w3_can_upload_add`. The secondary label \"Database Operations\" is included because some tools interact with CIDs (Content Identifiers) and indices, which are database-like operations. The secondary label \"Security & Authentication\" is also relevant due to tools handling tokens, delegations, and key generation. A custom label is added to highlight the specific decentralized storage context (IPFS).",
    "primary_label": "File Management",
    "secondary_labels": [
      "Database Operations",
      "Security & Authentication"
    ],
    "custom_label": "Decentralized Storage (IPFS)",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1376,
    "server_name": "IPFS Server",
    "rank_by_usage": 1377,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@alexbakers_mcp-ipfs.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@alexbakers/mcp-ipfs/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1376,
      "name": "IPFS Server",
      "author": "@alexbakers/mcp-ipfs",
      "overview": "Manage your storacha.network spaces and data effortlessly. Upload, download, and perform various tasks using the power of language models and the w3 command-line interface. Simplify your interactions with the IPFS ecosystem through seamless integration.",
      "repository_url": "https://github.com/alexbakers/mcp-ipfs",
      "homepage": "https://smithery.ai/server/@alexbakers/mcp-ipfs",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@alexbakers_mcp-ipfs.json",
      "tools_count": 35,
      "tools": [
        {
          "name": "w3_account_ls",
          "description": "Deploy Server IPFS Server Claim Server @alexbakers/mcp-ipfs Try in Playground w3_account_ls",
          "parameters": [
            {
              "name": "w3_account_ls",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_bridge_generate_tokens",
          "description": "Generates authentication tokens for using the UCAN-HTTP bridge.",
          "parameters": [
            {
              "name": "w3_bridge_generate_tokens",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_can_access_claim",
          "description": "Claims delegated capabilities for the authorized account using a provided proof.",
          "parameters": [
            {
              "name": "w3_can_access_claim",
              "required": false,
              "type": "string"
            },
            {
              "name": "proof",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_can_blob_add",
          "description": "Stores a single file as a blob directly with the service. Requires ABSOLUTE paths for file arguments.",
          "parameters": [
            {
              "name": "w3_can_blob_add",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_can_blob_ls",
          "description": "Lists blobs stored in the current space.",
          "parameters": [
            {
              "name": "json",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            },
            {
              "name": "size",
              "required": false,
              "type": "string"
            },
            {
              "name": "cursor",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_can_blob_rm",
          "description": "Removes a blob from the store by its base58btc encoded multihash.",
          "parameters": [
            {
              "name": "w3_can_blob_rm",
              "required": false,
              "type": "string"
            },
            {
              "name": "multihash",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_can_filecoin_info",
          "description": "Gets Filecoin deal information for a given Piece CID (advanced use).",
          "parameters": [
            {
              "name": "w3_can_filecoin_info",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_can_index_add",
          "description": "Registers an index CID with the service (advanced use). Please refer to storacha.network documentation for details on indices.",
          "parameters": [
            {
              "name": "w3_can_index_add",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_can_store_add",
          "description": "Stores a CAR file with the service (advanced use). This is often a prerequisite for `w3_can_upload_add`. Requires ABSOLUTE paths for file arguments.",
          "parameters": [
            {
              "name": "w3_can_store_add",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_can_store_ls",
          "description": "Lists stored CAR files (shards) in the current space (advanced use).",
          "parameters": [
            {
              "name": "w3_can_store_ls",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_can_store_rm",
          "description": "Removes a stored CAR shard by its CID (advanced use). Use with extreme caution, as this deletes the underlying data shard.",
          "parameters": [
            {
              "name": "w3_can_store_rm",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_can_upload_add",
          "description": "Manually registers an upload DAG by its root CID and shard CIDs (advanced use). This is typically used after storing CAR shards manually.",
          "parameters": []
        },
        {
          "name": "w3_can_upload_ls",
          "description": "Lists uploads registered in the current space (advanced view, shows underlying structure).",
          "parameters": [
            {
              "name": "w3_can_upload_ls",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_can_upload_rm",
          "description": "Removes an upload listing by its root CID (advanced use). Does not remove the underlying blobs/shards.",
          "parameters": [
            {
              "name": "w3_can_upload_rm",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_coupon_create",
          "description": "Attempts to create/claim a coupon using a claim code.",
          "parameters": [
            {
              "name": "w3_coupon_create",
              "required": false,
              "type": "string"
            },
            {
              "name": "claimCode",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_delegation_create",
          "description": "Tool for w3_delegation_create operation. Requires ABSOLUTE paths for file arguments.",
          "parameters": [
            {
              "name": "w3_delegation_create",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_delegation_ls",
          "description": "Tool for w3_delegation_ls operation.",
          "parameters": [
            {
              "name": "Tool",
              "required": false,
              "type": "string"
            },
            {
              "name": "for",
              "required": false,
              "type": "string"
            },
            {
              "name": "w3_delegation_ls",
              "required": false,
              "type": "string"
            },
            {
              "name": "json",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_delegation_revoke",
          "description": "Tool for w3_delegation_revoke operation. Requires ABSOLUTE paths for file arguments.",
          "parameters": [
            {
              "name": "w3_delegation_revoke",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_key_create",
          "description": "Generates and prints a new ed25519 key pair. Does not automatically use it for the agent.",
          "parameters": [
            {
              "name": "w3_key_create",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_login",
          "description": "Initiates the w3 login process using the pre-configured email (W3_LOGIN_EMAIL env var). IMPORTANT: The command expects email confirmation, so before running the `w3_login` tool, emphasize ATTENTION to the user in large letters + emoji that they MUST check email to complete authentication. If the final output includes 'Agent was authorized by', the user has already clicked the link and is successfully authorized, CONTINUE using mcp-ipfs tools. 'Too Many Requests': wait a moment before requesting it again.",
          "parameters": []
        },
        {
          "name": "w3_ls",
          "description": "Tool for w3_ls operation.",
          "parameters": [
            {
              "name": "Tool",
              "required": false,
              "type": "string"
            },
            {
              "name": "for",
              "required": false,
              "type": "string"
            },
            {
              "name": "w3_ls",
              "required": false,
              "type": "string"
            },
            {
              "name": "json",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_open",
          "description": "Tool for w3_open operation.",
          "parameters": [
            {
              "name": "Tool",
              "required": false,
              "type": "string"
            },
            {
              "name": "for",
              "required": false,
              "type": "string"
            },
            {
              "name": "w3_open",
              "required": false,
              "type": "string"
            },
            {
              "name": "cid",
              "required": true,
              "type": "string"
            },
            {
              "name": "path",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_plan_get",
          "description": "Displays the plan associated with the current or specified account.",
          "parameters": [
            {
              "name": "w3_plan_get",
              "required": false,
              "type": "string"
            },
            {
              "name": "accountId",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_proof_add",
          "description": "Tool for w3_proof_add operation. Requires ABSOLUTE paths for file arguments.",
          "parameters": [
            {
              "name": "w3_proof_add",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_proof_ls",
          "description": "Tool for w3_proof_ls operation.",
          "parameters": [
            {
              "name": "Tool",
              "required": false,
              "type": "string"
            },
            {
              "name": "for",
              "required": false,
              "type": "string"
            },
            {
              "name": "w3_proof_ls",
              "required": false,
              "type": "string"
            },
            {
              "name": "json",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_reset",
          "description": "DANGEROUS: Resets the agent state, removing all proofs and delegations but retaining the agent DID. Requires explicit confirmation argument.",
          "parameters": [
            {
              "name": "w3_reset",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_rm",
          "description": "Tool for w3_rm operation.",
          "parameters": [
            {
              "name": "cid",
              "required": true,
              "type": "string"
            },
            {
              "name": "removeShards",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_space_add",
          "description": "Tool for w3_space_add operation.",
          "parameters": [
            {
              "name": "w3_space_add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Tool",
              "required": false,
              "type": "string"
            },
            {
              "name": "for",
              "required": false,
              "type": "string"
            },
            {
              "name": "proof",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_space_create",
          "description": "Creates a new space with a user-friendly name. NOTE: `w3 space create` cannot be run via MCP due to interactive recovery key prompts. Please run this command manually in your terminal.",
          "parameters": [
            {
              "name": "w3_space_create",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_space_info",
          "description": "Tool for w3_space_info operation. NOTE: `no current space and no space given` or `{\"spaces\":[]}` first make sure you are logged in before using other tools.",
          "parameters": [
            {
              "name": "w3_space_info",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_space_ls",
          "description": "Tool for w3_space_ls operation. NOTE: `no current space and no space given` or `{\"spaces\":[]}` first make sure you are logged in before using other tools.",
          "parameters": [
            {
              "name": "w3_space_ls",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_space_provision",
          "description": "Associates a space with a customer/billing account.",
          "parameters": [
            {
              "name": "spaceDid",
              "required": true,
              "type": "string"
            },
            {
              "name": "customerId",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_space_use",
          "description": "Tool for w3_space_use operation.",
          "parameters": [
            {
              "name": "w3_space_use",
              "required": false,
              "type": "string"
            },
            {
              "name": "Tool",
              "required": false,
              "type": "string"
            },
            {
              "name": "for",
              "required": false,
              "type": "string"
            },
            {
              "name": "spaceDid",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_up",
          "description": "Generates and prints a new ed25519 key pair. Does not automatically use it for the agent. Requires ABSOLUTE paths for file arguments.",
          "parameters": [
            {
              "name": "w3_up",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "w3_usage_report",
          "description": "Displays a storage usage report for the current or specified space.",
          "parameters": [
            {
              "name": "w3_usage_report",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@alexbakers/mcp-ipfs/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@alexbakers/mcp-ipfs/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1377.@alexbakers_mcp-ipfs_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1292
  }
}