{
  "labels": {
    "analysis": "The MCP Server specializes in integrating with and retrieving data from the TabNews API. Its core functionality revolves around accessing news contents, comments, user analytics, and RSS feeds. Key tools include retrieving status, contents, comments, and various analytic metrics from TabNews, making it a tool for real-time data access and monitoring of a news platform.",
    "reasoning": "The primary focus on news content access and analysis aligns best with the \"News & Media\" category, as it provides tools for consuming and analyzing news data. The server also enables interaction with user-generated content and tracking metrics, which could fall under \"Web Search & Research\" and \"Data Analysis & Processing\" as secondary categories.",
    "primary_label": "News & Media",
    "secondary_labels": [
      "Web Search & Research",
      "Data Analysis & Processing"
    ],
    "custom_label": "TabNews API Integration",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2227,
    "server_name": "TabNews Integration",
    "rank_by_usage": 2228,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@renant_mcp-tabnews.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@renant/mcp-tabnews/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get status",
          "description": "get status from tabnews api",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get contents",
          "description": "get contents from tabnews api",
          "input_schema": {
            "type": "object",
            "properties": {
              "page": {
                "type": "number",
                "description": "The page number to get"
              },
              "per_page": {
                "type": "number",
                "description": "The number of contents per page"
              },
              "strategy": {
                "type": "string",
                "enum": [
                  "relevant",
                  "new",
                  "old"
                ],
                "description": "The strategy to get the contents"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get contents by user",
          "description": "get contents by user from tabnews api",
          "input_schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "The username to get the contents"
              },
              "page": {
                "type": "number",
                "description": "The page number to get"
              },
              "per_page": {
                "type": "number",
                "description": "The number of contents per page"
              },
              "strategy": {
                "type": "string",
                "enum": [
                  "relevant",
                  "new",
                  "old"
                ],
                "description": "The strategy to get the contents"
              }
            },
            "required": [
              "username"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get content",
          "description": "get content from tabnews api",
          "input_schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "The username to get the content"
              },
              "slug": {
                "type": "string",
                "description": "The slug to get the content"
              }
            },
            "required": [
              "username",
              "slug"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get comments",
          "description": "get comments from a content on tabnews api",
          "input_schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "The username to get the content"
              },
              "slug": {
                "type": "string",
                "description": "The slug to get the content"
              }
            },
            "required": [
              "username",
              "slug"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get analytics user created",
          "description": "To get how many users were created (per day) in tabnews",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get analytics root content published",
          "description": "To get how many posts were made (per day) in tabnews",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get analytics child content published",
          "description": "To get how many comments were made (per day) in tabnews",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get rss feed",
          "description": "To get the rss feed from tabnews",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 9,
      "tool_names": [
        "get status",
        "get contents",
        "get contents by user",
        "get content",
        "get comments",
        "get analytics user created",
        "get analytics root content published",
        "get analytics child content published",
        "get rss feed"
      ]
    },
    "server_info_crawled": {
      "id": 2227,
      "name": "TabNews Integration",
      "author": "@renant/mcp-tabnews",
      "overview": "Access and interact with TabNews API data seamlessly. Enhance your applications with real-time news updates and insights from TabNews. Simplify your development process with a structured integration that leverages the Model Context Protocol.",
      "repository_url": "https://github.com/renant/mcp-tabnews",
      "homepage": "https://smithery.ai/server/@renant/mcp-tabnews",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@renant_mcp-tabnews.json",
      "tools_count": 9,
      "tools": [
        {
          "name": "get status",
          "description": "get status from tabnews api",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get contents",
          "description": "get contents from tabnews api",
          "input_schema": {
            "type": "object",
            "properties": {
              "page": {
                "type": "number",
                "description": "The page number to get"
              },
              "per_page": {
                "type": "number",
                "description": "The number of contents per page"
              },
              "strategy": {
                "type": "string",
                "enum": [
                  "relevant",
                  "new",
                  "old"
                ],
                "description": "The strategy to get the contents"
              }
            },
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get contents by user",
          "description": "get contents by user from tabnews api",
          "input_schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "The username to get the contents"
              },
              "page": {
                "type": "number",
                "description": "The page number to get"
              },
              "per_page": {
                "type": "number",
                "description": "The number of contents per page"
              },
              "strategy": {
                "type": "string",
                "enum": [
                  "relevant",
                  "new",
                  "old"
                ],
                "description": "The strategy to get the contents"
              }
            },
            "required": [
              "username"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get content",
          "description": "get content from tabnews api",
          "input_schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "The username to get the content"
              },
              "slug": {
                "type": "string",
                "description": "The slug to get the content"
              }
            },
            "required": [
              "username",
              "slug"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get comments",
          "description": "get comments from a content on tabnews api",
          "input_schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "The username to get the content"
              },
              "slug": {
                "type": "string",
                "description": "The slug to get the content"
              }
            },
            "required": [
              "username",
              "slug"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get analytics user created",
          "description": "To get how many users were created (per day) in tabnews",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get analytics root content published",
          "description": "To get how many posts were made (per day) in tabnews",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get analytics child content published",
          "description": "To get how many comments were made (per day) in tabnews",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "get rss feed",
          "description": "To get the rss feed from tabnews",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@renant/mcp-tabnews/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@renant/mcp-tabnews/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "2228.@renant_mcp-tabnews_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1921
  }
}