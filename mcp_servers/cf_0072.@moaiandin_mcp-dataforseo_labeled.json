{
  "labels": {
    "analysis": "The MCP DataForSEO Server provides a standardized interface for accessing SEO data through DataForSEO APIs. Its core functionality revolves around retrieving real-time search engine results, keyword research metrics, on-page SEO performance, and domain analytics. The server offers modular tools tailored for AI agents and automation, particularly focused on enhancing SEO capabilities. Key tools include SERP analysis, keyword research, content parsing, and on-page optimization insights.",
    "reasoning": "The primary functionality of the server is closely tied to SEO and search engine analytics, making \"Web Search & Research\" the most fitting primary label. Secondary relevance includes \"Data Analysis & Processing\" due to the server's capabilities in handling SEO data and analytics, as well as \"API Integration\" since it serves as a bridge to external DataForSEO APIs. No custom label is needed as the predefined categories adequately cover its functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Data Analysis & Processing",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 71,
    "server_name": "DataForSEO MCP Server",
    "rank_by_usage": 72,
    "usage_count": "1,216",
    "original_file": "../crawler/smithery/@moaiandin_mcp-dataforseo.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@moaiandin/mcp-dataforseo/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 71,
      "name": "DataForSEO MCP Server",
      "author": "@moaiandin/mcp-dataforseo",
      "overview": "Enable seamless access to comprehensive SEO data by integrating with DataForSEO APIs through a standardized interface. Retrieve real-time search engine results, keyword research metrics, on-page SEO performance, backlinks, business data, and domain analytics effortlessly. Expand your SEO capabilities with modular and extensible tools tailored for AI agents and automation.",
      "repository_url": "https://github.com/moaiandin/mcp-dataforseo",
      "homepage": "https://smithery.ai/server/@moaiandin/mcp-dataforseo",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "1,216",
      "success_rate": "96.66%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@moaiandin_mcp-dataforseo.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "serp-organic-live-advanced",
          "description": "Deploy Server DataForSEO MCP Server @moaiandin/mcp-dataforseo Try in Playground serp-organic-live-advanced",
          "parameters": []
        },
        {
          "name": "serp-organic-locations-list",
          "description": "Utility tool for serp-organic-live-advanced to get list of availible locations",
          "parameters": []
        },
        {
          "name": "keywords-google-ads-search-volume",
          "description": "Get search volume data for keywords from Google Ads",
          "parameters": []
        },
        {
          "name": "onpage-content-parsing",
          "description": "This endpoint allows parsing the content on any page you specify and will return the structured content of the target page, including link URLs, anchors, headings, and textual content.",
          "parameters": []
        },
        {
          "name": "instant_pages",
          "description": "Using this function you will get page-specific data with detailed information on how well a particular page is optimized for organic search",
          "parameters": [
            {
              "name": "instant_pages",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@moaiandin/mcp-dataforseo/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@moaiandin/mcp-dataforseo/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0072.@moaiandin_mcp-dataforseo_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 71
  }
}