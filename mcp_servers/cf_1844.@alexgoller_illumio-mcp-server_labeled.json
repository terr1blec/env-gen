{
  "labels": {
    "analysis": "The Illumio MCP Server is designed to interact with the Illumio Policy Compute Engine (PCE) through conversational AI, allowing users to manage workloads, labels, and analyze traffic flows programmatically. The available tools include a comprehensive set of operations for creating, updating, deleting, and retrieving workloads, labels, rulesets, IP lists, and traffic flow data, all aimed at enhancing security posture and streamlining operations. Key functionality includes centralized control of security policies, real-time traffic analysis, and automated management of network security components.",
    "reasoning": "The primary functionality revolves around security and workload management within a network environment, specifically tailored for Illumio's security product suite. This falls under the broader category of Security & Authentication, given the focus on managing security labels, traffic flows, and network policies. Additionally, the tools for managing workloads and labels align with Operating System functionality, while the traffic analysis aspects touch on Data Analysis & Processing.",
    "primary_label": "Security & Authentication",
    "secondary_labels": [
      "Operating System",
      "Data Analysis & Processing"
    ],
    "custom_label": "Network Security Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1843,
    "server_name": "Illumio MCP Server",
    "rank_by_usage": 1844,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@alexgoller_illumio-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@alexgoller/illumio-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 1843,
      "name": "Illumio MCP Server",
      "author": "@alexgoller/illumio-mcp-server",
      "overview": "Interact with your Illumio Policy Compute Engine using conversational AI. Manage workloads, labels, and analyze traffic flows effortlessly to enhance your security posture. Streamline your operations with programmatic access to critical workload management and security analysis features.",
      "repository_url": "https://github.com/alexgoller/illumio-mcp-server",
      "homepage": "https://smithery.ai/server/@alexgoller/illumio-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@alexgoller_illumio-mcp-server.json",
      "tools_count": 23,
      "tools": [
        {
          "name": "add-note",
          "description": "Deploy Server Illumio MCP Server Claim Server @alexgoller/illumio-mcp-server Try in Playground",
          "parameters": [
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "a",
              "required": false,
              "type": "string"
            },
            {
              "name": "new",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "content",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-workloads",
          "description": "Get workloads from the PCE",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "update-workload",
          "description": "Update a workload in the PCE",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "labels",
              "required": false,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "ip_addresses",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-labels",
          "description": "Get all labels from PCE",
          "parameters": [
            {
              "name": "name",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create-workload",
          "description": "Create a Illumio Core unmanaged workload in the PCE",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "labels",
              "required": false,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "ip_addresses",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "create-label",
          "description": "Create a label of a specific type and the value in the PCE",
          "parameters": [
            {
              "name": "key",
              "required": true,
              "type": "string"
            },
            {
              "name": "value",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete-label",
          "description": "Delete a label in the PCE",
          "parameters": [
            {
              "name": "key",
              "required": true,
              "type": "string"
            },
            {
              "name": "value",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete-workload",
          "description": "Delete a workload from the PCE",
          "parameters": [
            {
              "name": "name",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-traffic-flows",
          "description": "Get traffic flows from the PCE with comprehensive filtering options",
          "parameters": []
        },
        {
          "name": "get-traffic-flows-summary",
          "description": "Get traffic flows from the PCE in a summarized text format, this is a text format that is not a dataframe, it also is not json, the form is: 'From <source> to <destination> on <port> <proto>: <number of connections>'",
          "parameters": []
        },
        {
          "name": "check-pce-connection",
          "description": "Are my credentials and the connection to the PCE working?",
          "parameters": []
        },
        {
          "name": "get-rulesets",
          "description": "Get rulesets from the PCE",
          "parameters": [
            {
              "name": "name",
              "required": false,
              "type": "string"
            },
            {
              "name": "enabled",
              "required": false,
              "type": "string"
            },
            {
              "name": "True",
              "required": false,
              "type": "string"
            },
            {
              "name": "False",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "delete-ruleset",
          "description": "Delete a ruleset from the PCE",
          "parameters": [
            {
              "name": "href",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-iplists",
          "description": "Get IP lists from the PCE",
          "parameters": [
            {
              "name": "name",
              "required": false,
              "type": "string"
            },
            {
              "name": "ip_ranges",
              "required": false,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get-events",
          "description": "Get events from the PCE",
          "parameters": [
            {
              "name": "status",
              "required": false,
              "type": "string"
            },
            {
              "name": "severity",
              "required": false,
              "type": "string"
            },
            {
              "name": "event_type",
              "required": false,
              "type": "string"
            },
            {
              "name": "max_results",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create-ruleset",
          "description": "Create a ruleset in the PCE with support for ring-fencing patterns",
          "parameters": []
        },
        {
          "name": "get-services",
          "description": "Get services from the PCE with optional filtering",
          "parameters": []
        },
        {
          "name": "update-label",
          "description": "Update an existing label in the PCE",
          "parameters": [
            {
              "name": "key",
              "required": false,
              "type": "string"
            },
            {
              "name": "href",
              "required": false,
              "type": "string"
            },
            {
              "name": "value",
              "required": false,
              "type": "string"
            },
            {
              "name": "new_value",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "create-iplist",
          "description": "Create a new IP List in the PCE",
          "parameters": [
            {
              "name": "fqdn",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "required": true,
              "type": "string"
            },
            {
              "name": "ip_ranges",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update-iplist",
          "description": "Update an existing IP List in the PCE",
          "parameters": []
        },
        {
          "name": "delete-iplist",
          "description": "Delete an IP List from the PCE",
          "parameters": [
            {
              "name": "href",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "update-ruleset",
          "description": "Update an existing ruleset in the PCE",
          "parameters": []
        },
        {
          "name": "delete-ruleset",
          "description": "Delete a ruleset from the PCE",
          "parameters": [
            {
              "name": "href",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@alexgoller/illumio-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "apiKey",
          "required": true,
          "description": "The API key credential for the Illumio PCE."
        },
        {
          "name": "apiSecret",
          "required": true,
          "description": "The API secret credential for the Illumio PCE."
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@alexgoller/illumio-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_1844.@alexgoller_illumio-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1637
  }
}