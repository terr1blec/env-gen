{
  "labels": {
    "analysis": "The CData Connect Cloud MCP Server enables AI agents to interact with cloud-connected data sources through SQL queries, metadata inspection, and stored procedures. It bridges AI workflows with traditional cloud databases, facilitating data-driven decision-making. The primary functionality revolves around querying and managing cloud data, which suggests strong ties to database operations, API integration, and cloud services.",
    "reasoning": "The primary functionality aligns with Database Operations due to SQL querying capabilities and metadata introspection, while the cloud integration aspect justifies Cloud Services. API Integration is also relevant as the server facilitates integration with AI workflows, enabling seamless data exchange.",
    "primary_label": "Database Operations",
    "secondary_labels": [
      "Cloud Services",
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 298,
    "server_name": "CData Connect Cloud MCP Server",
    "rank_by_usage": 299,
    "usage_count": "111",
    "original_file": "../crawler/smithery/@CDataSoftware_connectcloud-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@CDataSoftware/connectcloud-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 298,
      "name": "CData Connect Cloud MCP Server",
      "author": "@CDataSoftware/connectcloud-mcp-server",
      "overview": "Enable AI agents to query and manage cloud-connected data sources using SQL, metadata introspection, and stored procedures. Integrate with AI workflows to enhance data-driven decision making.",
      "repository_url": "https://github.com/CDataSoftware/connectcloud-mcp-server",
      "homepage": "https://smithery.ai/server/@CDataSoftware/connectcloud-mcp-server",
      "remote_or_local": "Remote",
      "license": "Not specified",
      "usage_count": "111",
      "success_rate": "99.24%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@CDataSoftware_connectcloud-mcp-server.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "Optional Settings",
          "description": "Access and manage servers by signing in.",
          "parameters": []
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@CDataSoftware/connectcloud-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@CDataSoftware/connectcloud-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0299.@CDataSoftware_connectcloud-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 295
  }
}