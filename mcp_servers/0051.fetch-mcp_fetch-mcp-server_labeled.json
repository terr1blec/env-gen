{
  "labels": {
    "analysis": "The MCP Server is primarily designed for fetching web content in various formats, enabling users to retrieve data from websites and APIs. Its tools focus on extracting content in HTML, Markdown, plain text, and JSON, making it useful for web scraping, content conversion, and data aggregation. This suggests its core functionality revolves around retrieving and transforming web-based data.",
    "reasoning": "The primary label is Web Search & Research as the server enables gathering information from the web in multiple formats. Secondary labels include Browser Automation and Data Analysis & Processing due to its capability to fetch and transform web content. No custom label is needed as the predefined categories adequately cover its functionality.",
    "primary_label": "Web Search & Research",
    "secondary_labels": [
      "Browser Automation",
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 50,
    "server_name": "Fetch MCP Server",
    "rank_by_usage": 51,
    "usage_count": "2,083",
    "original_file": "../crawler/smithery/fetch-mcp_fetch-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751937975,
    "remote_server_response": {
      "url": "https://server.smithery.ai/fetch-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "fetch_html",
          "description": "Fetch a website and return the content as HTML",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL of the website to fetch"
              },
              "headers": {
                "type": "object",
                "description": "Optional headers to include in the request"
              },
              "max_length": {
                "type": "number",
                "description": "Maximum number of characters to return (default: 5000)"
              },
              "start_index": {
                "type": "number",
                "description": "Start content from this character index (default: 0)"
              }
            },
            "required": [
              "url"
            ]
          },
          "annotations": null
        },
        {
          "name": "fetch_markdown",
          "description": "Fetch a website and return the content as Markdown",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL of the website to fetch"
              },
              "headers": {
                "type": "object",
                "description": "Optional headers to include in the request"
              },
              "max_length": {
                "type": "number",
                "description": "Maximum number of characters to return (default: 5000)"
              },
              "start_index": {
                "type": "number",
                "description": "Start content from this character index (default: 0)"
              }
            },
            "required": [
              "url"
            ]
          },
          "annotations": null
        },
        {
          "name": "fetch_txt",
          "description": "Fetch a website, return the content as plain text (no HTML)",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL of the website to fetch"
              },
              "headers": {
                "type": "object",
                "description": "Optional headers to include in the request"
              },
              "max_length": {
                "type": "number",
                "description": "Maximum number of characters to return (default: 5000)"
              },
              "start_index": {
                "type": "number",
                "description": "Start content from this character index (default: 0)"
              }
            },
            "required": [
              "url"
            ]
          },
          "annotations": null
        },
        {
          "name": "fetch_json",
          "description": "Fetch a JSON file from a URL",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL of the JSON to fetch"
              },
              "headers": {
                "type": "object",
                "description": "Optional headers to include in the request"
              },
              "max_length": {
                "type": "number",
                "description": "Maximum number of characters to return (default: 5000)"
              },
              "start_index": {
                "type": "number",
                "description": "Start content from this character index (default: 0)"
              }
            },
            "required": [
              "url"
            ]
          },
          "annotations": null
        }
      ],
      "tool_count": 4,
      "tool_names": [
        "fetch_html",
        "fetch_markdown",
        "fetch_txt",
        "fetch_json"
      ]
    },
    "server_info_crawled": {
      "id": 50,
      "name": "Fetch MCP Server",
      "author": "fetch-mcp",
      "overview": "Fetch web content in various formats such as HTML, JSON, plain text, and Markdown.",
      "repository_url": "https://github.com/zcaceres/fetch-mcp",
      "homepage": "https://smithery.ai/server/fetch-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "2,083",
      "success_rate": "99.35%",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/fetch-mcp_fetch-mcp-server.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "fetch_html",
          "description": "Fetch a website and return the content as HTML",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL of the website to fetch"
              },
              "headers": {
                "type": "object",
                "description": "Optional headers to include in the request"
              },
              "max_length": {
                "type": "number",
                "description": "Maximum number of characters to return (default: 5000)"
              },
              "start_index": {
                "type": "number",
                "description": "Start content from this character index (default: 0)"
              }
            },
            "required": [
              "url"
            ]
          },
          "annotations": null
        },
        {
          "name": "fetch_markdown",
          "description": "Fetch a website and return the content as Markdown",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL of the website to fetch"
              },
              "headers": {
                "type": "object",
                "description": "Optional headers to include in the request"
              },
              "max_length": {
                "type": "number",
                "description": "Maximum number of characters to return (default: 5000)"
              },
              "start_index": {
                "type": "number",
                "description": "Start content from this character index (default: 0)"
              }
            },
            "required": [
              "url"
            ]
          },
          "annotations": null
        },
        {
          "name": "fetch_txt",
          "description": "Fetch a website, return the content as plain text (no HTML)",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL of the website to fetch"
              },
              "headers": {
                "type": "object",
                "description": "Optional headers to include in the request"
              },
              "max_length": {
                "type": "number",
                "description": "Maximum number of characters to return (default: 5000)"
              },
              "start_index": {
                "type": "number",
                "description": "Start content from this character index (default: 0)"
              }
            },
            "required": [
              "url"
            ]
          },
          "annotations": null
        },
        {
          "name": "fetch_json",
          "description": "Fetch a JSON file from a URL",
          "input_schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL of the JSON to fetch"
              },
              "headers": {
                "type": "object",
                "description": "Optional headers to include in the request"
              },
              "max_length": {
                "type": "number",
                "description": "Maximum number of characters to return (default: 5000)"
              },
              "start_index": {
                "type": "number",
                "description": "Start content from this character index (default: 0)"
              }
            },
            "required": [
              "url"
            ]
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/fetch-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/fetch-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0051.fetch-mcp_fetch-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 50
  }
}