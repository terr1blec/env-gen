{
  "labels": {
    "analysis": "The MindBridge MCP Server is designed to unify and enhance LLM (Large Language Model) workflows by allowing seamless integration and switching between multiple LLM providers. This facilitates complex reasoning tasks without vendor lock-in, making AI orchestration more flexible and efficient. The available tools (getSecondOpinion, listProviders, listReasoningModels) focus on integrating and managing various LLM providers and their capabilities.",
    "reasoning": "The primary functionality of managing and orchestrating multiple LLM providers is best represented by the \"AI/ML Tools\" label, as this involves interaction with machine learning models. The secondary label \"API Integration\" is relevant due to the server's role in connecting to various LLM providers through APIs. No custom label is needed as the predefined labels sufficiently cover the server's functionality.",
    "primary_label": "AI/ML Tools",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1995,
    "server_name": "MindBridge",
    "rank_by_usage": 1996,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@pinkpixel-dev_mindbridge-mcp.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@pinkpixel-dev/mindbridge-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "getSecondOpinion",
          "description": "Get responses from various LLM providers",
          "input_schema": {
            "type": "object",
            "properties": {
              "prompt": {
                "type": "string",
                "minLength": 1
              },
              "provider": {
                "type": "string",
                "enum": [
                  "openai",
                  "anthropic",
                  "deepseek",
                  "google",
                  "openrouter",
                  "ollama",
                  "openaiCompatible"
                ]
              },
              "model": {
                "type": "string",
                "minLength": 1
              },
              "systemPrompt": {
                "anyOf": [
                  {
                    "anyOf": [
                      {
                        "not": {}
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "temperature": {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              },
              "maxTokens": {
                "type": "number",
                "exclusiveMinimum": 0,
                "default": 1024
              },
              "reasoning_effort": {
                "anyOf": [
                  {
                    "anyOf": [
                      {
                        "not": {}
                      },
                      {
                        "type": "string",
                        "enum": [
                          "low",
                          "medium",
                          "high"
                        ]
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "top_p": {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              },
              "top_k": {
                "type": "number",
                "exclusiveMinimum": 0
              },
              "stop_sequences": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "stream": {
                "type": "boolean"
              },
              "frequency_penalty": {
                "type": "number",
                "minimum": -2,
                "maximum": 2
              },
              "presence_penalty": {
                "type": "number",
                "minimum": -2,
                "maximum": 2
              }
            },
            "required": [
              "prompt",
              "provider",
              "model"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "listProviders",
          "description": "List all configured LLM providers and their available models",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "listReasoningModels",
          "description": "List all available models that support reasoning capabilities",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 3,
      "tool_names": [
        "getSecondOpinion",
        "listProviders",
        "listReasoningModels"
      ]
    },
    "server_info_crawled": {
      "id": 1995,
      "name": "MindBridge",
      "author": "@pinkpixel-dev/mindbridge-mcp",
      "overview": "Unify and supercharge your LLM workflows by connecting your applications to any model. Easily switch between various LLM providers and leverage their unique strengths for complex reasoning tasks. Experience seamless integration without vendor lock-in, making your AI orchestration smarter and more efficient.",
      "repository_url": "https://github.com/pinkpixel-dev/mindbridge-mcp",
      "homepage": "https://smithery.ai/server/@pinkpixel-dev/mindbridge-mcp",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@pinkpixel-dev_mindbridge-mcp.json",
      "tools_count": 3,
      "tools": [
        {
          "name": "getSecondOpinion",
          "description": "Get responses from various LLM providers",
          "input_schema": {
            "type": "object",
            "properties": {
              "prompt": {
                "type": "string",
                "minLength": 1
              },
              "provider": {
                "type": "string",
                "enum": [
                  "openai",
                  "anthropic",
                  "deepseek",
                  "google",
                  "openrouter",
                  "ollama",
                  "openaiCompatible"
                ]
              },
              "model": {
                "type": "string",
                "minLength": 1
              },
              "systemPrompt": {
                "anyOf": [
                  {
                    "anyOf": [
                      {
                        "not": {}
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "temperature": {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              },
              "maxTokens": {
                "type": "number",
                "exclusiveMinimum": 0,
                "default": 1024
              },
              "reasoning_effort": {
                "anyOf": [
                  {
                    "anyOf": [
                      {
                        "not": {}
                      },
                      {
                        "type": "string",
                        "enum": [
                          "low",
                          "medium",
                          "high"
                        ]
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "top_p": {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              },
              "top_k": {
                "type": "number",
                "exclusiveMinimum": 0
              },
              "stop_sequences": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "stream": {
                "type": "boolean"
              },
              "frequency_penalty": {
                "type": "number",
                "minimum": -2,
                "maximum": 2
              },
              "presence_penalty": {
                "type": "number",
                "minimum": -2,
                "maximum": 2
              }
            },
            "required": [
              "prompt",
              "provider",
              "model"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "listProviders",
          "description": "List all configured LLM providers and their available models",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "listReasoningModels",
          "description": "List all available models that support reasoning capabilities",
          "input_schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@pinkpixel-dev/mindbridge-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@pinkpixel-dev/mindbridge-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1996.@pinkpixel-dev_mindbridge-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1741
  }
}