{
  "labels": {
    "analysis": "The Yandex Tracker MCP server is designed to enable AI assistants to interact with and manage Yandex Tracker (a project management service) by providing tools for accessing issues, queues, users, tags, versions, fields, comments, worklogs, and other related data. The server's core functionality revolves around retrieving, searching, and managing Yandex Tracker resources securely, with optional caching for performance optimization. It supports API integration to facilitate seamless interaction with various AI clients through stdio or SSE transports.",
    "reasoning": "The primary label \"API Integration\" was chosen because the server acts as an intermediary to connect AI clients with the Yandex Tracker system, translating between them via tools that query and manipulate Tracker data. The secondary label \"Database Operations\" was selected due to the server's extensive tools for querying and retrieving structured data from Yandex Tracker, akin to database operations. The custom label \"Yandex Tracker Management\" was added to specifically describe the server's unique focus on managing Yandex Tracker resources.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Database Operations"
    ],
    "custom_label": "Yandex Tracker Management",
    "is_connected": false,
    "is_remote_tool_valid": false,
    "featured_server": false
  },
  "metadata": {
    "server_id": 790,
    "server_name": "Yandex Tracker MCP",
    "rank_by_usage": 791,
    "usage_count": "7",
    "original_file": "../crawler/smithery/@aikts_yandex-tracker-mcp.json",
    "mode": "smithery",
    "timestamp": 1751941824,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@aikts/yandex-tracker-mcp/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": false,
      "error": "unhandled errors in a TaskGroup (1 sub-exception)",
      "tools": [],
      "tool_count": 0,
      "tool_names": []
    },
    "server_info_crawled": {
      "id": 790,
      "name": "Yandex Tracker MCP",
      "author": "@aikts/yandex-tracker-mcp",
      "overview": "Enable AI assistants to securely access and manage Yandex Tracker issues, queues, users, and related data through a comprehensive MCP server. Perform advanced searches, retrieve detailed issue information, and manage queues with optional caching for improved performance. Integrate seamlessly with various AI clients using stdio or SSE transports.",
      "repository_url": "https://github.com/aikts/yandex-tracker-mcp",
      "homepage": "https://smithery.ai/server/@aikts/yandex-tracker-mcp",
      "remote_or_local": "Remote",
      "license": "Apache-2.0",
      "usage_count": "7",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@aikts_yandex-tracker-mcp.json",
      "tools_count": 20,
      "tools": [
        {
          "name": "queues_get_all",
          "description": "Deploy Server Yandex Tracker MCP @aikts/yandex-tracker-mcp Try in Playground queues_get_all",
          "parameters": [
            {
              "name": "queues_get_all",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "queue_get_local_fields",
          "description": "Get local fields for a specific Yandex Tracker queue (queue-specific custom fields)",
          "parameters": [
            {
              "name": "queue_get_local_fields",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "queue_get_tags",
          "description": "Get all tags for a specific Yandex Tracker queue",
          "parameters": [
            {
              "name": "queue_get_tags",
              "required": false,
              "type": "string"
            },
            {
              "name": "queue_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "queue_get_versions",
          "description": "Get all versions for a specific Yandex Tracker queue",
          "parameters": [
            {
              "name": "queue_get_versions",
              "required": false,
              "type": "string"
            },
            {
              "name": "queue_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_global_fields",
          "description": "Get all global fields available in Yandex Tracker that can be used in issues",
          "parameters": [
            {
              "name": "get_global_fields",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_statuses",
          "description": "Get all statuses available in Yandex Tracker that can be used in issues",
          "parameters": [
            {
              "name": "get_statuses",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_issue_types",
          "description": "Get all issue types available in Yandex Tracker that can be used when creating or updating issues",
          "parameters": [
            {
              "name": "get_issue_types",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "get_priorities",
          "description": "Get all priorities available in Yandex Tracker that can be used in issues",
          "parameters": [
            {
              "name": "get_priorities",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "issue_get_url",
          "description": "Get a Yandex Tracker issue url by its id",
          "parameters": [
            {
              "name": "issue_get_url",
              "required": false,
              "type": "string"
            },
            {
              "name": "issue_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "issue_get",
          "description": "Get a Yandex Tracker issue by its id",
          "parameters": [
            {
              "name": "issue_get_url",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "issue_get_comments",
          "description": "Get comments of a Yandex Tracker issue by its id",
          "parameters": [
            {
              "name": "issue_get_comments",
              "required": false,
              "type": "string"
            },
            {
              "name": "issue_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "issue_get_links",
          "description": "Get a Yandex Tracker issue related links to other issues by its id",
          "parameters": [
            {
              "name": "issue_get_links",
              "required": false,
              "type": "string"
            },
            {
              "name": "issue_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "issues_find",
          "description": "Find Yandex Tracker issues by queue and/or created date",
          "parameters": [
            {
              "name": "issues_find",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "issues_count",
          "description": "Get the count of Yandex Tracker issues matching a query",
          "parameters": [
            {
              "name": "issues_count",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "issue_get_worklogs",
          "description": "Get worklogs of a Yandex Tracker issue by its id",
          "parameters": [
            {
              "name": "issue_ids",
              "required": true,
              "type": "string"
            },
            {
              "name": "Add",
              "required": false,
              "type": "string"
            },
            {
              "name": "Item",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "issue_get_attachments",
          "description": "Get attachments of a Yandex Tracker issue by its id",
          "parameters": [
            {
              "name": "issue_get_attachments",
              "required": false,
              "type": "string"
            },
            {
              "name": "issue_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "issue_get_checklist",
          "description": "Get checklist items of a Yandex Tracker issue by its id",
          "parameters": [
            {
              "name": "issue_get_checklist",
              "required": false,
              "type": "string"
            },
            {
              "name": "issue_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "users_get_all",
          "description": "Get information about user accounts registered in the organization",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "type": "string"
            },
            {
              "name": "per_page",
              "required": false,
              "type": "string"
            }
          ]
        },
        {
          "name": "user_get",
          "description": "Get information about a specific user by login or UID",
          "parameters": [
            {
              "name": "user_get",
              "required": false,
              "type": "string"
            },
            {
              "name": "user_id",
              "required": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "user_get_current",
          "description": "Get information about the current authenticated user",
          "parameters": [
            {
              "name": "user_get_current",
              "required": false,
              "type": "string"
            }
          ]
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@aikts/yandex-tracker-mcp/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [
        {
          "name": "trackerToken",
          "required": true,
          "description": "Yandex Tracker token"
        }
      ],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@aikts/yandex-tracker-mcp/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "cf_0791.@aikts_yandex-tracker-mcp_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 773
  }
}