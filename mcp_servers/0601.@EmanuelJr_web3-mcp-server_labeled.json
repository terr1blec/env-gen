{
  "labels": {
    "analysis": "The MCP Server is designed to facilitate interaction with Web3 and blockchain networks, particularly EVM-compatible chains. Its core functionality revolves around querying blockchain data such as token balances, contract states, and token prices. The available tools suggest a focus on reading data from the blockchain rather than writing or executing transactions, making it ideal for applications that need to fetch and display blockchain-related information in real-time.",
    "reasoning": "The primary label \"Cryptocurrency & Blockchain\" is chosen because the server's tools directly interface with blockchain networks and enable functionalities like fetching token balances and contract data. Secondary labels like \"Data Analysis & Processing\" are included because the server processes and returns blockchain data, which can be useful for analytics. No custom label is needed as the predefined categories adequately cover the server's capabilities.",
    "primary_label": "Cryptocurrency & Blockchain",
    "secondary_labels": [
      "Data Analysis & Processing"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 600,
    "server_name": "Web3 MCP Server",
    "rank_by_usage": 601,
    "usage_count": "17",
    "original_file": "../crawler/smithery/@EmanuelJr_web3-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@EmanuelJr/web3-mcp-server/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "fetch_balance",
          "description": "Get the balance of a wallet",
          "input_schema": {
            "type": "object",
            "properties": {
              "walletAddress": {
                "type": "string",
                "pattern": "^0x"
              },
              "chainId": {
                "type": "number"
              }
            },
            "required": [
              "walletAddress",
              "chainId"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "read_contract",
          "description": "Read a value from a contract",
          "input_schema": {
            "type": "object",
            "properties": {
              "contractAddress": {
                "type": "string",
                "pattern": "^0x"
              },
              "chainId": {
                "type": "number"
              },
              "abi": {
                "type": "string"
              },
              "functionName": {
                "type": "string"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "contractAddress",
              "chainId",
              "abi",
              "functionName",
              "args"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "fetch_token_balance",
          "description": "Get the balance of a token",
          "input_schema": {
            "type": "object",
            "properties": {
              "tokenAddress": {
                "type": "string",
                "pattern": "^0x"
              },
              "chainId": {
                "type": "number"
              },
              "walletAddress": {
                "type": "string",
                "pattern": "^0x"
              }
            },
            "required": [
              "tokenAddress",
              "chainId",
              "walletAddress"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "fetch_quote",
          "description": "Get the price of a token",
          "input_schema": {
            "type": "object",
            "properties": {
              "slug": {
                "type": "string"
              }
            },
            "required": [
              "slug"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "tool_count": 4,
      "tool_names": [
        "fetch_balance",
        "read_contract",
        "fetch_token_balance",
        "fetch_quote"
      ]
    },
    "server_info_crawled": {
      "id": 600,
      "name": "Web3 MCP Server",
      "author": "@EmanuelJr/web3-mcp-server",
      "overview": "Enable seamless interaction with blockchain networks through the Model Context Protocol. Fetch token balances and call smart contract functions across multiple EVM-compatible chains effortlessly. Enhance your Web3 applications with powerful blockchain capabilities.",
      "repository_url": "https://github.com/EmanuelJr/web3-mcp-server",
      "homepage": "https://smithery.ai/server/@EmanuelJr/web3-mcp-server",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "17",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@EmanuelJr_web3-mcp-server.json",
      "tools_count": 4,
      "tools": [
        {
          "name": "fetch_balance",
          "description": "Get the balance of a wallet",
          "input_schema": {
            "type": "object",
            "properties": {
              "walletAddress": {
                "type": "string",
                "pattern": "^0x"
              },
              "chainId": {
                "type": "number"
              }
            },
            "required": [
              "walletAddress",
              "chainId"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "read_contract",
          "description": "Read a value from a contract",
          "input_schema": {
            "type": "object",
            "properties": {
              "contractAddress": {
                "type": "string",
                "pattern": "^0x"
              },
              "chainId": {
                "type": "number"
              },
              "abi": {
                "type": "string"
              },
              "functionName": {
                "type": "string"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "contractAddress",
              "chainId",
              "abi",
              "functionName",
              "args"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "fetch_token_balance",
          "description": "Get the balance of a token",
          "input_schema": {
            "type": "object",
            "properties": {
              "tokenAddress": {
                "type": "string",
                "pattern": "^0x"
              },
              "chainId": {
                "type": "number"
              },
              "walletAddress": {
                "type": "string",
                "pattern": "^0x"
              }
            },
            "required": [
              "tokenAddress",
              "chainId",
              "walletAddress"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        },
        {
          "name": "fetch_quote",
          "description": "Get the price of a token",
          "input_schema": {
            "type": "object",
            "properties": {
              "slug": {
                "type": "string"
              }
            },
            "required": [
              "slug"
            ],
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@EmanuelJr/web3-mcp-server/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@EmanuelJr/web3-mcp-server/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "0601.@EmanuelJr_web3-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 587
  }
}