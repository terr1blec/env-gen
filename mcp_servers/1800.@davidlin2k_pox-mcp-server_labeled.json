{
  "labels": {
    "analysis": "The MCP Server is designed for managing and controlling software-defined networks (SDN) using OpenFlow devices. It provides tools for network analysis and automation through a Python-based interface, making it suitable for educational and research purposes. The available tools focus on querying switch information, managing flow tables, and adding insights to network configurations.",
    "reasoning": "The primary label \"Network Management\" is chosen because the server's core functionality revolves around managing and automating OpenFlow switches and network flows. \"Operating System\" is added as a secondary label since the server interacts with network devices at a low level, similar to system management tools. No custom label is needed as the predefined categories sufficiently describe the server's functionality.",
    "primary_label": "Others",
    "secondary_labels": [
      "Operating System"
    ],
    "custom_label": "Network Management",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1799,
    "server_name": "POX MCP Server",
    "rank_by_usage": 1800,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@davidlin2k_pox-mcp-server.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@davidlin2k/pox-mcp-server/mcp?config=eyJsb2dnaW5nTGV2ZWwiOiAiSU5GTyIsICJwb3hTZXJ2ZXJVcmwiOiAiaHR0cDovL2xvY2FsaG9zdDo4MDAwIn0=&api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_switches",
          "description": "Get a list of all connected OpenFlow switches",
          "input_schema": {
            "properties": {},
            "title": "get_switchesArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_switch_desc",
          "description": "Get detailed information about a specific switch",
          "input_schema": {
            "properties": {
              "dpid": {
                "title": "Dpid",
                "type": "string"
              }
            },
            "required": [
              "dpid"
            ],
            "title": "get_switch_descArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_flow_stats",
          "description": "Get flow statistics from a switch",
          "input_schema": {
            "properties": {
              "dpid": {
                "title": "Dpid",
                "type": "string"
              },
              "match": {
                "additionalProperties": true,
                "default": null,
                "title": "Match",
                "type": "object"
              },
              "table_id": {
                "default": null,
                "title": "Table Id",
                "type": "string"
              },
              "out_port": {
                "default": null,
                "title": "Out Port",
                "type": "string"
              }
            },
            "required": [
              "dpid"
            ],
            "title": "get_flow_statsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "set_table",
          "description": "Set the flow table on a switch",
          "input_schema": {
            "properties": {
              "dpid": {
                "title": "Dpid",
                "type": "string"
              },
              "flows": {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "title": "Flows",
                "type": "array"
              }
            },
            "required": [
              "dpid",
              "flows"
            ],
            "title": "set_tableArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "append_insight",
          "description": "Add a network insight to the configuration memo",
          "input_schema": {
            "properties": {
              "insight": {
                "title": "Insight",
                "type": "string"
              }
            },
            "required": [
              "insight"
            ],
            "title": "append_insightArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 5,
      "tool_names": [
        "get_switches",
        "get_switch_desc",
        "get_flow_stats",
        "set_table",
        "append_insight"
      ]
    },
    "server_info_crawled": {
      "id": 1799,
      "name": "POX MCP Server",
      "author": "@davidlin2k/pox-mcp-server",
      "overview": "Manage and control your network with ease using this server. Automate network analysis and OpenFlow device management through a Python-based interface, perfect for educational and research purposes. Simplify your SDN projects with dynamic resources and interactive prompts.",
      "repository_url": "https://github.com/davidlin2k/pox-mcp-server",
      "homepage": "https://smithery.ai/server/@davidlin2k/pox-mcp-server",
      "remote_or_local": "Remote",
      "license": "MIT",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@davidlin2k_pox-mcp-server.json",
      "tools_count": 5,
      "tools": [
        {
          "name": "get_switches",
          "description": "Get a list of all connected OpenFlow switches",
          "input_schema": {
            "properties": {},
            "title": "get_switchesArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_switch_desc",
          "description": "Get detailed information about a specific switch",
          "input_schema": {
            "properties": {
              "dpid": {
                "title": "Dpid",
                "type": "string"
              }
            },
            "required": [
              "dpid"
            ],
            "title": "get_switch_descArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "get_flow_stats",
          "description": "Get flow statistics from a switch",
          "input_schema": {
            "properties": {
              "dpid": {
                "title": "Dpid",
                "type": "string"
              },
              "match": {
                "additionalProperties": true,
                "default": null,
                "title": "Match",
                "type": "object"
              },
              "table_id": {
                "default": null,
                "title": "Table Id",
                "type": "string"
              },
              "out_port": {
                "default": null,
                "title": "Out Port",
                "type": "string"
              }
            },
            "required": [
              "dpid"
            ],
            "title": "get_flow_statsArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "set_table",
          "description": "Set the flow table on a switch",
          "input_schema": {
            "properties": {
              "dpid": {
                "title": "Dpid",
                "type": "string"
              },
              "flows": {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "title": "Flows",
                "type": "array"
              }
            },
            "required": [
              "dpid",
              "flows"
            ],
            "title": "set_tableArguments",
            "type": "object"
          },
          "annotations": null
        },
        {
          "name": "append_insight",
          "description": "Add a network insight to the configuration memo",
          "input_schema": {
            "properties": {
              "insight": {
                "title": "Insight",
                "type": "string"
              }
            },
            "required": [
              "insight"
            ],
            "title": "append_insightArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nconfig = {\n  \"loggingLevel\": \"INFO\",\n  \"poxServerUrl\": \"http://localhost:8000\"\n}\n# Encode config in base64\nconfig_b64 = base64.b64encode(json.dumps(config).encode()).decode()\nsmithery_api_key = \"\"\n\n# Create server URL\nurl = f\"https://server.smithery.ai/@davidlin2k/pox-mcp-server/mcp?config={config_b64}&api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "{\n  \"loggingLevel\": \"INFO\",\n  \"poxServerUrl\": \"http://localhost:8000\"\n}",
      "python_sdk_url": "https://server.smithery.ai/@davidlin2k/pox-mcp-server/mcp?config={config_b64}&api_key={smithery_api_key}"
    },
    "source_filename": "1800.@davidlin2k_pox-mcp-server_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1602
  }
}