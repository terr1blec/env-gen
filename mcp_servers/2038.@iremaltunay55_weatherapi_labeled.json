{
  "labels": {
    "analysis": "The MCP Server is designed to provide real-time weather data and forecasts through a straightforward API interface. The primary function is to deliver current temperature information for specific locations based on latitude and longitude coordinates. This server solves the problem of accessing accurate, up-to-date weather information programmatically, making it useful for applications that require weather data integration.",
    "reasoning": "The primary functionality of providing weather data clearly aligns with the \"Weather\" category. Since the server is focused specifically on temperature retrieval, it doesn't strictly fit into other predefined categories, though \"API Integration\" is relevant as it serves as a weather data API. No custom label is needed as the functionality is well-covered by existing categories.",
    "primary_label": "Weather",
    "secondary_labels": [
      "API Integration"
    ],
    "custom_label": null,
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 2037,
    "server_name": "Weather API Server",
    "rank_by_usage": 2038,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@iremaltunay55_weatherapi.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@iremaltunay55/weatherapi/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "getLiveTemperature",
          "description": "\n    Get live temperature for a specific location.\n\n    Args:\n        latitude: The latitude coordinate (e.g., 40.7128 for New York)\n        longitude: The longitude coordinate (e.g., -74.0060 for New York)\n\n    Returns:\n        A dictionary containing temperature information or an error message\n    ",
          "input_schema": {
            "properties": {
              "latitude": {
                "title": "Latitude",
                "type": "number"
              },
              "longitude": {
                "title": "Longitude",
                "type": "number"
              }
            },
            "required": [
              "latitude",
              "longitude"
            ],
            "title": "getLiveTemperatureArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "getLiveTemperature"
      ]
    },
    "server_info_crawled": {
      "id": 2037,
      "name": "Weather API Server",
      "author": "@iremaltunay55/weatherapi",
      "overview": "Provide real-time weather data and forecasts through a simple API interface. Enable applications to retrieve accurate and up-to-date weather information effortlessly. Enhance user experience by integrating reliable weather insights into your services.",
      "repository_url": "https://github.com/iremaltunay55/WeatherApi",
      "homepage": "https://smithery.ai/server/@iremaltunay55/weatherapi",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@iremaltunay55_weatherapi.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "getLiveTemperature",
          "description": "\n    Get live temperature for a specific location.\n\n    Args:\n        latitude: The latitude coordinate (e.g., 40.7128 for New York)\n        longitude: The longitude coordinate (e.g., -74.0060 for New York)\n\n    Returns:\n        A dictionary containing temperature information or an error message\n    ",
          "input_schema": {
            "properties": {
              "latitude": {
                "title": "Latitude",
                "type": "number"
              },
              "longitude": {
                "title": "Longitude",
                "type": "number"
              }
            },
            "required": [
              "latitude",
              "longitude"
            ],
            "title": "getLiveTemperatureArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@iremaltunay55/weatherapi/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@iremaltunay55/weatherapi/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "2038.@iremaltunay55_weatherapi_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1775
  }
}