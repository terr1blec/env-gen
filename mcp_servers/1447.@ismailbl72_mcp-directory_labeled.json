{
  "labels": {
    "analysis": "The MCP Directory Server acts as a centralized registry or directory for MCP servers, helping users discover, manage, and integrate available MCP endpoints. Its primary goal is to facilitate coordination between multiple MCP servers to streamline LLM workflows. The available tool, \"get_definitions,\" suggests additional utility in retrieving linguistic definitions, indicating potential support for research or data retrieval. The core functionality revolves around server discovery, management, and integration, with a secondary focus on data retrieval.",
    "reasoning": "The **API Integration** label is chosen as the primary category because the server's role in facilitating seamless integration and coordination of MCP servers aligns with enabling interactions between different systems or endpoints. **Web Search & Research** is a secondary label due to the existence of a tool for retrieving word definitions, which supports information retrieval tasks. The server's unique functionality in managing and discovering MCP endpoints warrants a custom label.",
    "primary_label": "API Integration",
    "secondary_labels": [
      "Web Search & Research"
    ],
    "custom_label": "MCP Server Discovery & Management",
    "is_connected": true,
    "is_remote_tool_valid": true,
    "featured_server": false
  },
  "metadata": {
    "server_id": 1446,
    "server_name": "MCP Directory Server",
    "rank_by_usage": 1447,
    "usage_count": "Not available",
    "original_file": "../crawler/smithery/@ismailbl72_mcp-directory.json",
    "mode": "smithery",
    "timestamp": 1751938055,
    "remote_server_response": {
      "url": "https://server.smithery.ai/@ismailbl72/mcp-directory/mcp?api_key=8675feae-43b6-4170-beb5-d8fa5a938222&profile=monetary-anteater-CCaAaT",
      "is_success": true,
      "error": null,
      "tools": [
        {
          "name": "get_definitions",
          "description": "\n    Get definitions for a word.\n    ",
          "input_schema": {
            "properties": {
              "word": {
                "title": "Word",
                "type": "string"
              }
            },
            "required": [
              "word"
            ],
            "title": "get_definitionsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "tool_count": 1,
      "tool_names": [
        "get_definitions"
      ]
    },
    "server_info_crawled": {
      "id": 1446,
      "name": "MCP Directory Server",
      "author": "@ismailbl72/mcp-directory",
      "overview": "Provide a centralized directory service for MCP servers, enabling discovery and management of available MCP endpoints. Facilitate seamless integration and coordination of multiple MCP servers for enhanced LLM application workflows.",
      "repository_url": "https://github.com/ismailbl72/mcp-directory",
      "homepage": "https://smithery.ai/server/@ismailbl72/mcp-directory",
      "remote_or_local": "Remote",
      "license": "Smithery",
      "usage_count": "Not available",
      "success_rate": "Not available",
      "tags": [
        "search",
        "web",
        "api",
        "mcp"
      ],
      "categories": [
        "search",
        "api"
      ],
      "file_path": "../crawler/smithery/@ismailbl72_mcp-directory.json",
      "tools_count": 1,
      "tools": [
        {
          "name": "get_definitions",
          "description": "\n    Get definitions for a word.\n    ",
          "input_schema": {
            "properties": {
              "word": {
                "title": "Word",
                "type": "string"
              }
            },
            "required": [
              "word"
            ],
            "title": "get_definitionsArguments",
            "type": "object"
          },
          "annotations": null
        }
      ],
      "python_sdk": "import mcp\nfrom mcp.client.streamable_http import streamablehttp_client\nimport json\nimport base64\n\nsmithery_api_key = \"\"\nurl = f\"https://server.smithery.ai/@ismailbl72/mcp-directory/mcp?api_key={smithery_api_key}\"\n\nasync def main():\n    # Connect to the server using HTTP client\n    async with streamablehttp_client(url) as (read_stream, write_stream, _):\n        async with mcp.ClientSession(read_stream, write_stream) as session:\n            # Initialize the connection\n            await session.initialize()\n            # List available tools\n            tools_result = await session.list_tools()\n            print(f\"Available tools: {', '.join([t.name for t in tools_result.tools])}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())",
      "configuration_schema": "",
      "smithery_configuration_requirements": [],
      "python_sdk_config": "",
      "python_sdk_url": "https://server.smithery.ai/@ismailbl72/mcp-directory/mcp?api_key={smithery_api_key}"
    },
    "source_filename": "1447.@ismailbl72_mcp-directory_prepared.json",
    "processed_timestamp": 1753731940,
    "processing_mode": "smithery",
    "rank": 1343
  }
}